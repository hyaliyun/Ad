import{_ as u,o as r,c as n,a as t,m as c,t as p,C as g,M as b,U as y,f as m,F as v,p as w,e as _,q as x}from"./chunks/framework.B1z0IdBH.js";const S={name:"PoemCard",props:{poem:{type:Object,required:!0}}},C={class:"poem-container"},k={class:"review"},T={class:"review-title"},E={class:"review-content"};function L(i,e,l,d,a,o){return r(),n("div",C,[t("div",k,[t("div",T,[e[0]||(e[0]=t("span",{class:"icon"},"question:",-1)),c(p(l.poem.prompt),1)]),e[2]||(e[2]=t("div",{class:"divider"},null,-1)),t("p",E,[e[1]||(e[1]=t("span",{class:"icon"},"answer:",-1)),c(p(l.poem.completion),1)])])])}const A=u(S,[["render",L],["__scopeId","data-v-d01a8497"]]),W=JSON.parse(`[{"prompt":"Generate a valid Ruby code that implements the following function. Replace all whitespaces in a string with underscores.","completion":"def replace_whitespace(string) return string.gsub(/s+/, '_') end"},{"prompt":"Write a React function to set the background color of an element to blue.","completion":"const setBackgroundBlue = () => { document.getElementById(\\"my-element\\").style.backgroundColor = \\"blue\\"; }"},{"prompt":"Create a Python program to validate an email address according to RFC5322 syntax.","completion":"import re def validate(email): regex = r'^[a-z0-9]+[._]?[a-z0-9]+[@]w+[.]w{2,3}' if re.search(regex, email): return True else: return False"},{"prompt":"Python, define a function to extract characters after a given substring. String = \\"Hello-world-123\\" Substring = \\"-world","completion":"def extract_string(str, substr): start_index = str.find(substr) if start_index == -1: return \\"\\" else: end_index = start_index + len(substr) return str[end_index:] x = extract_string(\\"Hello-world-123\\", \\"-world\\") print(x)"},{"prompt":"Design and write a code to identify the maximum number of vowels contained in any given string. String = \\"Queensland","completion":"def vowel_count(str): # making a set of vowels vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'} # counter variable to store the count of vowels count = 0 #a loop to check every character in a given string for alphabet in str: # if statement to check if the character is in set of vowels if alphabet in vowels: count = count + 1 #returning the count return count # Driver code str = \\"Queensland\\" print(\\"No. of vowels :\\", vowel_count(str))"},{"prompt":"Create a program to output the items in a list that appear only once. list = [50, 10, 20, 30, 10, 50, 44, 55, 44]","completion":"items_set = set(list) unique_items = [] for item in items_set: if list.count(item) == 1: unique_items.append(item) print(\\"Unique items:\\",unique_items)"},{"prompt":"Design and write a code to detect and count the number of occurrences of a particular substring in a string. String = \\"Please find the number of occurrences of this string\\" Substring = \\"string","completion":"def count_occurrences(str, substr): count = 0 start_index = -1 while True: start_index = str.find(substr, start_index + 1) if start_index == -1: break count = count + 1 return count print(\\"Number of occurrences:\\",count_occurrences(\\"Please find the number of occurrences of this string\\", \\"string\\"))"},{"prompt":"mplement a simple password validator in Java. password = \\"Password1","completion":"public class PasswordValidator { public static boolean validate(String password) { if (password.length() < 8) { return false; } boolean containsUpperCase = false; boolean containsLowerCase = false; boolean containsDigit = false; for (int i = 0; i < password.length(); i++) { char c = password.charAt(i); if (Character.isUpperCase(c)) { containsUpperCase = true; } else if (Character.isLowerCase(c)) { containsLowerCase = true; } else if (Character.isDigit(c)) { containsDigit= true; } } return containsUpperCase && containsLowerCase && containsDigit; } public static void main(String[] args) { String password = \\"Password1\\"; System.out.println(validate(password)); } }"},{"prompt":"Design a program to create a new string with the characters of the first string in the reverse order. String = \\"Hello World","completion":"def reverse(str): return str[::-1] # Driver Code str = \\"Hello World\\" print(\\"Reverse string:\\",reverse(str))"},{"prompt":"Create a program to output an array of words from a given string. String = \\"Welcome to the world of Geek","completion":"def extract_words(str): # to store the extracted words words = [] # split the string word = \\"\\" for i in str: if i is not \\" \\": word = word + i else: words.append(word) word = \\"\\" words.append(word) # return the list of words return words # Driver code str = \\"Welcome to the world of Geeks\\" words = extract_words(str) for i in words: print(i)"},{"prompt":"Create a program to apply upper case to a given string. String = \\"welcome to The world Of gEEk","completion":"def upperCaseString(str): res = \\"\\" for i in range(len(str)): if i==0 or (str[i-1]==' '): res = res + str[i].upper() else: res = res + str[i] return res str = \\"welcome to The world Of gEEks\\" print(upperCaseString(str))"},{"prompt":"Create a program to insert the given character at a particular position in a given string. String = \\"Geek university\\" Character = 's' Position = 8","completion":"def insertStr(str, char, pos): return str[:pos] + char + str[pos:] str = \\"Geek university\\" char = 's' pos = 8 print(insertStr(str, char, pos))"},{"prompt":"Suggest a good way to format the following array of objects in PHP. data = [ [ 'name' => 'Alex', 'age' => 30 ], [ 'name' => 'John', 'age' => 32 ] ];","completion":"data = [ [ 'name' => 'Alex', 'age' => 30 ], [ 'name' => 'John', 'age' => 32 ] ]; // Initializing an empty array formatted = []; // Iterating the array and grouping items by age foreach (data as item) { formatted[ item['age'] ][] = item['name']; } // Outputting the grouped objects print_r(formatted);"},{"prompt":"Write a ruby method that takes an array of integers and returns an array of their square root values.","completion":"def squared(arr) result = [] arr.each do |n| result << Math.sqrt(n) end result end"},{"prompt":"Suggest a better way to improve the following SQL statement. SELECT * FROM students WHERE score > 50","completion":"SELECT * FROM students WHERE score > 50 ORDER BY score DESC"},{"prompt":"w do you delete a row from a MySQL table?","completion":"To delete a row from a MySQL table, you can use the DELETE statement. The syntax for the statement is as follows: DELETE FROM tablename WHERE condition; For example, if you want to delete all the rows with a score of less than 50 in a table called 'students', you can use the following statement: DELETE FROM students WHERE score < 50;"},{"prompt":"Write a code in Java to find all the prime numbers between 0 and n.","completion":"public static List<Integer> findPrimes(int n) { List<Integer> primes = new ArrayList<>(); for (int i = 2; i <= n; i++) { boolean isPrime = true; for (int j = 2; j < i; j++) { if (i % j == 0) { isPrime = false; break; } } if (isPrime) { primes.add(i); } } return primes; }"},{"prompt":"What is the best way to print something to the console in Python?","completion":"The best way to print something to the console in Python is by using the built-in print() function. The syntax of this function is as follows: print(value, ..., sep=' ', end='n', file=sys.stdout, flush=False) The print() function prints the given object to the standard output. The sep and end are keyword-only arguments which specify string to separate and end the output respectively. The default separator is a single space and the default end-string is a newline. The file argument specifies an open file object, for printing to a file, or an object with a write() method. For example, to print the string \\"hello\\" to the console, you can use this code: print(\\"hello\\")"},{"prompt":"What is the most efficient way to check if a given number is a prime in Python?","completion":"The most efficient way to check if a given number is a prime in Python is to use the numpy.prime() function. This function returns a boolean value indicating whether the given number is a prime or not. The syntax is as follows: numpy.prime(n) The argument n must be a positive integer. For example, to check if the number 7 is prime, you can use the following code: import numpy as np number = 7 print(np.isprime(number)) # returns True"},{"prompt":"Suggest a way to add the first 10 natural numbers in C++.","completion":"The most efficient way to add the first 10 natural numbers in C++ is to use a loop. The loop would go from 1 to 10, and will add the number each iteration to a variable, like this: int sum = 0; for (int i = 1; i <= 10; i++) { sum += i; } // sum will now store the sum of the first 10 natural numbers."},{"prompt":"w do you use exceptions to cleanly exit from a method in Java?","completion":"To use exceptions to cleanly exit from a method in Java, you should throw an exception at the end of the method body. Exceptions can be used to indicate unusual situations and can be used to terminate a method execution if desired. To throw an exception, you use the following syntax: throw new Exception(\\"Exception Message\\"); When an exception is thrown, the code execution is immediately stopped and control is transferred to the nearest catch block. You can use try-catch blocks to catch the exception in the method and take the appropriate action. For example, to exit a method conditionally, you can utilize try-catch blocks like this: try { // throw exception if condition is not met if (!condition) { throw new Exception(\\"Exception Message\\"); } // rest of the code } catch(Exception e) { // handle exception here }"},{"prompt":"Create a for loop to iterate over a list of words and print their length. words = [\\"happy\\", \\"sad\\", \\"tired\\", \\"energetic\\"]","completion":"for word in words: print(len(word))"},{"prompt":"Write an algorithm to search an element in a linked list.","completion":"def search_node(node, target): while node is not None: if node.data == target: return node else: node = node.next return None"},{"prompt":"Output the Fibonacci sequence from 0 to 15.","completion":"The Fibonacci sequence from 0 to 15 is 0, 1, 1, 2, 3, 5, 8, 13."},{"prompt":"Replace the last occurrence of a given word in a string. str = \\"Welcome to the world of Python\\" word = \\"Pytho","completion":"updated_str = str.rsplit('Python',1)[0] + 'Java' The updated string is \\"Welcome to the world of Java\\"."},{"prompt":"mplement an algorithm that returns the maximum sum of a given subsequence. arr = [-2,1,3,-4,5]","completion":"The algorithm should return the maximum sum of subseqence in the array. To solve this, we can use the Dynamic Programming approach. The algorithm will traverse the array and for each index (i), it will calculate two values: 1. Max sum of the array including the element at index i. 2. Max sum of the array excluding the element at index i. The algorithm should iterate through the array and return the maximum of the two values. maxSum = max(maxSumIncludingCurrentElement, maxSumExcludingCurrentElement); The maximum sum of the subsequence will be maxSum."},{"prompt":"Find the number of non-negative integers that are even and less than 10.","completion":"There are 5 non-negative integers that are even and less than 10: 0, 2, 4, 6, and 8."},{"prompt":"Given the example JSON string, neatly organize the contents of the object using Python code. { \\"1\\": \\"Apple\\", \\"2\\": \\"Orange\\", \\"3\\": {\\"A\\": \\"Banana\\", \\"B\\": \\"Grape\\"} }","completion":"import json data = { \\"1\\": \\"Apple\\", \\"2\\": \\"Orange\\", \\"3\\": {\\"A\\": \\"Banana\\", \\"B\\": \\"Grape\\"} } data_json = json.dumps(data, indent=4) print(data_json)"},{"prompt":"Programmatically calculate the sum of the first 10 natural numbers (1,2,3...10).","completion":"total = 0 for i in range(1,11): total += i print(total)"},{"prompt":"Using the given array, write a function to return the count of elements next to each other that are equal. a = [1,1,1,2,2,3,4,4,4,4]","completion":"def adjacent_elements_count(arr): count = 0 for i in range(1, len(arr)): if arr[i] == arr[i-1]: count += 1 return count print(adjacent_elements_count(a))"},{"prompt":"Create a SQL statement that changes the value of a column in the \\"students\\" table. student_id = 123 new_score = 90","completion":"UPDATE students SET score = 90 WHERE student_id = 123;"},{"prompt":"Using a unique function in JavaScript, remove the duplicate values in the given array. arr = [1,1,2,2,4,4,4]","completion":"let noDuplicates = [...new Set(arr)]; console.log(noDuplicates);"},{"prompt":"Construct a RegEx pattern to identify a number followed by three uppercase letters.","completion":"^[0-9][A-Z]{3}"},{"prompt":"Python, write a code snippet to calculate the average of numbers in a list. listOfNumbers = [2, 4, 6, 8]","completion":"def avg(listOfNumbers): total = 0 for number in listOfNumbers: total += number return total / len(listOfNumbers) print(avg(listOfNumbers))"},{"prompt":"Using the given array, create a function that returns a new array that contains elements that are greater than the given number. arr = [2, 3, 6, 9, 5] num = 4","completion":"def greater_than(arr, num): result = [] for el in arr: if el > num: result.append(el) return result print(greater_than(arr, num))"},{"prompt":"Execute the following JavaScript code to add two numbers. var x = 10; var y = 20;","completion":"var result = x + y; console.log(result); // 30"},{"prompt":"Analyze the following CSS code for possible errors. body{ color: #FFFFFF; font-size: small; padding: 12px; }","completion":"No errors found."},{"prompt":"Find the index of the letter 'a' in the string 'abcde'. string = \\"abcde","completion":"Index of 'a' in the given string is 0."},{"prompt":"Create an array of numbers that is a random combination of integers from 1 to 25","completion":"[2, 4, 17, 19, 25, 8, 14, 1, 15, 23, 22, 5, 6, 16, 10, 12, 3, 18, 11, 20, 9, 13, 7, 24, 21]"},{"prompt":"Design a function for summing three numbers","completion":"def sum_three(x, y, z): return x + y + z"},{"prompt":"Update the following HTML element with a new background color. <p style=\\"background-color: blue\\">Hello World</p>","completion":"<p style=\\"background-color: yellow\\">Hello World</p>"},{"prompt":"Write a SQL query to order the strings in the 'name' column alphabetically.","completion":"SELECT * FROM table ORDER BY name ASC;"},{"prompt":"Create a JavaScript object that converts from Celsius to Fahrenheit","completion":"let celsiusToFahrenheit = { convert: function(temp) { return (temp * 1.8) + 32; } };"},{"prompt":"Update the following CSS to center align the text h1 { color: #FF0000; }","completion":"h1 { color: #FF0000; text-align: center; }"},{"prompt":"Classify the given text according to its sentiment. This product is terrible.","completion":"Negative"},{"prompt":"Generate a random password of 8 characters, including at least one letter, one number, and one symbol","completion":"Fjk3@sam"},{"prompt":"Convert the following XML code to JSON. <people> <person> <name>John</name> <age>24</age> </person> <person> <name>Dave</name> <age>30</age> </person> </people>","completion":"{ \\"people\\": { \\"person\\": [ { \\"name\\": \\"John\\", \\"age\\": 24 }, { \\"name\\": \\"Dave\\", \\"age\\": 30 } ] } }"},{"prompt":"Extract the numerical values from the following string. sentence = \\"My age is 20 years old.","completion":"num_values = [num_val for num_val in re.findall(r\\"d+\\", sentence)]"},{"prompt":"Generate a SQL query to select all students who are in the 'Computer Science' program. table_name = 'students'","completion":"SELECT * FROM students WHERE program = 'Computer Science';"},{"prompt":"Design a CSS stylesheet to color alternate rows in a table grey.","completion":"table tr:nth-child(even){ background-color: #f2f2f2; }"},{"prompt":"Estimate the complexity (Big-O) of this algorithm. arr = [3, 4, 7, 5, 6] def find_average(arr): total = 0 for num in arr: total += num return total / len(arr)","completion":"O(n)"},{"prompt":"Design a React JS component to render a button that displays the text \\"Click Me\\".","completion":"const Button = () => <button>Click Me</button>;"},{"prompt":"Find all possible permutations of the string \\"ABC\\".","completion":"permutations = [''.join(p) for p in permutations(list(\\"ABC\\"))]"},{"prompt":"Write a loop to convert the list of integers in the array to a single number. arr = [2, 3, 4, 5]","completion":"num = 0 for digit in arr: num = num * 10 + digit"},{"prompt":"What is tail recursion?","completion":"Tail recursion is a special form of recursion in which the recursive call is the last statement in the function. This form of recursion improves space efficiency of the algorithm, since only one activation record is needed at any given time, as there is no need to hold onto the history of the recursive call stack. This form of recursion can often be replaced by iterative solution for better performance."},{"prompt":"Develop a MATLAB function to calculate the product of two matrices.","completion":"function F = matrix_mult(A,B) [m,n] = size(A); [p,q] = size(B); if (n~=p) error('The matrices can not be multiplied'); end F = zeros(m,q); for i=1:m for j=1:q sum = 0; for k=1:n sum = sum + A(i,k)*B(k,j); end F(i,j) = sum; end end end"},{"prompt":"Find the longest substring of a string without repeating characters string=\\"abcabcbb","completion":"def longestSubstring(string): start_index = max_length = 0 visited = {} # traverse through the string for i in range(len(string)): if string[i] in visited and start_index <= visited[string[i]]: start_index = visited[string[i]] + 1 else: max_length = max(max_length, i - start_index + 1) visited[string[i]] = i return max_length"},{"prompt":"Write Python code to return all indices of substrings in a given string. string= \\"hi world bye world","completion":"def substring_indices(string): lengths = [] # calculate length of substring for i in range(len(string)): for j in range(i+1, len(string)+1): lengths.append(string[i:j]) # create array to hold all indices indices = [] for length in lengths: indices.append([i for i in range(len(string)) if string.startswith(length, i)]) return indices"},{"prompt":"Compress a given string using Run Length Encoding string=\\"WWWWWWWWWWWWBWWWWWWWWWWWWBBBWWWWWWWWWWWWWWWWWWWWWWWWBWWWWWWWWWWWWWW","completion":"def RunLengthEncoding(string): result = \\"\\" count = 0 current = string[0] for i in range(len(string)): if (string[i] == current): count+= 1 else: result += current + str(count) current = string[i] count = 1 result += current + str(count) return result"},{"prompt":"mplement a function to retrieve the nth node of the singly-linked list","completion":"def getNthNode(head, n): if n == 0: return head.value current = head for _ in range (n): if not current.next : return None current = current.next return current.value"},{"prompt":"Replace all vowels in a string with a specified letter string = 'hello world'","completion":"def replaceVowels(string, ch): vowels = \\"aeiouAEIOU\\" for x in string: if x in vowels: string = string.replace(x, ch) return string"},{"prompt":"Parse a given expression tree to evaluate the result","completion":"def evaluate(root): # empty tree if root is None: return 0 # leaf node if root.left is None and root.right is None: return int(root.data) # evaluate left tree left_sum = evaluate(root.left) # evaluate right tree right_sum = evaluate(root.right) # check which operation to apply if root.data == '+': return left_sum + right_sum elif root.data == '-': return left_sum - right_sum elif root.data == '*': return left_sum * right_sum else: return left_sum / right_sum"},{"prompt":"Determine which elements of the given list are strings. data = [0, 'a', 99, [], 'b', None]","completion":"def isString(data): strings = [] for element in data: if isinstance(element, str): strings.append(element) return strings print(isString(data))"},{"prompt":"Arrange the given list in ascending order. myList = [3, 1, 8, 2, 6, 5]","completion":"def sortList(myList): myList.sort() return myList result = sortList(myList) print(result)"},{"prompt":"Create a Dictionary where the list items are the keys and the square of the items are the values myList1 = [1, 2, 3, 4, 5, 6]","completion":"def myDict(myList1): result = {} for i in myList1: result[i] = i**2 return result myDict = myDict(myList1) print(myDict)"},{"prompt":"Create a function that takes 2 strings as arguments, and returns the longest string.","completion":"def longestString(str1, str2): if len(str1) > len(str2): longestString = str1 else: longestString = str2 return longestString longestString = longestString(\\"Hello\\", \\"World\\") print(longestString)"},{"prompt":"Convert the given list to a dictionary where the items are the keys and the values are square of the keys. myList3 = [1, 2, 3, 4, 5]","completion":"def myDict(myList3): result = {} for i in myList3: result[i] = i**2 return result myDict = myDict(myList3) print(myDict)"},{"prompt":"Create a function that takes a list and removes duplicates of the same element. myList4 = [1,2,2,3,3,3]","completion":"def removeDuplicate(myList4): result = [] for x in myList4: if x not in result: result.append(x) return result removeDuplicate = removeDuplicate(myList4) print(removeDuplicate)"},{"prompt":"Describe the necessary steps to debug a python program.","completion":"Steps to debug a python program: 1. Check the syntax of your code to look for any obvious mistakes 2. Use print statement to understand the the variables in your program and the flow of execution. 3. Working your way through the program line by line to identify the source of the bug. 4. Use debugging tools such as pdb to step through the code and look for any unexpected values or flow. 5. If the bug is in a library that you're using, try to look into its source code to look for the bug. 6. Test small pieces of your code in isolation. 7. Take a break and come back to it with a fresh mind. 8. Ask for help from other programmers."},{"prompt":"Design a function with two inputs that returns the maximum of the two.","completion":"def maximum(a, b): if a > b: return a else: return b"},{"prompt":"Create a HTML web page that displays \\"Welcome To My Page\\" with a heading level 2.","completion":"<html> <head> <title>Welcome To My Page</title> </head> <body> <h2>Welcome To My Page</h2> </body> </html>"},{"prompt":"Modify the below code so that it swaps two variables without the use of a temporary variable. int a = 10, b = 20; int temp; temp = a; a = b; b = temp;","completion":"int a = 10, b = 20; a = a + b; b = a - b; a = a - b;"},{"prompt":"Write a number of HTML tags such that their end tags are mismatched.","completion":"<html> <head> <title>Test</title> </head> <body> <h1>My Heading</h1> <p>This is a test. </body> </html>"},{"prompt":"Find the index of the element that occurs only once in the array. arr = [1, 1, 5, 5, 6, 8];","completion":"def find_unique_element(arr): index = -1 for i in range(len(arr)): freq = 0 for j in range(len(arr)): if arr[i] == arr[j]: freq += 1 if freq == 1: index = i break return index # Testing arr = [1, 1, 5, 5, 6, 8] index = find_unique_element(arr) print(\\"Index of the unique element is: \\", index)"},{"prompt":"Create a function that returns the sum of two numbers passed as arguments.","completion":"def add_numbers(a,b): return a + b # Testing x = 3 y = 4 sum = add_numbers(x, y) print(\\"Sum of {0} and {1} is {2}\\".format(x, y, sum))"},{"prompt":"Given an array of integers, find the pair of elements that have the greatest difference. arr = [2, 5, 9, 11, 15, 27];","completion":"def find_greatest_difference(arr): max_diff = 0 for i in range(len(arr)): for j in range(i+1, len(arr)): diff = abs(arr[i] - arr[j]) if diff > max_diff: max_diff = diff return max_diff # Testing arr = [2, 5, 9, 11, 15, 27] max_diff = find_greatest_difference(arr) print(\\"Greatest difference is: \\", max_diff)"},{"prompt":"Write a function to retrieve the last element of a given array of strings. arr = [\\"word\\", \\"sentence\\", \\"paragraph\\"];","completion":"def get_last_element(arr): return arr[-1] # Testing arr = [\\"word\\", \\"sentence\\", \\"paragraph\\"] last_element = get_last_element(arr) print(\\"The last element is: \\", last_element)"},{"prompt":"Given a dictionary, write a function to get all the keys with a given value. my_dict = {'a': 1, 'b': 2, 'c': 2};","completion":"def get_keys_by_value(my_dict, value): keys = [] for k, v in my_dict.items(): if v == value: keys.append(k) return keys # Testing my_dict = {'a': 1, 'b': 2, 'c': 2} keys = get_keys_by_value(my_dict, 2) print(\\"Keys with the value 2 are: \\", keys)"},{"prompt":"Create a function to sort an array of objects by the value of a certain key. arr = [{'name': 'john', 'age': 20}, {'name': 'tim', 'age': 25}, {'name': 'mike', 'age': 30}];","completion":"def sort_by_key(arr, key): sorted_arr = sorted(arr, key=lambda k: k[key]) return sorted_arr # Testing arr = [{'name': 'john', 'age': 20}, {'name': 'tim', 'age': 25}, {'name': 'mike', 'age': 30}] sorted_arr = sort_by_key(arr, 'age') print(\\"Sorted array by age: \\", sorted_arr)"},{"prompt":"Write a function to remove all words that contain a certain letter from an array. arr = [\\"apple\\", \\"banana\\", \\"orange\\", \\"grape\\"]; letter = 'a'","completion":"def remove_words_by_letter(arr, letter): return [word for word in arr if letter not in word] # Testing arr = [\\"apple\\", \\"banana\\", \\"orange\\", \\"grape\\"] filtered_arr = remove_words_by_letter(arr, 'a') print(\\"Filtered array: \\", filtered_arr)"},{"prompt":"Fill in the blank with a successful response for a given user prompt. Please enter a valid number","completion":"Please enter a valid number: <Enter a valid number e.g. 6>"},{"prompt":"mplement a function that checks if two strings are anagrams.","completion":"def is_anagram(a, b): char_to_count = {} if len(a) != len(b): return False for char in a: if char in char_to_count: char_to_count[char] += 1 else: char_to_count[char] = 1 for char in b: if char not in char_to_count: return False else: char_to_count[char] -= 1 for count in char_to_count.values(): if count != 0: return False return True"},{"prompt":"Create a variable and set it to a value to pass the test. # Test if the variable \`favorite_color\` equals \\"blue","completion":"favorite_color = \\"blue\\""},{"prompt":"Add a comment to explain the purpose of the following code. for i in range(100): print(i)","completion":"# Prints all numbers from 0 to 99 for i in range(100): print(i)"},{"prompt":"Using the given data, write a function that returns the average of the given numbers a_list = [1, 2, 3, 4, 5]","completion":"def average(a_list): total = 0 for num in a_list: total += num return total / len(a_list)"},{"prompt":"Create a function that takes in a 2D list and prints the contents of the list in a 2D format matrix = [ [1, 2], [3, 4], [5, 6] ]","completion":"def print_matrix(matrix): for row in matrix: for num in row: print(num, end=\\" \\") print()"},{"prompt":"Create a function to find the total of all elements in the list nums = [1, 2, 3, 4, 5]","completion":"def find_total(nums): total = 0 for num in nums: total += num return total"},{"prompt":"Given a list of numbers, write code using Python to print the sum of all elements. list_numbers = [2, 3, 4, 5, 6]","completion":"sum_of_numbers = 0 for i in list_numbers: sum_of_numbers += i print(sum_of_numbers)"},{"prompt":"Given two strings s1 and s2, write a Python program to find whether s1 is an anagram of s2. s1 = 'listen' s2 = 'silent'","completion":"def isAnagram(s1, s2): if (sorted(s1) == sorted(s2)): print(\\"The strings are anagrams.\\") else: print(\\"The strings aren't anagrams.\\") isAnagram(s1, s2)"},{"prompt":"Write a C# program to remove all adjacent duplicates from a string. string str = \\"azxxzy\\";","completion":"string removeAdjacentDuplicates(string str) { int l = str.Length; char[] array = str.ToCharArray(); int index = 0; for (int i = 0; i < l; i++) { if (i == 0 || array[i - 1] != array[i]) array[index++] = array[i]; else while (i + 1 < l && array[i + 1] == array[i]) i++; } return new string(array, 0, index); }"},{"prompt":"Create an HTML webpage to display a welcome message.","completion":"<html> <head> <title>Welcome</title> </head> <body> <h1>Welcome!</h1> </body> </html>"},{"prompt":"Use JavaScript to convert 24-hour time format to 12-hour time format.","completion":"function convertTimeFormat(time) { let hour = time.slice(0, 2); let am_or_pm = hour >= 12 ? 'pm' : 'am'; let twelve_hour_format = (hour % 12 ? hour % 12 : 12) + time.slice(2, 5) + am_or_pm; return twelve_hour_format; }"},{"prompt":"Write Python code to print out an inverse dictionary where the original key becomes the value and the original value become the key. original_dict = {'a':1, 'b':2, 'c':3}","completion":"inverse_dict = {value:key for key, value in original_dict.items()} print(inverse_dict)"},{"prompt":"Given a dictionary of words, write Python code to find out the longest word in the dictionary. dictionary = [\\"apple\\", \\"orange\\", \\"pineapple\\", \\"banana\\"]","completion":"def findLongestWord(dictionary): longestWord = '' longestLength = 0 for word in dictionary: if len(word) > longestLength: longestWord = word longestLength = len(word) return longestWord"},{"prompt":"Write an HTML webpage to display a table with employee details.","completion":"<html> <head> <title>Employee Details</title> </head> <body> <h2>Employee Details</h2> <table> <thead> <tr> <th>Name</th> <th>Age</th> <th>Salary</th> </tr> </thead> <tbody> <tr> <td>John</td> <td>30</td> <td>50,000</td> </tr> <tr> <td>Alice</td> <td>27</td> <td>45,000</td> </tr> <tr> <td>Vinod</td> <td>35</td> <td>70,000</td> </tr> </tbody> </table> </body> </html>"},{"prompt":"Sort the given list of numbers in non-decreasing order with selection sort. [2, 1, 5, 3, 4]","completion":"[1, 2, 3, 4, 5]"},{"prompt":"Write a function in Python that takes two arguments, a list of strings and a letter, and returns the strings which contain the letter. lst = [\\"apple\\",\\"banana\\",\\"kiwi\\",\\"pear\\"], letter = \\"","completion":"def find_with_letter(lst, letter): result = [] for s in lst: if letter in s: result.append(s) return result"},{"prompt":"Construct an SQL query to create a table for tracking employees.","completion":"create table Employees ( ID int not null, Name varchar(255) not null, Address varchar(255) not null, Email varchar(255) not null, Department varchar(255) not null, primary key (ID) );"},{"prompt":"Generate a valid CSS class that aligns an element to the center.","completion":".center { margin: 0 auto; text-align: center; display: block; }"},{"prompt":"Create an array in Java that contains five elements each of type String.","completion":"String[] arr = {\\"String 1\\", \\"String 2\\", \\"String 3\\", \\"String 4\\", \\"String 5\\"};"},{"prompt":"Create an algorithm with pseudocode to find maximum and minimum element of an array.","completion":"Algorithm findMaxMin(arr) Input: arr - an array of integers Output: maxEle - the maximum element in the array, minEle - the minimum element in the array Begin maxEle <- arr[0] minEle <- arr[0] for i = 0 to length(arr)-1 do if arr[i] > maxEle then maxEle <- arr[i] end if if arr[i] < minEle then minEle <- arr[i] end if end for return maxEle, minEle End"},{"prompt":"Create a CSS rule to apply a two-pixel red border to a text box.","completion":"input[type=\\"text\\"] { border: 2px solid red; }"},{"prompt":"Design a function in Java that rotates a N x N matrix 90 degrees.","completion":"public static int[][] rotateMatrix(int[][] matrix, int n) { int[][] rotated = new int[n][n]; for (int row = 0; row < n; row++) { for (int col = 0; col < n; col++) { rotated[col][n-1-row] = matrix[row][col]; } } return rotated; }"},{"prompt":"Construct an SQL query to delete a row from a table named \\"Employees\\".","completion":"DELETE FROM Employees WHERE ID=x;"},{"prompt":"Color the following table header background to lime.","completion":"th { background-color: #00ff00; }"},{"prompt":"Create an algorithm in MATLAB for sorting an array of integers in ascending order. arr = [8, 3, 5, 9, 4]","completion":"function sortedArr = sortAscend(arr) sortedArr = zeros(size(arr)); count = 0; while ~isempty(arr) minimum = min(arr); sortedArr(count+1) = minimum; count = count + 1; arr = arr(arr~=minimum); end"},{"prompt":"Write code in Ruby for counting the number of items within an array. array = [1, 2, 3, 4, 5, 6]","completion":"def count_array(array) count = 0 array.each do |item| count += 1 end count end"},{"prompt":"Could you suggest a method written in Java for finding the average of a set of numbers? Numbers = [10, 20, 5, 15]","completion":"public static double getAverage(int[] Numbers){ double sum = 0; for(int num : Numbers){ sum += num; } double average = sum / Numbers.length; return average; }"},{"prompt":"Suggest a function written in Haskell for reversing an array. arr = [3, 4, 9, 5, 8]","completion":"reverse :: [a] -> [a] reverse arr = rev arr [] where rev [] ans = ans rev (x:xs) ans = rev xs (x:ans)"},{"prompt":"Develop an algorithm for counting the number of unique characters in a string. str = \\"Hello World!","completion":"def uniqueChars(str): charCount = dict() for ch in str: if ch in charCount: charCount[ch] += 1 else: charCount[ch] = 1 return len(charCount)"},{"prompt":"Create a function in PHP for summing up all the squares of the numbers between 1 and the given number. num = 8","completion":"function sum_of_squares(num) { sum = 0; for (i = 1; i <= num; i++) { sum += i * i; } return sum; }"},{"prompt":"Can you propose a way in C for extracting the day, month and year of the input date in the format \\"dd-mm-yyyy\\"? date = \\"31-12-2020","completion":"#include <stdio.h> #include <stdlib.h> void getDate(char* date) { char *day, *month, *year; day = strtok(date, \\"-\\"); month = strtok(NULL, \\"-\\"); year = strtok(NULL, \\"-\\"); printf(\\"Day = %sn\\", day); printf(\\"Month = %sn\\", month); printf(\\"Year = %sn\\", year); }"},{"prompt":"Can you draft an algorithm in C# for computing the factorial of a number? num = 5","completion":"public static int factorial(int num) { int res = 1, i; for (i=2; i<=num; i++) res *= i; return res; }"},{"prompt":"Suggest a line of code in Rust for generating a random number within a given range.","completion":"let randomNumber = rand::thread_rng().gen_range(min, max);"},{"prompt":"Design an HTML form with 2 input fields: name and email and submit button.","completion":"<form action=\\"\\" method=\\"post\\"> Name: <input type=\\"text\\" name=\\"name\\" required><br> Email: <input type=\\"text\\" name=\\"email\\" required><br> <input type=\\"submit\\" name=\\"submit\\" value=\\"Submit\\"> </form>"},{"prompt":"Can you propose a C++ program for adding two matrices? Matrix1 = [[2, 3], [4, 5]] Matrix2 = [[6, 7], [8, 9]]","completion":"#include <iostream> #define N 2 // function to add two matrices void addMatrix(int A[][N], int B[][N], int C[][N]) { int i, j; for (i = 0; i < N; i++) for (j = 0; j < N; j++) C[i][j] = A[i][j] + B[i][j]; } int main() { int A[N][N] = {{2, 3}, {4, 5}}; int B[N][N] = {{6, 7}, {8, 9}}; int C[N][N]; // To store result addMatrix(A, B, C); cout << \\"Resultant Matrix:n\\"; int i, j; // Print the resultant matrix for (i = 0; i < N; i++) { for (j = 0; j < N; j++) cout << C[i][j] << \\" \\"; cout << \\"n\\"; } return 0; }"},{"prompt":"Could you code a script in Bash for accepting user inputs?","completion":"echo \\"Enter your name:\\" read name echo \\"Hello name, How can I help you?\\""},{"prompt":"We would like you to suggest a method written in TypeScript for reversing a string. str = \\"abcd","completion":"function reverseString(str) { let reversedStr = ''; for (let i = str.length -1; i >= 0; i--) { reversedStr += str[i]; } return reversedStr; }"},{"prompt":"You need to write code for adding a column to a pandas DataFrame. import pandas as pd df = pd.DataFrame({'A': [12, 4, 5, None, 1], 'B': [7, 2, 54, 3, None], 'C': [20, 16, 11, 3, 8], 'D': [14, 3, 17, 2, 6]}) new_col_data = [1, 1, 15, 6, 96]","completion":"import pandas as pd df = pd.DataFrame({'A': [12, 4, 5, None, 1], 'B': [7, 2, 54, 3, None], 'C': [20, 16, 11, 3, 8], 'D': [14, 3, 17, 2, 6]}) new_col_data = [1, 1, 15, 6, 96] df['new_col'] = new_col_data"},{"prompt":"Modify the code to print the second largest number in a list. num_list = [3, 6, 8, 4, 12, 20, 7]","completion":"num_list = [3, 6, 8, 4, 12, 20, 7] # Sort the list in descending order num_list.sort(reverse=True) # Print the second largest number print(num_list[1])"},{"prompt":"Generate the first 10 prime numbers.","completion":"2, 3, 5, 7, 11, 13, 17, 19, 23, 29"},{"prompt":"What is the stack overflow limit of Python?","completion":"The stack overflow limit of Python is 2800 frames."},{"prompt":"You are given a 2D array. The task is to double each item in the array. arr = [[1,2], [3,4]]","completion":"[[2,4], [6,8]]"},{"prompt":"w can one randomly shuffle a list using Python?","completion":"import random def shuffle(list): random.shuffle(list) return list"},{"prompt":"You need to generate an API which returns the first 10 Fibonacci numbers.","completion":"def FibApi(): def fibonacci(n): if n < 0: print(\\"Incorrect input\\") elif n == 1: return 0 elif n == 2: return 1 else: return fibonacci(n-1) + fibonacci(n-2) fib_list = [] for i in range(1,11): fib_list.append(fibonacci(i)) return fib_list"},{"prompt":"Write a regex to validate a phone number with the format XXX-XXX-XXXX.","completion":"^d{3}-d{3}-d{4}"},{"prompt":"What will be the output of this code snippet? a = [1, 2, 3, 4, 5] b = [x**2 for x in a] print(b)","completion":"[1, 4, 9, 16, 25]"},{"prompt":"Write code in python to find the biggest number in a given list. my_list = [1, 25, 8, 10, 6]","completion":"def find_biggest_number(my_list): biggest_number = my_list[0] for i in range(0, len(my_list)): if my_list[i] > biggest_number: biggest_number = my_list[i] return biggest_number"},{"prompt":"Rearrange the elements of the list in ascending order. my_list = [8, 1, 3, 5, 4, 9]","completion":"my_list.sort()"},{"prompt":"Rewrite this program in C language x = 5 y = 7 z = x + y print(z)","completion":"#include <stdio.h> int main() { int x = 5; int y = 7; int z = x + y; printf(\\"%d\\", z); return 0; }"},{"prompt":"Using the given dictionary, find the most frequent element my_dict = {\\"A\\":1,\\"B\\":1,\\"C\\":3,\\"D\\":3,\\"E\\":3}","completion":"most_frequent = max(my_dict, key=my_dict.get) print(most_frequent)"},{"prompt":"Construct an if condition in Python to check if a given number is within the range of [2, 12].","completion":"if 2 <= x <= 12: # do something"},{"prompt":"Change the variable \\"str\\" below to upper case. let str = 'hello world!';","completion":"let str = 'HELLO WORLD!';"},{"prompt":"Create a function to calculate the Fibonacci number at the inputted index.","completion":"function fibonacci(index) { if (index < 0) { return 0; } if (index === 0 || index === 1) { return 1; } return fibonacci(index - 1) + fibonacci(index - 2); }"},{"prompt":"Create a for loop that prints the values in the list \\"numbers\\". let numbers = [1, 2, 3, 4, 5];","completion":"for (let i = 0; i < numbers.length; i++) { console.log(numbers[i]); }"},{"prompt":"Find the index of the element \\"z\\" in the array \\"alphabet\\" below, and print the index. let alphabet = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];","completion":"let index = alphabet.indexOf('z'); console.log(index);"},{"prompt":"Write Python code to reverse the letters in the string \\"hello\\".","completion":"def reverseString(s): return s[::-1] print(reverseString('hello'))"},{"prompt":"Modify the code to convert the string \\"12345678\\" to an integer. let str = \\"12345678\\";","completion":"let num = parseInt(str); console.log(num);"},{"prompt":"Write a JavaScript code to set a cookie with the name \\"username\\" and value \\"JohnDoe\\".","completion":"document.cookie = \\"username=JohnDoe\\";"},{"prompt":"Using the list as an input, write code to generate a comma-separated string of the list's elements. let fruits = [\\"apple\\", \\"pear\\", \\"banana\\"];","completion":"let str = fruits.join(\\", \\"); console.log(str);"},{"prompt":"Modify the code below to use regular expressions to validate a phone number in the format \\"123-456-7890\\".","completion":"if (phone.match(/^d{3}-d{3}-d{4}/)) { console.log(\\"Valid phone number\\"); } else { console.log(\\"Invalid phone number\\"); }"},{"prompt":"Write a SQL query to retrieve the author and title of all books whose title contains the word \\"machine\\".","completion":"SELECT author, title FROM books WHERE title LIKE '%machine%';"},{"prompt":"Write a function that takes in two numbers in Roman numerals and outputs the sum. Roman numeral 1: XVI Roman numeral 2: IX","completion":"def roman_numerals_sum(num1, num2): \\"\\"\\"This function takes two Roman numerals as parameters and outputs their sum in Roman numerals.\\"\\"\\" Int1 = int(roman.fromRoman(num1)) Int2 = int(roman.fromRoman(num2)) Sum = Int1 + Int2 return roman.toRoman(Sum)"},{"prompt":"Create a function that returns an array of the three most common elements in an array. lst = [1, 2, 2, 3, 3, 3, 4, 4, 4, 4]","completion":"def three_most_common(lst): \\"\\"\\"This function takes in an array and returns an array of the three most common elements.\\"\\"\\" lst_len = len(lst) lst_dic = dict() for n in lst: if n in lst_dic: lst_dic[n] += 1 else: lst_dic[n] = 1 max_val = 0 max_key = 0 sec_key = 0 last_key = 0 for key, val in lst_dic.items(): if val > max_val: max_val = val last_key = sec_key sec_key = max_key max_key = key elif val > sec_key: last_key = sec_key sec_key = key elif val > last_key: last_key = key return [max_key, sec_key, last_key]"},{"prompt":"Create a function that filters an array of elements based on a given criteria and returns an array of the resulting elements. lst = [2, 3, 4, 5, 6, 7, 8, 9] # elements to filter criteria = lambda x: x > 5 # criterion to filter by","completion":"def filter_by(lst, criteria): \\"\\"\\"This function takes an array of elements and a criteria and returns an array of elements filtered by the criteria.\\"\\"\\" return [x for x in lst if criteria(x)]"},{"prompt":"Create a function that takes an array of integers and returns an array where each index is the product of all the numbers except for the number at that index. lst = [1, 2, 3, 4, 5]","completion":"def product_of_all_except_self(lst): \\"\\"\\"This function takes an array of integers and returns an array where each index is the product of all the numbers except for the number at that index.\\"\\"\\" products = [] n = len(lst) for i in range(n): product = 1 for j in range(n): if i != j: product *= lst[j] products.append(product) return products"},{"prompt":"Create a function to filter out strings that have more than n number of characters in an array. lst = ['book', 'pen', 'pencil', 'eraser', 'ruler'] n = 4","completion":"def filter_strings(lst, n): \\"\\"\\"This function takes in an array of strings and an integer n and returns an array of strings with more than n characters.\\"\\"\\" return [word for word in lst if len(word) > n]"},{"prompt":"Create a function that takes in a string and a number and returns a new string with the character at the given index replaced with another character. str = \\"Hello World!\\" index = 3 new_char = 'a'","completion":"def replace_char_at(str, index, new_char): \\"\\"\\"This function takes in a string and a number and returns a new string with the character at the given index replaced with another character.\\"\\"\\" return str[:index] + new_char + str[index + 1:]"},{"prompt":"Create a function to filter out elements in an array that meet a given criteria. lst = [2, 3, 4, 5, 6, 7, 8, 9] criteria = lambda x: x % 2 == 0","completion":"def filter_by(lst, criteria): \\"\\"\\"This function takes an array of elements and a criteria and returns an array of elements filtered by the criteria.\\"\\"\\" return [x for x in lst if criteria(x)]"},{"prompt":"Create a function to detect whether a given character is a vowel or not.","completion":"def is_vowel(char): \\"\\"\\"This function takes in a character and returns true if the character is a vowel, false otherwise.\\"\\"\\" vowels = 'aeiouAEIOU' return char in vowels"},{"prompt":"Create a function to generate a list with length n of numbers from 0 to n-1. n = 5","completion":"def generate_list(n): \\"\\"\\"This function takes an integer n and returns a list with length n of numbers from 0 to n-1.\\"\\"\\" return [i for i in range(n)]"},{"prompt":"Given two strings, create a function to find the total number of occurrences of the second string in the first string. str1 = \\"Hello World!\\" str2 = \\"lo","completion":"def count_string_occurrences(str1, str2): \\"\\"\\"This function takes in two strings and returns the total number of occurrences of the second string in the first string.\\"\\"\\" count = 0 for i in range(len(str1) - len(str2) + 1): if str1[i:i + len(str2)] == str2: count += 1 return count"},{"prompt":"mplement a C++ program to input a string and count the spaces in the string. String s = \\"example string\\";","completion":"#include <iostream> #include <string> int main() { std::string s = \\"example string\\"; int count = 0; for (int i = 0; i < s.size(); i++) { if (s[i] == ' ') count++; } std::cout << count; return 0; }"},{"prompt":"Generate a random hexadecimal color code in Ruby.","completion":"'#%06x' % (rand * 0xffffff).round(0).to_i"},{"prompt":"Describe the purpose of a \\"while\\" loop in JavaScript.","completion":"The purpose of a \\"while\\" loop in JavaScript is to execute a piece of code until a given condition is met. This loop can execute the code any number of times until the condition is evaluated to be \\"true\\"."},{"prompt":"Build a Python dictionary that contains the names of the months as keys and the numbers of days in each month as values.","completion":"months = {\\"January\\":31, \\"February\\":28, \\"March\\":31, \\"April\\":30, \\"May\\":31, \\"June\\":30, \\"July\\":31, \\"August\\":31, \\"September\\":30, \\"October\\":31, \\"November\\":30, \\"December\\":31}"},{"prompt":"Complete the SQL statement to calculate the average of the values in the \\"unit_price\\" column. SELECT AVG(","completion":"SELECT AVG(unit_price) FROM table_name;"},{"prompt":"w can you let a user input a character in a Java program?","completion":"You can let a user input a character in a Java program using the Scanner class. For example, you can use the next().charAt(0) method to let a user input a character."},{"prompt":"w do you use a ‘for’ loop in Python to iterate over a list of strings? list=[\\"Dog\\",\\"Cat\\",\\"Cow\\"]","completion":"for string in list: print(string)"},{"prompt":"Edit the following HTML form to add the required attribute. <form> <input type=\\"text\\" name=\\"name\\"> <input type=\\"submit\\" value=\\"Submit\\" /> </form>","completion":"<form> <input type=\\"text\\" name=\\"name\\" required> <input type=\\"submit\\" value=\\"Submit\\" /> </form>"},{"prompt":"What is the default filename of an index document used by an Apache web server?","completion":"index.html"},{"prompt":"Construct a SQL query to find the maximum salary from a table named \\"employees\\".","completion":"SELECT MAX(salary) FROM employees;"},{"prompt":"Generate a random number between -1 and 1 using a Python library.","completion":"import random random_num = random.uniform(-1,1) print(random_num)"},{"prompt":"What is the difference between div and span tags in HTML?","completion":"The main difference between div and span tags is that the div tag is used to group and structure content, while the span tag is used to group inline content. The div tag is a block-level element, while the span tag is an inline element. Therefore, div tags can be used to create larger sections of content, while span tags can be used to style individual words or sentences."},{"prompt":"w can we check the type of a variable in JavaScript?","completion":"We can check the type of a variable in JavaScript using the typeof operator. For example, to check the type of the variable x, we can use the following code: var x = 10; console.log(typeof x); // outputs \\"number\\""},{"prompt":"Construct a SQL query to count the number of occurrences of a certain value in a particular column of a table.","completion":"SELECT COUNT(*) FROM table_name WHERE column_name = value;"},{"prompt":"Write a function that takes a list of integers and returns a new list with all duplicate numbers removed. [3, 6, 8, 10, 10, 11, 15, 15, 15]","completion":"def remove_duplicate_integers(nums): new_list = [] for num in nums: if num not in new_list: new_list.append(num) return new_list print(remove_duplicate_integers([3, 6, 8, 10, 10, 11, 15, 15, 15]))"},{"prompt":"Write SQL code to find the number of people aged 18 and older from the \\"people\\" table. Table name: people","completion":"SELECT COUNT(*) FROM people WHERE age >= 18;"},{"prompt":"Create a Git branch for a given feature. Feature name: 'my-feature'","completion":"git checkout -b my-feature"},{"prompt":"Write a function that takes a sentence as an argument and returns a Dictionary of all the words and their counts in the sentence. 'The quick brown fox jumps over the lazy dog'","completion":"def count_words(sentence): words_counts = {} words = sentence.split(\\" \\") for word in words: if word not in words_counts: words_counts[word] = 0 words_counts[word] += 1 return words_counts print(count_words('The quick brown fox jumps over the lazy dog'))"},{"prompt":"Create an array from 0 to n-1. n = 10","completion":"arr = [x for x in range(0, n)] print(arr)"},{"prompt":"Write an algorithm to sort data in an array in ascending order. arr = [8, 0, 5, 10, 4, 6]","completion":"def bubble_sort(arr): n = len(arr) # Traverse through all array elements for i in range(n-1): # Last i elements are already in place for j in range(0, n-i-1): # traverse the array from 0 to n-i-1 # Swap if the element found is greater # than the next element if arr[j] > arr[j+1] : arr[j], arr[j+1] = arr[j+1], arr[j] bubble_sort(arr) print(arr)"},{"prompt":"Find the length of the longest increasing subsequence in an array. arr = [10, 22, 9, 33, 21, 50, 41, 60]","completion":"def longest_increasing_subsequence(arr): n = len(arr) # L[i] stores the length of the Longest Increasing # Subsequence ending with arr[i] L = [1]*n # consider all the elements of the array in turn for i in range(1, n): for j in range(i): # if the element is larger then the prev element # update L[i] with the maximum of all such # possible values of L[j] + 1 if arr[i] > arr[j]: L[i] = max(L[i], L[j] + 1) # L[i] now stores the LIS ending with arr[i] # find the maximum of all the stored values longest_length = 0 for i in range(n): longest_length = max(longest_length, L[i]) return longest_length print(longest_increasing_subsequence([10, 22, 9, 33, 21, 50, 41, 60]))"},{"prompt":"Convert the following number from binary to decimal form: 1101. 1101","completion":"The number 1101 in binary form is 13 in decimal form."},{"prompt":"Create an SQL query to retrieve data from the table \\"Employees\\".","completion":"SELECT * FROM Employees;"},{"prompt":"Create an algorithm to evaluate a given expression. (3 + 5) * 2","completion":"1. Initialize result as 0. 2. Save 3 plus 5 in a variable. 3. Multiply the variable by 2 and save it in another variable. 4. Set result as the value of the new variable. 5. Return result."},{"prompt":"Write a SQL query to count the number of employees in a department with id “IT-006”.","completion":"SELECT COUNT(*) FROM Employees WHERE department_id = 'IT-006';"},{"prompt":"Create a MySQL query to list out the customer IDs, first names, and last names of customers who live in the United States.","completion":"SELECT customer_id, first_name, last_name FROM customers WHERE country = 'United States';"},{"prompt":"Write a Python program to calculate the median of three given numbers.","completion":"def median_num(n1, n2, n3): if n1 > n2 and n2 > n3: return n2 elif n3 > n2 and n2 > n1: return n2 elif n1 > n3 and n3 > n2: return n3 elif n2 > n3 and n3 > n1: return n3 elif n2 > n1 and n1 > n3: return n1 else: return n1"},{"prompt":"Create a function that takes in an input string and a delimiter, and spits out a list of words that were seperated by a given delimiter. \\"This_is_a_sentence\\" delimiter = \\"_","completion":"def split_words(string, delimiter): return string.split(delimiter)"},{"prompt":"Optimize this SQL query to reduce the runtime. SELECT * FROM orders WHERE customer_id = '123' ORDER BY order_date;","completion":"SELECT * FROM orders WHERE customer_id = '123' ORDER BY order_date INDEX BY customer_id;"},{"prompt":"Create a regular expression pattern to match a string composed of lowercase letters \\"a\\" through \\"e\\", with no other characters.","completion":"pattern = '^[a-e]*'"},{"prompt":"Create a Python class with methods that accept a value and increase the stored value by 5.","completion":"class MyClass: def __init__(self, value): self.value = value def increase_by_five(self): self.value += 5"},{"prompt":"Write a JavaScript function to get the Nth element from the end of a given array.","completion":"function getFromEnd(arr, n) { return arr[arr.length - n]; }"},{"prompt":"Create an assembly program that takes an integer as input and displays the sum of digits of that number.","completion":".data Input: .word 0 Sum: .word 0 .text main: li r1, 0 sw Input, r1 li r2, 0 sw Sum, r2 looper: lw r1, Input blt r1, 0, done addi r2, r2, r1 divi r1, r1, 10 sw Input, r1 j looper done: lw r1, Sum li v0, 1 move a0, r1 syscall .end"},{"prompt":"Create a C++ program that takes a string as input and returns the most frequently occurring character.","completion":"#include <algorithm> #include <iostream> #include <string> #include <unordered_map> using namespace std; char highest_frequency(string str) { unordered_map<char, int> char_count; for (char &c : str) { char_count[c]++; } char max_char = ' '; int max_count = 0; for (auto &c : char_count) { int temp_count = c.second; if (temp_count > max_count) { max_count = temp_count; max_char = c.first; } } return max_char; } int main() { string str = \\"This is a sample string!\\"; cout << highest_frequency(str) << endl; return 0; }"},{"prompt":"Create an HTML page to display the attendance of students in an academic year. Attendance Data: Student Name: John Doe Attendance in 2020-21 academic year - 91%. Student Name: Jane Smith Attendance in 2020-21 academic year - 94%.","completion":"<!DOCTYPE html> <html> <head> <title> Student Attendance </title> <style type=\\"text/css\\"> h1 { font-family: sans-serif; } table { font-family: sans-serif; border-collapse: collapse; } td { border: 1px solid #dddddd; padding: 8px; } </style> </head> <body> <h1> Student Attendance </h1> <table> <tr> <th>Student Name</th> <th>Attendance (%)</th> </tr> <tr> <td>John Doe</td> <td>91%</td> </tr> <tr> <td>Jane Smith</td> <td>94%</td> </tr> </table> </body> </html>"},{"prompt":"Create a HTML page to display a weather forecast for the selected city. City: London Weather Forecast: Day 1 - Clear Sky Day 2 - Cloudy Day 3 - R","completion":"<!DOCTYPE html> <html> <head> <title>Weather Forecast</title> </head> <body> <h1>Weather Forecast - London</h1> <p>Day 1 - Clear Sky</p> <p>Day 2 - Cloudy</p> <p>Day 3 - Rain</p> </body> </html>"},{"prompt":"Drop all duplicates from a NumPy array. arr = [10, 20, 30, 10, 30, 20]","completion":"import numpy as np def drop_duplicates(arr): return np.unique(arr)"},{"prompt":"Find the intersection of two sorted arrays in Java. arr1=[1, 2, 4, 5, 6] arr2=[2, 3, 5, 7]","completion":"public static int[] intersection(int[] arr1, int[] arr2) { // Initialise array to store intersection int[] result = new int[arr1.length]; // Initialise two index in both array int i = 0, j = 0; // Initially set intersection index int k = 0; // Sort both array Arrays.sort(arr1); Arrays.sort(arr2); // Iterate over both array and store intersection // in array result while (i < arr1.length && j < arr2.length) { // If both current element are same if (arr1[i] == arr2[j]) { // Store it in result array result[k++] = arr1[i++]; j++; } // If first array current element is smaller else if (arr1[i] < arr2[j]) i++; // If second array current element is smaller else j++; } // return the result array return Arrays.copyOfRange(result, 0, k); }"},{"prompt":"Create a C Program that takes an array of integers and returns an array of the prime numbers present in the array. arr = {2, 3, 5, 6, 9, 10, 15}","completion":"#include<stdio.h> int isPrime(int n) { for (int i = 2; i <= n/2; i++) { if (n % i == 0) return 0; } return 1; } void findPrime(int arr[], int n) { int result[n]; int k = 0; for (int i = 0; i < n; i++) { if (isPrime(arr[i]) == 1) { result[k] = arr[i]; k++; } } for (int i = 0; i < k; i++) printf(\\"%d \\", result[i]); } int main() { int arr[] = {2, 3, 5, 6, 9, 10, 15}; int n = sizeof(arr)/sizeof(arr[0]); findPrime(arr, n); return 0; }"},{"prompt":"Create an HTML page that displays \\"Welcome to our website\\" when you first visit the page","completion":"<!DOCTYPE html> <html> <head> <title>Welcome to our website</title> </head> <body> <h1>Welcome to our website!</h1> </body>"},{"prompt":"Create a Java program that takes two numbers and prints out the larger number. Number 1: 6 Number 2: 8","completion":"public class Program { public static void main(String[] args) { int num1 = 6; int num2 = 8; if (num1 > num2) { System.out.println(num1); } else { System.out.println(num2); } } }"},{"prompt":"Reverse the elements of a given array. int[] array = {1, 2, 3, 4, 5};","completion":"for (int i = 0; i < array.length / 2; i++) { int temp = array[i]; array[i] = array[array.length - i - 1]; array[array.length - i - 1] = temp; }"},{"prompt":"What is a linked list?","completion":"A linked list is a data structure in which each element contains data as well as a link to the next element in the list. Linked lists provide a dynamic allocation of memory which can be useful for certain applications."},{"prompt":"Write code in Python to calculate the number of times a given number appears in a list. list = [2, 4, 3, 5, 4, 2, 3] Number to find: 4","completion":"count = 0 for x in list: if x == 4: count = count +1 print(\\"The number 4 appears in the list \\", count, \\" times.\\")"},{"prompt":"Create a function in Java that takes an array and multiplies each element by the given number. int[] array = {1, 2, 3, 4, 5}; Number to multiply by: 10","completion":"public static void multiplyArray(int[] array, int num) { for(int i=0; i<array.length; i++) { array[i] *= num; } }"},{"prompt":"Write an SQL query to select all employees whose last name is Johnson","completion":"SELECT * FROM employees WHERE last_name = 'Johnson';"},{"prompt":"Explain why the use of a loop is often the best solution for a problem.","completion":"Loops are often the best solution for a problem because they allow you to repeat a code block multiple times until a specific condition is met. By using a loop, you can save time and energy while also increasing the program's efficiency. Loops also make it easier to handle large data sets and complex tasks."},{"prompt":"What is the purpose of using a data structure?","completion":"The purpose of using a data structure is to store, organize, and manipulate data quickly and effectively. By using an appropriate data structure depending on the type of data and the operations being performed, it is possible to make data processing efficient and improve the performance of the program."},{"prompt":"Create an HTML page that displays a table with names, ages, and phone numbers Name: John Age: 25 Phone: 555-555-5555 Name: Jane Age: 32 Phone: 333-333-3333","completion":"<!DOCTYPE html> <html> <head> <title>Table of Names and Information</title> </head> <body> <table> <tr> <th>Name</th> <th>Age</th> <th>Phone</th> </tr> <tr> <td>John</td> <td>25</td> <td>555-555-5555</td> </tr> <tr> <td>Jane</td> <td>32</td> <td>333-333-3333</td> </tr> </table> </body> </html>"},{"prompt":"You are given two strings and you need to output true if they are anagrams of each other, false otherwise. String 1: eat String 2: te","completion":"true"},{"prompt":"Read the given code and detect which variables are not declared. int x=3; y=4; int z=x+y;","completion":"y is not declared."},{"prompt":"mplement a function to rotate a list by k elements. list = [1,2,3,4,5], k = 2","completion":"def rotate(list, k): first_part = list[0:k] second_part = list[k:] second_part.extend(first_part) return second_part"},{"prompt":"w does the Binary Search algorithm work?","completion":"The Binary Search algorithm works by repeatedly dividing an ordered list of items into half and searching for the desired element in that half. If the desired element is not present in the current half, the algorithm moves to the other half and the search continues until either the desired element is found or the list is exhausted."},{"prompt":"Write a JavaScript program to search a given element x in a sorted array. arr = [1, 2, 4, 8, 10]; x = 8","completion":"function searchElement(arr, x) { let start = 0; let end = arr.length - 1; let mid; while (start <= end) { mid = Math.floor((start + end) / 2); if (arr[mid] === x) { return mid; } if (arr[mid] < x) { start = mid + 1; } else { end = mid - 1; } } return false; } console.log(searchElement(arr, x));"},{"prompt":"Write a PHP program to flatten a multi-dimensional array.","completion":"function flattenArray(array) { flattenedArray = array(); array_walk_recursive(array, function (v) use (&flattenedArray) { flattenedArray[] = v; }); return flattenedArray; }"},{"prompt":"Write a Rust program to find the lowest common ancestor in a given tree.","completion":"fn lowestCommonAncestor(root: &TreeNode, p: &TreeNode, q: &TreeNode) -> i32 { if root == nil { return -1; } if root == p || root == q { return root.val; } let left = lowestCommonAncestor(root.left, p, q); let right = lowestCommonAncestor(root.right, p, q); if left != -1 && right != -1 { return root.val; } return left != -1 ? left : right; }"},{"prompt":"Write code that adds two numbers using the unary operator.","completion":"// Function to add two numbers using unary operator int addNumbers(int x, int y) { // Iterate till there is no carry while (y != 0) { // carry now contains common // set bits of x and y int carry = x & y; // Sum of bits of x and y where at // least one of the bits is not set x = x ^ y; // Carry is shifted by one so that // adding it to x gives the required sum y = carry << 1; } return x; }"},{"prompt":"Write a function to concatenate two strings in Python.","completion":"def concat_strings(string1, string2): return string1 + string2"},{"prompt":"Create a C++ program to perform a linear search on an array.","completion":"#include <iostream> int linear_search(int arr[], int n, int x) { int i; for (i = 0; i < n; i++) if (arr[i] == x) return i; return -1; } // Driver code int main(void) { int arr[] = {2, 3, 4, 10, 40}; int x = 10; int n = sizeof(arr) / sizeof(arr[0]); int result = linear_search(arr, n, x); if(result == -1) { std::cout<< \\"Element is not present in array\\"; } else { std::cout<< \\"Element is present at index \\" << result; } return 0; }"},{"prompt":"Write code to find the depth of a binary tree.","completion":"// Recursive function to find the maximum depth // of a binary tree int maxDepth(Node *root) { // Base case if (root == NULL) return 0; // Recur for left subtree and right subtree int lDepth = maxDepth(root->left); int rDepth = maxDepth(root->right); // Use the larger one if (lDepth > rDepth) return lDepth + 1; else return rDepth + 1; }"},{"prompt":"Edit the following Java program and make it compile without any errors. public class Main { public static void main(String[] args) { System.print(\\"Hello, World!\\"); } }","completion":"public class Main { public static void main(String[] args) { System.out.println(\\"Hello, World!\\"); } }"},{"prompt":"Write a C program to implement diamond pattern.","completion":"#include <stdio.h> int main() { int n; //number of rows //to be printed printf(\\"Enter the number of rowsn\\"); scanf(\\"%d\\",&n); // odd number of rows if(n%2==1) { // rows increment for(int i=0; i<n; i++) { // Print spaces for(int j=0; j<n-i-1; j++) { printf(\\" \\"); } // Print stars for(int k=0; k<2*i+1; k++) { printf(\\"*\\"); } printf(\\"n\\"); } // rows decrement for(int i=n-2; i>=0; i--) { // Print spaces for(int j=0; j<n-i-1; j++) { printf(\\" \\"); } // Print stars for(int k=0; k<2*i+1; k++) { printf(\\"*\\"); } printf(\\"n\\"); } } // even number of rows else { // rows increment for(int i=0; i<=n; i++) { // Print spaces for(int j=1; j<=n-i; j++) { printf(\\" \\"); } // Print stars for(int k=1; k<=2*i-1; k++) { printf(\\"*\\"); } printf(\\"n\\"); } // rows decrement for(int i=n-1; i>0; i--) { // Print spaces for(int j=0; j<n-i; j++) { printf(\\" \\"); } // Print stars for(int k=1; k<=2*i-1; k++) { printf(\\"*\\"); } printf(\\"n\\"); } } return 0; }"},{"prompt":"Perform checksum calculation on the following string \\"HelloWorld\\".","completion":"// Function to calculate the checksum of a given string // *str is the given string long calculateChecksum(string str) { long checksum = 0; for (int i = 0; i < str.length(); i++) { checksum += str.at(i); } return checksum; } // Output: checksum = 483 (for \\"HelloWorld\\")"},{"prompt":"Rewrite the below JAVA program in Python public static void main (String[] args) { int count = 10; while (count > 0) { System.out.println(\\"Code:\\" + count); count--; } }","completion":"count = 10 while count > 0: print(\\"Code:\\", count) count -= 1"},{"prompt":"Write a C# program to remove all characters in a given string except the 'Space' Hello World","completion":"string removeChars(string str) { string result = \\"\\"; for (int i = 0; i < str.Length; i++) { if (str[i] != ' ') continue; result += str[i]; } return result; }"},{"prompt":"Develop an SQL statement to select those products with a minimum price of 125","completion":"SELECT * FROM Products WHERE Price >= 125;"},{"prompt":"Write a JAVA program to display the list of numbers from 1 to 10","completion":"public class NumberList { public static void main(String[] args) { // Printing numbers from 1 to 10 for (int num = 1; num <= 10; num++) System.out.println(num); } }"},{"prompt":"Generate a query to find the employee with the lowest salary from the table called 'employees'.","completion":"SELECT * FROM employees ORDER BY salary ASC LIMIT 1;"},{"prompt":"Write a function in Ruby to remove the white space from a given string.","completion":"def remove_whitespace(str) str.gsub(/s+/, \\"\\") end"},{"prompt":"Construct a SQL query to find the employees younger than age 35 from the table called 'employees'","completion":"SELECT * FROM employees WHERE age < 35;"},{"prompt":"Generate a SQL command to update the salary by 5% for all the employees.","completion":"UPDATE employees SET salary = salary * 1.05;"},{"prompt":"Construct a JavaScript program to create an alert message when a button is clicked.","completion":"<button onclick=\\"alert('Button clicked')\\">Click me</button>"},{"prompt":"Create a program in C++ to print the first 10 numbers of the Fibonacci series.","completion":"#include <iostream> int main() { int n1 = 0, n2 = 1, n3, i, count = 10; std::cout << n1 << \\" \\" << n2 << \\" \\"; for (i = 2; i < count; ++i) { n3 = n1 + n2; std::cout << n3 << \\" \\"; n1 = n2; n2 = n3; } return 0; }"},{"prompt":"Generate a query in SQL to find the difference between the maximum and minimum salary from the 'employees' table.","completion":"SELECT MAX(salary) - MIN(salary) AS salary_difference FROM employees;"},{"prompt":"Output the result of 3+5*2-9","completion":"3 + 5 * 2 - 9 = 2"},{"prompt":"Create a perl code to parse a JSON object.","completion":"use JSON; # Parse a JSON object my json_text = \\"{\\"name\\":\\"John\\",\\"age\\":30,\\"city\\":\\"New York\\"}\\"; my json_obj = decode_json(json_text); # Access data print \\"name : \\" . json_obj->{\\"name\\"} . \\"n\\"; print \\"age : \\" . json_obj->{\\"age\\"} . \\"n\\"; print \\"city : \\" . json_obj->{\\"city\\"} . \\"n\\";"},{"prompt":"Compare two given objects and output the differences. Object 1: {name: John, age: 30, city: New York} Object 2: {name: John, age: 40, city: Las Vegas}","completion":"def compare_objects(object1, object2): for key, value in object1.items(): if key in object2: if object1[key] != object2[key]: print(\\"Different values for \\" + key + \\": \\" + str(object1[key]) + \\" vs. \\" + str(object2[key])) else: print(\\"New key not in second object: \\" + key) for key, value in object2.items(): if key not in object1: print(\\"New key not in first object: \\" + key) compare_objects({\\"name\\": \\"John\\", \\"age\\": 30, \\"city\\": \\"New York\\"}, {\\"name\\": \\"John\\", \\"age\\": 40, \\"city\\": \\"Las Vegas\\"}) # Output: # Different values for age: 30 vs. 40 # New key not in first object: city"},{"prompt":"Write a Java code to perform linear search on the given array.","completion":"public class LinearSearch { /** * Linear search implementation * * @param arr the array of elements to search * @param target the element to search for * @return the index of the element if found, -1 otherwise */ public static int linearSearch(int[] arr, int target) { for (int i = 0; i < arr.length; i++) { if (arr[i] == target) { return i; } } return -1; } public static void main(String[] args) { int[] arr = {7, 9, 15, 11}; int target = 15; int index = linearSearch(arr, target); if (index == -1) System.out.println(\\"Element not found\\"); else System.out.println(\\"Element found at index: \\" + index); } }"},{"prompt":"Generate a HTML form with 3 text fields.","completion":"<form> <input type=\\"text\\" name=\\"field1\\" /> <input type=\\"text\\" name=\\"field2\\" /> <input type=\\"text\\" name=\\"field3\\" /> <button type=\\"submit\\">Submit</button> </form>"},{"prompt":"Write a C# program to sum the following numbers: 5, 9, 1, 2, 3.","completion":"using System; namespace ConsoleApp1 { class Program { static void Main(string[] args) { // Sum of 5, 9, 1, 2, 3 int result = 5 + 9 + 1 + 2 + 3; Console.WriteLine(result.ToString()); // 20 } } }"},{"prompt":"Write an Android application to display the date and time in a text view.","completion":"public class MainActivity extends AppCompatActivity { @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); // Get a reference to the TextView TextView textView = (TextView) findViewById(R.id.textView); // Set the text view to present the current date and time SimpleDateFormat sdf = new SimpleDateFormat(\\"yyyy-MM-dd HH:mm:ss\\"); String currentDateTimeString = sdf.format(new Date()); textView.setText(currentDateTimeString); } }"},{"prompt":"Explain the difference between <!DOCTYPE> and <meta> tags.","completion":"The HTML <!DOCTYPE> tag is used to indicate which version of HTML web page is based on. It allows a browser to know which type of document it is dealing with, so that it can determine how to render the document. The <meta> tag is used to provide information about the content of the web page, such as its title, author, keywords, description, language and more. It does not affect the way a browser displays the web page."},{"prompt":"Write an SQL query to fetch all records from the 'orders' table, that have a status of either 'pending' or 'shipped'.","completion":"SELECT * FROM orders WHERE status IN ('pending', 'shipped');"},{"prompt":"What is the difference between a REST API and SOAP API?","completion":"REST (REpresentational State Transfer) is an architectural style for designing distributed systems and web services while SOAP (Simple Object Access Protocol) is a messaging protocol designed for exchanging information in a distributed environment. REST is based on a stateless, client-server protocol and usually uses HTTP for communication while SOAP uses XML for communication. REST is much simpler than SOAP and does not require any additional headers but SOAP needs additional headers for authentication and authorization."},{"prompt":"Write an Android application to detect the magnetic field of a device.","completion":"public class MainActivity extends AppCompatActivity implements SensorEventListener { private SensorManager sensorManager; private Sensor magneticFieldSensor; @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); sensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE); magneticFieldSensor = sensorManager.getDefaultSensor(Sensor.TYPE_MAGNETIC_FIELD); } @Override protected void onResume() { super.onResume(); sensorManager.registerListener(this, magneticFieldSensor, SensorManager.SENSOR_DELAY_NORMAL); } @Override protected void onPause() { super.onPause(); sensorManager.unregisterListener(this); } @Override public void onSensorChanged(SensorEvent event) { if (event.sensor.getType() == Sensor.TYPE_MAGNETIC_FIELD) { float xField = event.values[0]; float yField = event.values[1]; float zField = event.values[2]; // handle the magnetic field values here } } @Override public void onAccuracyChanged(Sensor sensor, int accuracy) { // handle the accuracy changes here } }"},{"prompt":"What is the Big-O notation and why is it used?","completion":"The Big-O notation is a mathematical way of describing the performance of a given algorithm. It measures the complexity of an algorithm by taking into account the number of operations it performs, such as the time and space it takes to complete a given task. Big-O notation is used to compare different algorithms and to assess the impact of various choices on a given program's performance."},{"prompt":"Create a new list of words with the given words in the same order. words = [\\"Python\\", \\"is\\", \\"fun\\"]","completion":"new_words = [\\"Python\\", \\"is\\", \\"fun\\"]"},{"prompt":"Read the following array and print it in the same order using a for loop. list_int = [1,3,5,7,9]","completion":"for item in list_int: print(item)"},{"prompt":"Transform the following list of tuples into a dictionary. list_tuples = [(\\"python\\", 1), (\\"is\\", 2), (\\"fun\\", 3)]","completion":"dict_tuples = { item[0] : item[1] for item in list_tuples }"},{"prompt":"Create a variable called \\"score\\" with the value of 0.","completion":"score = 0"},{"prompt":"Change the following variable to a string. a_variable = 8","completion":"a_variable = str(8)"},{"prompt":"Read the following array and remove all the numbers divisible by 4. list_int = [2,4,6,10]","completion":"list_int = [num for num in list_int if num % 4 != 0]"},{"prompt":"Create a program to combine the elements of two different lists into a single list. list_1 = [1,2,3] list_2 = [4,5,6]","completion":"combined_list = list_1 + list_2"},{"prompt":"Create a program to remove all duplicate elements from a list and return a new list with the unique elements.","completion":"def remove_duplicates(nums): temp_list = [] for num in nums: if num not in temp_list: temp_list.append(num) return temp_list"},{"prompt":"Produce a small program which prints the number 42 when run.","completion":"#include <iostream> int main() { std::cout << 42 << std::endl; return 0; }"},{"prompt":"Calculate the area of a circle whose radius is given by the value stored in the variable \`radius\`. radius = 5","completion":"const area = Math.PI * Math.pow(radius, 2); // area = 78.53981633974483"},{"prompt":"Create a class named \`Person\` and add four attributes called \`name\`, \`age\`, \`gender\`, and \`height\`.","completion":"class Person { constructor(name, age, gender, height) { this.name = name; this.age = age; this.gender = gender; this.height = height; } }"},{"prompt":"Create an array with 10 integers from 0 to 9, where each number appears only once.","completion":"let arr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];"},{"prompt":"Name three built-in Python data types.","completion":"The three built-in Python data types are integers, floats, and strings."},{"prompt":"Create an object constructor in Javascript which takes three arguments: name, age, and city.","completion":"function Person (name, age, city) { this.name = name; this.age = age; this.city = city; }"},{"prompt":"Write a SQL query that returns the names of all the customers.","completion":"SELECT name FROM customers;"},{"prompt":"Create a CSS class named 'main-section' with a width of 700px and a margin of 0 auto.","completion":".main-section { width: 700px; margin: 0 auto; }"},{"prompt":"Generate an array with the numbers from -10 to 10 in incremental order.","completion":"let arr = [-10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];"},{"prompt":"Using the given input, generate a code to print in reverse order. a_list = ['a', 'b', 'c', 'd', 'e']","completion":"def print_reverse(a_list): for i in range(len(a_list)-1, -1, -1): print(a_list[i])"},{"prompt":"Generate a code to filter out any value that is greater than the given number. my_list = [2, 4, 5, 6, 7] and the number = 5","completion":"def filter_gt(my_list, number): return [x for x in my_list if x <= number]"},{"prompt":"Generate a code to compare two strings and return a boolean result.","completion":"def compare(string1, string2): if string1 == string2: return True else: return False"},{"prompt":"Create a function to return the difference between two numbers.","completion":"def difference(a, b): return a - b"},{"prompt":"Remove the duplicates from the given array. arr = [1, 2, 3, 3, 4, 4, 5, 6]","completion":"[1, 2, 3, 4, 5, 6]"},{"prompt":"Generate a 3x3 matrix using randomly generated numbers between 1 and 10.","completion":"matrix = [[4, 5, 7], [6, 2, 9], [1, 3, 8]]"},{"prompt":"Make a function to convert a string to a number.","completion":"def str_to_num(x): return int(x)"},{"prompt":"Design a JSON structure to store contacts.","completion":"{ \\"contacts\\": [ { \\"name\\": \\"John Doe\\", \\"phone\\": 123456789, \\"email\\": \\"jdoe@example.com\\" }, { \\"name\\": \\"Jane Doe\\", \\"phone\\": 987654321, \\"email\\": \\"janedoe@example.com\\" } ] }"},{"prompt":"erate over the list and calculate the average arr = [1,2,3,4,5]","completion":"def average(arr): sum = 0 for i in arr: sum+=i return sum/len(arr)"},{"prompt":"Determine the most efficient way to loop over the list below. list = [\\"John\\", \\"James\\", \\"Glen\\", \\"Tony\\", \\"Kelly\\"]","completion":"for name in list: print(name)"},{"prompt":"Create a function \\" avg_grade\\" that would take a list of grades and return the average of the grades list = [84, 89, 94, 81]","completion":"def avg_grade(list): total = 0 for num in list: total += num return total / len(list)"},{"prompt":"Create a looping structure in JavaScript that executes a task 10 times","completion":"for (let i = 0; i < 10; i++) { // The task to be executed }"},{"prompt":"Make a function \\"convert_time\\" that would convert seconds to minutes","completion":"def convert_time(seconds): minutes = seconds / 60 return minutes"},{"prompt":"Generate a correct SQL query to retreive a subset of rows in a table Table Name: students Condition: Retrieve rows where the student grade is greater than 80","completion":"SELECT * FROM students WHERE grade > 80;"},{"prompt":"Create a class in Java to store student details Attributes: id (int), name (String), grade (int)","completion":"public class Student{ // Attributes private int id; private String name; private int grade; // Constructor public Student(int id, String name, int grade){ this.id = id; this.name = name; this.grade = grade; } // Getters and setters public int getId(){ return this.id; } public void setId(int id){ this.id = id; } public String getName(){ return this.name; } public void setName(String name){ this.name = name; } public int getGrade(){ return this.grade; } public void setGrade(int grade){ this.grade = grade; } }"},{"prompt":"Write a CSS rule to set the text color of a page to red","completion":"body { color: red; }"},{"prompt":"Generate a function \\"capitalize\\" in JavaScript to capitalize the first letter of every word","completion":"function capitalize(str) { return str.replace(/bw/g, l => l.toUpperCase()); }"},{"prompt":"Create a while loop in Python that runs while the given condition is true while x is greater than 10","completion":"while x > 10: # do something x = x - 1"},{"prompt":"Retrieve the location of the 3rd character in a given string String: \\"hello world","completion":"print(\\"hello world\\"[2]) # returns 'l'"},{"prompt":"Sum up the following two numbers 2 and 3","completion":"2 + 3 = 5"},{"prompt":"Write a SQL query to drop a column from an existing table. Table Name: \\"Customers\\" Column Name: \\"first_name","completion":"ALTER TABLE Customers DROP COLUMN first_name;"},{"prompt":"Explain the main difference between an array and a linked list.","completion":"The main difference between an array and a linked list is that an array stores data items contiguously in memory, while a linked list stores them in individual elements linked together with references. An array can be accessed faster than a linked list since elements can be accessed directly by their index. On another hand, inserting and deleting elements from a linked list is faster since elements don't have to be rearranged in memory like in an array. Additionally, linked lists can have an arbitrary number of elements unlike arrays which have a fixed size."},{"prompt":"Write an SQL query to return the most frequently used keyword from the table. Table Name: \\"Keywords\\" Column Name: \\"keyword","completion":"SELECT keyword, COUNT(*) as occurrence FROM Keywords GROUP BY keyword ORDER BY occurrence DESC LIMIT 1;"},{"prompt":"Parse the following HTML code and store the data in a Python dictionary. <div><h2>Header</h2><p>Text</p></div>","completion":"data = { \\"header\\": \\"Header\\", \\"text\\": \\"Text\\" }"},{"prompt":"List the advantages of using a linked list over an array.","completion":"The advantages of using a linked list over an array include: 1. Insertion and deletion operations are faster since individual elements do not have to be rearranged in memory. 2. Elements can be stored in any order, as opposed to an array which requires elements to be stored contiguously. 3. Linked lists have an arbitrary number of elements, unlike an array which has a fixed size. 4. Linked lists do not require the memory allocation of an entire block at once, making it suitable for dynamic memory allocation."},{"prompt":"Write a JavaScript function that returns the first 50 prime numbers.","completion":"function getFirstFiftyPrimes(){ let primes = [2]; let num = 3; while(primes.length < 50){ let isPrime = true; for(let i = 0; i < primes.length; i++){ if(num % primes[i] === 0){ isPrime = false; } } if(isPrime) primes.push(num); num += 1; } return primes; }"},{"prompt":"Calculate the determinant of the following matrix. [1, 3, 4], [5, 6, 7], [9, 8, 2]","completion":"The determinant of the matrix is -76."},{"prompt":"mplement a function to print the Fibonacci series up to the nth term.","completion":"def FibonacciSeries(n): a = 0 b = 1 if n < 0: print(\\"Incorrect input\\") elif n == 0: return a elif n == 1: return b else: for i in range(2,n+1): c = a + b a = b b = c return b"},{"prompt":"Write a C# program to filter the entities from a given array. Array = [0, \\"Apple\\", 1, \\"Orange\\", 2, \\"Banana\\", 3, \\"Mango\\"]. Condition = Entity should be a number","completion":"int[] entities = Array.OfType<int>().ToArray();"},{"prompt":"Create a list of 50 integers to represent a frequency chart.","completion":"frequency_chart = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50]"},{"prompt":"Write a Python program to print the combination of the given list. list = [1, 2, 3]","completion":"from itertools import combinations list1 = [1, 2, 3] combinations = list(combinations(list1, 2)) print(combinations) # Output: [(1, 2), (1, 3), (2, 3)]"},{"prompt":"Write a Python code to generate a random password of 12 characters containing a mix of numbers, alphabets, and special characters.","completion":"password = DXbf7uj3@q3"},{"prompt":"Write a function to check if the sum of two given number is between a given range. num1 = 10 num2 = 20 start = 15 end = 25","completion":"True"},{"prompt":"Write a Python program to verify if an integer is odd or even. num = 8","completion":"False"},{"prompt":"Modify the following C++ code to add an else statement to handle incorrect inputs. int main() { int x; cin >> x; if (x == 0) cout << \\"x is zero\\" << endl;","completion":"int main() { int x; cin >> x; if (x == 0) cout << \\"x is zero\\" << endl; else cout << \\"x is not zero\\" << endl; }"},{"prompt":"Write a SQL query to find out the shopping category of the product with id 12345.","completion":"SELECT category FROM products WHERE id = 12345;"},{"prompt":"Java, write a method that reverses an array of integers.","completion":"public static int[] reverseArray(int[] arr) { int[] reversed = new int[arr.length]; int j = 0; for (int i = arr.length - 1; i >= 0; i--) { reversed[j++] = arr[i]; } return reversed; }"},{"prompt":"Java, write a method that wraps a given string into a paragraph with each line no longer than the given number of characters.","completion":"public static String wrapText(String text, int maxCharsPerLine) { // Create a StringBuilder for formulating the output StringBuilder result = new StringBuilder(); // Break the given text into individual lines, each containing no more than maxCharsPerLine characters String line = \\"\\"; int index = 0; while (index < text.length()) { while (index < text.length() && line.length() + text.charAt(index) <= maxCharsPerLine) { line = line + text.charAt(index); index++; } result.append(line + \\"n\\"); // Reset line to empty line = \\"\\"; } return result.toString(); }"},{"prompt":"Rewrite the following SQL query in C#. SELECT * FROM products WHERE price > 10;","completion":"using System; using System.Data.SqlClient; public void getProducts() { using (var conn = new SqlConnection(\\"connection string here\\")) using (var cmd = new SqlCommand(\\"SELECT * FROM products WHERE price > @price\\", conn)) { cmd.Parameters.AddWithValue(\\"@price\\", 10); conn.Open(); using (var dr = cmd.ExecuteReader()) { // do something with the result set } } }"},{"prompt":"Create an array of 10 randomly generated integers between 0 and 10.","completion":"import random def generate_random_array(): return [random.randint(0, 10) for _ in range(10)]"},{"prompt":"Create a program in Python to compute the sum of two numbers.","completion":"def add_numbers(num1, num2): sum_nums = num1 + num2 return sum_nums"},{"prompt":"Write an SQL query with an inner join clause. Table 1: users (user_id, name, age) Table 2: orders (user_id, order_date)","completion":"SELECT users.name, users.age, orders.order_date FROM users INNER JOIN orders ON users.user_id = orders.user_id"},{"prompt":"dentify the error in the following function: Replace all spaces in a string with a given character. def replace_space (original_string, character): new_string = original_string.replace( \\" \\", character ) return new_string","completion":"The code is correct. There is no error."},{"prompt":"Classify the following code as a part of a machine learning model The following code is for a linear regression model which predicts the estimated cost of a house based on area: def linear_regression(x, y): m = (sum(x*y) - sum(x) * sum(y) / len(x)) / (sum(x*x) - sum(x) * sum(x) / len(x)) b = (sum(y) - m * sum(x)) / len(x) return (m, b)","completion":"This is a code for a linear regression model."},{"prompt":"Write a Bash script to print the sum of all even numbers between 0 and 100.","completion":"#!/bin/bash sum=0 for(( i = 0; i <= 100; i+=2 )) do sum=((sum + i)) done echo \\"The sum of even numbers between 0 and 100 is sum\\""},{"prompt":"Create an R function which takes a vector of numbers as input and returns its average.","completion":"getAvg <- function(x){ return(mean(x)) }"},{"prompt":"Edit the following code such that the output is reversed def reverse_string(s): n = len(s) result = \\"\\" for i in range(n): result += s[i] return resul","completion":"def reverse_string(s): n = len(s) result = \\"\\" for i in range(n-1, -1, -1): result += s[i] return result"},{"prompt":"dentify the specific type of this given object: object = { \\"name\\": \\"John\\", \\"age\\": 27, \\"sex\\": \\"male\\" }","completion":"The given object is a dictionary."},{"prompt":"Create a data frame in R with 3 columns and 10 rows of randomly generated numerical data.","completion":"dataFrame <- data.frame(V1 = sample(1:100, 10, replace=FALSE), V2 = sample(1:100, 10, replace=FALSE), V3 = sample(1:100, 10, replace=FALSE))"},{"prompt":"Convert the list of numbers below to a numpy array. [2, 4, 6, 8, 10]","completion":"import numpy as np arr = np.array([2,4,6,8,10])"},{"prompt":"Write a code that can generate a list of random numbers between 0 to 100","completion":"import random # Function to generate a list of random numbers between 0 to 100 def generate_random_number_list(): random_number_list = [] for i in range(0,101): random_number_list.append(random.randint(0,100)) return random_number_list # call the function random_number_list = generate_random_number_list() print(random_number_list)"},{"prompt":"Create a function that increments a given number by 1","completion":"def increment_by_one(n): return n + 1"},{"prompt":"Create a regex expression that matches strings containing four consecutive digits.","completion":"regex_expression = \\"d{4}\\""},{"prompt":"Complete the following Javascript code to filter out all numbers divisible by 3. const numbers = [1,2,3,4,5,6,7,8,9]; const result =","completion":"const numbers = [1,2,3,4,5,6,7,8,9]; const result = numbers.filter(num => num % 3 !== 0);"},{"prompt":"Suggest a suitable value for the missing data type. My favorite data type is _________.","completion":"My favorite data type is string."},{"prompt":"Generate a HTML table with two columns and three rows.","completion":"<table> <tr> <td>Column 1</td> <td>Column 2</td> </tr> <tr> <td>row 1</td> <td>row 1</td> </tr> <tr> <td>row 2</td> <td>row 2</td> </tr> <tr> <td>row 3</td> <td>row 3</td> </tr> </table>"},{"prompt":"Suggest a suitable selector for accessing the third <li> element from the following HTML code. <ul> <li>Item 1</li> <li>Item 2</li> <li>Item 3</li> </ul>","completion":"The selector for accessing the third <li> element would be 'ul li:nth-child(3)'."},{"prompt":"Write a single line of SQL statement to select \\"name\\" from \\"students\\" table.","completion":"SELECT name FROM students;"},{"prompt":"Update the existing code to have a shape of (3,3) when an array of size (2,2) is reshaped. import numpy as np arr = np.arange(4).reshape(2,2)","completion":"import numpy as np arr = np.arange(9).reshape(3,3)"},{"prompt":"Generate a dictionary mapping each Keytype with a description of \\"What it is\\".","completion":"dict = { 'Integer': 'An integer is a whole number (not a fraction) that can be positive, negative, or zero', 'Float': 'A float is a type of number that has a decimal point', 'String': 'A string is a type of data that consists of a sequence of characters', 'Boolean': 'A Boolean is a type of data that is either true or false', 'List': 'A list is a collection of elements that can be of different data types', 'Tuple': 'A tuple is a collection of elements that cannot be modified and has a fixed length' }"},{"prompt":"Suggest code to add an item to the end of a given list. list1 = [1, 2, 3]","completion":"list1 = [1, 2, 3] list1.append(4)"},{"prompt":"Write a function in React to handle a form submission.","completion":"onSubmit = e => { e.preventDefault(); const formData = new FormData(e.target); // Do something with the form data here }; <form onSubmit={ (e) => onSubmit(e)}> <!-- Form elements go here --> </form>"},{"prompt":"Complete the following Node.js code to return 'true' if the input is a valid email address. const validateEmail = email => { const re =","completion":"const validateEmail = email => { const re = /^(([^<>()[].,;:s@\\"]+(.[^<>()[].,;:s@\\"]+)*)|(\\".+\\"))@(([[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}])|(([a-zA-Z-0-9]+.)+[a-zA-Z]{2,}))/; return re.test(String(email).toLowerCase()); };"},{"prompt":"Suggest code to check if an object has a given property. object = { id: 1, name: 'John' }","completion":"object = { id: 1, name: 'John' } if('name' in object) { // Do something }"},{"prompt":"Convert the following JSON object to a .csv table. { \\"name\\": \\"John Doe\\", \\"age\\": 35, \\"job\\": \\"Software Engineer\\" }","completion":"name,age,job John Doe,35,Software Engineer"},{"prompt":"Create an HTML page that contains the following table. <table> <tr> <th>Name</th> <th>Age</th> <th>City</th> </tr> <tr> <td>John Doe</td> <td>23</td> <td>New York</td> </tr> <tr> <td>Trish Smith</td> <td>29</td> <td>Philadelphia</td> </tr> </table>","completion":"<html> <head> <title>Table Sample</title> </head> <body> <table> <tr> <th>Name</th> <th>Age</th> <th>City</th> </tr> <tr> <td>John Doe</td> <td>23</td> <td>New York</td> </tr> <tr> <td>Trish Smith</td> <td>29</td> <td>Philadelphia</td> </tr> </table> </body> </html>"},{"prompt":"Edit the following HTML page so the text appears in bold. <html> <head> <title>Text Sample</title> </head> <body> <p>This is a sample text.</p> </body> </html>","completion":"<html> <head> <title>Text Sample</title> </head> <body> <p><b>This is a sample text.</b></p> </body> </html>"},{"prompt":"Parse the following text and extract all the numbers. This text contains the numbers 10, 20, and 30.","completion":"[10, 20, 30]"},{"prompt":"Write a Python program that uses recursion to calculate the Fibonacci sequence up to the 25th number.","completion":"def Fibonacci(n): if n == 0: return 0 elif n == 1: return 1 else: return Fibonacci(n-1) + Fibonacci(n-2) fibonacci_list = [] for i in range(26): fibonacci_list.append(Fibonacci(i)) print(fibonacci_list)"},{"prompt":"Classify the following words as either nouns or verbs. walk, machine, think","completion":"Nouns: machine Verbs: walk, think"},{"prompt":"Write an SQL query to get the employee details with the highest salary.","completion":"SELECT * FROM employees ORDER BY salary DESC LIMIT 1;"},{"prompt":"Show how to find the mean of three numbers in Java. int x = 3; int y = 4; int z = 5;","completion":"public class MeanCalculator { public static void main(String args[]){ int x = 3; int y = 4; int z = 5; double mean = (x + y + z) / 3.0; System.out.println(\\"The mean of the three numbers is: \\" + mean); } }"},{"prompt":"Construct a SQL query to select all records from a table called \\"employees\\" where the salary is greater than 8000.","completion":"SELECT * FROM employees WHERE salary > 8000;"},{"prompt":"Write a script in Python that will find the average of a list of numbers. [2.3, 6.7, 8.2, 4.3, 9.1]","completion":"import numpy as np data = [2.3, 6.7, 8.2, 4.3, 9.1] avg = np.mean(data) print(\\"Average of the list of numbers is:\\", avg)"},{"prompt":"Compose a query in MySQL to filter records from a table where the name contains \\"John\\".","completion":"SELECT * FROM table WHERE name LIKE '%John%';"},{"prompt":"Write a JavaScript function that multiplies two numbers together.","completion":"function multiply(x, y) { return x * y; }"},{"prompt":"Create a function in Java that will take an integer as a parameter and return its square root.","completion":"public static double getSquareRoot(int number){ return Math.sqrt(number); }"},{"prompt":"Calculate the precision of the following machine learning model. Actual = [1, 0, 0, 1, 1] Predicted = [1, 0, 1, 0, 0]","completion":"precision = (2 / 3) # 2 true positives and 3 predicted positives."},{"prompt":"Write a PHP script to check if a given string contains only letters.","completion":"<?php function checkString(str) { if (ctype_alpha(str)) return true; return false; } // Driver Code str1 = \\"HelloWorld\\"; str2 = \\"test123\\"; if (checkString(str1)) echo \\"String str1 consists of only alphabets.\\"; else echo \\"String str1 does not consists of only alphabets.\\"; if (checkString(str2)) echo \\"String str2 consists of only alphabets.\\"; else echo \\"String str2 does not consists of only alphabets.\\"; ?>"},{"prompt":"Find the index of the maximum value in an array of numbers in Python. [1, 6, 2, 8, 4, 9]","completion":"list = [1, 6, 2, 8, 4, 9] max_index = list.index(max(list)) print(max_index) # Output: 4"},{"prompt":"Create a React component that displays a form with two text input fields.","completion":"import React, {Component} from 'react'; class Form extends Component{ constructor(){ super(); this.state={ firstName: '', lastName: '' }; } handleChange = (e) => { this.setState({ [e.target.name]: e.target.value }); } render(){ return( <form> <label>First Name</label> <input type=\\"text\\" name=\\"firstName\\" onChange={this.handleChange} value={this.state.firstName} /> <label>Last Name</label> <input type=\\"text\\" name=\\"lastName\\" onChange={this.handleChange} value={this.state.lastName} /> </form> ); } } export default Form;"},{"prompt":"Classify the following text as either positive, negative, or neutral. \\"This project was extremely difficult to complete.","completion":"negative"},{"prompt":"mplement the bubble sort algorithm for an array of integers. arr = [34, 16, 12, 9, 5]","completion":"def bubbleSort(arr): n = len(arr) # Traverse through all array elements for i in range(n): # Last i elements are already in place for j in range(0, n-i-1): # traverse the array from 0 to n-i-1 # Swap if the element found is greater # than the next element if arr[j] > arr[j+1] : arr[j], arr[j+1] = arr[j+1], arr[j] # Driver code to test above arr = [34, 16, 12, 9, 5] bubbleSort(arr) print (\\"Sorted array is:\\") for i in range(len(arr)): print (\\"%d\\" %arr[i]),"},{"prompt":"Compose a python function to find the maximum element in a 2-dimensional array. array = [[2, 4, 7, 1], [8, 12, 9, 5]]","completion":"def max_element(arr): max_value = arr[0][0] for i in range(len(arr)): for j in range(len(arr[i])): if arr[i][j] > max_value: max_value = arr[i][j] return max_value # Driver code arr = [[2, 4, 7, 1], [8, 12, 9, 5]] max_val = max_element(arr) print(\\"The maximum element in 2-dimensional array is\\",max_val)"},{"prompt":"Construct an HTML page using valid HTML markup.","completion":"<!DOCTYPE html> <html> <head> <title>My First HTML Page</title> </head> <body> <h1>Hello World!</h1> <p>This is my first HTML page.</p> </body> </html>"},{"prompt":"mplement a function to search an element in a BST. root: 5 / 3 8 / / 2 4 6 9 key: 3","completion":"def search_BST(root, key): # Base Condition if root is None or root.val == key: return root # If key is greater than root's key if root.val < key: return search_BST(root.right, key) # If key is smaller than root's key return search_BST(root.left, key) # Driver Code root = Node(5) root.left = Node(3) root.right = Node(8) root.left.left = Node(2) root.left.right = Node(4) root.right.left = Node(6) root.right.right = Node(9) key = 3 node = search_BST(root, key) if node: print(\\"Found\\") else: print(\\"Not Found\\")"},{"prompt":"Code a function that takes a list of strings and checks if it is ordered lexicographically. list_of_strings = ['algorithm', 'coding', 'novel']","completion":"def ordered_list(list_of_strings): for i in range(len(list_of_strings) - 1): if list_of_strings[i] >= list_of_strings[i+1]: return False return True # Driver Code list_of_strings = ['algorithm', 'coding', 'novel'] print(ordered_list(list_of_strings))"},{"prompt":"Find the GCD of two integers. a = 8, b = 12","completion":"def gcd(a, b): # Base case if a == 0: return b return gcd(b % a, a) # Driver code a = 8 b = 12 print(\\"GCD of\\",a,\\"and\\",b,\\"is\\", gcd(a, b))"},{"prompt":"mplement the bubble sort algorithm for a linked list. link_list = [10->9->8->7->6]","completion":"class Node: # initialization of node def __init__(self, data): self.data = data self.next = None # bubble sort of linked_list def bubble_sort(head): # Store last node end = None while end != head.next: p = head while p.next != end: q = p.next if p.data > q.data: p.data, q.data = q.data, p.data p = p.next end = p # driver code head = Node(10) head.next = Node(9) head.next.next = Node(8) head.next.next.next = Node(7) head.next.next.next.next = Node(6) bubble_sort(head) <insert code to print the data of the linked list>"},{"prompt":"Reverse a string in place word = 'hello'","completion":"def reverse_string_in_place(word): # Get the input string length n = len(word) # Swap character starting # from two corners for i in range(n // 2): word[i], word[n - i - 1] = word[n - i - 1], word[i] word = list('hello') reverse_string_in_place(word) print(''.join(word))"},{"prompt":"Compose an SQL query that returns all the rows from a given table table: inventory","completion":"SELECT * FROM inventory;"},{"prompt":"Write a function that takes two parameters and will print out the maximum of the two.","completion":"def max_of_two(x, y): if x > y: return x else: return y"},{"prompt":"mplement a for loop that iterates for the given array and prints out the corresponding element on each iteration. array: ['apple', 'banana', 'cherry']","completion":"for e in array: print(e)"},{"prompt":"the given code, add an if statement to check if the user's score is greater than a certain limit. score = 67 limit = 70","completion":"if score > limit: print(\\"The user scored higher than the limit.\\")"},{"prompt":"Update the given code to add an extra element to the array. array = [1,2,3]","completion":"array.append(4)"},{"prompt":"Add a function to the code that will calculate the average of the input array. array = [1,2,3,4]","completion":"def calculate_average(array): total = 0 for num in array: total += num avg = total/len(array) return avg"},{"prompt":"write a function that takes two integers and returns their product.","completion":"def multiply(x, y): return x * y"},{"prompt":"Update the given code to print out whether the input list is empty or not. inp_list = [1,2,3]","completion":"if not inp_list: print(\\"The list is empty.\\") else: print(\\"The list is not empty.\\")"},{"prompt":"Update the code to remove an element from the given list. data_list = [\\"apple\\", \\"banana\\", \\"cherry\\"]","completion":"data_list.remove(\\"cherry\\")"},{"prompt":"the given code, include logic to calculate the area of a triangle if the shape is a triangle. shape = 'triangle base = 5 height = 3","completion":"if shape == 'triangle': area = 0.5 * base * height print(\\"The area of the triangle is: \\" + str(area))"},{"prompt":"Update the given code to add a statement to check if the input number is a prime or not. num = 5","completion":"flag = 0 for i in range(2, num): if num % i == 0: flag = 1 if flag == 0: print(\\"The number is a prime.\\")"},{"prompt":"Suggest a completion for the following code to check if the given string is a palindrome. string = 'malayalam'","completion":"rev_str = string[::-1] if rev_str == string: print(\\"The string is a palindrome.\\")"},{"prompt":"the given code, replace the input function with a try-except block. num1 = int(input(\\"Enter a number: \\"))","completion":"try: num1 = int(input(\\"Enter a number: \\")) except: print(\\"Input is not a number!\\")"},{"prompt":"the given code, add an environment variable that should be used to set the desired version of Python.","completion":"import os os.environ[\\"PYTHON_VERSION\\"] = \\"3.7\\""},{"prompt":"Suggest a completion for the following code to generate a random string of the given length from a given set. length = 10 charset = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'","completion":"import random def generate_random_string(length, charset): output_str = '' for i in range(length): output_str += random.choice(charset) return output_str"},{"prompt":"Transform the following Python function to a pseudo code. def find_max(x): max_val = -1 for i in x: if i > max_val: max_val = i return max_val","completion":"# Find the maximum value in x max_val = -1 FOR each i in x IF i > max_val max_val = i END FOR RETURN max_val"},{"prompt":"Develop a Python program to calculate the greatest common factor of two positive integers.","completion":"def gcd(x, y): # base case if x == 0: return y # a is greater if x > y: return gcd(x % y, y) # b is greater return gcd(x, y % x) # Driver code # x and y are the two positive integers x = 16 y = 24 gcd_val = gcd(x, y) print(\\"The greatest common factor of\\",x,\\"and\\",y,\\"is\\",gcd_val)"},{"prompt":"Create a C++ program to output the Fibonacci Sequence up to a specified number of terms.","completion":"#include <iostream> using namespace std; int fibonacci_sequence(int num_terms) { int first = 0, second = 1, next = 0; if (num_terms == 0) { return 0; } else if (num_terms == 1) { return 1; } else { for (int i = 2; i <= num_terms; i++) { next = first + second; first = second; second = next; } } return next; } int main() { int num_terms; cout << \\"Enter the number of terms: \\"; cin >> num_terms; cout << \\"The requested Fibonacci sequence upto term \\" << num_terms << \\" is: \\"; for (int i = 1; i <= num_terms; i++) cout << fibonacci_sequence(i) << \\" \\"; return 0; }"},{"prompt":"Write an algorithm to detect the longest common subsequence of two given strings. str1 = \\"ABCGDH\\", str2 = \\"ADGH","completion":"// Input two strings str1 = \\"ABCGDH\\" str2 = \\"ADGH\\" // Create a two dimensional matrix arr to store the lcs int arr[len(str1)+1][len(str2)+1] int maxLength = 0 // Initialize all elements of arr to zero for i in range(len(str1)+1): for j in range(len(str2)+1): arr[i][j] = 0 // Calculate the value of arr[i][j] for i in range(1,len(str1)+1): for j in range(1,len(str2)+1): if str1[i-1] == str2[j-1]: arr[i][j] = arr[i-1][j-1] + 1 maxLength = max(arr[i][j], maxLength) else: arr[i][j] = max(arr[i][j-1], arr[i-1][j]) return maxLength"},{"prompt":"Rewrite the following C code as assembly language int a=5,b=6, c; c = a+b;","completion":"; Initialize variables mov ax, 5 ; a = 5 mov bx, 6 ; b = 6 ; Calculate c add ax, bx ; add a and b and store in ax which is c mov c, ax ; assign result to c"},{"prompt":"Develop a C# program that prints out the number of occurrences of a string in a given text string text = \\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\\" string pattern = \\"et\\";","completion":"// C# program to count occurrences of a string in a given text using System; namespace CountOccurrencesInString { class Program { static void Main(string[] args) { string text = \\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\\"; string pattern = \\"et\\"; int count = 0; //Find the length of pattern int p_length = pattern.Length; //Iterate through the length of string for (int i = 0; i < text.Length - p_length+1; i++) { //Check if the substring matches the pattern if (text.Substring(i, p_length) == pattern) count++; } Console.WriteLine(\\"The occurrences of pattern \\"\\"+pattern+\\"\\" in the text is: \\"+count); } } }"},{"prompt":"Write a Bash shell script to print the even numbers between two given numbers","completion":"#!/bin/bash # Bash shell script to print the even numbers between two given numbers # Take two numbers from user echo -n \\"Enter first number: \\" read x echo -n \\"Enter second number: \\" read y // Check if x is less than y if [ x -lt y ] then echo \\"Even numbers between x and y are :\\" // Iterate to find even numbers for (( i = x; i <= y; i++ )) do rem=(( i % 2 )) # Check for even numbers if [ rem -eq 0 ] then echo \\"i\\" fi done else echo \\"Input numbers not in increasing order\\" fi"},{"prompt":"Create a VBA macro to find the maximum value of a given range of cells in a Microsoft Excel worksheet. Range of cells: A1:A10","completion":"Sub FindMax() Dim MaxVal As Double MaxVal = Cells(1, 1).Value For i = 2 To 10 If Cells(i, 1).Value > MaxVal Then MaxVal = Cells(i, 1).Value End If Next i MsgBox MaxVal End Sub"},{"prompt":"Create a JavaScript function that takes no more than two parameters and returns the larger of the two parameters.","completion":"function maxNumber(a, b) { return (a > b) ? a : b; }"},{"prompt":"Create an HTML form that allows the user to enter their name and email address.","completion":"<form> <label>Name:</label> <input type=\\"text\\" name=\\"name\\"> <label>Email:</label> <input type=\\"text\\" name=\\"email\\"> <input type=\\"submit\\"> </form>"},{"prompt":"Write an SQL query to find the names andphone numbers of all customers in the database.","completion":"SELECT name, phone_number FROM Customer;"},{"prompt":"Create a CSS selector to select all the paragraph tags on a website.","completion":"p { /* styles here */ }"},{"prompt":"Construct an SQL query to Create a table with name \\"Order\\" in the database","completion":"CREATE TABLE Order ( order_id INT NOT NULL, customer_name VARCHAR(255) NOT NULL, order_date DATE NOT NULL, order_amount DECIMAL(15, 2) NOT NULL );"},{"prompt":"Calculate the factorial of the integer \\"n\\". n = 5","completion":"def findFactorial(n): fact = 1 while(n> 0): fact = fact * n n = n - 1 return fact print(find_factorial(5))"},{"prompt":"Evaluate the given expression. 5 * 12 + 3 * 6","completion":"90"},{"prompt":"Construct a SQL query to generate a report of customers who placed more than 3 orders in the past 6 months.","completion":"SELECT customer_name FROM orders WHERE order_date > DATE_SUB(NOW(), interval 6 month) GROUP BY customer_name HAVING COUNT(*) > 3;"},{"prompt":"You are given a set of numbers and a number \\"n\\". Find the sum of all numbers in the given set greater than \\"n\\". [4, 7, 10, 11], n = 6","completion":"total = 18 def sum_greater_than_n(arr, n): total = 0 for num in arr: if num > n: total += num return total print(sum_greater_than_n([4, 7, 10, 11], 6))"},{"prompt":"mplement a backtracking algorithm to solve a sudoku puzzle. [ [7, 8, 0, 4, 0, 0, 1, 2, 0], [6, 0, 0, 0, 7, 5, 0, 0, 9], [0, 0, 0, 6, 0, 1, 0, 7, 8], [0, 0, 7, 0, 4, 0, 2, 6, 0], [0, 0, 1, 0, 5, 0, 9, 3, 0], [9, 0, 4, 0, 6, 0, 0, 0, 5], [0, 7, 0, 3, 0, 0, 0, 1, 2], [1, 2, 0, 0, 0, 7, 4, 0, 0], [0, 4, 9, 2, 0, 6, 0, 0, 7] ]","completion":"def solve(bo): find = find_empty(bo) if not find: return True else: row, col = find for i in range(1,10): if valid(bo, i, (row, col)): bo[row][col] = i if solve(bo): return True bo[row][col] = 0 return False def valid(bo, num, pos): # Check row for i in range(len(bo[0])): if bo[pos[0]][i] == num and pos[1] != i: return False # Check column for i in range(len(bo)): if bo[i][pos[1]] == num and pos[0] != i: return False # Check box box_x = pos[1] // 3 box_y = pos[0] // 3 for i in range(box_y*3, box_y*3 + 3): for j in range(box_x * 3, box_x*3 + 3): if bo[i][j] == num and (i,j) != pos: return False return True def find_empty(bo): for i in range(len(bo)): for j in range(len(bo[0])): if bo[i][j] == 0: return (i, j) # row, col print(solve([ [7, 8, 0, 4, 0, 0, 1, 2, 0], [6, 0, 0, 0, 7, 5, 0, 0, 9], [0, 0, 0, 6, 0, 1, 0, 7, 8], [0, 0, 7, 0, 4, 0, 2, 6, 0], [0, 0, 1, 0, 5, 0, 9, 3, 0], [9, 0, 4, 0, 6, 0, 0, 0, 5], [0, 7, 0, 3, 0, 0, 0, 1, 2], [1, 2, 0, 0, 0, 7, 4, 0, 0], [0, 4, 9, 2, 0, 6, 0, 0, 7] ]))"},{"prompt":"w many trailing zeros are in the factorial of the number \\"n\\"? n = 20","completion":"The number of trailing zeros in 20! is 4. def trailing_zeros(n): count = 0 i = 5 while (n/i >= 1): count += int(n/i) i *= 5 return count print(\\"The number of trailing zeros in 20! is\\", trailing_zeros(20))"},{"prompt":"Determine the size of an array in bytes.","completion":"The size of an array in bytes is equal to the number of elements in the array multiplied by the size of each element in bytes. For example, an array of 10 integers requires 10 * 4 = 40 bytes of memory."},{"prompt":"What are the main differences between a stack and a queue?","completion":"The main differences between a stack and a queue are their insertion and deletion methods. Stacks use a Last In First Out (LIFO) approach for insertion and deletion, while queues use a First In First Out (FIFO) approach. Stacks are used when order is important, while queues are used when order is not important."},{"prompt":"Explain the process of quicksort.","completion":"Quicksort is a sorting algorithm that uses a divide-and-conquer approach to sort a given array. The process starts by selecting a pivot which is used to partition the array into two subarrays: one containing elements smaller than the pivot, and the other containing elements larger than the pivot. The same process is then repeated for the subarrays recursively until the array is sorted."},{"prompt":"Write a python program to filter a list of numbers to only include even numbers [1, 2, 3, 4]","completion":"def filter_even(nums): even_nums = [] for num in nums: if num % 2 == 0: even_nums.append(num) return even_nums"},{"prompt":"Construct a JSON string from the given data. Name: John City: New York","completion":"'{\\"name\\":\\"John\\",\\"city\\":\\"New York\\"}'"},{"prompt":"Convert the given SQL query into an equivalent MongoDB query. SELECT * FROM users WHERE age BETWEEN 18 AND 24","completion":"db.users.find( { age: { gte: 18, lte: 24 } } )"},{"prompt":"Write Java code to check if two strings are anagrams, e.g. god, dog are anagrams. String str1 = \\"abc\\"; String str2 = \\"cba\\";","completion":"public static boolean isAnagram(String str1, String str2) { char arr1[] = str1.toCharArray(); char arr2[] = str2.toCharArray(); Arrays.sort(arr1); Arrays.sort(arr2); return Arrays.equals(arr1, arr2); }"},{"prompt":"Generate the html markup for a table that contains the given data. Roll No | Name | City 101 | John | London 102 | Mark | Paris 103 | Luis | Singapore","completion":"<table> <tr> <th>Roll No</th> <th>Name</th> <th>City</th> </tr> <tr> <td>101</td> <td>John</td> <td>London</td> </tr> <tr> <td>102</td> <td>Mark</td> <td>Paris</td> </tr> <tr> <td>103</td> <td>Luis</td> <td>Singapore</td> </tr> </table>"},{"prompt":"Rewrite the given array of numbers into a binary tree. [3, 1, 4, 7, 2, 5]","completion":"3 / 1 4 / 2 5 7"},{"prompt":"Given a JSON string, write a program to convert it into an equivalent XML string. {\\"name\\":\\"John\\",\\"city\\":\\"New York\\"}","completion":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?> <root> <name>John</name> <city>New York</city> </root>"},{"prompt":"You are given a code snippet of a web page. Fill in the missing tags to make it valid HTML. <html> <head> <title>My Homepage</title> </head> <body> <h1>Welcome to My Homepage</h1> <p>Hello, I'm John and this is my homepage. This is where I share my interests with the world.</p> </body> </html>","completion":"<html> <head> <title>My Homepage</title> </head> <body> <h1>Welcome to My Homepage</h1> <p>Hello, I'm John and this is my homepage. This is where I share my interests with the world.</p> </body> </html>"},{"prompt":"Write a JavaScript program to implement the bubble sort algorithm for sorting an array of numbers. [4, 2, 7, 1, 6, 5]","completion":"function bubbleSort(arr) { let temp; let swapped; for (let i = 0; i < arr.length; i++) { swapped = false; for (let j = 0; j < arr.length - 1; j++) { if (arr[j] > arr[j + 1]) { temp = arr[j]; arr[j] = arr[j + 1]; arr[j + 1] = temp; swapped = true; } } if (!swapped) break; } return arr; }"},{"prompt":"Create a function that takes an array and elements to append at the end. list = [1,2] element = 3","completion":"def appendList(list, element): list.append(element) return list result = appendList(list, element) print(result)"},{"prompt":"Given two numbers a and b, write a function to swap their values. a = 5, b = 8","completion":"def swap(a, b): a, b = b, a return a, b a, b = swap(5, 8) print(\\"a =\\", a, \\"and b =\\", b)"},{"prompt":"Provide a demo snippet to illustrate different ways of looping through a Python dictionary.","completion":"#Looping through a dictionary using a for loop dict = {'a': 1, 'b': 2, 'c': 3, 'd': 4} for key in dict: print(\\"% s : % s\\" %(key, dict[key])) #Looping through a dictionary using items() method for key, value in dict.items(): print(\\"% s : % s\\" %(key, value)) #Looping through dictionary keys for key in dict.keys(): print(\\"% s : % s\\" %(key, dict[key])) #Looping through dictionary values for value in dict.values(): print(\\"% s\\" %value)"},{"prompt":"Create a program to accept a string and display its length.","completion":"def getLength(string): length = len(string) return length result = getLength(\\"GPT\\") print(result)"},{"prompt":"You are given a string containing upper and lowercase letters, write a program to check it is Palindrome or not. racecar","completion":"def check_palindrome(string): return string == string[::-1] result = check_palindrome('racecar') print(result)"},{"prompt":"Construct a for loop that prints out each number in the list my_list = [0, 1, 2, 3, 4, 5]","completion":"for num in my_list: print(num)"},{"prompt":"Modify the code so that it will print out \\"Hello World! print(\\"Hello\\")","completion":"print(\\"Hello World!\\")"},{"prompt":"Explain what this code does def biggest_number(*args): return max(args)","completion":"This code is a function that takes in any number of arguments and returns the maximum of them. It will compare the arguments and return the biggest one."},{"prompt":"Make the following code more efficient def remove_dups(mylist): newlist = [] for item in mylist: if not item in newlist: newlist.append(item) return newl","completion":"def remove_dups(mylist): seen = set() newlist = [] for item in mylist: if item not in seen: seen.add(item) newlist.append(item) return newlist"},{"prompt":"Create a function that will accept a list and return the sum of all elements in the list","completion":"def sum_list(mylist): s = 0 for x in mylist: s += x return s"},{"prompt":"Modify the following code to output Odd numbers from 1 to 10 for num in range(1, 10): print( num )","completion":"for num in range(1, 10): if num % 2 == 1: print( num )"},{"prompt":"Given the following code, what should the output be when the function is called? def add(x, y): z = x + y return z result = add(2, 3)","completion":"The output should be 5 as the result of calling add(2,3) is z = 5."},{"prompt":"Using the given list, create a code that will generate a unique list of numbers x = [4, 10, 16, 22, 28, 34]","completion":"new_list = [] for num in x: if num not in new_list: new_list.append(num) print(new_list)"},{"prompt":"What will the following code output? i = 1 while i < 4: print(i) i = i + 1","completion":"The code will output 1, 2, and 3."},{"prompt":"Code a Python algorithm to reverse a given string. \\"Hello, World!","completion":"def reverse(s): return s[::-1] x = \\"Hello, World!\\" print(reverse(x))"},{"prompt":"Edit the Python code block below to print the text in reverse. word = \\"Hello\\" print (word)","completion":"word = \\"Hello\\" print (word[::-1])"},{"prompt":"Develop a full-stack web application to display a list of items.","completion":"The full-stack web application will include a client, server and database component. The client component will be responsible for rendering the list of items in a visually appealing format. The server component will be responsible for establishing an API endpoint for GET, POST, PUT and DELETE operations for interacting with the list of items. The database component will store the list of items and the associated data for each item."},{"prompt":"Create an HTML page to display a table with 2 columns: Description and Price.","completion":"<html> <head> <title>Price Table</title> </head> <body> <table> <tr> <th>Description</th> <th>Price</th> </tr> <tr> <td>Item 1</td> <td>2.99</td> </tr> <tr> <td>Item 2</td> <td>5.99</td> </tr> <tr> <td>Item 3</td> <td>9.99</td> </tr> </table> </body> </html>"},{"prompt":"Design a Java class to store the details of a customer.","completion":"public class Customer { private String name; private String address; private String email; private String phone; public Customer() { } public String getName() { return name; } public void setName(String name) { this.name = name; } public String getAddress() { return address; } public void setAddress(String address) { this.address = address; } public String getEmail() { return email; } public void setEmail(String email) { this.email = email; } public String getPhone() { return phone; } public void setPhone(String phone) { this.phone = phone; } }"},{"prompt":"Develop a Python3 program to extract the words of length 3 from a given sentence. \\"The quick brown fox jumped over the lazy dog","completion":"def extract_words(s): words = s.split() length_3_words = [] for word in words: if len(word) == 3: length_3_words.append(word) return length_3_words s = \\"The quick brown fox jumped over the lazy dog\\" print(extract_words(s))"},{"prompt":"Write a Bash script to to open an interactive calculator.","completion":"#!/bin/bash echo \\"Welcome to the interactive calculator\\" bc"},{"prompt":"Create an Angular app with a login page and registration page.","completion":"The Angular app will include a login and a registration page. The login page will have an input field for the user to enter their username and password. The registration page will have input fields for the user to enter their username, password, and email address. The app will also contain a service to store the user registration data and a guard to protect the registration page from unauthorized access."},{"prompt":"Create optional command line parameters in a Python script.","completion":"import argparse parser = argparse.ArgumentParser() parser.add_argument('-i', '--inputfile', type=str,help='input file') parser.add_argument('-o', '--outputfile', type=str,help='output file') parser.add_argument('-d', '--debug', action='store_true',help='enable debugging') args = parser.parse_args()"},{"prompt":"Develop a jQuery program to toggle the visibility of a div.","completion":"(document).ready(function () { (\\"#toggleBtn\\").click(function () { (\\"#toggleDiv\\").toggle(); }); });"},{"prompt":"Update the following line of HTML code to use semantic tags for optimization. <div>Learn HTML Tutorial here</div>","completion":"<div><h1>Learn HTML Tutorial here</h1></div>"},{"prompt":"Create a class called “Car” in Java with the following attributes and methods.","completion":"public class Car { private String make; private String model; private int year; public Car(String make, String model, int year) { this.make = make; this.model = model; this.year = year; } public String getMake() { return make; } public void setMake(String make) { this.make = make; } public String getModel() { return model; } public void setModel(String model) { this.model = model; } public int getYear() { return year; } public void setYear(int year) { this.year = year; } public String toString() { return String.format(\\"Make: %s, Model: %s, Year: %d\\", make, model, year); } }"},{"prompt":"Create a React component that renders a list of numbers with the number of units specified by the user.","completion":"import React from 'react'; class NumberList extends React.Component { constructor(props) { super(props); this.state = { numUnits: props.numUnits }; } render() { const numUnits = this.state.numUnits; const numbers = Array.from(Array(numUnits).keys()); const listItems = numbers.map(number => <li key={number}>{number}</li>); return ( <div> <ul> {listItems} </ul> </div> ); } } export default NumberList;"},{"prompt":"Create a function in Python that takes two parameters and calculates the Employee Bonus depending on the hours worked. hours - 14 hourly_rate - 17","completion":"def employee_bonus(hours, hourly_rate): if hours <= 0: return 0 # Calculate the total amount total_amount = hours * hourly_rate # Calculate the bonus with 10% bonus = total_amount * 0.1 return bonus"},{"prompt":"Modify the following Javascript code to check if a given number is prime or not.","completion":"function isPrime(n) { if (n <= 1) { return false; } // Check from 2 to n-1 for (let i = 2; i < n; i++) { if (n % i == 0) { return false; } } return true; }"},{"prompt":"Add a new CSS rule to the given code to make all text on the page bold.","completion":"h1 { font-weight: bold; } p { font-weight: bold; } a { font-weight: bold; }"},{"prompt":"Update the following HTML code to add a placeholder attribute to the input. <input type=\\"text\\" id=\\"name\\">","completion":"<input type=\\"text\\" id=\\"name\\" placeholder=\\"Enter your name\\">"},{"prompt":"Normalize the following data set. [1000, 75, 16, -200, 24]","completion":"[1.00, 0.75, 0.16, -1.00, 0.24]"},{"prompt":"Create an exponential moving average function in R.","completion":"library(zoo) exponential_moving_average <- function(x, n, beta) { EMA <- 0 for (i in 1:length(x)) { if (i == 1) { EMA[i] <- x[i] } else { EMA[i] <- ((beta * x[i]) + ((1 - beta) * EMA[i - 1])) } } ma_x <- as.numeric(rollapply(EMA, n, mean, fill = NA, align = \\"right\\")) return(ma_x) }"},{"prompt":"Generate a correct JavaScript code to subtract two numbers. 391, 198","completion":"let result = 391 - 198; console.log(result);"},{"prompt":"Write a Python program to check if a string contains any special characters. CS 1501","completion":"def has_special_characters(s): special_characters = '!@#%^&*()_+-=[]{};:,.<>/?' for char in special_characters: if char in s: return True return False"},{"prompt":"Compare the two strings and output the difference between the two outputs. String A: Hello there String B: Hi everyone","completion":"The difference is that String A contains the phrase 'Hello there' whereas string B contains the phrase 'Hi everyone'."},{"prompt":"Make a function that accepts 2 numbers and return the largest one. 2, 3","completion":"def largest(x, y): if (x > y): return x else: return y"},{"prompt":"Generate a correct C++ code to calculate the average of three numbers. 3, 4, 7","completion":"double average(double x, double y, double z) { return (x + y + z) / 3; }"},{"prompt":"Create a for loop which prints a Fibonacci series up to 10 numbers.","completion":"int first = 0; int second = 1; int next; for (int i = 0; i < 10; i++) { if(i <= 1){ next = i; } else { next = first + second; first = second; second = next; } cout << next << \\" \\"; }"},{"prompt":"You are given an array of numbers. Create a function to check if the array contains duplicate values. 11, 15, 40, 14, 11","completion":"def contains_duplicates(arr): unique_elements = set(arr) if len(arr) != len(unique_elements): return True else: return False"},{"prompt":"You are given an array of strings. Write a Python script to sort the array in alphabetical order. \\"ball\\", \\"cat\\", \\"dog\\", \\"apple","completion":"arr = [\\"ball\\", \\"cat\\", \\"dog\\", \\"apple\\"] arr.sort() print(arr)"},{"prompt":"Create a query that returns the top 5 cities with the highest population.","completion":"SELECT City, Population FROM Cities ORDER BY Population DESC LIMIT 5;"},{"prompt":"Create a function to calculate the total cost of a shopping cart, given the price and the quantity of each item. Item Price Quantity Apple 2 2 Orange 3 5 Banana 1 1","completion":"def total_cost(items): total = 0 for item in items: total += item['price'] * item['quantity'] return total items = [ { 'item': 'Apple', 'price': 2, 'quantity': 2 }, { 'item': 'Orange', 'price': 3, 'quantity': 5 }, { 'item': 'Banana', 'price': 1, 'quantity': 1 } ] total = total_cost(items) print(total)"},{"prompt":"alize a hash table with 7 buckets in C programming language.","completion":"/* Create 7 empty buckets */ int hashTable[7] = { 0 };"},{"prompt":"Generate the reCAPTCHA API key.","completion":"Go to the Google reCAPTCHA admin page, sign up for an API key, and register the domain for your website. Once registered, you will receive a code for your API key."},{"prompt":"Create an algorithm to implement a binary search.","completion":"def binary_search(arr, x): # find the leftmost and rightmost point l = 0 r = len(arr) - 1 while l <= r: mid = l + (r - l)//2 # if element is present at the middle if arr[mid] == x: return mid # if element is smaller than mid, # then it can only be present # in left subarray elif arr[mid] < x: l = mid + 1 # else the element can only # be present in right subarray else: r = mid - 1 # if we reach here, # then the element was not present return -1"},{"prompt":"Edit the given HTML code to add a footnote section. <code> <!DOCTYPE html> <html> <head> <title>Example</title> </head> <body> <h1>This is a Heading</h1> <p>This is a paragraph.</p> </body> </html>","completion":"<!DOCTYPE html> <html> <head> <title>Example</title> </head> <body> <h1>This is a Heading</h1> <p>This is a paragraph.</p> <footer> <p> Copyright (c) Example.com. All Rights Reserved.</p> </footer> </body> </html>"},{"prompt":"Train a recursive neural network to classify whether a sentence is positive or negative.","completion":"import tensorflow as tf # Setup the RNN model = tf.keras.Sequential([ tf.keras.layers.Embedding(input_dim=vocab_size, output_dim=embedding_dim), tf.keras.layers.GRU(32, return_sequences=True), tf.keras.layers.Dense(2, activation='softmax') ]) # Compile and fit model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy']) model.fit(x_train, y_train, epochs=5)"},{"prompt":"Categorize the given text as positive, neutral, or negative sentiment. The movie was okay, but it could have been better.","completion":"Neutral"},{"prompt":"Change the following array of objects to a dictionary. const arr = [ {id: 1, name: \\"John\\"}, {id: 2, name: \\"Jane\\"}, {id: 3, name: \\"Jake\\"} ];","completion":"const obj = { 1: {name: \\"John\\"}, 2: {name: \\"Jane\\"}, 3: {name: \\"Jake\\"} };"},{"prompt":"Program a function in Go that takes a string and returns its corresponding ASCII code. \\"Hello, World!","completion":"func stringASCIICode(s string) int { code := 0 for _, c := range s { code += int(c) } return code }"},{"prompt":"Apply a filter to the following array of numbers so that only the even numbers remain. const arr = [1, 2, 3, 4, 5, 6, 7, 8,9];","completion":"const filteredArr = arr.filter((num) => num % 2 === 0);"},{"prompt":"Design a SQL table to store the information of teachers.","completion":"CREATE TABLE teachers ( id INTEGER PRIMARY KEY, name VARCHAR(50) NOT NULL, subject VARCHAR(50) NOT NULL, age INTEGER NOT NULL, years_of_experience INTEGER, highest_degree VARCHAR(100) );"},{"prompt":"Write a SQL query to find all teachers with more than 10 years of experience.","completion":"SELECT * FROM teachers WHERE years_of_experience > 10;"},{"prompt":"Create a function in Julia to calculate the Median of an array. arr = [1, 2, 2, 3, 6, 8]","completion":"function median(arr) sorted_arr = sort(arr) n = length(sorted_arr) if n % 2 == 0 return (sorted_arr[n ÷ 2] + sorted_arr[(n ÷ 2) + 1]) / 2 else return sorted_arr[(n + 1) ÷ 2] end end"},{"prompt":"Using Java, create a program to find the highest value in this array. arr = [1, 2, 4, 7, 10]","completion":"public class HighestValue { public static int findHighest(int[] arr) { int highest = arr[0]; for (int i = 1; i < arr.length; i++) { highest = Math.max(highest, arr[i]); } return highest; } public static void main(String[] args) { int[] arr = {1, 2, 4, 7, 10}; System.out.println(findHighest(arr)); } }"},{"prompt":"Design a Python class to represent geometric shapes.","completion":"class GeometricShape: def __init__(self, sides): self.sides = sides def area(self): if self.sides == 3: return ((self.sides[0] + self.sides[1] + self.sides[2]) / 2) else: return 0"},{"prompt":"Create a script in HTML to output a horizontal line.","completion":"<html> <head> <title>Horizontal Line</title> </head> <body> <hr> </body> </html>"},{"prompt":"Program a function in JavaScript to remove adjacent duplicates from the given array. arr = [2, 3, 3, 3, 6, 9, 9]","completion":"function removeDuplicates(arr) { let output = []; arr.forEach(function(element, index) { if (arr[index] != arr[index + 1]) { output.push(element); } }); return output; } console.log(removeDuplicates([2, 3, 3, 3, 6, 9, 9])); // Output: [2, 3, 6, 9]"},{"prompt":"Given a JSON object, output an object with keys sorted alphabetically. {\\"belief\\": \\"work hard\\", \\"hope\\":\\"pray hard\\"}","completion":"{\\"belief\\": \\"work hard\\", \\"hope\\": \\"pray hard\\"} {\\"belief\\": \\"work hard\\", \\"hope\\": \\"pray hard\\"} {\\"belief\\": \\"work hard\\", \\"hope\\": \\"pray hard\\"} {\\"belief\\": \\"work hard\\", \\"hope\\": \\"pray hard\\"} {\\"belief\\": \\"work hard\\", \\"hope\\": \\"pray hard\\"} {\\"belief\\": \\"work hard\\", \\"hope\\": \\"pray hard\\"} {\\"belief\\": \\"work hard\\", \\"hope\\": \\"pray hard\\"} {\\"hope\\": \\"pray hard\\", \\"belief\\": \\"work hard\\"}"},{"prompt":"Design a function to validate a phone number. Phone Number: 212-555-0000","completion":"def check_phone_number(phone_number): #Remove any non-numeric characters phone_number = phone_number.replace(\\"-\\", \\"\\") phone_number = phone_number.replace(\\" \\", \\"\\") #Check if the phone number is 10 digits long if (len(phone_number) != 10): return False #Check each digit is a number for digit in phone_number: if not digit.isdigit(): return False #Check the area code is valid area_code = phone_number[0:3] valid_area_codes = [\\"201\\", \\"212\\", \\"203\\", \\"202\\", \\"205\\"] if area_code not in valid_area_codes: return False #All tests passed return True print(check_phone_number('212-555-0000')) Output: True"},{"prompt":"Create a program that extracts the first and last names from a string. Full Name: \\"Barack Obam","completion":"def extract_names(full_name): #Split the name into separate words name_parts = full_name.split() #Check if the name has multiple words if len(name_parts) == 1: return None #Extract the first and last names first_name = name_parts[0] last_name = name_parts[-1] #Return the first and last names return first_name, last_name print(extract_names(\\"Barack Obama\\")) Output: ('Barack', 'Obama')"},{"prompt":"Create a function which accepts a string and prints out each word with the count of its characters. String: \\"Hello World","completion":"def print_word_lengths(input_string): #Split the string into individual words words = input_string.split() #Iterate over each word for word in words: #Print the word and the length of the word print('{}: {}'.format(word, len(word))) print_word_lengths('Hello World') Output: Hello: 5 World: 5"},{"prompt":"Write a Python program to read two numbers and print their multiplication? Number1: 5 Number2: 10","completion":"#Take the two numbers from the user number1 = int(input('Number1: ')) number2 = int(input('Number2: ')) #Multiply and print the result result = number1 * number2 print('The result is:', result) Output: The result is: 50"},{"prompt":"Convert this given number in base 10 to base 2 34","completion":"100010"},{"prompt":"Create a loop to delete all elements in a linked list","completion":"current = head while current is not None: temp = current.next del current current = temp"},{"prompt":"Define an F# array and initialize it with even numbers from 0 to 10","completion":"let evenNumbers = [|0;2;4;6;8;10|]"},{"prompt":"Create a function to validate a given email address.","completion":"function validateEmail(email) { const regexp = /^(([^<>()[].,;:s@\\"]+(.[^<>()[].,;:s@\\"]+)*)|(\\".+\\"))@(([[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}])|(([a-zA-Z-0-9]+.)+[a-zA-Z]{2,}))/; return regexp.test(email); }"},{"prompt":"Create a JavaScript code snippet to check if a given number is odd. Number = 21","completion":"function isOdd(num) { if (num % 2 !== 0) { return true; } return false; } // Output console.log(isOdd(21)); // Output: true"},{"prompt":"Change the provided dataset into a 3-dimensional tensor, in order to feed it into a Convolutional Neural Network model. Dataset containing 10,000 grayscale images of size 32x32","completion":"import numpy as np # Creating the 3D tensor X = np.zeros((10000, 32, 32)) # Initializing it with the grayscale images X[:,:,:] = dataset"},{"prompt":"Compute the maximum value of a List in Python.","completion":"max_val = max(my_list) # Computes the maximum of the list"},{"prompt":"Create a webhook in Python to listen to webhook requests.","completion":"import time from flask import Flask, request app = Flask(__name__) @app.route('/webhook', methods=['POST']) def webhook(): data = request.get_json() print(data) if __name__ == '__main__': app.run(host='0.0.0.0', port=5000)"},{"prompt":"Write code to find the sum of all items in the list. my_list = [5,3,7,8,2]","completion":"sum_items = sum(my_list) # Calculates the sum of all items in the list"},{"prompt":"Convert the given dictionary into a list of tuples. my_dict = {'a': 1, 'b': 2, 'c': 3}","completion":"my_list = list(my_dict.items()) # Converts the dictionary into a list of tuples"},{"prompt":"Write code to implement the Binary Search algorithm in Python.","completion":"def binary_search(arr, target): low, high = 0, len(arr) - 1 while low <= high: mid = low + (high - low)//2 if arr[mid] == target: return mid elif arr[mid] > target: high = mid - 1 else: low = mid + 1 return -1 # not found"},{"prompt":"Calculate the mean of the given array. my_array = [2, 7, 6, 8, 4, 9]","completion":"mean = sum(my_array)/len(my_array) # Calculates the mean of the array"},{"prompt":"Remove duplicates from the given list and return a new list. my_list = [2, 3, 4, 2, 3, 5]","completion":"unique_list = list(set(my_list)) # removed duplicates and returns a new list"},{"prompt":"Create a barplot using Matplotlib to display the given data. Data: [2, 3, 5, 7, 9]","completion":"import matplotlib.pyplot as plt # Creating the data data = [2, 3, 5, 7, 9] # Creating the figure and axis fig, ax = plt.subplots() # plotting the barplot ax.bar(range(len(data)), data) # show the plot plt.show()"},{"prompt":"Compute the entropy of a given probability distribution. Distribution: [2/9, 3/9, 4/9]","completion":"import math # Calculates the entropy of the given distribution entropy = -sum([p * math.log2(p) for p in distribution])"},{"prompt":"Construct an array of 5 elements from a given string. String: programming","completion":"[\\"p\\", \\"r\\", \\"o\\", \\"g\\", \\"r\\"]"},{"prompt":"Create an if-else statement in C++ to check whether a given number is odd or even.","completion":"if (num %2 == 0) { cout<< \\"The num is even\\" <<endl; } else { cout<< \\"The num is odd\\" <<endl; }"},{"prompt":"Rewrite the following code as a MySQL query. SELECT team, count(*) FROM athletes GROUP BY team","completion":"SELECT team, COUNT(*) FROM athletes GROUP BY team;"},{"prompt":"Construct the following JSON object.","completion":"{ \\"Name\\": \\"John\\", \\"Age\\": 23, \\"Gender\\": \\"Male\\", \\"Height\\": 168 }"},{"prompt":"Create an HTML form to allow the user to register an account with an email address and a password.","completion":"<form action=\\"/register\\" method=\\"POST\\"> <label for=\\"email\\">Email:</label> <input type=\\"email\\" name=\\"email\\" required> <br><br> <label for=\\"password\\">Password:</label> <input type=\\"password\\" name=\\"password\\" required> <br><br> <input type=\\"submit\\" value=\\"Create an Account\\" name=\\"register\\"> </form>"},{"prompt":"Write a regex expression to check for a valid name containing only lowercase letters and spaces.","completion":"/^[a-zs]+/"},{"prompt":"Rewrite the following in Swift language. let names = [\\"Bobby\\", \\"Justin\\", \\"Tyler\\"]","completion":"let names = [\\"Bobby\\", \\"Justin\\", \\"Tyler\\"]"},{"prompt":"Find out the number of occurrences of a vowels a, e, i, o, or u in the given string. String: The quick brown fox","completion":"var count = 0 let vowels = \\"aeiou\\" for c in string { if vowels.contains(c) { count += 1 } } print(count) // Output: 4"},{"prompt":"Construct an array of integers containing the following elements. 3, 6, 9, 12, 15","completion":"[3, 6, 9, 12, 15]"},{"prompt":"Build a React component to toggle the display of some text.","completion":"import React from 'react'; class Toggle extends React.Component { constructor(props) { super(props); this.state = { visible: false }; } handleClick = () => { this.setState({ visible: !this.state.visible }); } render () { return ( <div> <button onClick={this.handleClick}>Toggle</button> {this.state.visible && <p>Some text.</p>} </div> ); } } export default Toggle;"},{"prompt":"You need to create a Python function to remove duplicate elements from a given list. [11,46,70,23, 11, 33, 46]","completion":"def remove_duplicates(numbers): s = set() for n in numbers: if n not in s: s.add(n) return list(s)"},{"prompt":"You are provided with a list of integers and a given number. Generate Python code that detects if the given number is in the list or not. list = [11,22,33,44,77], number = 44","completion":"def check_number(list, number): if number in list: return True else: return False"},{"prompt":"Create a Python function to sort a list of strings based on a given alphabetical order. alphabet = 'bdhajfz', strings = ['bad', 'hfja', 'abd', 'zaj']","completion":"def sort_string_list(strings, alphabet): sorted_list = sorted(strings, key=lambda x:(alphabet.index(x[0]),x)) return sorted_list"},{"prompt":"Create a Python code that takes in two strings and finds all common characters from the strings. string1 = 'abcd', string2 = 'acde'","completion":"def common_chars(string1, string2): common = [] for char in string1: if char in string2: common.append(char) return common"},{"prompt":"Generate a Python code to convert list of strings to list of integers. strings = ['23', '45', '7', '67']","completion":"def convert_to_ints(strings): ints = [] for s in strings: ints.append(int(s)) return ints"},{"prompt":"Create a Python code to find all uncommon characters between two strings. string1 = 'green', string2 = 'blue'","completion":"def uncommon_chars(string1, string2): uncommon = [] for char in string1: if char not in string2: uncommon.append(char) for char in string2: if char not in string1: uncommon.append(char) return uncommon"},{"prompt":"You need to write a Python function to find all substrings of a given string in order. string = 'hello'","completion":"def find_all_substrings(string): substrings = [] for i in range(len(string)): for j in range(len(string)+1): substrings.append(string[i:j]) return substrings"},{"prompt":"You need to create a Python function to detect if a given number is prime or not.","completion":"def is_prime(n): if n <= 1: return False for i in range(2, int(n**0.5) + 1): if n % i == 0: return False return True"},{"prompt":"You need to create a Python class to represent a 3-dimensional point.","completion":"class Point3D: def __init__(self, x, y, z): self.x = x self.y = y self.z = z def __str__(self): return '({}, {}, {})'.format(self.x, self.y, self.z)"},{"prompt":"Can you write a function that returns the sum of the elements of a given array? arr = [2, 3, 4, 5]","completion":"def sum_array(arr): sum = 0 for ele in arr: sum += ele return sum"},{"prompt":"Write a for loop that prints the integers from 100 to 1.","completion":"for i in range(100, 0, -1): print(i)"},{"prompt":"elp debug this code snippet by adding comments with the appropriate error messages. def greetings(name): num = 5 message = \\"Hello, \\" + name + \\"!\\" return message","completion":"def greetings(name): # assert name is a string assert isinstance(name, str), \\"name must be a string\\" num = 5 # \\"message\\" variable should be defined before using it message = \\"Hello, \\" + name + \\"!\\" return message"},{"prompt":"Write a loop to print the numbers from 10 to 1 in reverse order.","completion":"for i in range(10, 0, -1): print(i)"},{"prompt":"Can you build a linear regression model to predict the housing prices in the given dataset? The dataset contains 15 columns with 3,000 records.","completion":"Yes, it is possible to build a linear regression model to predict the housing prices in the given dataset. You will have to split the dataset into a training and testing set and then use the training set to build a linear regression model. Once the model is built, use it to predict labels on the test set and then evaluate the model performance with relevant metrics."},{"prompt":"Construct a function that prints the first n terms in a Fibonacci sequence.","completion":"def print_fibonacci(n): fib1 = 0 fib2 = 1 for i in range(n): print(fib1) temp = fib1 fib1 = fib2 fib2 = temp + fib2"},{"prompt":"Construct a function to output the product of two numbers.","completion":"def product(a, b): return a * b"},{"prompt":"Create a function to select all the div tags within a document.","completion":"def get_div_tags(document): \\"\\"\\"Selects all the div tags within a document\\"\\"\\" divs = document.find_all('div') return divs"},{"prompt":"Create a function to print out a numbered list of items from an array. array = [‘apple’, ‘banana’, ‘orange’]","completion":"def print_numbered_list(array): \\"\\"\\"Prints out a numbered list based on an array of items.\\"\\"\\" for i, item in enumerate(array, start=1): print(f\\"{i}. {item}\\")"},{"prompt":"Given a string, find the longest palindrome within it. string = \\"ananabay","completion":"def longest_palindrome(string): \\"\\"\\" Find the longest palindrome within a given string \\"\\"\\" start, end, max_len = 0, 0, 0 for i in range(len(string)): # Odd length of palindrome left, right = i, i while left >= 0 and right < len(string) and string[left] == string[right]: length = right - left + 1 if max_len < length: max_len = length start = left end = right left -= 1 right += 1 # Even length of palindrome left, right = i, i+1 while left >= 0 and right < len(string) and string[left] == string[right]: length = right - left + 1 if max_len < length: max_len = length start = left end = right left -= 1 right += 1 return string[start:end+1]"},{"prompt":"Using inspect module to count the number of lines of code in a module.","completion":"def get_module_lines(module): \\"\\"\\" Returns the number of lines of code in a given module, using the inspect module. \\"\\"\\" import inspect sourcelines = inspect.getsourcelines(module) line_count = len(sourcelines[0]) return line_count"},{"prompt":"Write a python program to get all possible permutations of a given set of characters.","completion":"def get_permutations(s): \\"\\"\\"Get all possible permutations of a given set of characters.\\"\\"\\" n = len(s) result = [] def recurse(i): if i == n: result.append(''.join(s)) return for j in range(i, n): s[i], s[j] = s[j], s[i] recurse(i+1) # recurse over each character s[i], s[j] = s[j], s[i] # backtrack recurse(0) return result"},{"prompt":"Create a function that takes a specific input and produces a specific output using any mathematical operators.","completion":"def f(x): \\"\\"\\" Takes a specific input and produces a specific output using any mathematical operators \\"\\"\\" return x**2 + 3*x"},{"prompt":"Create a function that generates a series of Fibonacci numbers up to a certain number of items.","completion":"def generate_fibonacci(n): \\"\\"\\" Generates a series of Fibonacci numbers up to a certain number of items. \\"\\"\\" fib = [0, 1] if n < 2: return fib[:n] for i in range(2, n): fib.append(fib[i - 1] + fib[i - 2]) return fib"},{"prompt":"Write an algorithm to find the smallest missing positive number from a given list of integers. [3, 4, -10, -2, 9, 8, 1]","completion":"def findSmallestMissing(arr): smallest_missing = 1 for num in arr: if (num == smallest_missing): smallest_missing += 1 return smallest_missing"},{"prompt":"Get a user input and check if the input is a palindrome.","completion":"def is_palindrome(user_input): rev_input = user_input[::-1] if (rev_input == user_input): return True else: return False"},{"prompt":"Write a Python script to take two list and output the common elements of the given lists. list1 = [1, 2, 3, 4, 5] list2 = [4, 5, 6, 7, 8]","completion":"def findCommon(list1,list2): common = [] # traverse through elements of list1 for x in list1: # traverse through elements of list2 for y in list2: # if common element is found append to list if x == y: common.append(x) return common"},{"prompt":"Create an HTML website with navigation, logo and footer. <ninput>","completion":"<!DOCTYPE html> <html lang=\\"en\\"> <head> <meta charset=\\"UTF-8\\"> <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1.0\\"> <title>My Website</title> </head> <body> <div class=\\"navbar\\"> <!-- navigation links here --> </div> <div class=\\"logo\\"> <!-- logo here --> </div> <div class=\\"main-content\\"> <!-- page content here --> </div> <div class=\\"footer\\"> <!-- footer here --> </div> </body> </html>"},{"prompt":"Write an algorithm to insert a new element in a given sorted array.","completion":"def insert(arr, num): # start from the rightmost element i = len(arr) - 1 while ( i >= 0 and arr[i] > num): arr[i+1] = arr[i] i -= 1 arr[i+1] = num"},{"prompt":"Generate HTML element using Javascript. Tag name: p","completion":"let p_element = document.createElement('p');"},{"prompt":"Use class inheritance to create an object in Java.","completion":"// Base class class Vehicle { String brand = \\"Ford\\"; public void honk() { System.out.println(\\"Tuut, tuut!\\"); } } // sub class class Car extends Vehicle { String modelName = \\"Mustang\\"; public static void main(String[] args) { // Create an object of Car Car myCar = new Car(); // Call the honk method (From the Vehicle class) on the myCar object myCar.honk(); // Display the value of the brand attribute (from the Vehicle class) and the value of the modelName from the Car class System.out.println(myCar.brand + \\" \\" + myCar.modelName); } }"},{"prompt":"Convert this Ruby code to Python. def add_two_numbers(a, b) a + b end","completion":"def add_two_numbers(a, b): return a + b"},{"prompt":"Create a while loop in Java to break at the first even number found.","completion":"int i = 0; while (i <= 10) { if (i % 2 == 0) { break; } i++; }"},{"prompt":"Write an if-else statement in Python to print \\"Grater than 10\\" if a number is greater than 10, and \\"Less than 10\\" if a number is less than 10. Number: 8","completion":"if 8 > 10: print(\\"Grater than 10\\") else: print(\\"Less than 10\\")"},{"prompt":"Generate a random string using C#. String length: 8","completion":"var randomString = \\"\\"; var possible = \\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\\"; for (var i = 0; i < 8; i++) randomString += possible.charAt(Math.floor(Math.random() * possible.length)); console.log(randomString);"},{"prompt":"Convert this C code to Java. int addTwoNumbers(int a, int b) { return a + b; }","completion":"public int addTwoNumbers(int a, int b) { return a + b; }"},{"prompt":"Preprocess this data using Python. Data: [ { \\"A\\": 1, \\"B\\": 2, \\"C\\": 3 }, { \\"A\\": 2, \\"B\\": 3, \\"C\\": 5 }, { \\"A\\": 4, \\"B\\": 1, \\"C\\": 9 } ]","completion":"import pandas as pd data = [ { \\"A\\": 1, \\"B\\": 2, \\"C\\": 3 }, { \\"A\\": 2, \\"B\\": 3, \\"C\\": 5 }, { \\"A\\": 4, \\"B\\": 1, \\"C\\": 9 } ] df = pd.DataFrame(data) preprocessed_data = df.apply(lambda x: (x - x.mean()) / x.std())"},{"prompt":"Analyze this text using spaCy. Text: Modern technologies are revolutionizing the way we live and work.","completion":"import spacy nlp = spacy.load(\\"en_core_web_sm\\") doc = nlp(\\"Modern technologies are revolutionizing the way we live and work.\\") for token in doc: print(token.text, token.lemma_, token.pos_, token.tag_, token.dep_, token.shape_, token.is_alpha, token.is_stop)"},{"prompt":"w many bytes of memory does a 32-bit system have?","completion":"A 32-bit system has 4GB of memory, or 4,294,967,296 bytes."},{"prompt":"Create a python list with the following numbers: 27, 44, 28, 34","completion":"my_list = [27, 44, 28, 34]"},{"prompt":"What is the difference between int and float data types?","completion":"The main difference between int and float data types is that an int is a data type used to represent whole numbers, while a float is a data type used to represent numbers with decimal points. An int has a greater range of values than a float, but a float is more precise."},{"prompt":"Generate an HTML page with a heading and a paragraph.","completion":"<html> <head> <title>My page</title> </head> <body> <h1>My Page</h1> <p>This is the content of my page.</p> </body> </html>"},{"prompt":"Replace the following python code to print out the length of a given string. string = 'Hello world' print(string)","completion":"string = 'Hello world' print(len(string))"},{"prompt":"w would you access the value of the key 'name' in the following dictionary? my_dict = { 'name': 'John', 'age': 22 }","completion":"my_dict['name']"},{"prompt":"Create a React component to display a greeting message.","completion":"import React from 'react'; function Greeting(props) { return <h1>Hello, {props.name}!</h1>; } export default Greeting;"},{"prompt":"Using a while loop, print the numbers from 1 to 10.","completion":"i = 1 while i <= 10: print(i) i += 1"},{"prompt":"Using a for loop, print the characters of a string. string = \\"Programming","completion":"for ch in string: print(ch)"},{"prompt":"Construct a function to convert feet to meters.","completion":"def feet_to_meters(feet): \\"\\"\\"This function converts feet to meters\\"\\"\\" meters = feet * 0.3048 return meters"},{"prompt":"Find the sum of the elements of an array. arr = [1,2,3,4]","completion":"def find_sum(arr): \\"\\"\\"This function finds the sum of the elements of an array\\"\\"\\" sum = 0 for num in arr: sum += num return sum sum = find_sum(arr) print(\\"The sum of the elements of the array is:\\", sum)"},{"prompt":"mplement quick sort on an array. unsorted_nums = [2, 8, 1, 5, 9]","completion":"def partition(arr, low, high): i = (low-1) pivot = arr[high] for j in range(low, high): if arr[j] < pivot: i = i+1 arr[i], arr[j] = arr[j], arr[i] arr[i+1], arr[high] = arr[high], arr[i+1] return (i+1) def quick_sort(arr, low, high): if low < high: pi = partition(arr, low, high) quick_sort(arr, low, pi-1) quick_sort(arr, pi+1, high) quick_sort(unsorted_nums, 0, len(unsorted_nums)-1) print(unsorted_nums)"},{"prompt":"Create a function to capitalize all the words of a sentence. sentence = \\"this is a te","completion":"def capitalize_words(sentence): \\"\\"\\"This function capitalizes all the words of a sentence\\"\\"\\" words = sentence.split() capitalized_words = [] for word in words: capitalized_words.append(word.capitalize()) return ' '.join(capitalized_words) print(capitalize_words(sentence))"},{"prompt":"Order the following array of dictionaries by their \\"priority\\" key. my_list =[ { 'name': 'Task 1', 'priority': 4 }, { 'name': 'Task 2', 'priority': 6 }, { 'name': 'Task 3', 'priority': 2 }, { 'name': 'Task 4', 'priority': 8 }, ]","completion":"my_list.sort(key=lambda x: x['priority']) print(my_list)"},{"prompt":"Create a SQL query to find all users who have a premium account.","completion":"SELECT * FROM users WHERE account_type='premium';"},{"prompt":"Run the code and identify the output. def string_compressor(string): length = len(string) compressed = \\"\\" count = 1 i = 1 while i < length: if string[i] == string[i - 1]: count += 1 else: compressed = compressed + string[i - 1] + str(count) count = 1 i += 1 compressed = compressed + string[i - 1] + str(count) return compressed print(string_compressor(\\"aabcccccaaa\\"))","completion":"a2b1c5a3"},{"prompt":"Provide a code for creating a function which receives an array of characters and prints them. ['A', 'B', 'C', 'D']","completion":"def print_array_of_chars(arr): for ch in arr: print(ch) print_array_of_chars(['A', 'B', 'C', 'D']) Output: A B C D"},{"prompt":"mplement a code that checks if a given word is palindrome. Word: malayalam","completion":"def is_palindrome(word): reversed_word = word[::-1] if reversed_word == word: return True else: return False print(is_palindrome(\\"malayalam\\")) Output: True"},{"prompt":"Write a code for creating an array with values from 0 to n. n = 5","completion":"def create_array(n): array = [] for i in range(n+1): array.append(i) return array print(create_array(5)) Output: [0, 1, 2, 3, 4, 5]"},{"prompt":"Write a code which takes two strings and prints its longest common subsequence. String1: \\"ABCDGH\\" String2: \\"AEDFHR","completion":"def longest_common_subsequence(str1, str2): m = len(str1) n = len(str2) matrix = [[0 for x in range(n+1)] for x in range(m+1)] for i in range(m+1): for j in range(n+1): if i == 0 or j == 0: matrix[i][j] = 0 elif str1[i-1] == str2[j-1]: matrix[i][j] = matrix[i-1][j-1] + 1 else: matrix[i][j] = max(matrix[i-1][j], matrix[i][j-1]) result = \\"\\" i = m j = n while i > 0 and j > 0: if str1[i-1] == str2[j-1]: result += str1[i-1] i -= 1 j -= 1 elif matrix[i-1][j] > matrix[i][j-1]: i -= 1 else: j -= 1 return result[::-1] print(longest_common_subsequence(\\"ABCDGH\\", \\"AEDFHR\\")) Output: ADH"},{"prompt":"Write a code for concatenating two arrays. Array1: [1,2,3] Array2: [4,5,6]","completion":"def concat_arrays(arr1, arr2): return arr1 + arr2 print(concat_arrays([1,2,3], [4,5,6])) Output: [1, 2, 3, 4, 5, 6]"},{"prompt":"Compute the maximum subarray sum for the given array. Array: [-2,1,-3,4,-1,2,1,-5,4]","completion":"def max_subarray_sum(arr): max_so_far = 0 max_ending_here = 0 for i in range(len(arr)): max_ending_here += arr[i] if max_so_far < max_ending_here: max_so_far = max_ending_here if max_ending_here < 0: max_ending_here = 0 return max_so_far print(max_subarray_sum([-2,1,-3,4,-1,2,1,-5,4])) Output: 6"},{"prompt":"Rotate the given array by k steps. Array: [1,2,3,4,5] k: 2","completion":"def rotate_array(arr, k): for i in range(k): arr.insert(0, arr.pop()) return arr print(rotate_array([1,2,3,4,5],2)) Output: [4, 5, 1, 2, 3]"},{"prompt":"Create a code which prints a multiplication table of given size. Size: 4","completion":"def print_multiplication_table(n): for i in range(1, n+1): for j in range(1, n+1): print(i*j, end=\\"t\\") print(\\"n\\") print_multiplication_table(4) Output: 1 2 3 4 2 4 6 8 3 6 9 12 4 8 12 16"},{"prompt":"mplement a code which reverses a given string. String: \\"Hello World","completion":"def reverse_string(string): rev_string = \\"\\" for i in range(len(string)-1, -1, -1): rev_string += string[i] return rev_string print(reverse_string(\\"Hello World\\")) Output: dlroW olleH"},{"prompt":"Design a loop in Python to find the maximum value from a given array. array = [50, 10, 8, 1000, 1024]","completion":"maxValue = array[0] for i in range(1, len(array)): if array[i] > maxValue: maxValue = array[i] print(maxValue)"},{"prompt":"Write a SQL query to select the grocery items under 50 from the table. Table \\"Grocery\\": ID | Name | Price 1 | Apple | 15 2 | Banana| 20 3 | Kale | 7 4 | Orange| 45","completion":"SELECT Name, Price FROM Grocery WHERE Price <= 50;"},{"prompt":"Generate an HTML table to display the countries and their population. Country | Population China | 1449107485 India | 1369153466 USA | 330765152","completion":"<table> <tr> <th>Country</th> <th>Population</th> </tr> <tr> <td>China</td> <td>1449107485</td> </tr> <tr> <td>India</td> <td>1369153466</td> </tr> <tr> <td>USA</td> <td>330765152</td> </tr> </table>"},{"prompt":"Create a database query in MySQL to display the salary of the employees who work in the \\"Accounts\\" department. Table \\"Employees\\": Name | Department | Salary John | Accounts | 55,000 Jane | HR | 45,000 George| IT | 60,000","completion":"SELECT Name, Salary FROM Employees WHERE Department = 'Accounts';"},{"prompt":"Find the minimum number from the given array in Java. int arr[]={10, 50, 18, 63, 27};","completion":"int min = arr[0]; for (int i = 1; i < arr.length; i++) if (arr[i] < min) min = arr[i]; System.out.println(min);"},{"prompt":"List the books in alphabetical order using JavaScript. Books = [\\"Alice in Wonderland\\", \\"To Kill a Mockingbird\\", \\"The Cat in the Hat\\", \\"Wuthering Heights\\"];","completion":"Books.sort(); console.log(Books);"},{"prompt":"Write a regular expression to match the valid hex color code.","completion":"/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})/"},{"prompt":"Select the student's name whose matric number is 151763 from the database in MySQL. Table \\"Students\\": Name | Matric No James | 151763 David | 143563 John | 166895","completion":"SELECT Name FROM Students WHERE Matric No = 151763;"},{"prompt":"Create a custom encryption algorithm to encode a string of characters. Te","completion":"def custom_encrypt(string): result = '' # Loop over each character for character in string: # Get the Unicode code point of the character # and add two to it code = ord(character) + 2 # Convert the code point back to character # and add it to the result result += chr(code) # Return the encrypted string return result # Test the custom_encrypt() function encoded_str = custom_encrypt('Test') print(encoded_str) # Output: Vguv"},{"prompt":"Generate a list of integers up to the given number n. 50","completion":"lst = list(range(1, 51)) print(lst) # Output [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50]"},{"prompt":"Create a Python class to encode a string of characters using a Caesar cipher.","completion":"class CaesarCipher: def __init__(self, shift): self.shift = shift def encode(self, string): cipher = '' for char in string: if char == ' ': cipher = cipher + char elif char.isupper(): cipher = cipher + chr((ord(char) + self.shift - 65) % 26 + 65) else: cipher = cipher + chr((ord(char) + self.shift - 97) % 26 + 97) return cipher # Test cipher = CaesarCipher(3) print(cipher.encode(\\"Hello, World!\\")) # Output Khoor, Zruog!"},{"prompt":"Automatically remove vowels from a sentence. Hello, World!","completion":"def remove_vowels(sentence): # Create an empty string. result = \\"\\" for letter in sentence: # Select those characters that are not vowels. if letter not in \\"aeiouAEIOU\\": result += letter return result # Test print(remove_vowels(\\"Hello, World!\\")) # Output Hll, Wrld!"},{"prompt":"Generate a list that contains the Armstrong numbers in a given range. 100","completion":"# Code def armstrong_numbers(n): # Empty list to store Armstrong numbers lst = [] for i in range(1, n + 1): s = 0 # To find the power m = len(str(i)) # Finding Armstrong numbers temp = i while temp > 0: digit = temp % 10 s += digit ** m temp //= 10 # Adding the number to list if i == s: lst.append(i) return lst # Test print(armstrong_numbers(100)) # Output [1, 2, 3, 4, 5, 6, 7, 8, 9, 153, 370, 371, 407]"},{"prompt":"Find all the prime factors of a given integer. 100","completion":"def prime_factors(n): # Empty list to store prime factors lst = [] # Divide by 2 while the number is # divisible by 2 while n % 2 == 0: lst.append(2) n = n / 2 # n must be odd, now # check all the numbers from 3 to # the square root of n for i in range(3, int(n**0.5)+1): # check for divisibility of i by n while n % i== 0: lst.append(i) n = n / i # If n is a prime number then it # will only be divisible by itself if n > 2: lst.append(n) return lst # Test print(prime_factors(100)) # Output [2, 2, 5, 5]"},{"prompt":"Create a custom min-heap data structure in Python.","completion":"class MinHeap: def __init__(self): self.heap = [] def parent(self, i): return (i-1)/2 def insertKey(self, k): self.heap.append(k) # Insert the new element at the end of the heap i = len(self.heap)-1 self.heapifyup(i) def heapifyup(self, i): # If the current node is smaller than the parent node # Swap the two nodes if i != 0 and self.heap[int(self.parent(i))] > self.heap[i]: self.heap[int(self.parent(i))], self.heap[i] = self.heap[i], self.heap[int(self.parent(i))] self.heapifyup(self.parent(i)) def remove(self): # Get the value of the root node root = self.heap[0] # Move the last element of the heap to the top self.heap[0] = self.heap[-1] # Delete the last element of the heap self.heap.pop() if len(self.heap) > 0: self.heapifydown(0) return root def heapifydown(self, i): # Get the left and right indices left = 2*i+1 right = 2*i+2 small = i # Make the current node the small node # Compare the left child with the small node if left < len(self.heap) and self.heap[left] < self.heap[small]: small = left # Compare the right child with the small node if right < len(self.heap) and self.heap[right] < self.heap[small]: small = right # If any of the children of the current node is smaller than # the current node, then swap the current node with the small node if small != i: self.heap[small], self.heap[i] = self.heap[i], self.heap[small] self.heapifydown(small)"},{"prompt":"Suggest an algorithm for finding the maximum sum for all subarrays. arr = [2, 3, -5, 4]","completion":"The algorithm for finding the maximum sum for all subarrays can be solved using a divide and conquer approach. First, divide the array into two parts by splitting it in half at its middle index. Then, calculate the maximum subarray sum for each of the two parts recursively. Finally, return the greater of the two sums plus the value at the middle index of the array. This will be the maximum sum of all subarrays."},{"prompt":"Write a Java program to display a pattern of numbers.","completion":"class PatternTest { public static void main(String[] args) { int[][] pattern = { {1,2,3}, {4,5,6}, {7,8,9} }; for (int i=0; i<pattern.length; i++) { for (int j=0; j<pattern[i].length; j++) { System.out.print(pattern[i][j] + \\" \\"); } System.out.println(); } } }"},{"prompt":"Classify the following random forest algorithm instance given the parameters. max_depth=5, n_estimators=5","completion":"The given random forest algorithm instance is a supervised learning algorithm with a maximum tree depth of 5 and 5 estimators."},{"prompt":"Rewrite the following javascript code such that it prints the numbers 1 to 10. for(var i = 0; i > 10; i++) { console.log(i); }","completion":"for(var i = 1; i <= 10; i++) { console.log(i); }"},{"prompt":"Write a TensorFlow 2.0 program that calculates the mean of an array. [1, 2, 3, 4, 5]","completion":"import tensorflow as tf arr = [1, 2, 3, 4, 5] arr_tensor = tf.constant(arr) mean_tensor = tf.reduce_mean(arr_tensor) with tf.Session() as sess: mean_value = sess.run(mean_tensor) print(mean_value)"},{"prompt":"Create a function called check_restaurant_availability that returns True if a restaurant is open and False if it's closed. restaurant_status = { \\"monday\\": \\"closed\\", \\"tuesday\\": \\"open\\", \\"wednesday\\": \\"closed\\", \\"thursday\\": \\"open\\", \\"friday\\": \\"closed\\", \\"saturday\\": \\"open\\", \\"sunday\\": \\"closed\\" }","completion":"def check_restaurant_availability(restaurant_status): day = datetime.date.today().strftime(\\"%A\\").lower() return restaurant_status[day] == \\"open\\""},{"prompt":"Write an SQL query to find the maximum number of orders for each state. Orders (id, customer_id, state, order_num)","completion":"SELECT state, MAX(order_num) FROM Orders GROUP BY state;"},{"prompt":"Transform the following code into an array of objects in JavaScript. var data = [ [\\"John\\", 27], [\\"Mark\\", 22], [\\"David\\", 32] ]","completion":"var data = [ {name: \\"John\\", age: 27}, {name: \\"Mark\\", age: 22}, {name: \\"David\\", age: 32} ];"},{"prompt":"Process the following array of numbers to get the max, min, and average scores. scores = [90, 75, 70, 85, 80]","completion":"const scores = [90, 75, 70, 85, 80]; let maxScore = Math.max(...scores); let minScore = Math.min(...scores); let avgScore = scores.reduce((a, b) => a + b, 0) / scores.length; console.log(\`Max Score = {maxScore}\`); console.log(\`Min Score = {minScore}\`); console.log(\`Average Score = {avgScore}\`);"},{"prompt":"Fill in the blanks in the following SQL query to select the names of customers who have placed more than one order. SELECT customer_name FROM Orders WHERE order_count __________ 1","completion":"SELECT customer_name FROM Orders WHERE order_count > 1"},{"prompt":"Transpile the following code into C#. var a = 10; var b = 20; var c = a + b;","completion":"int a = 10; int b = 20; int c = a + b;"},{"prompt":"Create a JavaScript function which takes a string and returns the longest word in it. \\"This is an example string","completion":"function longestWord(str) { let words = str.split(' '); let longestWord = words.reduce((longest, current) => { if (current.length > longest.length) return current; else return longest; }, ''); return longestWord; } console.log(longestWord(\\"This is an example string\\"));"},{"prompt":"Given a unsorted array, sort it using the quick sort algorithm. [5, 4, 8, 7, 1, 3, 10, 9]","completion":"def quickSort(nums): if len(nums) <= 1: return nums pivot = nums[len(nums) // 2] left = [x for x in nums if x < pivot] middle = [x for x in nums if x == pivot] right = [x for x in nums if x > pivot] return quickSort(left) + middle + quickSort(right) nums = [5, 4, 8, 7, 1, 3, 10, 9] print(quickSort(nums))"},{"prompt":"w can you reverse a given string using a while loop? string = \\"hello","completion":"new_string = \\"\\" index = len(string) - 1 while index >= 0: new_string += string[index] index -= 1 print(new_string) # olleh"},{"prompt":"w can you fill a 2D array with zeros?","completion":"my_2d_array = [[0 for col in range(3)] for row in range(3)]"},{"prompt":"Generate a correct json output from given data name: \\"John Doe\\" age: 23","completion":"{ \\"name\\": \\"John Doe\\", \\"age\\": 23 }"},{"prompt":"Given a list of strings, how can you categorize each string into one of the two categories: short and long? list = [\\"Hello\\", \\"World\\", \\"Foo\\", \\"Bar\\"]","completion":"for s in list: if len(s) <=3: category = \\"short\\" else: category = \\"long\\" print(f\\"{s} : {category}\\")"},{"prompt":"Sort a list of user objects by their age users = [{'name': 'John', 'age': 10}, {'name': 'Peter', 'age': 20}, {'name': 'Chris', 'age': 15}]","completion":"sorted_users = sorted(users, key=lambda k: k['age'])"},{"prompt":"Given two strings s1 and s2, how can you check if s2 is a substring of s1? s1 = \\"testString\\" s2 = \\"String","completion":"if s2 in s1: print(\\"s2 is a substring of s1\\") else: print(\\"s2 is not a substring of s1\\")"},{"prompt":"Given a list of strings, how can you join them all together into a single sentence? words = [\\"hello\\", \\"world\\", \\"foo\\", \\"bar\\"]","completion":"sentence = ' '.join(words) print(sentence) # 'hello world foo bar'"},{"prompt":"Create an object that holds 3 attributes, each with its own value.","completion":"class MyObject: def __init__(self, attr1, attr2, attr3): self.attr1 = attr1 self.attr2 = attr2 self.attr3 = attr3 obj = MyObject('value1', 'value2', 'value3')"},{"prompt":"Simulate a coin toss using Python.","completion":"import random def coin_toss(): result = random.choice([\\"heads\\", \\"tails\\"]) return result print(coin_toss())"},{"prompt":"Replace all vowels with 'x' in a given string. myString = \\"Python Programmer","completion":"def replace_vowels(string): vowels = \\"aeiouAEIOU\\" new_string = \\"\\" for char in string: if char in vowels: new_string += \\"x\\" else: new_string += char return new_string print(replace_vowels(myString)) # Output # Pxthxn Prxgrxmmxr"},{"prompt":"Generate 5 random numbers from 1 to 10.","completion":"import random numbers = random.sample(range(1, 11), 5) print(numbers) # Output # [3, 9, 6, 8, 5]"},{"prompt":"Select the last two elements from a given list mylist = [1,2,3,4,5]","completion":"last_two_elements = mylist[-2:] print(last_two_elements) # Output # [4, 5]"},{"prompt":"Find all unique values in a given dataset dataset = [['A', 4], ['B', 5], ['A', 3], ['C', 2]]","completion":"# Get all the values from the dataset all_values = [value for _, value in dataset] # Get the unique values unique_values = set(all_values) print(unique_values) # Output # {2, 3, 4, 5}"},{"prompt":"Find the most frequent value in a list mylist = [1,2,3,4,4,4,4,5,5]","completion":"from collections import Counter def get_most_frequent_value(mylist): counted_list = Counter(mylist) return counted_list.most_common(1)[0][0] most_frequent_value = get_most_frequent_value(mylist) print(most_frequent_value) # Output # 4"},{"prompt":"Measure the execution time of a given python script.","completion":"import time def measure_time(): # Start the timer start = time.time() # Execute the code # ----- Code to be measured ------ # ------------------------------- # Stop the timer end = time.time() # Return the difference return end - start execution_time = measure_time() print(execution_time)"},{"prompt":"Write a JavaScript program to group an array of objects based on a property and sum up the values of the grouped objects. arr = [ {name: 'John', salary: 100}, {name: 'Heather', salary: 200}, {name: 'John', salary: 300}, {name: 'Heather', salary: 400} ]","completion":"let groupedArray = arr.reduce((acc, cur) => { let result = acc.find(item => item.name === cur.name); if (!result) { result = {name: cur.name, salary: 0}; acc.push(result); } result.salary += cur.salary; return acc; }, []); console.log(groupedArray);"},{"prompt":"Verify that the following web development code is correct. <html> <head> <title>My first web page</title> </head> <body> <p>Hello World!</p> </body> </html>","completion":"Yes, the code is correct."},{"prompt":"What is the difference between a static method and an instance method in Python?","completion":"A static method is a method that does not have access to the instance of the class and so it can't be used to access instance variables. A static method is associated with the class itself, not with any particular instance. A static method is often used to create utility functions that don't need to be accessed from instance level. An instance method requires an object or instance of a class to work. An instance method can access the instance variables of the class and has access to the self object which is an instance of the class. An instance method can also access static methods and static variables of the class."},{"prompt":"Design a SQL query to find the books published after 2015.","completion":"SELECT * FROM books WHERE year > 2015;"},{"prompt":"TGiven the following C++ code, implement a function to reverse a string. #include <string> std::string myString = \\"hello world\\";","completion":"#include <string> #include <algorithm> std::string myString = \\"hello world\\"; std::string reverseString(const std::string &str) { std::string reversedStr(str.rbegin(), str.rend()); return reversedStr; }"},{"prompt":"Given a Python dictionary, create a function to return the most common key in the dictionary. d = { 'a': 4, 'b': 3, 'c': 2, 'd': 2 }","completion":"def most_common_key(d): counts = [(key, value) for key, value in d.items()] max_count = max(counts, key=lambda item: item[1]) return max_count[0]"},{"prompt":"w can we convert a sql query into pandas code?","completion":"We can use the read_sql_query() function in the pandas library to convert a SQL query into pandas code. The read_sql_query() function takes the SQL query and a connection object as argument and returns the corresponding DataFrame object."},{"prompt":"Clean up the following HTML string so it can be rendered properly. HTML string: <div> <h1>This is a header</h2> <p>paragraph<p> </div>","completion":"<div> <h1>This is a header</h1> <p>paragraph</p> </div>"},{"prompt":"Combine the following two items in an array. Item1: 2 Item2: [3, 4, 5]","completion":"[2, 3, 4, 5]"},{"prompt":"Write a function in Javascript to return the second highest number in an array. Array: [1, 2, 3, 11, 4, 5]","completion":"function secondHighestNumber(arr) { let sortedArr = arr.sort(function(a, b) { return b - a; }); return sortedArr[1]; }"},{"prompt":"Given the following Java code, can you spot the error? public class MyClass { int x = 10; int y = 20; public static int add(int x, int y) { int sum = x + y; return sum; } }","completion":"The method add() is a static method and cannot directly access the instance variables x and y. The error can be fixed by passing in the two parameters x and y to the add() method: public static int add(int x, int y) { int sum = x + y; return sum; }"},{"prompt":"Rewrite the following selection sort algorithm in Python. def selectionSort(arr): for i in range(len(arr)): minIndex = i for j in range(i + 1, len(arr)): if arr[minIndex] > arr[j]: minIndex = j arr[i], arr[minIndex] = arr[minIndex], arr[i]","completion":"def selection_sort(arr): for i in range(len(arr)): min_index = i for j in range(i + 1, len(arr)): if arr[min_index] > arr[j]: min_index = j arr[i], arr[min_index] = arr[min_index], arr[i]"},{"prompt":"Rewrite the code block in an optimized way. nums = [1, 2, 3, 4, 5, 6] new_nums = [] for num in nums: new_nums.append(num + 1)","completion":"nums = [1, 2, 3, 4, 5, 6] new_nums = [num + 1 for num in nums]"},{"prompt":"Define a function to calculate the product of three numbers.","completion":"def product_of_three(a, b, c): return a * b * c"},{"prompt":"What is an example of a flag in programming?","completion":"A flag is a boolean (true/false) value that is used to track the state of a program or condition. It can be used to execute certain statements depending on the value of the flag. For example, a program can have a flag that keeps track of whether the user has logged in or not. If the flag is set to true, certain features of the program are enabled; if it is set to false, these features are disabled."},{"prompt":"Explain the use of try-except statements in Python","completion":"Try-except statements are used to handle errors and exceptions in Python. The general syntax for a try-except statement is try: ...except: ... The code that could potentially raise an exception is put inside the try block, while the code to handle the exception is put inside the except block. If an exception occurs, the code inside the except block is executed and the program execution continues normally afterwards. If no exception occurs, the code inside the except block is skipped."},{"prompt":"Compare two dictionaries for equality and return the result. a = {1:4, 2:5, 3:6} b = {2:5, 3:6, 1:4}","completion":"def compare_dicts(a, b): # Check key-value pairs in both dicts if a.items() == b.items(): return True else: return False # Output print(compare_dicts(a, b))"},{"prompt":"What are the properties of a good algorithm?","completion":"A good algorithm should have the following properties: correctness, completeness, accuracy, robustness, time complexity, memory complexity, scalability, and reusability. The correctness of an algorithm means that it should produce the correct output for every possible input. The completeness refers to whether the algorithm will terminate and produce a result for every input. Accuracy refers to the correctness of the results. Robustness refers to the ability of the algorithm to handle unpredictable input and produce the same output every time. Time and memory complexity refers to how much time and memory the algorithm takes to execute. Scalability indicates how well the algorithm can handle larger inputs and outputs, and reusability means how easy it is for other programmers to use the algorithms for their own purposes."},{"prompt":"Given an acute angled triangle, write a function to compute its area using Heron's formula.","completion":"def heron_area(a, b, c): # calculate the semi-perimeter s = (a + b + c) / 2 # calculate the area area = (s * (s - a) * (s - b) * (s - c)) ** 0.5 return area"},{"prompt":"Create a function for printing each letter of a string on a separate line. str = \\"Hello World","completion":"def print_letter_separately(str): for letter in str: print(letter) # Output print_letter_separately(str)"},{"prompt":"What is a stack in Computer Science?","completion":"A stack is a data structure that works on the principle of Last in First Out (LIFO). It is used to store and retrieve elements in a particular order, and all operations of insertion and retrieval are performed at one end of the stack, referred to as the top. There are two main operations in a stack: Push - adds an item to the top, and Pop - removes an item from the top."},{"prompt":"Update the following SQL query to return all the values in the \`students\` table. SELECT * FROM students where age > 20;","completion":"SELECT * FROM students;"},{"prompt":"Write a JavaScript code that returns the current date in the format “Wednesday, November 20, 2019”.","completion":"let today = new Date(); let day = today.getDay(); let daylist = [\\"Sunday\\",\\"Monday\\",\\"Tuesday\\",\\"Wednesday\\",\\"Thursday\\",\\"Friday\\",\\"Saturday\\"]; let month = today.getMonth()+1; let year = today.getFullYear(); let result = daylist[day]+\\", \\"+month+\\" \\"+today.getDate()+\\", \\"+year;"},{"prompt":"Write a for loop that prints all odd numbers between 1 and 10.","completion":"for(let i = 1; i <= 10; i++){ if(i % 2 !== 0) { console.log(i); } }"},{"prompt":"Find the median of this sequence of numbers: 4, 3, 7, 10.","completion":"6"},{"prompt":"Write an if-else statement in C# that returns “Hello World!\\" if the value of variable \`x\` is greater than 10, otherwise return “Goodbye World!”","completion":"if(x > 10) { Console.WriteLine(\\"Hello World!\\"); } else { Console.WriteLine(\\"Goodbye World!\\"); }"},{"prompt":"w would you create a function in JavaScript that returns a string that contains the word “Hello” 5 times?","completion":"function helloFiveTimes() { return \\"Hello \\" + \\"Hello \\" + \\"Hello \\" + \\"Hello \\" + \\"Hello \\"; }"},{"prompt":"w can you complete the console.log statement so that it prints the value of the variable \`a\`? let a = 5; console.log(","completion":"console.log(a);"},{"prompt":"Convert the following if-else statement written in JavaScript to a ternary operator. if (x > 0) { result = true; } else { result = false; }","completion":"let result = (x > 0) ? true : false;"},{"prompt":"What type of function does the following code represent? function foo(x, y) { return x * y; }","completion":"This code represents a multiplication function."},{"prompt":"Write a Python program that prints all numbers from 1 to 100 that are divisible by both 5 and 7.","completion":"for num in range(1, 101): if (num%5==0) and (num%7==0): print(num)"},{"prompt":"Write a query in SQL to find the names and age of all employees that work in the IT department.","completion":"SELECT name, age FROM employees WHERE department = 'IT';"},{"prompt":"Create a list comprehension statement in Python that prints all the even numbers from a list of numbers from 1 to 10.","completion":"[n for n in range(1, 11) if n % 2 == 0]"},{"prompt":"Write a Python code snippet to prompt the user to enter their age and store that value in a variable called \\"age\\".","completion":"age = int(input(\\"Please enter your age: \\"))"},{"prompt":"Create a function in Python that will take two parameters: a string and an integer, and return the string repeated the amount of times specified by the integer.","completion":"def repeat(string, num_repetitions): return string * num_repetitions"},{"prompt":"Write a SQL query to return the names of all employees who make over 50,000.","completion":"SELECT name FROM employees WHERE salary > 50000;"},{"prompt":"Using the given code, implement the function \\"add_two_numbers\\" which will take two integers and return their sum. def add_two_numbers(x, y): #TODO p","completion":"def add_two_numbers(x, y): return x + y"},{"prompt":"Design a text-based game in C++ in which the player can move around the game world.","completion":"#include <iostream> #include <string> std::string room_name; int player_position_x = 0; int player_position_y = 0; void move_player(int x, int y) { player_position_x += x; player_position_y += y; room_name = get_room_name(player_position_x, player_position_y); std::cout << \\"Moved to \\" << room_name << std::endl; } std::string get_room_name(int x, int y) { std::string name; // implement function to return the name of the room at given coordinates return name; } int main() { while(true) { std::string input; std::cout << \\"Where do you want to go?\\" << std::endl; std::cin >> input; // implement function to interpret user input and move the player accordingly } return 0; }"},{"prompt":"Write an HTML page that displays a single line of text saying \\"Hello World\\".","completion":"<html> <head> <title>Hello World</title> </head> <body> <p>Hello World</p> </body> </html>"},{"prompt":"Fix the bug in the following code by modifying the function is_star_jumping_high_enough: def is_star_jumping_high_enough(star_height): \\"\\"\\"return true if star height is greater than 5\\"\\"\\" if star_height < 5: return True","completion":"def is_star_jumping_high_enough(star_height): \\"\\"\\"return true if star height is greater than 5\\"\\"\\" if star_height > 5: return True"},{"prompt":"Write a Python script to create a webserver that can respond to \\"GET\\" requests from a web browser.","completion":"import http.server import socketserver PORT = 8080 Handler = http.server.SimpleHTTPRequestHandler with socketserver.TCPServer((\\"\\", PORT), Handler) as httpd: print(\\"Serving at port\\", PORT) httpd.serve_forever()"},{"prompt":"Write a JavaScript code snippet to log the following string to the console: “Today is a great day!”","completion":"console.log(\\"Today is a great day!\\");"},{"prompt":"Using the given code, create a function \\"calculate_area\\" which will take two integer parameters and calculate the area of a rectangle. def calculate_area(length, width): #TODO pass","completion":"def calculate_area(length, width): return length * width"},{"prompt":"Write a Java code snippet to print the following line of text: “Hello, World!”","completion":"System.out.println(\\"Hello, World!\\");"},{"prompt":"Write Python code to extend a string to be twice as long as the original string Example string: \\"Hello world","completion":"input = \\"Hello world\\" output = input + input"},{"prompt":"Explain what is the value of the variable x after this following code is executed: x = 5 y = x + 9","completion":"The value of x after the code is executed is 5. After y is assigned the value of x + 9, the value of x is unchanged."},{"prompt":"Gather information about a given product HTC U12+","completion":"The HTC U12+ is a flagship Android phone manufactured by HTC Corporation. It features a 6-inch LCD display, 12MP dual rear camera, 8MP front camera, 6GB of RAM, and 64GB of storage. It also has NFC and a 3,420 mAh battery."},{"prompt":"Write JavaScript to print the following output 4 6 8","completion":"for(let i = 4; i <= 8; i += 2) { console.log(i); }"},{"prompt":"Write a code to delete the element at a given index in an array Example array: [4, 5, 6, 7, 8] Index: 2","completion":"let array = [4, 5, 6, 7, 8]; let index = 2; array.splice(index, 1); console.log(array); // Output: [4, 5, 7, 8]"},{"prompt":"Generate CSS code to change the font size of the given element Element: <h1> Font size: 26px","completion":"h1 { font-size: 26px; }"},{"prompt":"Compose a JavaScript code to sum all odd numbers in the range From 1 to 10,","completion":"let sum = 0; for (let i = 1; i <= 10; i++) { if (i % 2 != 0) { sum += i; } } console.log(sum); //25"},{"prompt":"Construct a regular expression to match a given string String: \\"Hello World!","completion":"/^HellosWorld!/"},{"prompt":"Write code to count how many times a character appears in a string String: \\"Apple\\" Character: \\"p","completion":"let string = 'Apple'; let count = 0; for (let i = 0; i < string.length; i++) { if (string[i] == 'p') { count++; } } console.log(count); //2"},{"prompt":"Compose a SQL query to get the total number of books","completion":"SELECT COUNT(*) FROM books;"},{"prompt":"Create a sorting algorithm to quickly sort an array of integers Array: [5, 4, 6, 7, 1]","completion":"function quickSort(arr) { if (arr.length <= 1) { return arr; } let pivot = arr.pop(); let left = []; let right = []; for (let i = 0; i < arr.length; i++) { if (arr[i] < pivot) { left.push(arr[i]); } else { right.push(arr[i]); } } return quickSort(left).concat([pivot], quickSort(right)); } console.log(quickSort([5, 4, 6, 7, 1])); // [1, 4, 5, 6, 7]"},{"prompt":"Generate a code this that calculates the gross salary including allowance Basic salary: 10,000 Allowance: 4,000","completion":"let basicSalary = 10000; let allowance = 4000; let grossSalary = basicSalary + allowance; console.log(grossSalary); //14,000"},{"prompt":"Write the most efficient JavaScript function to reverse a given array. const array = [1, 2, 3, 4, 5]","completion":"function reverseArray(array) { let leftIndex = 0; let rightIndex = array.length - 1; while (leftIndex < rightIndex) { const temp = array[leftIndex]; array[leftIndex] = array[rightIndex]; array[rightIndex] = temp; leftIndex++; rightIndex--; } return array; }"},{"prompt":"Create a JSON object with the following data: three fruits of each color {red: [apple, watermelon, strawberry], green apple, kiwi, honeydew], yellow: [banana, lemon, mango]}","completion":"{ \\"red\\": [\\"apple\\", \\"watermelon\\", \\"strawberry\\"], \\"green\\": [\\"apple\\", \\"kiwi\\", \\"honeydew\\"], \\"yellow\\": [\\"banana\\", \\"lemon\\", \\"mango\\"] }"},{"prompt":"mplement a python class named 'Temperature' that ranks a temperature value as cold, warm, or hot given a threshold value of 30.","completion":"class Temperature: def __init__(self, value, threshold=30): self.value = value self.threshold = threshold def rank(self): if self.value < self.threshold: return \\"cold\\" elif self.value == self.threshold: return \\"warm\\" else: return \\"hot\\""},{"prompt":"Write a Java method that takes in a string and returns an array containing all the possible permutations of this string.","completion":"public static ArrayList<String> allPermutations(String inputString){ ArrayList<String> permutations = new ArrayList<>(); if (inputString.length() == 0) { permutations.add(\\"\\"); return permutations; } char first = inputString.charAt(0); String remainder = inputString.substring(1); ArrayList<String> words = allPermutations(remainder); for (String word : words) { for (int j = 0; j <= word.length(); j++) { permutations.add(insertCharAt(word, first, j)); } } return permutations; } public static String insertCharAt(String word, char c, int i) { String start = word.substring(0, i); String end = word.substring(i); return start + c + end; }"},{"prompt":"Compute the edit distance between two provided words using the Levenshtein algorithm. word1 = \\"cat\\" word2 = \\"b","completion":"def levenshteinDistance(word1, word2): m = len(word1) n = len(word2) dp = [[0 for i in range(n + 1)] for j in range(m + 1)] for i in range(m + 1): for j in range(n + 1): if i == 0: dp[i][j] = j elif j == 0: dp[i][j] = i elif word1[i - 1] == word2[j - 1]: dp[i][j] = dp[i - 1][j - 1] else: dp[i][j] = 1 + min(dp[i][j - 1], dp[i - 1][j], dp[i - 1][j - 1]) return dp[m][n]"},{"prompt":"Write a C++ function that takes in a linked list and a value, and inserts the value as the head node of the list. list = [7, 8, 10] value = 5","completion":"Node* insertFront(Node* head, int value) { Node* tmp = new Node; tmp->data = value; tmp->next = head; head = tmp; return head; }"},{"prompt":"Write a Bash shell script to print all argument values passed to the script.","completion":"#!/bin/bash for i in \\"@\\" do echo \\"i\\" done"},{"prompt":"Create an HTML page with a navigation bar that links to three other HTML pages.","completion":"<!DOCTYPE html> <html> <head> <title>My Navigation Page</title> </head> <body> <div> <a href=\\"page1.html\\">Page 1</a> <a href=\\"page2.html\\">Page 2</a> <a href=\\"page3.html\\">Page 3</a> </div> </body> </html>"},{"prompt":"mplement a JavaScript ES6 class 'Rectangle' that has two properties length and breadth.","completion":"class Rectangle { constructor(length, breadth) { this.length = length; this.breadth = breadth; } }"},{"prompt":"Write a Python function that finds and returns the number of occurrences of a particular character in a string.","completion":"def countChar(string, char): ctr = 0 for s in string: if s == char: ctr += 1 return ctr"},{"prompt":"Create a CSS stylesheet that colors the background of a webpage with a random color whenever the page is refreshed.","completion":"<!DOCTYPE html> <html> <head> <title>Random Background</title> <style type=\\"text/css\\"> body { background-color: <?php echo '#'.str_pad(dechex(mt_rand(0, 0xFFFFFF)), 6, '0', STR_PAD_LEFT); ?>; } </style> </head> <body> </body> </html>"},{"prompt":"Write a C# method that takes in an integer and multiplies it by 5","completion":"public static int multiplyBy5(int num) { return num * 5; }"},{"prompt":"Write a JavaScript function that takes a string and an array of strings. Return an array with elements from the string filtered by the array of strings provided. string = \\"Apple, Banana, Orange, Kiwi\\"; array = [\\"Apple\\", \\"Orange\\"]","completion":"function filterStrings(string, arr) { let strings = string.split(', '); let result = []; for (let str of strings) { if (arr.includes(str)) { result.push(str); } } return result; }"},{"prompt":"Create a program in Java to reverse a sentence. This is a sample sentence.","completion":"String input = \\"This is a sample sentence\\"; String reversed = new StringBuffer(input) .reverse() .toString(); System.out.println(reversed);"},{"prompt":"Create a program in Python that searches for a word in a string. This is a sample string word","completion":"def search(string, word): if word in string: return \\"The word is present in the sentence\\" else: return \\"The word is not present in the sentence\\""},{"prompt":"Create a program using C++ to check whether a given number is a prime number. 15","completion":"int n = 15; bool prime = true; for(int i = 2; i < n; i++) { if (n % i == 0) { prime = false; break; } } if (prime) { cout << \\"The number is prime\\"; } else { cout << \\"The number is not prime\\"; }"},{"prompt":"Create a function in Java that changes a given string to uppercase. This is a sample string.","completion":"String input = \\"This is a sample string\\"; String upper = input.toUpperCase(); System.out.println(upper);"},{"prompt":"Write a function in C to print numbers from 1 to 100 each in a new line.","completion":"#include<stdio.h> // Function to print number from 1 to 100 void printNumbers() { // Loop to print the numbers from 1 to 100 for (int i = 1; i <= 100; i++) { printf(\\"%dn\\", i); } }"},{"prompt":"Rewrite the following piece of code in Python. for (i = 0; i < 10; i++) if (i % 2 == 0) printf(\\"%d\\", i);","completion":"for i in range(10): if i % 2 == 0: print(i)"},{"prompt":"Create a Java code snippet that takes two integers as parameters and prints the larger one.","completion":"public static void printMax(int a, int b) { if (a > b) System.out.println(a); else System.out.println(b); }"},{"prompt":"Write a SQL query to select all books published after 2015 and sorted alphabetically.","completion":"SELECT * FROM books WHERE YEAR(publication_year) > 2015 ORDER BY book_title ASC;"},{"prompt":"Edit the code to make sure that the sum is printed in the console. function add(a, b) { let result = a+b; return result; }","completion":"function add(a, b) { let result = a+b; console.log('The sum is: ', result); return result; }"},{"prompt":"Write a function that takes a string and a key as parameters and encrypts the string with the key.","completion":"def encrypt(string, key): # Create an empty string that will hold the result encrypted_string = \\"\\" # Loop through the string and encrypt each character for i in range(len(string)): char = string[i] encrypted_char = chr(ord(char) + key) encrypted_string += encrypted_char # Return the encrypted string return encrypted_string"},{"prompt":"Using the given input, write a function to produce a desired output. Input: [1, 4, 8, 9, 10] Desired Output: [[1, 4, 8], [9, 10]]","completion":"def split_list(lst): # Create an empty list result = [] # Iterate through the list and divide it into two parts for i in range(0, len(lst), 3): result.append(lst[i:i+3]) # Return the result return result"},{"prompt":"w would you differentiate a local variable from a global variable?","completion":"A local variable is a variable declared within a block of code, usually within a function. When the block of code ends, the variable is no longer in scope and is destroyed. It is only accessible within the local scope. A global variable is declared outside of any function and is accessible by all code within the same scope. The scope of a global variable is the entire program or file."},{"prompt":"Write a code to traverse a given tree in breadth-first order.","completion":"// function to traverse a tree in breadth-first order function traverseBreadthFirst(root) { // create an empty array to store nodes const nodes = []; // create an empty array to store the visited nodes const visited = []; // add the root node to the array nodes.push(root); // loop through the nodes in the array while (nodes.length) { // get the first node in the array const node = nodes.shift(); // add it to the visited array visited.push(node); // loop through the node's children for (let child of node.children) { // add the child to the array if it is not visited if (!visited.includes(child)) { nodes.push(child); } } } // return the visited array return visited; }"},{"prompt":"What is Minimum Spanning Tree?","completion":"A minimum spanning tree (MST) is a subset of a graph in which all the nodes are connected and the total weight of the edges is minimized. It is used to find the shortest route to connect all the nodes in the graph. A MST always has less weight than any other spanning tree."},{"prompt":"w do functions help with code organization?","completion":"Functions help with code organization by breaking the program up into smaller logical blocks. This makes the code easier to read and maintain. Separating the code into functions also makes it easier to debug and test, as it allows for individual parts of the code to be tested and debugged. Having code organized into functions also makes it easier to reuse code as the functions can be called multiple times."},{"prompt":"Create a MySQL table with a primary key and two other columns.","completion":"CREATE TABLE MyTable ( id INT NOT NULL AUTO_INCREMENT PRIMARY KEY, name VARCHAR(50) NOT NULL, age INT NOT NULL );"},{"prompt":"Explain function overloading in C++.","completion":"Function overloading in C++ allows the same function to have multiple definitions with different parameters. This allows the same function to have different behavior depending on the type and number of parameters that are passed. The compiler determines which version of the function to call by looking at the number and types of arguments."},{"prompt":"What is a syntax error in programming?","completion":"A syntax error is an error in writing code which causes the code to be incorrect according to the programming language's syntax rules. This type of error prevents the code from being executed and can be identified by the compiler or interpreter. Examples of syntax errors include: putting a string in the wrong form, forgetting to add a semicolon at the end of a line, or missing a bracket."},{"prompt":"Create a function that accepts two parameters, a string and a list, and returns the length of the string in the list. string = 'FooBar' list = [\\"FooBar\\", \\"Foo\\", \\"BarFoo\\"]","completion":"def getLength(string, list): return len([x for x in list if x == string])"},{"prompt":"Translate the following sentence into its Python equivalent. \\"If the number is greater than 10, print 'Success'.","completion":"if num > 10: print('Success')"},{"prompt":"Create a new array containing the numbers from 10 to 100 in increments of 5. [10, 15, 20, 25, 30, ..., 95, 100]","completion":"int[] array = new int[19]; int num = 10; for (int i=0; i<19; i++){ array[i] = num; num += 5; }"},{"prompt":"Evaluate the following expression: 25 * 4 - 30 + 30","completion":"25 * 4 - 30 + 30 = 140"},{"prompt":"Write a C# code snippet to print the product of two numbers. num1 = 5 num2 = 7","completion":"Console.WriteLine(\\"Product of two numbers is: \\" + (num1 * num2));"},{"prompt":"Construct an if-else statement in JavaScript to check if a number is even or odd. num = 5","completion":"if(num % 2 == 0){ console.log(\\"Number is Even\\"); } else { console.log(\\"Number is Odd\\"); }"},{"prompt":"Write a Python code snippet to print the minimum value of a given list of numbers. list = [7, 8, 10, 4]","completion":"min_val = min(list) print('Minimum Value:', min_val)"},{"prompt":"Write a SQL query to output the names of people who have visited the website more than 5 times in the last week.","completion":"SELECT * FROM tbl_users WHERE visits > 5 AND create_date > DATE_SUB(NOW(), INTERVAL 1 WEEK);"},{"prompt":"mplement a recursive solution to calculate the nth Fibonacci number.","completion":"def fibonacci(n): if n<0: print(\\"Incorrect input\\") elif n==1: return 0 elif n==2: return 1 else: return fibonacci(n-1)+fibonacci(n-2)"},{"prompt":"Write a Python function to find the largest prime factor of a given integer.","completion":"def largest_prime_factor(n): i = 2 while i * i <= n: if n % i == 0: n = n / i else: i += 1 return n"},{"prompt":"Write a SQL query to update all values in a column called \\"balance\\" to 1000.","completion":"UPDATE table_name SET balance = 1000"},{"prompt":"Write a C program to search an element in an array","completion":"#include <stdio.h> int search(int array[], int n, int x) { int i; for (i = 0; i < n; i++) if (array[i] == x) return i; return -1; } int main(void) { int array[] = { 2, 3, 4, 10, 40 }; int x = 10; int n = sizeof(array) / sizeof(array[0]); int result = search(array, n, x); (result == -1) ? printf(\\"Element is not present in array\\") : printf(\\"Element is present at index %d\\", result); return 0; }"},{"prompt":"Explain how to make a Python script executable on Unix-like systems.","completion":"To make a Python script executable on Unix-like systems, you must make the script file executable and specify the path to the Python interpreter. To do this, you need to add a \\"shebang\\" line at the beginning of the script, which should point to the path of the Python interpreter. This can be done by adding the following line to your script: #!/usr/bin/env python. Next, you must make the script file executable by running the chmod +x command. Finally, you need to specify the path of your script in the system's PATH environment variable so that it can be accessed from anywhere."},{"prompt":"Modify the following code snippet to print the total number of characters in the string. string = 'Hello World!'","completion":"string = 'Hello World!' num_chars = len(string) print(\\"The total number of characters in the string is {}.\\".format(num_chars))"},{"prompt":"Construct a regular expression to extract specific words from a sentence. Sentence: Python is an interpreted, high-level, general-purpose programming language. Words: interpreted, high-level","completion":"\\"\\"\\" Construct a regular expression to extract specific words from a sentence. \\"\\"\\" import re sentence = 'Python is an interpreted, high-level, general-purpose computing language.' words = ['interpreted', 'high-level'] regex = r'b(?:{})b'.format('|'.join(words)) matches = re.findall(regex, sentence) print(matches)"},{"prompt":"Write a code to return the key of the minimum element in a dictionary. dict: {'a': 1, 'b': 20, 'c': 3}","completion":"\\"\\"\\" Write a code to return the key of the minimum element in a dictionary. \\"\\"\\" def min_key(d): if not d: return None min_val = min(d.values()) return [key for key, val in d.items() if val == min_val][0] if __name__ == '__main__': d = {'a': 1, 'b': 20, 'c': 3} print(min_key(d))"},{"prompt":"What is the length of the string \\"Hello World!\\"?","completion":"The length of the string \\"Hello World!\\" is 12."},{"prompt":"Debug the following code so it can print the corresponding JSON data correctly. import json people_string = '{\\"name\\": \\"John Smith\\", \\"age\\": 50, \\"profession\\": \\"engineer\\"}' data = json.loads(people_string) print(\\"Name: \\", data[\\"name\\"])","completion":"import json people_string = '{\\"name\\": \\"John Smith\\", \\"age\\": 50, \\"profession\\": \\"engineer\\"}' data = json.loads(people_string) print(\\"Name: \\", data[\\"name\\"]) print(\\"Age: \\", data[\\"age\\"]) print(\\"Profession: \\", data[\\"profession\\"])"},{"prompt":"Generate a CSS selector to apply the following style attributes to all <p> tags. font-size: 12px; color: #333; font-family: sans-serif;","completion":"p { font-size: 12px; color: #333; font-family: sans-serif; }"},{"prompt":"w would you hash a string using the SHA-256 algorithm in JavaScript?","completion":"const crypto = require('crypto'); const hashString = (string) => { const hash = crypto.createHash('sha256'); hash.update(string); return hash.digest('hex'); };"},{"prompt":"What would you change in the following function to sort a list of numbers in increasing order? let arr = [ 4, 2, 5, 1, 3 ] function bubbleSort(arr) { for (let i = 0; i < arr.length; i++) { for (let j = 0; j < arr.length - i - 1; j++) { if (arr[j] > arr[j + 1]) { let temp = arr[j]; arr[j] = arr[j + 1]; arr[j + 1] = temp } } } }","completion":"let arr = [ 4, 2, 5, 1, 3 ] function bubbleSort(arr) { for (let i = 0; i < arr.length; i++) { for (let j = 0; j < arr.length - i - 1; j++) { if (arr[j] < arr[j + 1]) { let temp = arr[j]; arr[j] = arr[j + 1]; arr[j + 1] = temp } } } }"},{"prompt":"w would you print the following JSON data? { \\"name\\": \\"John Doe\\", \\"age\\": 20, \\"city\\": \\"New York\\" }","completion":"const data = { \\"name\\": \\"John Doe\\", \\"age\\": 20, \\"city\\": \\"New York\\" }; console.log(\`Name: {data.name}, Age: {data.age}, City: {data.city}\`);"},{"prompt":"What would be the result of running the following SQL query? SELECT * FROM products WHERE price < 10","completion":"The result of running the above query would be a list of all products in the products table that have a price less than 10."},{"prompt":"Edit the following code to add an event listener for mouseover events. <div id=\\"container\\">Hello</div> let element = document.getElementById('container');","completion":"<div id=\\"container\\">Hello</div> let element = document.getElementById('container'); element.addEventListener('mouseover', (e) => { // run some code });"},{"prompt":"Generate a regex to match any valid IPv4 address.","completion":"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]).){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])"},{"prompt":"What are the main components of an object oriented programming language?","completion":"The main components of an object oriented programming language are classes, objects, methods, and inheritance. Classes are the blueprint used to create objects, methods are the functions which act on objects, and inheritance is the ability for classes to define a common set of characteristics."},{"prompt":"Explain the difference between a local and a global variable in Python.","completion":"In Python, a local variable is a variable that is only accessible within the scope of where it is defined, while a global variable is accessible throughout the program. All variables declared outside of a function are globally scoped, while variables declared inside a function are locally scoped. Global variables carry their value throughout the program, while a local variable will lose its value when the function containing it is exited."},{"prompt":"Update the following code to make it pass all test cases. def divisible_by_two(numbers): result = [] for num in numbers: if num % 2 == 0: result.append(True) else: result.append(False) return resul","completion":"def divisible_by_two(numbers): result = [] for num in numbers: if num % 2 == 0: result.append(True) else: result.append(False) return result def divisible_by_two(numbers): return [True if num % 2 == 0 else False for num in numbers]"},{"prompt":"What HTML element is used to create a table?","completion":"The HTML element used to create a table is the <table> element."},{"prompt":"Create a datastructure that stores customer information such as customer name, address and phone number. John Smith, 123 Main Street, 555-555-0110","completion":"customer_info = { \\"name\\": \\"John Smith\\", \\"address\\": \\"123 Main Street\\", \\"phone\\": \\"555-555-0110\\" }"},{"prompt":"Create a for loop that iterates from 10 to 20 by 4's.","completion":"for i in range(10, 21, 4): print(i)"},{"prompt":"Write a code to print the first 10 odd numbers.","completion":"for num in range(1, 21, 2): print(num)"},{"prompt":"Create a variable called 'monday' and assign it a value of True.","completion":"monday = True"},{"prompt":"Create a new list 'squared' that contains the squares of all the elements in the list 'nums'. nums = [1, 2, 3, 4]","completion":"squared = [num**2 for num in nums]"},{"prompt":"Write a regular expression to find the first 5-digit number in the given text. The customer's ID is 12345 and his phone number is 555-555-0123","completion":"import re text = \\"The customer's ID is 12345 and his phone number is 555-555-0123\\" pattern = r'd{5}' result = re.search(pattern, text) print(result.group())"},{"prompt":"Create a class called 'Animal' that stores the attributes age and type.","completion":"class Animal: def __init__(self, age, type): self.age = age self.type = type"},{"prompt":"w would you debug the following code? def findNumberSum(numbers): total = 0 for n in numbers: total += n return total","completion":"To debug the code, you could start by adding print statements at different places in the code to find out the output at each step. For instance, you could add print statements to print out the value of the \\"total\\" variable at the beginning, during and after the for loop, or to see the contents of the list \\"numbers\\". Then you can check what value is expected and what value is actually produced for every step, to identify the issue."},{"prompt":"a React.js application, how would you create a state object named \\"userDetail","completion":"To create the state object \\"userDetail\\" in a React.js application, we would first name the class in which we intend to store the state object, and then use the useState hook to initialize the state object in the class. Inside the useState hook, the state object would be declared and set to have an empty object as its initial state. Example: class UserDetailState { const [userDetail, setUserDetail] = useState({}); }"},{"prompt":"Describe a greedy algorithm","completion":"A greedy algorithm is an approach to solving a problem that involves making decisions based on the best immediate payoff, without considering the overall cost. It follows the principle of 'greedy', which involves making a decision with the largest immediate benefit and disregarding the overall cost of the solution. Greedy algorithms are used to solve optimization problems, such as finding the optimal path in a given graph, with the goal of maximizing the benefit of the overall solution."},{"prompt":"w would you break down a large problem into smaller pieces?","completion":"Breaking down a large problem into smaller pieces is a fundamental step in problem-solving. It can be done by first understanding the overall problem and its requirements. Then, the problem should be divided into smaller, more manageable chunks, which can then be solved independently. This process should be repeated until all the pieces of the problem have been divided into isolated tasks. Finally, the isolated pieces can be solved using different strategies, with the ultimate goal of connecting all these smaller solutions together to form the final solution."},{"prompt":"Write a SQL query to delete data from a table named 'customers'.","completion":"DELETE FROM customers;"},{"prompt":"Suggest an algorithm to determine whether a string is a palindrome","completion":"A palindrome is a word, phrase, or sequence that reads the same backward as forward. To determine whether a string is a palindrome, one algorithm could be to compare the reversed characters in the string with the original characters. We can start at the ends of the string, and check if the characters at each end of the string are equal. If they are, we move to the next pair in the middle, and if they are not equal, then the string is not a palindrome."},{"prompt":"Write a CSS code to set a div's height to 500px","completion":"div { height: 500px; }"},{"prompt":"What are the benefits of using multithreading in an application?","completion":"The main benefits of using multithreading in an application are improved performance, increased responsiveness and better utilization of resources such as CPU and memory. When using multithreaded applications, the application can perform multiple tasks concurrently and improve data throughput. Additionally, it can improve scalability, provide complex task management, and manage a large number of resources without significantly slowing down the program."},{"prompt":"a React.js application, how would you set the state object 'userData' to an empty object?","completion":"To set the state object \\"userData\\" to an empty object in a React.js application, we would first name the class in which we intend to store the state object, and then use the useState hook to initialize the state object. Inside the useState hook, the state object would be declared and set to have an empty object as its initial state. Example: class UserDataState { const [userData, setUserData] = useState({}); }"},{"prompt":"w would you design a system to store and access the stored data when a user makes a request?","completion":"To design a system to store and access the stored data when a user makes a request, we could use a client-server model, where the server provides the user with the requested data. The server would use a database to store the data, and when a user makes a request, the server would retrieve the requested data from the database and send it back to the user."},{"prompt":"Given a string \\"Hello, World\\", replace all vowels with '*' Hello, World","completion":"H*ll*, W*rld"},{"prompt":"Given a string \\"Hello, World\\", find the length of the string. Hello, World","completion":"Length of given string: 13"},{"prompt":"Write a CSS rule to change the font-style of all h2 headings to italic.","completion":"h2 { font-style: italic; }"},{"prompt":"Given a 2D array of integers, find the sum of all elements. [[1,2,3], [4,5,6], [7,8,9]]","completion":"Sum of all elements: 45"},{"prompt":"Write a JavaScript program to extract the domain name from a given URL. www.example.com/user","completion":"Domain name: example.com"},{"prompt":"Create a Python class \\"Book\\" with name and price properties.","completion":"class Book: def __init__(self, name, price): self.name = name self.price = price"},{"prompt":"Given a HTML element, color the text blue. <h2>Hello, World!</h2>","completion":"<h2 style=\\"color: blue;\\">Hello, World!</h2>"},{"prompt":"Design a class named Car and build its constructor.","completion":"Class Car{ // constructor Car(){ // instance variables this.make = \\"\\"; this.model = \\"\\"; this.year = 0; } }"},{"prompt":"Using Java, write a function that takes an input string and returns the string reversed. String input = \\"Hello World!\\";","completion":"public static String reverseString(String input) { StringBuilder sb = new StringBuilder(); for (int i = input.length() - 1; i >= 0; i--) { sb.append(input.charAt(i)); } return sb.toString(); }"},{"prompt":"Using Python, create a loop that prints each element in a given list. List = [\\"A\\", \\"B\\", \\"C\\"]","completion":"for item in List: print(item)"},{"prompt":"Write an algorithm that prints the first 10 Fibonacci numbers in descending order.","completion":"# Initialize the first two numbers a = 0 b = 1 # Print the first 10 Fibonacci numbers for i in range(10): # Swap the values a, b = b, a + b # Print the current Fibonacci number print(b) # Reverse the list for _ in range(9, 0, -1): print(_)"},{"prompt":"Create an HTML form that asks for the user's name and age.","completion":"<form> <label for=\\"name\\">Name:</label> <input type=\\"text\\" name=\\"name\\" id=\\"name\\"> <br> <label for=\\"age\\">Age:</label> <input type=\\"number\\" name=\\"age\\" id=\\"age\\"> </form>"},{"prompt":"Using SQL, select the names of all employees with the title \\"Manager\\".","completion":"SELECT name FROM Employees WHERE title = 'Manager';"},{"prompt":"Design a JavaScript function that checks if a number is between 0 and 100.","completion":"function isInRange(num) { return num >= 0 && num <= 100; }"},{"prompt":"Write a C# class that allows a user to enter a set of numbers and add them up.","completion":"public class NumberAdder { int sum = 0; // Method to add the given numbers public void addNumbers(int[] numbers) { for (int i = 0; i < numbers.Length; i++){ this.sum += numbers[i]; } } }"},{"prompt":"Write a Bash script that requires the user to enter their name and prints it to the console.","completion":"#!/bin/bash echo \\"Please enter your name: \\" read name echo \\"Hello, name!\\""},{"prompt":"Construct an HTML table with two columns, \\"First Name\\" and \\"Last Name\\", and 5 rows of example data.","completion":"<table> <tr> <th>First Name</th> <th>Last Name</th> </tr> <tr> <td>John</td> <td>Doe</td> </tr> <tr> <td>Jane</td> <td>Smith</td> </tr> <tr> <td>Tom</td> <td>Jackson</td> </tr> <tr> <td>Ann</td> <td>Miller</td> </tr> </table>"},{"prompt":"Convert the following array of strings to an array of integers using JavaScript. [\\"12\\", \\"21\\", \\"24\\", \\"44\\"]","completion":"let arr = [\\"12\\", \\"21\\", \\"24\\", \\"44\\"]; let intArr = arr.map(x => parseInt(x)); console.log(intArr); // Output = [12, 21, 24, 44]"},{"prompt":"Make a regex pattern that returns the name and the day of the week given in the paragraph. text = \\"My name is John, and today is Monday","completion":"import re text = \\"My name is John, and today is Monday\\" pattern = r\\"My name is (w+), and today is (w+)\\" match = re.search(pattern, text) name = match.group(1) day = match.group(2) print(name) # Output: John print(day) # Output: Monday"},{"prompt":"Create a Python program that takes as input an email address and validates it using a regex pattern. email = 'example@gmail.com'","completion":"import re def validate_email(email): \\"\\"\\"Validates an email address using regex\\"\\"\\" pattern = r\\"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+\\" match = re.search(pattern, email) if match: return True else: return False email = 'example@gmail.com' is_valid_email = validate_email(email) print(is_valid_email) # Output: True"},{"prompt":"Write a JavaScript function to check if a given key already exists in an object. myObj = {key1: 10, key2: 'John'}","completion":"function checkKeyExists(obj, key) { return obj.hasOwnProperty(key); // Returns true or false } myObj = {key1: 10, key2: 'John'} if (checkKeyExists(myObj, 'key1')) { console.log('key1 exists'); }"},{"prompt":"Create a program that takes as input an array of numbers and calculates the sum of all numbers in the array. arr = [10,20,30,40]","completion":"def get_sum(input_arr): \\"\\"\\"Returns the sum of all numbers in an input array\\"\\"\\" sum = 0 for num in input_arr: sum += num return sum arr = [10,20,30,40] total = get_sum(arr) print(total) # Output: 100"},{"prompt":"Create a SQL query that returns the name, age and salary for all employees whose age is greater than 40.","completion":"SELECT name, age, salary FROM Employees WHERE age > 40;"},{"prompt":"Create a function that takes as argument the number of elements and return a list containing the Fibonacci sequence up to that number. n = 10","completion":"def get_fibonacci_sequence(n): \\"\\"\\"Returns a list containing the Fibonacci sequence up to number n\\"\\"\\" fib_list = [0, 1] if n <= 2: return fib_list[:n] for i in range(2, n): fib_list.append(fib_list[i-2] + fib_list[i-1]) return fib_list n = 10 fib_sequence = get_fibonacci_sequence(n) print(fib_sequence) # Output: [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]"},{"prompt":"Make a regex pattern that checks if a string is in the valid phone number format 555-555-5555.","completion":"import re pattern = r\\"^d{3}-d{3}-d{4}\\" if re.match(pattern, \\"555-555-5555\\"): print(\\"Valid Phone Number Format\\") else: print(\\"Invalid Phone Number Format\\") # Output: Valid Phone Number Format"},{"prompt":"Create a C++ program that reads the user's name and prints a greeting.","completion":"#include<iostream> #include<string> using namespace std; int main() { string name; cout << \\"Please enter your name: \\"; cin >> name; cout << \\"Hello \\" << name << \\"!\\" << endl; return 0; } # Output: Hello <user's name>!"},{"prompt":"Create a class named Person with two properties: name and age.","completion":"class Person { private: string name; int age; public: Person(string name, int age) { this->name = name; this->age = age; } void setName(string name) { this->name = name; } void setAge(int age) { this->age = age; } string getName() { return name; } int getAge() { return age; } };"},{"prompt":"Write a Ruby program to calculate the Simple Interest using Principal, Rate and Time. Principal = 1000 Rate = 2 Time = 2","completion":"def simple_interest(principal, rate, time) \\"\\"\\"Returns the simple interest that is computed using the principle amount, rate and time\\"\\"\\" return principal * rate * time / 100.0 end principal = 1000 rate = 2 time = 2 simple_interest = simple_interest(principal, rate, time) puts simple_interest # Output: 40.0"},{"prompt":"Create a list comprehension to generate a list of all the words in the sentence \\"Python is amazing\\".","completion":"words = [word for word in \\"Python is amazing\\".split(' ')]"},{"prompt":"Create a function that takes in an integer \\"n\\" and prints all perfect numbers between 0 to n. n = 20","completion":"def perfect_numbers(n): perfect_numbers = [] for number in range(1, n+1): sum_divisors = 0 for divisor in range(1, number): if number % divisor == 0: sum_divisors += divisor if sum_divisors == number: perfect_numbers.append(number) return perfect_numbers print(perfect_numbers(n))"},{"prompt":"Create a function that takes in two arguments \\"a\\" and \\"b\\" and prints out the greatest common divisor between them. a = 6 b = 36","completion":"def gcd(a, b): if (a == 0): return b return gcd(b % a, a) print(gcd(a, b))"},{"prompt":"Execute a SQL query to find the 2 most populous countries in the world.","completion":"SELECT TOP 2 name, population FROM WorldWide ORDER BY population DESC;"},{"prompt":"Need to write a function to encrypt a message using the caesar cipher, which takes the key as an argument. message = \\"Hello World\\" key = 3","completion":"def encrypt_caesar_cipher(message, key): encrypted_message = \\"\\" for char in message: if not char.isalpha(): encrypted_message += char else: encrypted_char = chr((ord(char) + key - 97) % 26 + 97) encrypted_message += encrypted_char return encrypted_message print(encrypt_caesar_cipher(message, key))"},{"prompt":"Create a code to get the average value of a given list. numbers = [1, 4, 9, 5]","completion":"def get_average(numbers): sum_nums = 0 for num in numbers: sum_nums += num return sum_nums / len(numbers) print(get_average(numbers))"},{"prompt":"Convert the following infix expression to postfix notation. A + B * C","completion":"A B C * +"},{"prompt":"Create a function to calculate the binomial coefficient for two integers. n = 5 r = 3","completion":"def binomial_coefficient(n, r): fact = 1 if r > n - r: r = n - r for i in range(r): fact *= (n) - i fact /= (i+1) return int(fact) print(binomial_coefficient(n, r))"},{"prompt":"Create an HTML table with a header row and two columns.","completion":"<table> <tr> <th>Column 1</th> <th>Column 2</th> </tr> </table>"},{"prompt":"Compute the number of ways to make a change of N with coins of given denominations. N = 4; Coins = {1,2,3}","completion":"def change(n, coins): m = len(coins) table = [[0 for x in range(m)] for x in range(n+1)] # Fill the entries for 0 value case (n = 0) for i in range(m): table[0][i] = 1 # Fill rest of the table entries in bottom-up manner for i in range(1, n+1): for j in range(m): # Count of solutions including coins[j] x = table[i - coins[j]][j] if i-coins[j] >= 0 else 0 # Count of solutions excluding coins[j] y = table[i][j-1] if j >= 1 else 0 # total count table[i][j] = x + y return table[n][m-1]"},{"prompt":"Develop an algorithm to determine if a given integer is an Armstrong number or not. 153","completion":"def is_armstrong_number(num): # initialize sum sum = 0 temp = num while temp > 0: digit = temp % 10 sum += digit ** 3 temp //= 10 if num == sum: return True return False"},{"prompt":"Create an algorithm for finding the minimum element in an array of integers. [3, 7, 14, 2, 11]","completion":"def find_min(array): min_element = array[0] for i in range(1, len(array)): if array[i] < min_element: min_element = array[i] return min_element"},{"prompt":"Develop a program to generate a random number in a given range. Lower = 5 and Upper = 20","completion":"import random def generate_random_number(lower, upper): return random.randint(lower, upper)"},{"prompt":"Find the maximum of the numbers in a given array. [1, 23, 87, -5, 33]","completion":"def find_max(arr): max_element = arr[0] for i in range(1, len(arr)): if arr[i] > max_element: max_element = arr[i] return max_element"},{"prompt":"Develop an algorithm to find the maximum consecutive repeating character in a given string. \\"aaaaabcdddddefgggg","completion":"def find_max_consecutive_repeating_character(str): maxCount = 0 tempCount = 1 previous = '' # count the number of occurrences # of same character. for i in range(len(str)): if str[i] == previous: tempCount += 1 else: # Update maximum if required if tempCount > maxCount: maxCount = tempCount tempCount = 1 previous= str[i] return maxCount"},{"prompt":"Create a program in Java to check whether the given word is a palindrome or not. \\"radar","completion":"public class Palindrome{ public static boolean checkPalindrome(String str){ int i=0,j=str.length()-1; while(i<j){ if(str.charAt(i) != str.charAt(j)) return false; i++;j--; } return true; } }"},{"prompt":"Create an algorithm that takes two numbers, a and b, and finds their greatest common divisor (GCD). a = 12, b = 18","completion":"// Algorithm to find the GCD of two numbers // Function to find GCD function findGCD(a, b) { // If both a and b are 0 if (a == 0 && b == 0) return 0; // If a is 0, GCD is b if (a == 0) return b; // If b is 0, GCD is a if (b == 0) return a; // Find GCD recursively return findGCD(b, a % b); } // Variable to hold a and b var a = 12; var b = 18; // Find GCDs var gcd = findGCD(a, b); // Print GCD console.log(\\"The GCD of\\", a, \\"and\\", b, \\"is\\", gcd);"},{"prompt":"Create a conditional statement in Java that prints \\"Welcome!\\" if the given argument is \\"Hi\\". \\"H","completion":"if (argument.equals(\\"Hi\\")) { System.out.println(\\"Welcome!\\"); }"},{"prompt":"Find the product of the elements of a given array in Python. [1, 2, 3]","completion":"def product(arr): product = 1 # Iterate the array for i in arr: product = product * i return product # Driver Code arr = [1, 2, 3] print(product(arr)) # 6"},{"prompt":"Write an SQL query that returns the name of all users from the \\"Users\\" table.","completion":"SELECT Name FROM Users;"},{"prompt":"Create an algorithm in Python that converts a given number from base 10 to binary. 8","completion":"def base10_to_binary(n): # Create an empty binary array binary_arr = [0] * (int(math.log2(n)) + 1) # Iterate through binary array for i in range(len(binary_arr) - 1, -1, -1): if n >= pow(2, i): n -= pow(2, i) binary_arr[len(binary_arr) - i - 1] = 1 return binary_arr # Driver Code n = 8 print(base10_to_binary(n)) # [1, 0, 0, 0]"},{"prompt":"Create a function in Java that finds the difference between the largest and the smallest elements in a given array. [1, 5, 10, 20]","completion":"public static int arrayMaxMinDiff(int[] arr) { // Initialize greatest and smallest int max = arr[0]; int min = arr[0]; // Iterate the array and find the max & min for (int i = 0; i < arr.length; i++) { if (arr[i] > max) max = arr[i]; if (arr[i] < min) min = arr[i]; } // Calculate & return the difference int diff = max - min; return diff; } // Driver Code int[] arr = {1, 5, 10, 20}; int diff = arrayMaxMinDiff(arr); System.out.println(\\"Difference between largest & smallest elements = \\" + diff); # Output Difference between largest & smallest elements = 19"},{"prompt":"Create an HTML element that prints \\"Hello, World!\\" on the screen using JavaScript.","completion":"<script> document.write(\\"Hello, World!\\"); <\/script>"},{"prompt":"Find the sum of the first 10 natural numbers using a loop in C.","completion":"// Function to find the sum of first n natural numbers int findSum(int n) { int sum = 0; for (int i = 0; i <= n; i++) sum = sum + i; return sum; } // Driver program int n = 10; printf(\\"Sum of first %d natural numbers is %dn\\", n, findSum(n)); # Output Sum of first 10 natural numbers is 55"},{"prompt":"Write a query in SQL to select all columns from \\"Users\\" table where the name is \\"John\\".","completion":"SELECT * FROM Users WHERE Name=\\"John\\";"},{"prompt":"Write a loop statement to delete all even numbers from the given array. [1, 2, 3, 4, 5]","completion":"arr = [1, 2, 3, 4, 5] for i in range(len(arr)): if arr[i] % 2 == 0: del arr[i]"},{"prompt":"Find the index of the maximum value. [3, 5, 9, 11, 18, 23, 27]","completion":"5"},{"prompt":"Change this sentence into a valid mathematical expression. Four minus five","completion":"4 - 5"},{"prompt":"Convert the given list into a key-value dictionary. [1, 'a', 2, 'b', 3, 'c']","completion":"dict = {1: 'a', 2: 'b', 3: 'c'}"},{"prompt":"Write an SQL statement to add a new row with values in the given products table. Table Name: products Columns: product_id, product_name, product_price Values: 5373, 'Disc', 15.99","completion":"INSERT INTO products (product_id, product_name, product_price) VALUES (5373, 'Disc', 15.99)"},{"prompt":"Create a regular expression that matches any URL.","completion":"Regex: ^(http://www.|https://www.|http://|https://)?[a-z0-9]+([-.]{1}[a-z0-9]+)*.[a-z]{2,5}(:[0-9]{1,5})?(/.*)?"},{"prompt":"Find the sum of all elements in the given 2D array. [[1, 2, 3],[4, 5, 6],[7, 8, 9]]","completion":"45"},{"prompt":"Write an array sorting function that sorts the array in ascending order. [3, 1, 9, 5, 4]","completion":"def array_sort(arr): arr.sort() return arr array_sort([3, 1, 9, 5, 4])"},{"prompt":"Given a binary tree, write a method to compute the maximum path sum. 10 / 2 10 / / 20 1 -25 6","completion":"public int maxPathSum(TreeNode root) { int result = Integer.MIN_VALUE; if (root == null) return result; Stack<TreeNode> stack = new Stack<>(); stack.push(root); while (!stack.isEmpty()) { TreeNode currentNode = stack.pop(); result = Math.max(result, maxPathSum(currentNode)); if (currentNode.left != null) { stack.push(currentNode.left); } if (currentNode.right != null) { stack.push(currentNode.right); } } return result; } public int maxPathSum(TreeNode root) { if (root == null) return 0; int sum = root.val; int leftSum = maxPathSum(root.left); int rightSum = maxPathSum(root.right); return Math.max(sum + leftSum + rightSum, sum + Math.max(leftSum, rightSum)); }"},{"prompt":"Create a JavaScript script to toggle a class on the page. <html> <body> <div id=\\"test\\" class=\\"test-class\\">Hello World!</div> </body> </html>","completion":"<script> //Toggle the class on click document.getElementById(\\"test\\").addEventListener(\\"click\\", function(){ this.classList.toggle(\\"test-class\\"); }); <\/script>"},{"prompt":"Write a function that takes three integers and returns the maximum of the three. -2, 5, 7","completion":"def max_of_three(x, y, z): return max(x, y, z) print(max_of_three(-2, 5, 7)) # Output: 7"},{"prompt":"Rewrite the given loop in R. list = [1, 2, 3, 4, 5] for i in range(len(list)): print(list[i])","completion":"list <- c(1, 2, 3, 4, 5) for (i in seq_along(list)) { print(list[i]) }"},{"prompt":"Given a linked list, reverse the nodes of a linked list k at a time and return its modified list. Input: 1->2->3->4->5->NULL, k = 2","completion":"public ListNode reverseKGroup(ListNode head, int k) { ListNode curr = head; ListNode prev = null; int count = 0; while (curr != null && count != k) { ListNode next = curr.next; curr.next = prev; prev = curr; curr = next; count++; } if (next != null) { head.next = reverseKGroup(next, k); } return prev; }"},{"prompt":"Create a bash script that prints the contents of a directory.","completion":"#!/bin/bash # This script prints out the # names of files in the current directory DIR=\\"( cd \\"( dirname \\"{BASH_SOURCE[0]}\\" )\\" >/dev/null 2>&1 && pwd )\\" for file in \\"DIR\\"/*; do if [ -f \\"file\\" ] then # File exists by_no_extension=\\"{file%.*}\\" echo \\"{by_no_extension*/}\\" fi done"},{"prompt":"Build a PHP class that handles user data for a website.","completion":"class User { private name; private email; private password; public function __construct(name, email, password) { this->name = name; this->email = email; this->password = password; } public function getName(){ return this->name; } public function getEmail(){ return this->email; } public function setPassword(newPassword){ this->password = newPassword; } public function validatePassword(password){ return this->password === password; } }"},{"prompt":"Write a class in Java that prints out the nth number of the Fibonacci sequence using recursion. 6","completion":"public class Fibonacci { static int n1=0,n2=1,n3=0; static void printFibonacci(int count){ if(count>0){ n3 = n1 + n2; n1 = n2; n2 = n3; System.out.print(\\" \\"+n3); printFibonacci(count-1); } } public static void main(String args[]){ int count=6; System.out.print(n1+\\" \\"+n2); printFibonacci(count-2); } }"},{"prompt":"Create a SQL script to find the name of a teacher and his/her department given the teacher's ID. The teacher has ID 1001.","completion":"SELECT teacher.name, department.name FROM teacher LEFT JOIN department ON teacher.department_id = department.id WHERE teacher_id = 1001;"},{"prompt":"Create an SQL query to find the id of the customer whose name is \\"John Doe\\".","completion":"SELECT id FROM customers WHERE name = 'John Doe';"},{"prompt":"Design an API endpoint that takes two numbers and returns the sum of the two using JavaScript","completion":"app.get(\\"/sum/:num1/:num2\\", (req, res) => { const num1 = req.params.num1; const num2 = req.params.num2; const result = parseInt(num1) + parseInt(num2); res.status(200).send({ result: result }); });"},{"prompt":"Write a code snippet to read characters from a given string until a whitespace is encountered","completion":"def read_until_space(string): result = \\"\\" for char in string: if char == \\" \\": break result += char return result"},{"prompt":"Modify the following code to take in a list of numbers and return the average.","completion":"def average(numbers): total = 0 for num in numbers: total += num return total / len(numbers)"},{"prompt":"Design a function in Python that takes a list of strings and returns a new list with words in reverse order.","completion":"def reverse_words(words): return [word[::-1] for word in words]"},{"prompt":"Create a regular expression that matches any word starting with the letter \\"a\\".","completion":"^aw*"},{"prompt":"Develop an algorithm to search for a particular element in an array. [1, 9, 5, 8, 4, 9], element to search for: 9","completion":"def search(arr, el): for i in range(len(arr)): if arr[i] == el: return i return -1"},{"prompt":"Write a SQL query to retrieve the latest shipment date for each product in the warehouse.","completion":"SELECT productID, MAX(ship_date) FROM shipments GROUP BY productID"},{"prompt":"Develop a program to delete all nodes of a linked list at a given position. [3, 9, 1, 5], position to delete: 2","completion":"# Node class class Node: def __init__(self, data): self.data = data self.next = None # Linked List class class LinkedList: def __init__(self): self.head = None # function to add a node at the given position def deleteNode(self, pos): # if list is empty if self.head == None: return # store head node temp = self.head # if head needs to be removed if pos == 0: self.head = temp.next temp = None return # find previous node of the node to be deleted for i in range(pos -1 ): temp = temp.next if temp is None: break # if position is more than number of nodes if temp is None: return if temp.next is None: return # Node temp.next is the node to be deleted # store pointer to the next of node to be deleted next = temp.next.next # Unlink the node from linked list temp.next = None temp.next = next"},{"prompt":"Generate a list comprehension in Python to generate a list of integers from 1 to 50.","completion":"[x for x in range(1, 51)]"},{"prompt":"Write a JavaScript program to remove all characters from a string that appear more than once. string = \\"abbccddee","completion":"let string = \\"abbccddee\\"; let res = \\"\\"; let seen = {}; for (let letter of string) { if (!seen[letter]) { res += letter; seen[letter] = true; } } console.log(res); //Output is: abcde"},{"prompt":"Design an algorithm to search for a particular node in a binary tree using breadth-first search.","completion":"def breadthFirstSearch(root, target): if root is None: return False queue = [root] while len(queue) > 0: node = queue.pop(0) if node.val == target: return True if node.left is not None: queue.append(node.left) if node.right is not None: queue.append(node.right) return False"},{"prompt":"Develop an algorithm to traverse a linked list in a reverse order.","completion":"def traverseReverse(head): if head is None: return stack = [] curr = head while curr is not None: stack.append(curr) curr = curr.next while len(stack) > 0: curr = stack.pop() print(curr.val)"},{"prompt":"Compose a Java program to print a given pattern on the screen. N = 5","completion":"public class Pattern { public static void main(String[] args) { int N = 5; for (int i = 0; i < N; i++) { for (int j = 0; j < N; j++) { System.out.print(Math.abs(i-j)+1 + \\" \\"); } System.out.println(); } } } // Output 1 2 3 4 5 2 1 2 3 4 3 2 1 2 3 4 3 2 1 2 5 4 3 2 1"},{"prompt":"Develop a C program to identify and remove duplicates from an array. [1, 3, 2, 3, 4, 5, 2]","completion":"#include<stdio.h> // Function to remove duplicates from an array void RemoveDuplicates(int arr[], int n) { // Existing elements in array int temp[n]; // Initialize the elements of temp[] for (int i=0; i<n; i++) temp[i] = arr[i]; // Sort temp[] for (int i=0; i<n-1; i++) for (int j=i+1; j<n; j++) if (temp[i] > temp[j]) { int t = temp[i]; temp[i] = temp[j]; temp[j] = t; } // Index of next unique element int j = 0; // Traverse temp[] and make unique elements // of arr[] for (int i=0; i<n-1; i++) if (temp[i] == temp[i+1]) continue; else temp[j++] = arr[i]; // Set the last element as the only // unique element temp[j++] = arr[n-1]; // Copy the updated temp[] to arr[] for (int i=0; i<j; i++) arr[i] = temp[i]; } // Driver Code int main() { int arr[] = {1, 3, 2, 3, 4, 5, 2}; int n = sizeof(arr) / sizeof(arr[0]); printf(\\"Original array : \\"); for (int i=0; i<n; i++) printf(\\"%d \\", arr[i]); RemoveDuplicates(arr, n); printf(\\"nArray after removing duplicates : \\"); for (int i=0; i<n; i++) printf(\\"%d \\", arr[i]); return 0; }"},{"prompt":"Write a SQL query that will find the records with duplicate email address in the given table. Users Table id | name | email 1 | John | john@example.com 2 | Bill | bill@example.com 3 | Mary | mary@example.com 4 | Mary | mary@example.com 5 | Mark | mark@example.com","completion":"SELECT email FROM Users GROUP BY email HAVING COUNT(*) > 1;"},{"prompt":"Create a C++ code that will find the second maximum element in an array of numbers. [1, 2, 3, 4, 5]","completion":"#include <bits/stdc++.h> using namespace std; // function to find the second maximum element in an array int findSecondMax(int arr[], int n) { // Initialize maximum and second maximum int max = INT_MIN; int smax = INT_MIN; for (int i = 0; i < n; i++) { // If current element is greater than max if (arr[i] > max) { // update second maximum smax = max; // update maximum element max = arr[i]; } // If arr[i] is in between max and second maximum else if (arr[i] > smax && arr[i] != max) smax = arr[i]; } // return second maximum return smax; } // Driver Program int main() { int arr[] = { 2, 1, 3, 4, 5 }; int n = 5; cout << findSecondMax(arr, n) << endl; return 0; } Output: 4"},{"prompt":"Create a Python script for creating a random string of given length. Length of 8","completion":"import random import string def random_string(length): # Create a list of characters to be used in the random string char_list = list(string.ascii_letters + string.digits) # Create the random string with the given length random_string = ''.join([random.choice(char_list) for i in range(length)]) # Return the random string return random_string if __name__ == '__main__': # Define the length of the random string length = 8 # Call the function to generate the random string random_str = random_string(length) # print the generated string print('Random string:', random_str) Output: Random string: fdLbBi49"},{"prompt":"Edit the following Python code to combine two lists. list1 = [1, 2, 3] list2 = [4, 5, 6]","completion":"list1 = [1, 2, 3] list2 = [4, 5, 6] # Combine both the lists combined_list = list1 + list2 # Print the combined list print(combined_list) Output: [1, 2, 3, 4, 5, 6]"},{"prompt":"Develop a Python program that creates a random password of length 8 characters.","completion":"import string import random length = 8 all_characters = string.ascii_letters + string.digits + string.punctuation password = \\"\\".join(random.choice(all_characters) for i in range(length)) print(password)"},{"prompt":"Compose a Java program that finds the factorial of a number. n = 5","completion":"public class Factorial { public static void main(String[] args) { int n = 5; int result = 1; for (int i = n; i >= 1; i--) { result = result * i; } System.out.println(result); } }"},{"prompt":"Write a JavaScript program to calculate the amount of money saved by an individual over 10 years given the annual deposits and annual interest rate. deposits = 1000 and rate = 5%","completion":"const deposits = 1000; const rate = 0.05; let totalSavings = 0; for (let i = 1; i <= 10; i++) { totalSavings += deposits * (1 + rate); } console.log(totalSavings); //outputs amount saved over 10 year period"},{"prompt":"Construct a C program to print the Fibonacci series up to n terms. n = 10","completion":"#include <stdio.h> int main() { int n, i, t1 = 0, t2 = 1, nextTerm; n = 10; printf(\\"Fibonacci Series: \\"); for (i = 1; i <= n; ++i) { printf(\\"%d, \\", t1); nextTerm = t1 + t2; t1 = t2; t2 = nextTerm; } return 0; }"},{"prompt":"Create a Java program to list out all prime numbers between 1 and n. n = 20","completion":"public class AllPrimeNumbers { public static void main(String args[]) { int n = 20; System.out.print(\\"All Prime Numbers between 1 and \\" + n + \\" are: \\"); for (int i = 2; i <= n; i++) { boolean isPrime = true; for (int j = 2; j < i; j++) { if (i % j == 0) { isPrime = false; break; } } if (isPrime) { System.out.print(i + \\" \\"); } } } }"},{"prompt":"Develop a program in Ruby to get the sum of an array of numbers. nums = [1, 2, 3, 4, 5]","completion":"nums = [1, 2, 3, 4, 5] def sum_array(nums) sum = 0 nums.each { |n| sum += n } return sum end puts sum_array(nums)"},{"prompt":"Construct a SQL query to find the top 3 highest scored games.","completion":"SELECT name, score FROM Games ORDER BY score DESC LIMIT 3;"},{"prompt":"Write a C# program to sort a given array using the Quick Sort algorithm. array = [8, 4, 1, 9, 6]","completion":"using System; namespace QuickSortExample { class Program { static void Main(string[] args) { int[] array = { 8, 4, 1, 9, 6 }; int left = 0; int right = array.Length - 1; quickSort(array, left, right); Console.WriteLine(\\"Sorted array is:\\"); foreach (int val in array) { Console.WriteLine(val); } } static void quickSort(int[] array, int left, int right) { if (left < right) { int pivotIndex = partition(array, left, right); quickSort(array, left, pivotIndex - 1); quickSort(array, pivotIndex + 1, right); } } static int partition(int[] array, int left, int right) { int pivot = array[right]; int pivotIndex = left; for (int i = left; i < right; i++) { if (array[i] <= pivot) { swap(array, i, pivotIndex); pivotIndex++; } } swap(array, right, pivotIndex); return pivotIndex; } static void swap(int[] array, int i, int j) { int temp = array[i]; array[i] = array[j]; array[j] = temp; } } }"},{"prompt":"Develop a PHP program to extract a substring from a given string. string = \\"Hello World!\\", start = 1, length = 8","completion":"<?php string =\\"Hello World!\\"; start = 1; length = 8; extractedString = substr(string, start, length); echo extractedString; ?>"},{"prompt":"What is the maximum value of an integer in Java?","completion":"In Java, the maximum value of an integer is 2147483647."},{"prompt":"Create a SQL statement to retrieve all data from the \\"users\\" table where the \\"name\\" field is equal to \\"John Smith\\".","completion":"SELECT * FROM users WHERE name = 'John Smith';"},{"prompt":"Write HTML code to create a table containing the following information: Name, Age, Gender.","completion":"<table> <tr> <th>Name</th> <th>Age</th> <th>Gender</th> </tr> <tr> <td>John Smith</td> <td>30</td> <td>Male</td> </tr> </table>"},{"prompt":"Create an HTML form containing four text inputs: Name, Email, Phone Number and Address.","completion":"<form> <label>Name: <input type=\\"text\\" name=\\"name\\"> </label> <label>Email: <input type=\\"text\\" name=\\"email\\"> </label> <label>Phone Number: <input type=\\"text\\" name=\\"phone\\"> </label> <label>Address: <input type=\\"text\\" name=\\"address\\"> </label> </form>"},{"prompt":"Write Android code for creating an intent for taking a photo.","completion":"Intent takePictureIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE); if (takePictureIntent.resolveActivity(getPackageManager()) != null) { startActivityForResult(takePictureIntent, REQUEST_IMAGE_CAPTURE); }"},{"prompt":"Create a PHP function to check if a given string starts with a given substring.","completion":"function startsWith(string, input) { return substr(string, 0, strlen(input)) === input; }"},{"prompt":"Design a Java class for representing a stack data structure.","completion":"public class MyStack { int top; int[] stackArray; // Constructor to initialize public MyStack(int capacity) { stackArray = new int[capacity]; top = -1; } // Push an element to the top of the stack public void push(int data) { stackArray[++top] = data; } // Pop an element from the top of the stack public int pop() { return stackArray[top--]; } // peek or peak an element from the top of the stack public int peek() { return stackArray[top]; } // Check if the stack is empty public boolean isEmpty() { return (top == -1); } // Return the size of the stack public int size() { return top + 1; } }"},{"prompt":"Using Java, write a program to sort a provided array of integers in ascending order. [2, 5, 3, 1, 9, 4]","completion":"public class SortIntArray{ public static void main(String[] args) { int[] intArray = {2, 5, 3, 1, 9, 4}; Arrays.sort(intArray); System.out.println(\\"Sorted elements are:\\"); for(int i : intArray){ System.out.println(i); } } }"},{"prompt":"Using CSS, write a code snippet to display a text shadow with a blur radius of 8px.","completion":"text-shadow: 0px 0px 8px rgb(0, 0, 0);"},{"prompt":"Write an SQL query to select the name and age of all customers in London.","completion":"SELECT name, age FROM Customers WHERE city = 'London';"},{"prompt":"Using HTML, create a <div> element with an id \\"mainBox\\" and a width of 75%.","completion":"<div id=\\"mainBox\\" style=\\"width:75%\\"></div>"},{"prompt":"Write a PHP script to print out all the odd numbers between 10 and 50.","completion":"for (i=10; i<=50; i++){ if (i%2 != 0){ echo i.\\"n\\"; } }"},{"prompt":"Using HTML, create a navigation bar with 3 links \\"Home\\", \\"About\\", and \\"Contact\\".","completion":"<nav> <a href=\\"home.html\\">Home</a> - <a href=\\"about.html\\">About</a> - <a href=\\"contact.html\\">Contact</a> </nav>"},{"prompt":"Using C++, write a program to sort an array of strings alphabetically. [\\"Hello\\", \\"World\\", \\"This\\", \\"Is\\", \\"A\\", \\"Test\\"]","completion":"#include<iostream> #include<algorithm> using namespace std; int main() { string arr[] = { \\"Hello\\", \\"World\\", \\"This\\", \\"Is\\", \\"A\\", \\"Test\\" }; int n = sizeof(arr) / sizeof(arr[0]); sort(arr, arr + n); for (int i = 0; i < n; i++) cout << arr[i] << \\" \\"; return 0; }"},{"prompt":"Create a class called Vehicle with members model, manufacturer, and color.","completion":"class Vehicle: def __init__(self, model, manufacturer, color): self.model = model self.manufacturer = manufacturer self.color = color"},{"prompt":"Write a function to extract a specific key from a dictionary. {'a':1, 'b':2, 'c':3}","completion":"def extract_key(dictionary, key): return dictionary.get(key)"},{"prompt":"Construct a for loop to iterate over a range of 10 numbers, printing out the square of each.","completion":"for i in range(1, 11): print(i*i)"},{"prompt":"Write a code to decode a given URL encoded string. %40%7C%2523%5B","completion":"def decode_url(string): string = string.replace('%40', '@') string = string.replace('%7C', '|') string = string.replace('%2523', '#') string = string.replace('%5B', '[') return string"},{"prompt":"Create a function that given two strings, returns a new string with the characters of the two strings alternating. ('abcd', 'efgh')","completion":"def alternating_strings(str1, str2): result = \\"\\" for i in range(min(len(str1), len(str2))): result += str1[i] + str2[i] # take care of the rest of the elements if len(str1) > len(str2): result += str1[len(str1)-1] else: result += str2[len(str2)-1] return result"},{"prompt":"Create a code that takes two strings and checks whether they are a pair or not. ('AB', 'CD')","completion":"def is_pair(str1, str2): return str1[0] == str2[0] and str1[1] == str2[1]"},{"prompt":"Create a dictionary from a given list of tuples. [('a', 1), ('b', 2), ('c', 3)]","completion":"def list_to_dict(tuples_list): result = {} for tuple_ in tuples_list: result[tuple_[0]] = tuple_[1] return result"},{"prompt":"Write code for finding the maximum of two numbers given as input. x=15, y=17","completion":"let maxNum = 0; if (x > y) { maxNum = x; } else { maxNum = y; } console.log(\\"The maximum of x and y is:\\", maxNum);"},{"prompt":"Construct the SQL query needed to create a table with given columns. Table name: customers Columns: ID (INT), Name (VARCHAR (100)), Phone (INT), City (VARCHAR (100))","completion":"CREATE TABLE customers ( ID INT, Name VARCHAR(100), Phone INT, City VARCHAR(100) );"},{"prompt":"Classify the types of sentences in the given text. The quick brown fox jumped over the lazy dog. She jumped happily.","completion":"The first sentence is a declarative sentence. The second sentence is an exclamatory sentence."},{"prompt":"Solve this math problem using Python code. Problem: Find the 3 terms in an arithmetic progression whose sum is 42 and the common difference is 5.","completion":"#Find the first term a = (42/3) - (2*5) a = 10 #Find the other two terms b = a + 5 c = b + 5 #Print the answer print(\\"The 3 terms in an arithmetic progression whose sum is 42 and the common difference is 5 are:\\", a, b, c)"},{"prompt":"Write code for converting each character of a string to uppercase. String: \\"gpt is gre","completion":"let upperCaseStr = \\"\\"; for (let char of str) { upperCaseStr += char.toUpperCase(); } console.log(\\"Uppercase string:\\", upperCaseStr);"},{"prompt":"Calculate the standard deviation of the given set of numbers. [9, 2, 5, 4, 12, 7, 8, 11, 9, 3, 7, 4, 12, 5, 4, 10, 9, 6, 9, 4]","completion":"Standard deviation of the given set of numbers: 3.26"},{"prompt":"Describe the process of Gradient Descent algorithm.","completion":"Gradient Descent is an algorithm used for finding the minimum value of a given function by iteration. The process begins with initializing the parameters at a random value and then computing the gradient of the cost function. The gradient can then be used to update the parameters in the direction of steepest descent. The process is then repeated until a local minimum of the cost function is achieved."},{"prompt":"Write Python code to generate a random integer between 1 and 10,000 (inclusive).","completion":"import random num = random.randint(1, 10000) print(\\"Random integer between 1 and 10,000:\\", num)"},{"prompt":"Write a CSS selector to target all paragraphs.","completion":"p { /* CSS rules... */ }"},{"prompt":"Write a Java program to print 'Hello World' five times.","completion":"public class HelloWorld { public static void main(String[] args) { for(int i = 0; i < 5; i++) { System.out.println(\\"Hello World\\"); } } }"},{"prompt":"Write a SVG code to create a circle with red radius of 25px.","completion":"<svg width=\\"50\\" height=\\"50\\"> <circle cx=\\"25\\" cy=\\"25\\" r=\\"25\\" fill=\\"red\\" /> </svg>"},{"prompt":"Generate an object using JavaScript that contains the numbers from 1 to 10.","completion":"const myObject = { \\"1\\": 1, \\"2\\": 2, \\"3\\": 3, \\"4\\": 4, \\"5\\": 5, \\"6\\": 6, \\"7\\": 7, \\"8\\": 8, \\"9\\": 9, \\"10\\": 10 };"},{"prompt":"Write a MySQL statement to select the first 5 customers in the 'customers' table.","completion":"SELECT * FROM customers LIMIT 5;"},{"prompt":"Write a HTML tag to create an ordered list.","completion":"<ol> ... </ol>"},{"prompt":"Write a React component to render a table with 4 columns and 5 rows.","completion":"class MyTable extends Component { render() { return ( <table> <tr> <td>1</td> <td>2</td> <td>3</td> <td>4</td> </tr> <tr> <td>1</td> <td>2</td> <td>3</td> <td>4</td> </tr> <tr> <td>1</td> <td>2</td> <td>3</td> <td>4</td> </tr> <tr> <td>1</td> <td>2</td> <td>3</td> <td>4</td> </tr> <tr> <td>1</td> <td>2</td> <td>3</td> <td>4</td> </tr> </table> ); } }"},{"prompt":"Convert the following JavaScript code to valid C++ code. let arr = [1, 2, 3]; let sum = 0; for (let i = 0; i < arr.length; i++) { sum += arr[i]; }","completion":"int arr[] = {1, 2, 3}; int sum=0; for (int i=0; i<3; i++) { sum += arr[i]; }"},{"prompt":"Create a JavaScript code snippet to get a list of all the elements in an array with even index. let arr = [1,2,3,4,5,6];","completion":"let evenIndexArr = arr.filter((elem, index) => index % 2 === 0);"},{"prompt":"Create a valid HTML code snippet to create a list.","completion":"<ul> <li>item 1</li> <li>item 2</li> <li>item 3</li> </ul>"},{"prompt":"You need to identify if a given string is an anagram of another string or not. Output \\"true\\" if it is an anagram, output \\"false\\" if it is not. String s1 = \\"abcd\\"; String s2 = \\"dcab\\";","completion":"true"},{"prompt":"Create a SQL query to list the names of vehicles manufactured before the year 2000.","completion":"SELECT name FROM vehicles WHERE year < 2000;"},{"prompt":"Write a JavaScript code snippet to calculate the present value of a future one-time cash payment. let futureValue = 10000; let rate = 0.06; let periods = 10;","completion":"let presentValue = futureValue / Math.pow(1 + rate, periods);"},{"prompt":"You are provided with some sample data and you need to detect if there are any outliers present in the data set or not. Output true if any outlier is present, output false if there is no outlier. [3, 4, 5, 15, 16]","completion":"true"},{"prompt":"Given the following data set, calculate the mean of the values. [45, 63, 76, 89, 47]","completion":"double mean = (45 + 63 + 76 + 89 + 47) / 5;"},{"prompt":"Construct a while loop in PHP that prints \\"Hello, World!\\" 4 times.","completion":"<?php count = 0; while (count < 4) { echo \\"Hello, World!\\"; count++; } ?>"},{"prompt":"Create a for loop in Perl that adds all the numbers from 1 to 5.","completion":"my sum = 0; for (my i = 1; i <= 5; i++) { sum += i; } print sum;"},{"prompt":"Design a SQL statement to select all the customers from the database with last name 'Smith'.","completion":"SELECT * FROM customers WHERE last_name = 'Smith';"},{"prompt":"Create a JavaScript statement that generates a random number between 1 and 10.","completion":"Math.floor(Math.random() * 10) + 1;"},{"prompt":"Write a regular expression to check if a string an upper case letter followed by at least 4 digits.","completion":"^[A-Z]d{4,}"},{"prompt":"Construct an if statement for Python that checks if a given number is greater than 5.","completion":"num = 7 if num > 5: print(\\"The number is greater than 5\\")"},{"prompt":"Design a while loop in C++ that prints every third number between 1 and 10.","completion":"int count = 1; while (count <= 10) { if (count % 3 == 0) { cout << count << endl; } count++; }"},{"prompt":"Define a function in JavaScript that returns true if a given number is even.","completion":"function isEven(num) { return num % 2 === 0; }"},{"prompt":"Construct a C# class that stores a student's ID and name and defines a method to return the ID.","completion":"public class Student { private int id; private string name; public Student(int id, string name) { this.id = id; this.name = name; } public int GetID() { return this.id; } }"},{"prompt":"Write an SQL query to get the name and date of birth of all the people born in the year 1975.","completion":"SELECT name, date_of_birth FROM people WHERE YEAR(date_of_birth) = '1975';"},{"prompt":"Create an array of five random numbers.","completion":"int[] randomNumbers = new int[] { 8, 5, 2, 1, 9 };"},{"prompt":"Compute a % b. a = 10, b = 3","completion":"int result = 10 % 3; // result is 1"},{"prompt":"Compute the median of the following list: [2, 5, 9, 12].","completion":"double median = (5+9)/2.0; // median is 7.0"},{"prompt":"Write a function that takes in an array of strings as input and returns the longest string in the array. [\\"Apple\\", \\"Banana\\", \\"Orange\\"]","completion":"string longestString(string[] strArr) { string longest = \\"\\"; for (string str : strArr) { if (str.length() > longest.length()) { longest = str; } } return longest; }"},{"prompt":"Reverse the following array of integers. [1, 5, 7, 9, 10]","completion":"int[] reversedArray = new int[] { 10, 9, 7, 5, 1 };"},{"prompt":"Create a string with alternating characters from two other given strings. string str1 = \\"HELLO\\"; string str2 = \\"WORLD\\";","completion":"string result = \\"HWEOLLRODL\\";"},{"prompt":"Create a variable that stores the result of the following function: 10 * 10 + 12 / 3.","completion":"int result = 44;"},{"prompt":"Write a Java program that searches an array for a given value and returns the index at which it is found. int[] arr = {3, 4, 6, 7, 8, 10}; int searchValue = 8;","completion":"public static int searchArray(int[] arr, int searchValue) { for (int i = 0; i < arr.length; i++) { if (arr[i] == searchValue) { return i; } } return -1; }"},{"prompt":"Calculate the probability of drawing four aces from a standard deck of cards.","completion":"double probability = (4.0/52.0)*(3.0/51.0)*(2.0/50.0)*(1.0/49.0); // probability is 0.0045248868778280541"},{"prompt":"Create an object that stores the following key, value pairs: {name: John, age: 20, nationality: American}.","completion":"Object person = { \\"name\\": \\"John\\", \\"age\\": 20, \\"nationality\\": \\"American\\" };"},{"prompt":"Given an array of strings, find the string that is the most common in the array. [\\"Apple\\", \\"Banana\\", \\"Apple\\", \\"Orange\\"]","completion":"String mostCommon = \\"\\"; int maxCount = 0; for (int i = 0; i < strArr.length; i++) { int count = 0; for (int j = 0; j < strArr.length; j++) { if (strArr[i].equals(strArr[j])) { count++; if (count > maxCount) { mostCommon = strArr[i]; maxCount = count; } } } } // mostCommon is \\"Apple\\""},{"prompt":"Build a Bash script that takes two argument and write a function to swap the values of the arguments. a = 10 b = 20","completion":"#!/bin/bash # bash script to swap two arguments # function to swap two numbers swap(){ local temp=1 1=2 2=temp } # main program swap a b echo \\"swapped values: a = a and b = b\\""},{"prompt":"Create a method to filter an array and return all elements that are greater than or equal to 10. arr = [1, 2, 6, 10, 14, 18]","completion":"# method to filter an array def filter(arr): new_arr = [] for element in arr: if element >= 10: new_arr.append(element) return new_arr # main program print(filter(arr))"},{"prompt":"Update a variable to be the negative of its value. x = 5","completion":"# negative function def negative(x): return -x # main program x = negative(x) print(x)"},{"prompt":"Construct an object that contains the properties for an employee’s name, phone number, and salary.","completion":"# construct employee object class Employee: def __init__(self, name, phone, salary): self.name = name self.phone = phone self.salary = salary"},{"prompt":"Use a while loop to iterate over a list of numbers and find the first even number numbers = [7, 3, 5, 11, 13]","completion":"# while loop to iterate over list of numbers i = 0 while i < len(numbers): if numbers[i] % 2 == 0: break i += 1 # main program if i < len(numbers): print(\\"First even number is \\", numbers[i]) else: print(\\"No even numbers found\\")"},{"prompt":"Create a function that takes two arguments, a number and a list, and returns a list with all elements from the original list multiplied by the number. num = 2 lst = [1, 2, 3, 4]","completion":"# function to multiply each element of list by number def lst_multiply(num, lst): new_lst = [] for num in lst: new_lst.append(num * num) return new_lst # main program print(lst_multiply(num, lst))"},{"prompt":"Write an if statement to check if a string is equal to \\"Hello\\". word = \\"Hello","completion":"// program to check if a string is equal to \\"Hello\\" if (word == \\"Hello\\") { console.log(\\"String is equal to 'Hello'\\") }"},{"prompt":"Retrieve the third character from a string using its index. word = \\"Hello","completion":"// program to retrieve the third character from a string using its index let third_char = word[2] console.log(third_char)"},{"prompt":"Create a switch statement that evaluates an integer from 0 to 5 and outputs a description of the number. num = 4","completion":"// program to create a switch statement that evaluates an integer switch(num) { case 0: console.log(\\"num is 0\\") break; case 1: console.log(\\"num is 1\\") break; case 2: console.log(\\"num is 2\\") break; case 3: console.log(\\"num is 3\\") break; case 4: console.log(\\"num is 4\\") break; case 5: console.log(\\"num is 5\\") break; default: console.log(\\"num is not between 0 and 5\\") break; }"},{"prompt":"w can this code be optimized? def set_similarity(a, b): same = 0 for i in a: if i in b: same += 1 return same/max(len(a),len(b))","completion":"def set_similarity(a, b): return len(set(a).intersection(set(b)))/max(len(a),len(b))"},{"prompt":"Find the index of an element in a given list. list = [1, 2, 3, 4, 5] element = 3","completion":"2"},{"prompt":"Given a string, remove all characters except for alphabets and write the new string. my_string = \\"Hello, world!","completion":"Hello world"},{"prompt":"Calculate the number of days between two given dates in Python. date1 = '2020-09-13' date2 = '2021-02-06'","completion":"122"},{"prompt":"Make the following sentence capitalized. the quick brown fox","completion":"The Quick Brown Fox"},{"prompt":"mplement a Bubble Sort algorithm. list = [10, 5, 9, 25, 1]","completion":"def bubbleSort(list): n = len(list) # Traverse through all array elements for i in range(n): # Last i elements are already in place for j in range(0, n-i-1): # traverse the array from 0 to n-i-1 # Swap if the element found is greater # than the next element if list[j] > list[j+1] : list[j], list[j+1] = list[j+1], list[j] # Driver code to test above list = [10, 5, 9, 25, 1] bubbleSort(list) print (\\"Sorted array :\\") print(list)"},{"prompt":"Parse a given JSON string and extract all the values of the key \\"name\\". json_str = '{\\"name\\": \\"Jack\\", \\"age\\": 22, \\"status\\": \\"Active\\"}'","completion":"import json parsed = json.loads(json_str) name_list = [] for key, value in parsed.items(): if key == 'name': name_list.append(value) print(name_list)"},{"prompt":"Predict the output of this JavaScript function. function divideThree(x) { return x / 3; } console.log(divideThree(9));","completion":"The output of this function is 3."},{"prompt":"Write a code snippet to convert a list in Python to a set. list1 = [1,2,3,4,5]","completion":"set1 = set(list1) # set1 will now contain [1,2,3,4,5]"},{"prompt":"Write a Python code snippet to sort a dictionary by its values in ascending order. dictionary = {'a': 5, 'b': 2, 'c': 4}","completion":"sorted_dictionary = dict(sorted(dictionary.items(), key=lambda item: item[1])) print(sorted_dictionary) # result: {'b': 2, 'c': 4, 'a': 5}"},{"prompt":"Create an HTML page to list the students in a class list in a table.","completion":"<html> <head> <title>Class List</title> </head> <body> <h2>Class List</h2> <table> <tr> <th>Name</th><th>Age</th><th>Gender</th> </tr> <tr> <td>John Doe</td><td>21</td><td>Male</td> </tr> <tr> <td>Catrine Smith</td><td>18</td><td>Female</td> </tr> <tr> <td>John Wilkins</td><td>19</td><td>Male</td> </tr> </table> </body> </html>"},{"prompt":"Count the number of occurrences of each character in a given string and print the output. str = \\"abbabbabbb","completion":"from collections import Counter str = \\"abbabbabbb\\" letters = Counter(str) for key, value in letters.items(): print(f\\"Character {key} occurs {value} time(s)\\")"},{"prompt":"Write a PHP program to check if a given string ends with the specified character. string = \\"Hello World!","completion":"<?php string = \\"Hello World!\\"; last_character = string[strlen(string) - 1]; if (last_character == \\"!\\") echo \\"string ends with '!'\\"; else echo \\"string does not end with '!'\\"; ?>"},{"prompt":"Print the total number of characters in a given string using JavaScript.","completion":"let str = \\"Hello World!\\"; let num_chars = str.length; console.log(\`The string has {num_chars} characters.\`);"},{"prompt":"Sort the elements of an array in ascending order using Bubble Sort algorithm in C++. arr[] = {4, 5, 2, 9, 3}","completion":"#include <iostream> using namespace std; int main() { int arr[] = {4, 5, 2, 9, 3}; int n = sizeof(arr)/sizeof(arr[0]); // bubble sort algorithm for (int i = 0; i < n-1; i++) // Last i elements are already in place for (int j = 0; j < n-i-1; j++) if (arr[j] > arr[j+1]) swap(arr[j], arr[j+1]); cout << \\"Sorted array: n\\"; for (int i=0; i < n; i++) cout << arr[i] << \\" \\"; cout << endl; return 0; }"},{"prompt":"Compute the sum of two integer inputs separated by a space 1 5","completion":"6"},{"prompt":"Write a loop to print the characters of a string in reverse order myString","completion":"for i in range(len(myString)-1,-1,-1): print(myString[i])"},{"prompt":"Check if the two strings are anagrams bombe bemob","completion":"def is_anagram(str1, str2): return sorted(str1) == sorted(str2)"},{"prompt":"Write a dictionary comprehension to mapp the following list [('a',0),('b',1),('c',2)]","completion":"{key: value for (key,value) in [('a',0),('b',1),('c',2)]}"},{"prompt":"Print the fibonacci sequence of length 10","completion":"def fibonacci(length): result = [] a, b = 0, 1 for _ in range(length): result.append(a) a, b = b, a + b return result"},{"prompt":"Using the provided list of numbers, compute the average [1, 4, 7, 10]","completion":"def calculate_average(numbers): return sum(numbers) / len(numbers)"},{"prompt":"Suggest a complete snippet of HTML code to create a simple form.","completion":"<form> <label>Name:</label><br> <input type=\\"text\\" name=\\"name\\"><br> <label>Email:</label><br> <input type=\\"email\\" name=\\"email\\"><br><br> <input type=\\"submit\\" value=\\"Submit\\"> </form>"},{"prompt":"Analyze and explain the output of the following C program. #include<stdio.h> int main(){ int x,y; x=2; y=++x*5; printf(\\"%dn\\",y); }","completion":"The output of this program is \\"15\\". This is because the pre-increment operator (++) is used in the statement \\"y=++x*5\\". This means that the value of x is first incremented by 1 and then used in the statement. Therefore, the value of x is 3 and y is assigned the value 3*5 which is 15."},{"prompt":"Provide an appropriate name for a Python module that contains a class for a user.","completion":"The appropriate name for the module could be \\"user_class.py\\"."},{"prompt":"Create a SQL query to select the top 5 most expensive items from a table.","completion":"SELECT * FROM TABLE_NAME ORDER BY PRICE DESC LIMIT 5;"},{"prompt":"Suggest a JavaScript code to generate a random alphanumeric string of 8 characters.","completion":"let randomString = Math.random().toString(36).substring(2, 10); console.log(randomString);"},{"prompt":"Reformat the following HTML code to make it better readable. <div><ul><li>Item 1</li><li>Item 2</li></ul></div>","completion":"<div> <ul> <li>Item 1</li> <li>Item 2</li> </ul> </div>"},{"prompt":"Fill in the code to implement a for loop to get the sum of all the elements in a list. my_list = [1, 2, 3, 4, 5]","completion":"total = 0 for i in my_list: total += i"},{"prompt":"Suggest a valid JSON dictionary for the following data. Name: John, Age: 32, Profession: Developer","completion":"{\\"Name\\": \\"John\\", \\"Age\\": 32, \\"Profession\\": \\"Developer\\"}"},{"prompt":"Describe a method to solve an equation of the form ax + b = 0.","completion":"The equation ax + b = 0 can be solved by subtracting b from both sides and then dividing both sides by a. This will yield the solution x = -b/a."},{"prompt":"Suggest a completion to the following React component. import React from 'react'; class MyComponent extends React.Component { constructor(props) { super(props); this.state = {","completion":"import React from 'react'; class MyComponent extends React.Component { constructor(props) { super(props); this.state = { name: '', age: 0 }; } }"},{"prompt":"Suggest a suitable HTML tag to display the following headline. This is the headline","completion":"<h1>This is the headline</h1>"},{"prompt":"Split the following string into a list of words. string = \\"this is a string","completion":"words = string.split(' ')"},{"prompt":"Write a JavaScript program that prints all the even numbers from 0 to a given number n. n = 10","completion":"for (var i = 0; i <= n; i++) { if (i % 2 == 0) { console.log(i); } }"},{"prompt":"Create a SQL query to show the name and salary of all employees in the database with the role of Manager.","completion":"SELECT name, salary FROM Employees WHERE role = 'Manager';"},{"prompt":"Can you create a PHP function to remove all the special characters in a given string? string = \\"Hello World!@#%","completion":"function removeSpecialCharacters(string) { pattern = '/[^A-Za-z0-9]/'; return preg_replace(pattern, '', string); } echo removeSpecialCharacters(string);"},{"prompt":"About a given number n, can you write a JavaScript program to find the sum of all the numbers that are greater than 0 and less than n? n = 5","completion":"var sum = 0; for (var i = 1; i < n; i++) { sum = sum + i; } console.log(sum)"},{"prompt":"Write a JavaScript program to find the greatest common divisor (GCD) of two given positive numbers. x = 18 y = 12","completion":"function gcd(x, y) { if (y == 0) return x; else return gcd(y, x % y); } console.log(gcd(18, 12));"},{"prompt":"Create a HTML web page which shows the news for the day.","completion":"<html> <head> <title>Today's News</title> </head> <body> <h1>Today's News</h1> <div class=\\"news-container\\"> <div class=\\"news-article\\"> ... </div> <div class=\\"news-article\\"> ... </div> <div class=\\"news-article\\"> ... </div> </div> </body> </html>"},{"prompt":"Create a C program which implements the following algorithm: Given an array of size n, print all distinct elements in the array in sorted order.","completion":"#include<stdio.h> // A utility function to swap elements at two indexes in an array void swap(int arr[], int i, int j) { int temp = arr[i]; arr[i] = arr[j]; arr[j] = temp; } // Function to print distinct elements in an array void printDistinct(int arr[], int n) { // Pick all elements one by one for (int i = 0; i < n; i++) { // Check if the picked element is already printed int j; for (j=0; j<i; j++) if (arr[i] == arr[j]) break; // If not printed earlier, then print it if (i == j) printf(\\"%d \\", arr[i]); } } // Driver program int main() { int arr[] = {6, 10, 5, 4, 9, 120, 4, 6, 10}; int n = sizeof(arr)/sizeof(arr[0]); // Function calling printDistinct(arr, n); return 0; }"},{"prompt":"Create a SQL query which returns the records from the following table only for the year 2010. Table name: Record","completion":"SELECT * FROM Record WHERE year = 2010;"},{"prompt":"Extract the following records from the given table using a SQL query Table name: Stude","completion":"SELECT * FROM Student WHERE age > 18;"},{"prompt":"Rewrite the following function to function asynchronously. function example(data) { console.log('Started processing data'); output = process(data); console.log('Finished processing data'); return output; }","completion":"async function example(data) { console.log('Started processing data'); let output = await process(data); console.log('Finished processing data'); return output; }"},{"prompt":"Create an array in Python of size 10 filled with zeroes.","completion":"arr = [0] * 10"},{"prompt":"Create a web application using Flask in Python that displays the current date and time.","completion":"from flask import Flask, render_template app = Flask(__name__) @app.route('/') def current_datetime(): from datetime import datetime now = datetime.now() return render_template('template.html', current_datetime = now) if __name__ == \\"__main__\\": app.run(debug = True) template.html: <html> <head> <title> Current Date and Time</title> </head> <body> <h1> Current Date and Time </h1> <p> The current date and time is {{ current_datetime }}</p> </body> </html>"},{"prompt":"Generate a random string in JavaScript of length 5 containing only characters from 'A' to 'Z'.","completion":"let randomStr = ''; const possibleChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'; for (let i = 0; i < 5; i++ ){ let randomIndex = Math.floor(Math.random() * possibleChars.length); let randomChar = possibleChars.charAt(randomIndex); randomStr += randomChar } console.log(randomStr);"},{"prompt":"Categorize the given text into different class. The patient has a fever, headache and sore thro","completion":"Category 1 - Symptoms: fever, headache, sore throat Category 2 - Illness: unknown"},{"prompt":"Edit the following HTML code snippet to give the <body> tag the class 'main'. <html> <head> <title>Page Title</title> </head> </html>","completion":"<html> <head> <title>Page Title</title> </head> <body class=\\"main\\"> </body> </html>"},{"prompt":"Write a function in Python to compress a given string. aabccccc","completion":"def compression(string): output = \\"\\" count = 1 curr_char = string[0] for char in string[1:]: if char == curr_char: count += 1 else: output += curr_char + str(count) curr_char = char count = 1 output += curr_char + str(count) return output print(compression('aabcccccaaa')) # Output: a2b1c5a3"},{"prompt":"Generate an array in Python of size 10 filled with Random numbers between 1 to 100.","completion":"import random arr = [random.randint(1,100) for i in range(10)]"},{"prompt":"Design a JavaScript function named \\"calculate\\" that calculates the mean of a given array. Array: [1, 5, 8, 9, 10]","completion":"function calculate(array) { let sum = 0; for (let i = 0; i < array.length; i++) { sum += array[i]; } let mean = sum / array.length; return mean; }"},{"prompt":"What data type is best suited to store a list of students' names?","completion":"A list of students' names can best be stored using a string data type. Strings are character sequences, making them well-suited for storing text-based information such as names. Storing a list of student names as a string is also more efficient memory-wise than other data types, since strings are immutable and can be reused for different values."},{"prompt":"Create a MySQL query that returns the sum of the points scored by all students. Table Name: student_points Table Structure: student_id INTEGER, points INTEGER","completion":"SELECT SUM(points) FROM student_points;"},{"prompt":"What is the syntax to return the total number of elements in an array using JavaScript?","completion":"The syntax to return the total number of elements in an array using JavaScript is as follows: array.length;"},{"prompt":"Using Python, write a function to format a given date. Date: \\"2021-02-14\\" Format: \\"dd/mm/yyyy","completion":"def format_date(date, date_format): date = date.split('-') day = date[2] month = date[1] year = date[0] if date_format == \\"dd/mm/yyyy\\": formatted_date = day + \\"/\\" + month + \\"/\\" + year return formatted_date"},{"prompt":"Construct a Java switch statement to check whether a given number is positive, negative, or zero. Number: -7","completion":"int number = -7; switch (number) { case 0: System.out.println(\\"Zero\\"); break; case > 0: System.out.println(\\"Positive\\"); break; case < 0: System.out.println(\\"Negative\\"); break; }"},{"prompt":"Design a HTML page to register a new user.","completion":"<!DOCTYPE html> <html> <body> <h2>User Registration</h2> <form action=\\"/action_page.php\\"> Username:<br> <input type=\\"text\\" name=\\"username\\" value=\\"\\"><br> Email:<br> <input type=\\"text\\" name=\\"email\\" value=\\"\\"><br><br> <input type=\\"submit\\" value=\\"Submit\\"> </form> </body> </html>"},{"prompt":"What is the command to install Flask using pip?","completion":"The command to install Flask using pip is \\"pip install flask\\"."},{"prompt":"Create a SQL query to fetch all user names from a table. Table name: users Table structure: user_id INTEGER, user_name VARCHAR","completion":"SELECT user_name FROM users;"},{"prompt":"w can a string be converted to a list in Python?","completion":"A string can be converted to a list in Python by using the list() function. The syntax for this is: list(string); For example, to convert the string \\"apple\\" to a list, you would use: list(\\"apple\\");"},{"prompt":"Create a function to print a Diamond shape. Size: 5","completion":"def print_diamond(size): for i in range(1, size + 1): print(\\" \\" * (size - i) + \\"*\\" * (2 * i - 1)) for i in range(size - 1, 0, -1): print(\\" \\" * (size - i) + \\"*\\" * (2 * i - 1))"},{"prompt":"Compute the Fibonacci sequence upto n.","completion":"def fibonacci(n): if n <= 1: return n else: return fibonacci(n-1) + fibonacci(n-2)"},{"prompt":"What is static typing in programming?","completion":"Static typing is a type of type system where the type of each variable is determined at compile-time instead of at runtime. This means that the variables and their types are checked at compile-time of the program and any type mismatch will result in an error. This leads to better performance as it prevents runtime errors due to type mismatch and also makes the code more readable."},{"prompt":"Create a function to append a new element to a list.","completion":"def append_list(my_list, new_element): my_list.append(new_element) return my_list"},{"prompt":"dentify which is the given data type Data: [1,2,3]","completion":"The given data is a list."},{"prompt":"Rewrite this function using a recursive algorithm. def factorial(n): result = 1 for i in range(1, n+1): result *= i return resul","completion":"def factorial(n): if n == 0: return 1 else: return n * factorial(n-1)"},{"prompt":"Create an expression tree for the expression (2+3)*4.","completion":"* / + 4 / 2 3"},{"prompt":"Compile a piece of code written in Python language.","completion":"python -c \\"import py_compile; py_compile.compile('foo.py')\\""},{"prompt":"Analyze this code for potential runtime errors. def factorial(n): result = 1 if n >= 0: for i in n: result *= i return resul","completion":"This code may result in a runtime error because an iterable is expected as an argument for the for loop, but the argument passed is a number rather than an iterable. Additionally, the if-statement does not have an else block making it possible for the function to return None instead of a number. To fix the code, the argument passing to the for loop should be changed to range(n) and the if-statement should have an else block that returns 1 if n is smaller than 0."},{"prompt":"Write a code to implement an LRU (Least Recently Used) cache.","completion":"class LRUCache: def __init__(self, capacity): self.capacity = capacity self.cache = {} self.lru = list() # get an item from the cache and update its timestamp def get(self, key): if key in self.cache: self.lru.remove(key) self.lru.append(key) return self.cache[key] else: return -1 # add a new item to the cache, discard the least recently used item if cache is full def put(self, key, value): if len(self.cache) >= self.capacity: self.cache.pop(self.lru[0]) self.lru.pop(0) if key in self.cache: self.lru.remove(key) self.cache[key] = value self.lru.append(key)"},{"prompt":"mplement a method to sort a list of numbers using the quick sort algorithm. [10, 3, 9, -2, 8, 7]","completion":"def quickSort(arr): if len(arr) <= 1: return arr else: pivot = arr[len(arr) // 2] left = [x for x in arr if x < pivot] middle = [x for x in arr if x == pivot] right = [x for x in arr if x > pivot] return quickSort(left) + middle + quickSort(right)"},{"prompt":"Design a function to remove all duplicate words from a sentence. \\"This is this is a sentence with with repeats repe","completion":"def removeDuplicates(txt): newTxt = [] txt = txt.split() for x in txt: if x not in newTxt: newTxt.append(x) return \\" \\".join(newTxt)"},{"prompt":"Create a function to parse and print the date in DD-MM-YYYY format. date_string = '01 Jan 2018'","completion":"def parseDate(date_string): date_list = date_string.split() month_dict = { 'Jan': '01', 'Feb': '02', 'Mar': '03', 'Apr': '04', 'May': '05', 'Jun': '06', 'Jul': '07', 'Aug': '08', 'Sep': '09', 'Oct': '10', 'Nov': '11', 'Dec': '12' } day = date_list[0] month = month_dict[date_list[1]] year = date_list[2] return day + \\"-\\" + month + \\"-\\" + year"},{"prompt":"Write a function to classify a news article by its tone.","completion":"def classifyArticle(article): tone_dict = { 'positive': 0, 'neutral': 0, 'negative': 0 } for token in article: if token in pos_words: tone_dict['positive'] += 1 elif token in neg_words: tone_dict['negative'] += 1 else: tone_dict['neutral'] += 1 sorted_tones = sorted(tone_dict.items(), key=lambda x:x[1], reverse=True) return sorted_tones[0][0]"},{"prompt":"mplement a stack data structure using linked lists.","completion":"class Node: def __init__(self, data): self.data = data self.next = None class Stack: def __init__(self): self.head = None self.num_elements = 0 def push(self, element): new_node = Node(element) if self.head == None: self.head = new_node else: new_node.next = self.head self.head = new_node self.num_elements += 1 def pop(self): if self.is_empty(): return None temp = self.head self.head = self.head.next self.num_elements -= 1 return temp.data def is_empty(self): if self.num_elements == 0: return True return False def top(self): if self.head: return self.head.data return None"},{"prompt":"Create a function called ask_age() that prints \\"What is your age?\\" and also returns the users input.","completion":"def ask_age(): print('What is your age?') age = input() return age"},{"prompt":"Create a simple program to sort an array of integers from smallest to largest. [7,3,1,9,2]","completion":"def sort_array(arr): arr.sort() return arr result = sort_array([7,3,1,9,2]) print(result) # Output: [1,2,3,7,9]"},{"prompt":"Given a list of numbers, create a function that finds the two elements that sum to a given target number. nums = [2, 45, 7, 9, 15] target = 16","completion":"def two_sum(nums, target): for i in range(len(nums)): for j in range(i+1, len(nums)): if nums[i] + nums[j] == target: return [i, j] result = two_sum(nums, target) print(result) # Output: [2, 3]"},{"prompt":"Explain what a linked list is and what operations can you perform on it.","completion":"A linked list is a linear data structure consisting of a sequence of nodes, where each node contains a data element and a pointer to the next node. Operations that can be performed on a linked list include insertion, deletion, traversal, and searching."},{"prompt":"mplement an algorithm to find the number of occurrences of a substring in a string. string = \\"This is a test\\" substring = \\"","completion":"def count_substring(string, substring): count = 0 for i in range(len(string) - len(substring) + 1): if string[i:i + len(substring)] == substring: count += 1 return count result = count_substring(string, substring) print(result) # Output: 2"},{"prompt":"Given a string and an index, create a function to return the character at the given index in the string. string = \\"Hello\\" index = 3","completion":"def get_char(string, index): return string[index] result = get_char(string, index) print(result) # Output: l"},{"prompt":"Given the following HTML code, add a class attribute to the <nav> element: <nav> <ul> <li><a href=\\"/\\">Home</a></li> <li><a href=\\"/about/\\">About</a></li> <li><a href=\\"/contact/\\">Contact</a></li> </ul> </nav>","completion":"<nav class=\\"main-nav\\"> <ul> <li><a href=\\"/\\">Home</a></li> <li><a href=\\"/about/\\">About</a></li> <li><a href=\\"/contact/\\">Contact</a></li> </ul> </nav>"},{"prompt":"Create a SQL query to extract all the \\"first_name\\" and \\"last_name\\" columns from the \\"students\\" table.","completion":"SELECT first_name, last_name FROM students;"},{"prompt":"Print the first 10 Fibonacci numbers using a loop.","completion":"a, b = 0, 1 for i in range(10): print(a) a, b = b, a + b"},{"prompt":"Create a HTML web page with four different headings.","completion":"<html> <head> <title>Headings Page</title> </head> <body> <h1>Heading 1</h1> <h2>Heading 2</h2> <h3>Heading 3</h3> <h4>Heading 4</h4> </body> </html>"},{"prompt":"dentify the type of join used in the following SQL query: SELECT * FROM orders JOIN customers ON orders.customer_id = customer.id","completion":"This is an inner join which is used to select rows from two or more related tables. The join allows rows from both tables to be retrieved if the two rows share a common value in the joined columns."},{"prompt":"Determine the output of the following JavaScript code when x = 2: x = 2 if (x < 0) { console.log('x is negative'); } else if (x > 0) { console.log('x is positive'); } else { console.log('x is zero'); }","completion":"x is positive"},{"prompt":"Create a JavaScript function that takes three parameters: a number, a sign, and another number. The function should use the sign to determine which arithmetic operation it should perform and output the result.","completion":"function calculate(num1, operator, num2) { switch (operator) { case '+': return num1 + num2 case '-': return num1 - num2 case '*': return num1 * num2 case '/': return num1 / num2 default: return 'Operation invalid' } }"},{"prompt":"Create a CSS style sheet to set font size of all headings to 20px, font weight to bold and color to blue.","completion":"h1, h2, h3, h4, h5, h6 { font-size: 20px; font-weight: bold; color: blue; }"},{"prompt":"Write a JavaScript code snippet that will add two numbers.","completion":"let num1 = 5; let num2 = 8; let sum = num1 + num2; console.log(sum);"},{"prompt":"Given 3 lists a, b, and c, write a Python code to calculate the dot product of a and b and store the result in c. a = [3, 4, 5] b = [6, 7, 8] c = []","completion":"def dot_product(a, b, c): if len(a) != len(b): raise ValueError(\\"Length of Lists cannot differ\\") dp = 0 for i in range(len(a)): dp += a[i]*b[i] c.append(dp)"},{"prompt":"Write a code to multiply two matrices, assuming the two matrices can be multiplied. A = [[1, 2], [3, 4]] B = [[5, 6], [7, 8]]","completion":"def multiply_matrices(A, B): if len(A[0]) != len(B): raise ValueError(\\"Matrices cannot be multiplied\\") rows_A = len(A) columns_A = len(A[0]) rows_B = len(B) columns_B = len(B[0]) result = [[0 for column in range(columns_B)] for row in range(rows_A)] for row in range(rows_A): for column in range(columns_B): for k in range(columns_A): result[row][column] += A[row][k] * B[k][column] return result"},{"prompt":"Write a function to find the index of the point that lies closest to the origin. points = [[1,1],[-1,2],[3,-4]]","completion":"def closest_point(points): min_dist = float('inf') for i in range(len(points)): dist = points[i][0]**2 + points[i][1]**2 if dist < min_dist: min_dist = dist closest_index = i return closest_index"},{"prompt":"Given two strings, write a Python code to delete all occurrences of the second string from the first string. str1 = \\"abcabcabcabcabcabcabcabcabcabc\\" str2 = \\"abc","completion":"def delete_occurrences(str1, str2): return str1.replace(str2, '')"},{"prompt":"Write a function that sorts its arguments in descending order. nums = [4, 8, 10, 3, 5]","completion":"def sort_descending(*args): args = list(args) for i in range(len(args)-1): for j in range(i+1, len(args)): if args[i] < args[j]: args[i], args[j] = args[j], args[i] return args"},{"prompt":"Make a C++ program that counts the number of unique elements in an array. int arr[] = {1, 5, 3, 6, 2, 3, 5};","completion":"#include <iostream> #include <unordered_set> int main() { int arr[] = {1, 5, 3, 6, 2, 3, 5}; int size = sizeof(arr) / sizeof(arr[0]); // Create a unordered_set to store all elements std::unordered_set<int> s; // Insert all elements in the set for (int i = 0; i < size; i++) s.insert(arr[i]); // Size of the set will be total count of distinct elements std::cout << \\"Number of distinct elements: \\" << s.size(); return 0; }"},{"prompt":"Create an algorithm to encourage work balance and productivity in remote work.","completion":"One algorithm to encourage work balance and productivity in remote work is a scheduling algorithm that assigns workloads over manageable working windows with rest periods in between to allow for breaks and recovery. This algorithm can be designed to set maximum and minimum limit for each allocated workload and for duration for the rest periods, based on the individual's productive and rest needs. It can be used to monitor and manage workloads to ensure that workers do not experience fatigue or workload overload. Additionally, the algorithm can be designed to keep track of work performance over time to provide appropriate feedback and recommendations in order to help workers optimize their performance."},{"prompt":"Create a Python program to calculate the mean, median, and mode of a given set of data. data = [1, 4, 6, 3, 8, 9]","completion":"def calculate_mean(data): '''Function to calculate mean of data''' mean = sum(data) / len(data) return mean def calculate_median(data): '''Function to calculate median of data''' data.sort() mid_index = len(data) // 2 median = data[mid_index] return median def calculate_mode(data): '''Function to calculate mode of data''' count_dict = {} mode_list = [] # count the frequency of each element for i in data: count_dict[i] = data.count(i) # find the maximum frequency max_freq = max(count_dict.values()) # find all elements with maximum frequency for k,v in count_dict.items(): if max_freq == v: mode_list.append(k) return mode_list data = [1, 4, 6, 3, 8, 9] mean = calculate_mean(data) median = calculate_median(data) mode = calculate_mode(data) print(f\\"Mean of data is: {mean}\\") print(f\\"Median of data is: {median}\\") print(f\\"Mode of data is: {mode}\\")"},{"prompt":"Create a SQL query to find the top 5 movies with highest ratings in a database.","completion":"SELECT name, rating FROM Movies ORDER BY rating DESC LIMIT 5;"},{"prompt":"Write a JavaScript program to get the current user's timezone offset from UTC in minutes.","completion":"let offset_minutes = new Date().getTimezoneOffset(); console.log(offset_minutes);"},{"prompt":"Create a HTML email template with placeholder information from a JavaScript object. var data = { firstname: 'John', lastname: 'Doe', email: 'johndoe@example.com' };","completion":"<!DOCTYPE html> <html> <head> <title>Email Template</title> </head> <body> <h1>Hello, {{data.firstname}} {{data.lastname}}!</h1> <p>This is an automated email sent to you at {{data.email}}.</p> <p>Thank you!</p> </body> </html>"},{"prompt":"Create an algorithm to detect plagiarized text.","completion":"One algorithm to detect plagiarized text is to compare text fragments of the document to a database of known plagiarized content. The algorithm can be refined by using natural language processing methods like vectorization and clustering to identify text parallelism and code similarity between the document and the content in the database. The algorithm also can weight the comparison based on similarity scores and can be further improved by utilizing machine learning models to identify more subtle aspects of plagiarism, such as paraphrasing, translations, and synonyms."},{"prompt":"Create a block of HTML code to display a table with 6 columns and 10 rows.","completion":"<table> <thead> <tr> <th>Column 1</th> <th>Column 2</th> <th>Column 3</th> <th>Column 4</th> <th>Column 5</th> <th>Column 6</th> </tr> </thead> <tbody> <tr> <td>Row 1</td> <td>Row 1</td> <td>Row 1</td> <td>Row 1</td> <td>Row 1</td> <td>Row 1</td> </tr> <tr> <td>Row 2</td> <td>Row 2</td> <td>Row 2</td> <td>Row 2</td> <td>Row 2</td> <td>Row 2</td> </tr> ... <tr> <td>Row 10</td> <td>Row 10</td> <td>Row 10</td> <td>Row 10</td> <td>Row 10</td> <td>Row 10</td> </tr> </tbody> </table>"},{"prompt":"Write an SQL query to find the maximum salary of an employee in the same department as the given employee. Employee name: ‘John Doe’ Department: ‘Finance’","completion":"SELECT MAX(salary) FROM employees WHERE department = 'Finance' AND NOT employee_name = 'John Doe';"},{"prompt":"Design a class in Python to store a user profile information such as name, age, city, etc.","completion":"class UserProfile: def __init__(self, name, age, city): self.name = name self.age = age self.city = city def get_name(self): return self.name def get_age(self): return self.age def get_city(self): return self.city"},{"prompt":"Write an SQL query to select one row from a table where two conditions are met. Table: ‘products’ Condition 1: category is ‘clothing’ Condition 2: rating is greater than 3","completion":"SELECT * FROM products WHERE category = 'clothing' AND rating > 3 LIMIT 1;"},{"prompt":"Write a script in Python to find the longest word in a given string. sample_string = \\"This is a sample string containing a few word","completion":"def longest_word(sample_string): words_list = sample_string.split() longest_word = \\"\\" for word in words_list: if len(word) > len(longest_word): longest_word = word return longest_word"},{"prompt":"Rewrite the following SQL query into its equivalent MongoDB query. SELECT * FROM customers WHERE age > 30","completion":"db.customers.find({ age: { gt: 30 } });"},{"prompt":"Design a class in Python to store information about a car, such as its make, year, and mileage.","completion":"class Car: def __init__(self, make, year, mileage): self.make = make self.year = year self.mileage = mileage def get_make(self): return self.make def get_year(self): return self.year def get_mileage(self): return self.mileage"},{"prompt":"Write a script in JavaScript to find the sum of all the numbers in an array.","completion":"function arraySum(arr) { let sum = 0; for (let i = 0; i < arr.length; i++) { sum += arr[i]; } return sum; }"},{"prompt":"Create a function in JavaScript to input two strings and output their combined length.","completion":"function combinedLength(string1, string2) { return string1.length + string2.length; }"},{"prompt":"Design a class in Python to store a book's title, author, and number of pages.","completion":"class Book: def __init__(self, title, author, pages): self.title = title self.author = author self.pages = pages def get_title(self): return self.title def get_author(self): return self.author def get_pages(self): return self.pages"},{"prompt":"Write a function to concatenate two strings without using the concatenation operator \\"+\\".","completion":"def concat(string1, string2): result = \\"\\" for i in string1: result += i for j in string2: result += j return result"},{"prompt":"Create a function that converts any number to its hexadecimal representation","completion":"def to_hexadecimal(num): return hex(num)"},{"prompt":"Create a function that takes an array of numbers and a target number as input, and returns true if the target number is present in the given array, false otherwise. list1 = [1,2,3,4] target = 2","completion":"def contains_target(list1, target): return target in list1"},{"prompt":"Write a function that takes two strings and searches for all the occurrences of the first string in the second and returns the positions of the pattern within the string. string1 = \\"aa\\" string2 = \\"","completion":"def pattern_occurences(string1, string2): positions = [] for i in range(len(string2)): if string1 == string2[i:i+len(string1)]: positions.append(i) return positions"},{"prompt":"Create a function that takes a string as input and returns a copy of the string with all punctuation marks removed","completion":"def remove_punctuation(text): punctuation_chars = '''!()-[]{};:'\\",<>./?@#%^&*_~''' output = \\"\\" for char in text: if char not in punctuation_chars: output += char return output"},{"prompt":"Create a function that encodes a message into a Vigenere cipher","completion":"def vigenere_encode(message, key): encoded_message = \\"\\" key_index = 0 for character in message: if character.isalpha(): shift_amount = ord(key[key_index]) % 26 key_index += 1 if key_index == len(key): key_index = 0 shifted_char_code = ord(character) + shift_amount if shifted_char_code > ord('z'): shifted_char_code -= 26 encoded_message += chr(shifted_char_code) else: encoded_message += character return encoded_message"},{"prompt":"Create a numerical sequence using Ruby code with 4 elements.","completion":"[1, 2, 4, 8]"},{"prompt":"Write a SQL query to find all records with age greater than 20 in the 'users' table.","completion":"SELECT * FROM users WHERE age > 20;"},{"prompt":"Console log \\"Hello\\" seven times in JavaScript.","completion":"for (let i = 0; i < 7; i++) { console.log('Hello'); }"},{"prompt":"Create a loop in PHP that prints out the numbers 0 to 10.","completion":"for(i = 0; i <= 10; i++){ echo i.' '; }"},{"prompt":"Sort an array in C using selection sort. int nums[] = {5, 2, -3, 10, 23, 99, -1, 7, 93, 0};","completion":"int nums[] = {-3, -1, 0, 2, 5, 7, 10, 23, 93, 99}; void selection_sort(int nums[], int n) { int i, j, min_idx; // One by one move boundary of unsorted sub-array for (i = 0; i < n-1; i++) { // Find the minimum element in unsorted array min_idx = i; for (j = i+1; j < n; j++) { if (nums[j] < nums[min_idx]) min_idx = j; } // Swap the found minimum element with the first element swap(&nums[min_idx], &nums[i]); } }"},{"prompt":"Write a C# program to create a function that takes an integer as parameter and prints its double value.","completion":"public static void DoubleValue(int val) { Console.WriteLine(val * 2); }"},{"prompt":"Generate 5 random numbers between 0 and 9 using JavaScript.","completion":"let randomNums = []; for(let i = 0; i < 5; i++){ let num = Math.floor(Math.random() * 10); randomNums.push(num); } console.log(randomNums);"},{"prompt":"Use HTML to create a webpage with a text input field and a button.","completion":"<html> <body> <input type=\\"text\\" id=\\"text_input\\" /> <button onclick=\\"handleInput()\\">Submit</button> </body> </html>"},{"prompt":"Write a Java program to replace the first occurrence of a given character with '*'. String = \\"Hello World!\\" Character = 'o'","completion":"String str = \\"Hello World!\\"; String newStr = str.replaceFirst(\\"o\\", \\"*\\"); System.out.println(newStr);"},{"prompt":"w to find the number of elements within a list in Python?","completion":"The number of elements in a list can be obtained using the len() method in Python. For example, if the list is named my_list, the number of elements can be obtained as len(my_list)."},{"prompt":"We have a given string. Replace every occurrence of 'a' with 'A' string = 'I like apples'","completion":"string = 'I like Apples'"},{"prompt":"Write a Java program to print out a triangle of stars. 3","completion":"* ** ***"},{"prompt":"You need add two numbers without using '+' operator. 2 and 3","completion":"The solution is to use the bitwise XOR operator. The XOR operator will return a 1 if either of the two given numbers is a 1, but will return a 0 if both of them are either 1 or 0. Therefore, the solution is: num1 = 2 num2 = 3 result = num1 ^ num2"},{"prompt":"Write a SQL query to select the top 2 most recently hired employees.","completion":"SELECT FirstName, LastName FROM Employees ORDER BY HireDate DESC LIMIT 2"},{"prompt":"You need to read a code and detect if there are any security vulnerabilities. Output true if there are any vulnerabilities, output false if there are none. def secret_function(username, password): if username == 'myusername' and password == 'mypassword': return True else: return False","completion":"true"},{"prompt":"w to remove duplicates from a list in Python?","completion":"In Python, duplicates can be removed from a list by converting the list to a set. Sets are unordered collections of unique elements. They do not allow duplicate elements, thus when a list is converted to a set, all duplicates are removed. For example, if the list is named my_list, then the set can be constructed as follows: my_set = set(my_list)"},{"prompt":"Write an SQL query to select the employees with a monthly salary greater than or equal to 3000.","completion":"SELECT FirstName, LastName, Salary FROM Employees WHERE Salary >= 3000"},{"prompt":"Write a function in Python that takes a number and returns the square of the number. x = 15","completion":"def square(x): \\"\\"\\"This function takes an integer x and returns its square\\"\\"\\" return x * x x = 15 print(square(x)) # prints 225"},{"prompt":"Create a loop in JavaScript that logs \\"Hello, World!\\" to the console 5 times.","completion":"for (let i=0; i<5; i++){ console.log('Hello, World!'); }"},{"prompt":"Create a RegEx pattern to match any sequences of characters that contains an \\"a\\".","completion":"let pattern = /a+/;"},{"prompt":"Apply a style that changes the color of the text \\"Hello, World!\\" to red. <span>Hello, World!</span>","completion":"<span style=\\"color:red;\\">Hello, World!</span>"},{"prompt":"Create a for loop in JavaScript that iterates through a given array and prints each element. arr = [\\"a\\",\\"b\\",\\"c\\",\\"d\\"]","completion":"arr = [\\"a\\",\\"b\\",\\"c\\",\\"d\\"]; for (let i = 0; i < arr.length; i++){ console.log(arr[i]); }"},{"prompt":"Design a SQL query to select all the rows from a table where the field \\"ISBN\\" is not equal to zero. SELECT * FROM table_name;","completion":"SELECT * FROM table_name WHERE ISBN <> 0;"},{"prompt":"Create a program in C++ to find the largest number in an array of integers. arr = [10, 20, 15, 12, 5]","completion":"#include <iostream> using namespace std; int findMax(int arr[], int n) { int max = arr[0]; for (int i = 1; i < n; i++) if (arr[i] > max) max = arr[i]; return max; } int main() { int arr[] = {10, 20, 15, 12, 5}; int n = sizeof(arr) / sizeof(arr[0]); int max = findMax(arr, n); cout << \\"Maximum element in array is \\" << max; return 0; }"},{"prompt":"Rewrite the code using a while loop to count down from the number 5 to 0.","completion":"let num = 5; while (num >= 0) { console.log(num); num--; }"},{"prompt":"Edit the given HTML structure to center the content in the page. <!DOCTYPE html> <html lang=\\"en\\"> <head> <meta charset=\\"UTF-8\\"> <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1.0\\"> <title>My First Web Page</title> </head> <body> </body> </html>","completion":"<!DOCTYPE html> <html lang=\\"en\\"> <head> <meta charset=\\"UTF-8\\"> <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1.0\\"> <title>My First Web Page</title> </head> <body style =\\"text-align:center;\\"> </body> </html>"},{"prompt":"Generate a valid JSON object that describes the given user information. Name: John Age: 33 Location: New York","completion":"{ \\"name\\": \\"John\\", \\"age\\": 33, \\"location\\": \\"New York\\" }"},{"prompt":"Create a class to store and print information about a book.","completion":"class Book: def __init__(self, title, author, publisher, pages): self.title = title self.author = author self.publisher = publisher self.pages = pages def print_info(self): print(f\\"Title: {self.title}\\") print(f\\"Author: {self.author}\\") print(f\\"Publisher: {self.publisher}\\") print(f\\"Pages: {self.pages}\\")"},{"prompt":"Create a function to sort the given array of numbers in descending order. [7, 2, 5, 1, 4]","completion":"def sort_number(arr): arr.sort(reverse=True) return arr arr = [7, 2, 5, 1, 4] print(sort_number(arr)) # Output: [7, 5, 4, 2, 1]"},{"prompt":"Write an SQL query to find the names of all students with a score higher than 75.","completion":"SELECT name FROM students WHERE score > 75;"},{"prompt":"Write a React component to show the current date.","completion":"import React from 'react'; function CurrentDate(){ const date = new Date().toLocaleDateString(); return ( <div> {date} </div> ) } export default CurrentDate;"},{"prompt":"Name four significant members of the Python community.","completion":"Guido van Rossum, Kenneth Reitz, Monty Python, and Brett Cannon."},{"prompt":"Create a MySQL query to select five distinct cities from the given table. +----+-----------+ | id | city | +----+-----------+ | 1 | New York | | 2 | London | | 3 | Tokyo | | 4 | Singapore | | 5 | Sydney | | 6 | Moscow | +----+-----------+","completion":"SELECT DISTINCT city FROM table_name LIMIT 5;"},{"prompt":"Create a JavaScript to switch between two div components.","completion":"function switchDiv(){ if(document.getElementById(\\"div1\\").style.display == \\"none\\"){ document.getElementById(\\"div1\\").style.display = \\"block\\"; document.getElementById(\\"div2\\").style.display = \\"none\\"; } else { document.getElementById(\\"div1\\").style.display = \\"none\\"; document.getElementById(\\"div2\\").style.display = \\"block\\"; } }"},{"prompt":"Write a SQL query to find all customers whose first name is 'John'.","completion":"SELECT * FROM customers WHERE first_name = 'John';"},{"prompt":"Write a java program to print the frequencies of all characters in a string. string = \\"mississipp","completion":"public class Frequency { static void characterFrequency(String str) { // size of the string 'str' int n = str.length(); // 'freq[]' implemented as hash table int freq[] = new int[256]; // accumulate freqeuncy of each character // in 'str' for (int i = 0; i < n; i++) freq[str.charAt(i)]++; // traverse 'str' from left to right for (int i = 0; i < n; i++) { // if frequency of character str.charAt(i) // is not equal to 0 if (freq[str.charAt(i)] != 0) { // print the character along with its // frequency System.out.print(str.charAt(i)); System.out.print(freq[str.charAt(i)] + \\" \\"); // update frequency of str.charAt(i) to // 0 so that the same character is not printed // again freq[str.charAt(i)] = 0; } } } // Driver code public static void main(String args[]) { String str = \\"mississippi\\"; characterFrequency(str); } }"},{"prompt":"Convert a 2D array into a 1D array. array = [[1, 2], [3, 4]]","completion":"array = array.reshape(-1, ).tolist()"},{"prompt":"Multiply two vectors of the same size. Vector1 = [1, 2, 3] Vector2 = [4, 5, 6]","completion":"resultantVector = [4, 10, 18]"},{"prompt":"Generate an algorithm that sorts the elements of an array. [6, 3, 8, 9, 4]","completion":"def sort_array(arr): n = len(arr) # Traverse through all array elements for i in range(n): # Last i elements are already in correct position for j in range(0, n-i-1): # traverse the array from 0 to n-i-1 # Swap if the element found is greater # than the next element if arr[j] > arr[j+1] : arr[j], arr[j+1] = arr[j+1], arr[j] # Driver code to test above arr = [6, 3, 8, 9, 4] sort_array(arr) print (\\"Sorted array is:\\") for i in range(len(arr)): print (\\"%d\\" %arr[i]),"},{"prompt":"Define a function that takes an array of integers and returns an array of the squares of the input values. [2, 4, 6]","completion":"def array_squares(arr): return list(map(lambda x: x**2 , arr))"},{"prompt":"Explain how you would loop over a list of dictionaries to extract all the values","completion":"To loop through a list of dictionaries, you can use a for loop. For example: my_list = [{\\"name\\": \\"John Doe\\"}, {\\"age\\": 25}] for item in my_list: for key, value in item.items(): print(key, \\":\\", value) This will loop through each item in the list as a dictionary, and for each dictionary, it will loop through all the key-value pairs and print them out."},{"prompt":"Provide an answer to the following question What is the maximum size of an array in Java?","completion":"The maximum size of an array in Java is determined by the amount of memory that the JVM has available to allocate. In practice, this means that the maximum size of an array is typically limited to the amount of free memory available on the heap. Generally speaking, the maximum size of an array can range from a few thousand to somewhere around 2 billion elements."},{"prompt":"Generate a Python script that implements a Linked List data structure.","completion":"# define Node class Node(object): def __init__(self, data): self.data = data self.next = None # define LinkedList class LinkedList: def __init__(self, head=None): self.head = head def insert(self, node): current = self.head if not self.head: self.head = node else: while current.next: current = current.next current.next = node def delete_node(self, data): current = self.head while current.data != data and current.next is not None: previous = current current = current.next if current.data == data: if current == self.head: self.head = current.next else: previous.next = current.next"},{"prompt":"Suggest an improvement for the following piece of code def addTwoNumbers(a, b): return a + b","completion":"def addTwoNumbers(a, b): try: if type(a) == str or type(b) == str: raise TypeError('Inputs must be of type int or float') return a + b except TypeError as e: print(e)"},{"prompt":"Write a function to produce a copy of an array [1, 2, 3, 4]","completion":"def copy_array(arr): new_arr = list(arr) return new_arr"},{"prompt":"Explain how to convert an expression from postfix notation to infix notation","completion":"Infix notation is a way of writing an expression in which the operators are placed between the operands, such as 2 + 5, whereas postfix notation is a way of writing an expression in which the operators are placed after the operands, such as 2 5 +. To convert an expression from postfix notation to infix notation, scan the expression from left to right. If an operand is encountered, simply push it onto a stack. If an operator is encountered, pop two operands from the stack and place the operator in between them. Finally, push the resulting expression back onto the stack and repeat this until the end of the expression is reached."},{"prompt":"Provide a Python function to calculate the number of times a word appears in a given string \\"This is a sample string. There are some words in this string.","completion":"def count_words(s): tokens = s.split() word_freq = {} for token in tokens: if token in word_freq: word_freq[token] += 1 else: word_freq[token] = 1 return word_freq"},{"prompt":"Write a function in Java that sorts a given array of integers.","completion":"public static int[] sortArray(int[] arr) { int n = arr.length; for (int i = 0; i < n-1; i++) for (int j = 0; j < n-i-1; j++) if (arr[j] > arr[j+1]) { // swap arr[j+1] and arr[i] int temp = arr[j]; arr[j] = arr[j+1]; arr[j+1] = temp; } return arr; }"},{"prompt":"Write a Tensorflow program to perform binary classification on a given dataset.","completion":"import tensorflow as tf mnist = tf.keras.datasets.mnist (x_train, y_train), (x_test, y_test) = mnist.load_data() x_train, x_test = x_train / 255.0, x_test / 255.0 model = tf.keras.models.Sequential([ tf.keras.layers.Flatten(input_shape=(28, 28)), tf.keras.layers.Dense(128, activation='relu'), tf.keras.layers.Dense(2, activation='softmax') ]) model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy']) model.fit(x_train, y_train, epochs=5) model.evaluate(x_test, y_test, verbose=2)"},{"prompt":"Create a function in PHP to check a given string for palindromes.","completion":"<?php function checkPalindrome(str) { // Reverse the given string revstr = strrev(str); // Checking if the string is equal to its reverse if (str == revstr) return true; else return false; } ?>"},{"prompt":"Modify the given C# program to count all the vowels in a given string. string str = \\"This is a sample string.\\";","completion":"string str = \\"This is a sample string.\\"; int count = 0; foreach (char ch in str) { switch (ch) { case 'a': case 'e': case 'i': case 'o': case 'u': count++; break; } } Console.WriteLine(\\"Number of vowels in the given string: \\" + count);"},{"prompt":"Develop a C program to compute the factorial of a given number n.","completion":"#include <stdio.h> int factorial(int n) { int res = 1, i; for (i = 2; i <= n; i++) res *= i; return res; } int main() { int n; scanf(\\"%d\\", &n); printf(\\"%d\\", factorial(n)); return 0; }"},{"prompt":"Create a Dockerfile to containerize an existing web application.","completion":"FROM ubuntu:latest # Install the necessary packages RUN apt-get update && apt-get install -y apache2 php libapache2-mod-php # Copy the web application files from host to container COPY . /var/www/html # Set Apache as the default startup command CMD [\\"apachectl\\", \\"-D\\", \\"FOREGROUND\\"]"},{"prompt":"Develop a Ruby program to check a given string for palindromes.","completion":"def palindrome?(str) str_rev = str.reverse str == str_rev end"},{"prompt":"Compile a given C++ program using the G++ compiler.","completion":"g++ program.cpp -o program"},{"prompt":"mplement a machine learning model in Python to predict customer churn.","completion":"import numpy as np import pandas as pd import matplotlib.pyplot as plt from sklearn.model_selection import train_test_split from sklearn.linear_model import LogisticRegression from sklearn.metrics import accuracy_score # Load dataset customers = pd.read_csv(\\"customers.csv\\") # Split into train and test sets X_train, X_test, y_train, y_test = train_test_split( customers.drop('Churn', axis=1), customers.Churn, test_size=0.2, random_state=42) # Create model model = LogisticRegression() # Fit and make predictions model.fit(X_train, y_train) y_pred = model.predict(X_test) # Calculate accuracy accuracy = accuracy_score(y_test, y_pred) print(\\"Accuracy: %.2f%%\\" % (accuracy * 100.0))"},{"prompt":"Create a SQL query to find the top 3 performing products in a given store. Table Name: produc","completion":"SELECT ProductName, SUM(QuantitySold) AS Popularity FROM products GROUP BY ProductName ORDER BY Popularity DESC LIMIT 3;"},{"prompt":"Develop a JavaScript program to print the average of a given set of numbers.","completion":"function findAverage(numbers) { let sum = 0; for (let i = 0; i < numbers.length; i++) { sum += numbers[i]; } return sum / numbers.length; }"},{"prompt":"Generate a list of 1000 random numbers between 1 and 1000 using Python.","completion":"import random random_list = [random.randint(1, 1000) for _ in range(1000)]"},{"prompt":"Convert a string representation of a JSON object to an actual JSON object in Python. '{\\"name\\": \\"John\\", \\"age\\": 30, \\"city\\": \\"New York\\"}'","completion":"import json json_string = '{\\"name\\": \\"John\\", \\"age\\": 30, \\"city\\": \\"New York\\"}' json_object = json.loads(json_string)"},{"prompt":"Design a function in R to check if a variable is a character or not.","completion":"is.character <- function(x){ return(is.character(x)) }"},{"prompt":"Calculate the sine of a given angle using JavaScript. 45","completion":"let angle = 45; let sine = Math.sin(angle * (Math.PI/180)); console.log(sine);"},{"prompt":"Write a C# function to find the largest among three given numbers. 3, 10, 4","completion":"public int LargestNumber(int a, int b, int c) { if (a >= b && a >= c) return a; else if (b >= a && b >= c) return b; else return c; }"},{"prompt":"Write a Ruby function that reverses a string.","completion":"def reverse_string(str) return str.reverse end"},{"prompt":"Write a SQL query to retrieve all the rows from the table \\"Products\\" that contain the product category \\"Furniture\\".","completion":"SELECT * FROM Products WHERE product_category = 'Furniture';"},{"prompt":"Normalize a column \\"Weight\\" in a Pandas dataframe.","completion":"import pandas as pd # Read data from csv file df = pd.read_csv(\\"data.csv\\") # Normalize the column \\"Weight\\" df['Weight']=(df['Weight']-df['Weight'].min())/(df['Weight'].max()-df['Weight'].min()) # Print the dataframe print(df)"},{"prompt":"Generate a random password of length 8 using Python.","completion":"import random def generate_password(length): chars = \\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\\" password = \\"\\" for i in range(length): index = random.randint(0, len(chars)-1) password += chars[index] return password length = 8 password = generate_password(length) print(\\"Here's your random password:\\", password)"},{"prompt":"Create a JavaScript object to store a user's information.","completion":"let user = { firstName : 'John', lastName : 'Doe', age : 30, job : 'Software Engineer' };"},{"prompt":"Edit a given HTML string so that every word is displayed in bold. <div>This is a sample sentence.</div>","completion":"<div> <strong>This</strong> <strong>is</strong> <strong>a</strong> <strong>sample</strong> <strong>sentence.</strong> </div>"},{"prompt":"Create a function that determines if two words are anagrams. Fire, fry","completion":"def is_anagram(word1, word2): word1 = word1.upper() word2 = word2.upper() return sorted(word1) == sorted(word2)"},{"prompt":"Create a React component that renders a list of items. items = [\\"Apple\\", \\"Banana\\", \\"Cherry\\"]","completion":"import React from 'react'; const ListView = (props) => { return ( <div> { props.items.map((item, index) => ( <li key={index}>{item}</li> )) } </div> ); } export default ListView;"},{"prompt":"mplement an algorithm to sort the following array. [3, 5, 4, 6, 1, 2]","completion":"def sortArray(array): n = len(array) for i in range(n): min_index = i for j in range(i+1, n): if array[min_index] > array[j]: min_index = j array[i], array[min_index] = array[min_index], array[i] return array"},{"prompt":"Find the maximum and minimum number in the following array with JavaScript. [20, 40, 10, 30, 50]","completion":"let numbers = [20, 40, 10, 30, 50]; let minNumber = Math.min(...numbers); let maxNumber = Math.max(...numbers);"},{"prompt":"Create a HTML form for entering first name and last name.","completion":"<form> <label>First name:</label> <input type=\\"text\\" name=\\"first_name\\" /> <br><br> <label>Last name:</label> <input type=\\"text\\" name=\\"last_name\\" /> <br><br> <input type=\\"submit\\" value=\\"Submit\\" /> </form>"},{"prompt":"List two advantages and two disadvantages of using a linked list data structure","completion":"Advantages of using a linked list data structure: 1. A linked list can grow and shrink in size as needed since nodes can be dynamically allocated. 2. Nodes can be added at any point in the list without traversing the whole list. Disadvantages of using a linked list data structure: 1. Time efficiency is reduced since nodes must be searched sequentially. 2. Memory efficiency is reduced since each node requires additional space to store references to the next node."},{"prompt":"What is the best approach to solve this problem? Given an array of integers, find the longest continuous increasing subarray within the array.","completion":"The best approach to solve this problem is to use the sliding window technique. This involves iterating through the array and keeping track of the start and end points of a window. We check to see if the elements of the window are increasing and update the start and end points accordingly. When the window becomes longer than the longest subarray found so far, we update the longest subarray. The time complexity of this approach is O(n)."},{"prompt":"Explain the concept of a priority queue","completion":"A priority queue is a type of data structure where each element has an associated priority. A priority queue can be used to store and manage data where the highest priority elements are retrieved first. Elements in the priority queue are ordered according to their priority, with the highest priority element at the front of the queue and the lowest priority element at the back."},{"prompt":"dentify the key differences between a set and a dictionary in Python.","completion":"The key difference between a set and a dictionary in Python is that a set stores unordered elements while a dictionary stores key-value pairs. Additionally, dictionaries have a set of keys that are unique and immutable, while sets are unordered collections of unique and immutable elements. Sets are more efficient for searching and testing for membership, while dictionaries are more efficient for retrieving specific values."},{"prompt":"w can you execute a beta test using a web application?","completion":"To execute a beta test using a web application, you can create a prototype or minimum viable version of the web application and allow a limited number of users to access it. You can gather feedback from these users on the usability and performance of the application, which can be then used to make improvements before launching the app. Additionally, you can invite more users to join the beta program, so that you can get a wide range of user experiences and insights that can help make the web application robust."},{"prompt":"What is the most efficient sorting algorithm for a large data set?","completion":"The Quick Sort algorithm is one of the most efficient sorting algorithms for large data sets. It works by finding a pivot element in the array, and then dividing the array into two parts based on the pivot element. All elements that are lesser than the pivot element are placed to the left, and all elements that are greater than the pivot element are placed to the right. The Quick Sort algorithm then recursively divides and sorts the left and right parts until the entire array is sorted. It has a worst-case time complexity of O(n^2), but its average case time complexity is O(nlogn) which makes it an efficient sorting algorithm."},{"prompt":"Convert a given string to its lowercase version Pytho","completion":"lower_case = \\"python\\""},{"prompt":"Given a list of numbers, find the number which appears the most times in the list. [2, 3, 4, 2, 3, 2, 3, 2]","completion":"The number which appears the most times in the list is 2, which appears 4 times."},{"prompt":"Write Java code to calculate the sum of first n natural numbers.","completion":"public class SumNatural { public static void main(String[] args) { int num = 20, sum = 0; for(int i = 1; i <= num; ++i) { sum += i; } System.out.println(\\"Sum = \\" + sum); } }"},{"prompt":"Create an infinite loop in C.","completion":"while (1) { // code goes here }"},{"prompt":"Create a SQL query to fetch the data from the following tables. Table A id name 1 John 2 Mary Table B id age 1 20 2 25","completion":"SELECT a.name, b.age FROM tableA a INNER JOIN tableB b ON a.id = b.id;"},{"prompt":"Write a piece of C++ code to find the absolute value of a number.","completion":"int absolute_value(int num) { if (num < 0) { num = -num; } return num; }"},{"prompt":"Create a search query in MySQL. Table users id name email 1 John john@email.com 2 Mary mary@somedomain.com","completion":"SELECT * FROM users WHERE name LIKE '%ary%';"},{"prompt":"Write code in Java to print all the unique elements in an array.","completion":"public void printUnique(int[] array) { Set<Integer> set = new HashSet<>(); for (int i : array) { set.add(i); } System.out.println(set); }"},{"prompt":"Design a web page using HTML and CSS.","completion":"<html> <head> <title>My webpage</title> </head> <body> <h1>Hello World!</h1> <p>Welcome to my webpage.</p> </body> </html> <style> body { font-family: Arial, sans-serif; font-size: 16px; } </style>"},{"prompt":"Write a short Java program to generate a random value from 1 to 10.","completion":"import java.util.Random; public class genRandom { public static void main(String[] args) { // create instance of Random class Random rand = new Random(); // Generate random integers in range 0 to 10 int randomNum = rand.nextInt(11); // Print random integers System.out.println(\\"Random Number :\\" + randomNum); } }"},{"prompt":"Create a function that takes a sentence as a string and returns a string containing the sentence in reverse order. \\"I am learning to code","completion":"public String reverse(String sentence) { StringBuilder reversedSentence = new StringBuilder(); String[] words = sentence.split(\\" \\"); for (int i = words.length - 1; i >= 0; i--) { reversedSentence.append(words[i]); reversedSentence.append(\\" \\"); } return reversedSentence.toString().trim(); }"},{"prompt":"Write a JavaScript code snippet to loop through an array and return the sum of all the elements. [1, 2, 3, 4]","completion":"let arr = [1, 2, 3, 4]; let sum = 0; for (let i = 0; i < arr.length; i++) { sum += arr[i]; } console.log(sum);"},{"prompt":"Create a function that takes two arguments, a number and a string, and returns the string repeated the specified number of times. 4, \\"Hello","completion":"def repeatString(n, s): return s * n repeatString(4, \\"Hello\\")"},{"prompt":"Determine the type of an object. \\"Hello","completion":"type(“Hello”)"},{"prompt":"Write an R code snippet to normalize data stored in a vector. [1,2,3,6]","completion":"normalize <- function(v) { (v - min(v)) / (max(v) - min(v)) } normalize([1,2,3,6])"},{"prompt":"Create a list comprehension for the following code. number_list = [] for x in range(10): if x % 2 == 0: number_list.append(x)","completion":"number_list = [x for x in range(10) if x % 2 == 0]"},{"prompt":"Create a function to find the standard deviation of a list of numbers [2,4,4,4,5,5,7,9]","completion":"def std_deviation(data): n = len(data) mean = sum(data) /n sum_sqr = sum(pow(x-mean,2) for x in data) stdev = sqrt(sum_sqr/n) return stdev std_deviation([2,4,4,4,5,5,7,9])"},{"prompt":"Create a Java program that takes two strings s and t as input and checks if t is an anagram of s s = \\"abc\\", t = \\"bac","completion":"public class Anagram { static void isAnagram(String s1, String s2) { // Removing all white spaces from s1 and s2 String copyOfs1 = s1.replaceAll(\\"s\\", \\"\\"); String copyOfs2 = s2.replaceAll(\\"s\\", \\"\\"); // Initially setting status as true boolean status = true; if (copyOfs1.length() != copyOfs2.length()) { // Setting status as false if copyOfs1 and copyOfs2 doesn't have same length status = false; } else { // Changing the case of characters of both copyOfs1 and copyOfs2 and // converting them to char array char[] s1Array = copyOfs1.toLowerCase().toCharArray(); char[] s2Array = copyOfs2.toLowerCase().toCharArray(); // Sorting both s1Array and s2Array Arrays.sort(s1Array); Arrays.sort(s2Array); // Checking whether s1Array and s2Array are equal status = Arrays.equals(s1Array, s2Array); } // Output the Message if (status) System.out.println(s1 + \\" and \\" + s2 + \\" are anagrams\\"); else System.out.println(s1 + \\" and \\" + s2 + \\" are not anagrams\\"); } public static void main(String[] args) { isAnagram(\\"abc\\", \\"bac\\"); } }"},{"prompt":"Create a Haskell function to calculate a number raised to a certain power","completion":"pow' :: (Num a, Integral b) => a -> b -> a pow' x p = x^p"},{"prompt":"Write a function in SQL to find the maximum value in a table Table name: score","completion":"SELECT MAX(score) FROM scores;"},{"prompt":"Create a Macros in Excel to transpose a given set of data","completion":"Sub Transpose() Dim ReadyRange As Range Set ReadyRange = Selection ReadyRange.Copy ReadyRange.PasteSpecial xlPasteAll, Transpose:=True End Sub"},{"prompt":"Create a vector in R to count the occurrences of a given number in an array arr = c(1,1,2,2,2,2,3,3,4,4,4)","completion":"vector <- c() for (i in arr) { count <- length(which(arr == i)) vector <- c(vector, count) }"},{"prompt":"Write a SAS Procedure to mean generate a boxplot","completion":"proc boxplot data=dataset; plot y*x; run;"},{"prompt":"Create a Regular Expression that validates a USA phone number","completion":"^+?1?s?(?d{3})?[s-]?d{3}[s-]?d{4}"},{"prompt":"Write a C++ program to find the kth smallest element in an unsorted array using minimum number of comparisons.","completion":"#include<algorithm> #include<math.h> using namespace std; int kthSmallest(int arr[], int n, int k) { sort(arr, arr + n); return arr[k - 1]; } // Function to find the kth smallest element int kthSmallestWComp(int arr[], int n, int k) { // Initialize values of left and right int left = -2147483648, right = 2147483647, ans = -1; while (left <= right) { int mid = (left + right) / 2; int countLtEqMid = 0, countGtMid = 0; // Loop to count total less than equal mid for (int i = 0; i < n; i++) if (arr[i] <= mid) countLtEqMid++; // Loop to count total greater than mid for (int i = 0; i < n; i++) if (arr[i] > mid) countGtMid++; if (countLtEqMid < k && k <= (countLtEqMid + countGtMid)) { ans = mid; left = mid + 1; } else if (countLtEqMid >= k) right = mid - 1; else left = mid + 1; } return ans; }"},{"prompt":"Write a MySQL query to find the name of a customer whose last name is 'Smith' and has the highest credit limit.","completion":"SELECT name FROM Customers WHERE lastname = 'Smith' ORDER BY creditlimit DESC LIMIT 1;"},{"prompt":"Write a JavaScript program to classify a given array of strings into two groups- one which contains elements that can be parsed into numbers and one which can't.","completion":"function classify(arr) { let nums = []; let strs = []; arr.forEach(el => { if (!isNaN(el)) nums.push(el); else strs.push(el); }); return [nums, strs]; }"},{"prompt":"Write a C# program to remove the leading and trailing spaces in a given string.","completion":"public static string RemoveLeadingAndTrailingSpaces(string str) { // To remove leading spaces while (str.StartsWith(\\" \\")) { str = str.Substring(1); } // To remove trailing spaces while (str.EndsWith(\\" \\")) { str = str.Substring(0, str.Length - 1); } return str; }"},{"prompt":"Write an HTML page to display a given data table.","completion":"<!DOCTYPE html> <html> <head> <title>Table Display</title> </head> <body> <table> <tr> <th>Name</th> <th>Age</th> </tr> <tr> <td>John</td> <td>21</td> </tr> <tr> <td>Jane</td> <td>25</td> </tr> <tr> <td>Joe</td> <td>30</td> </tr> </table> </body> </html>"},{"prompt":"Create a SQL query to list the customers who have not completed any orders.","completion":"SELECT * FROM Customers c LEFT JOIN Orders o ON c.customer_id = o.customer_id WHERE o.order_id IS NULL;"},{"prompt":"Write an SQL query to list the customer names and the total amount of orders placed by them.","completion":"SELECT c.name AS 'Customer Name', SUM(o.total_cost) AS 'Total Amount' FROM Customers c LEFT JOIN Orders o ON c.customer_id = o.customer_id GROUP BY c.name;"},{"prompt":"Write a Java program to filter out the common characters in two given strings.","completion":"public static String filterCommonCharacters(String str1, String str2) { StringBuilder sb = new StringBuilder(); // Traverse both strings for (int i = 0; i < str1.length(); i++) { // Check if str2 contains str1[i] boolean found = false; for (int j = 0; j < str2.length(); j++) { if (str1.charAt(i) == str2.charAt(j)) found = true; } // Append the character if it is not present in str2 if (found == false) sb.append(str1.charAt(i)); } return sb.toString(); }"},{"prompt":"Create a Java method which takes a String and an integer as inputs and concatenates the integer to the beginning of the string. inputString: \\"This is a test\\" num: 38","completion":"public static String prependIntToString(String inputString, int num) { String outputString = num + \\"\\" + inputString; return outputString; }"},{"prompt":"Create a function to convert a string containing numbers in scientific notation to an integer. inputString: \\"1.0e7","completion":"int convertSciNotation(String inputString) { int outputInteger = (int)Math.pow(10, Double.parseDouble(inputString.substring(inputString.indexOf('e') + 1))); return outputInteger; }"},{"prompt":"Create a CSS class to set the font size of the <h1> element to double the size of the <body> element.","completion":"h1 { font-size: 200%; }"},{"prompt":"Write a SQL query to list the name of customers and associated shipping addresses.","completion":"SELECT c.name, s.address FROM customers c INNER JOIN shipping_address s ON c.id = s.customer_id"},{"prompt":"mplement an algorithm to split a string of numbers (integers or floats) in to two parts with an even sum inputString: '1,2,3,4,5,6'","completion":"public int[] splitEvenSum(string inputString) { List<int> nums = new List<int>(); // Split inputString at , and add elements to the list foreach (var num in inputString.Split(',')) { nums.Add(int.Parse(num)); } // Initialize variables int targetSum = 0; int sum1 = 0; int sum2 = 0; List<int> list1 = new List<int>(); List<int> list2 = new List<int>(); // Loop through and calculate sums foreach (var num in nums) { targetSum += num; } targetSum /= 2; // Backtrack and find the two subarrays with the same sum foreach (var num in nums) { if (sum1 + num <= targetSum) { sum1 += num; list1.Add(num); } else { sum2 += num; list2.Add(num); } } // Return results int[] result = new int[2] {sum1, sum2}; return result; }"},{"prompt":"Write a Java method that takes a string and an integer as input, and returns the string in reverse with the integer repeated at the end. inputString: \\"Hello\\" num: 3","completion":"public static String repeatNumAtEnd(String inputString, int num) { String outputString = \\"\\"; for(int i = inputString.length() - 1; i >= 0; i--){ outputString += inputString.charAt(i); } for (int i = 0; i < num; i++){ outputString += num; } return outputString; }"},{"prompt":"Write a ruby program to merge two sorted arrays in to one sorted array. arr1: [1, 4, 6] arr2: [2, 3, 7]","completion":"def mergeSortedArrays(arr1, arr2) arr3 = arr1 + arr2 arr3.sort! return arr3 end"},{"prompt":"What does a break statement do in C++?","completion":"A break statement in C++ is used to stop the execution of a loop and exit the loop. It can also be used to stop the switch statement execution."},{"prompt":"Create a SQL query to calculate the total cost of an order taking into account the quantity and unit cost of each item.","completion":"SELECT sum(quantity * unit_cost) as total_cost FROM orders GROUP BY order_id"},{"prompt":"Classify the given sentence as short or long. Sentence: She felt so excited that her application got approval.","completion":"Short sentence."},{"prompt":"Create a function to check which HEX color can be generated from the given RGB value. rgb: 253, 199, 1","completion":"def rgb_to_hex(rgb): r, g, b = rgb hex_val = \\"#{:02x}{:02x}{:02x}\\".format(r, g, b) return hex_val # Output: #fdc701"},{"prompt":"Convert the given text into a list of words, separating the words by whitespace. text: This sentence contains five word","completion":"def to_words(text): return text.split() # Output: ['This', 'sentence', 'contains', 'five', 'words']"},{"prompt":"Build a neural network for binary classification using TensorFlow.","completion":"\\"\\"\\" Build a neural network for binary classification using TensorFlow \\"\\"\\" import tensorflow as tf # Define the model model = tf.keras.Sequential() model.add(tf.keras.layers.Dense(units=8, activation='relu', input_shape=(2,))) model.add(tf.keras.layers.Dense(units=4, activation='relu')) model.add(tf.keras.layers.Dense(units=1, activation='sigmoid')) # Compile the model model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])"},{"prompt":"Compute the mean of the following set of numbers: 7, 15, 16, 23, 35.","completion":"The mean of the given set of numbers is 19.4. Mean = (7+15+16+23+35)/5 = 19.4"},{"prompt":"Use the following JSON data and write a JavaScript function to parse it. { \\"employees\\": [ { \\"firstName\\": \\"John\\", \\"lastName\\": \\"Doe\\" }, { \\"firstName\\": \\"Anna\\", \\"lastName\\": \\"Smith\\" }, { \\"firstName\\": \\"Peter\\", \\"lastName\\": \\"Jones\\" } ] }","completion":"function parseJSON(jsonString) { let employeeData = JSON.parse(jsonString); let employees = employeeData.employees; let parsedData = []; for (let i = 0; i < employees.length; i++){ let employee = employees[i]; let parsedEmployee = {}; parsedEmployee.firstName = employee.firstName; parsedEmployee.lastName = employee.lastName; parsedData.push(parsedEmployee); } return parsedData; };"},{"prompt":"Write a SQL query to select all records from a table with a given name.","completion":"SELECT * FROM <table_name>;"},{"prompt":"Use the following code and write a JavaScript function to reverse the order of the characters in a given string.","completion":"function reverseString(str) { return str.split('').reverse().join(''); }"},{"prompt":"Use the following function and SQL query and write a JavaScript program to insert data into a given table. function insertData(arr) { let sqlQuery = \\"INSERT INTO <table_name> (NAME,AGE) VALUES ?\\"; }","completion":"function insertData(arr) { let sqlQuery = \\"INSERT INTO <table_name> (NAME,AGE) VALUES ?\\"; let values = []; arr.forEach(item => { values.push([item.name, item.age]); }); executeQuery(sqlQuery, [values]); } function executeQuery(query, values) { connection.query(query, [values], function (err, result) { if (err) { console.log(err); } }); }"},{"prompt":"Write a C++ program to calculate the difference between two dates using the following function.","completion":"#include <iostream> #include <ctime> using namespace std; int diffDates(time_t date1, time_t date2){ return difftime(date1, date2) / (60 *60 *24); // in days } int main(){ // example dates time_t date1 = 0; time_t date2 = time(0); cout << diffDates(date1, date2) << endl; return 0; }"},{"prompt":"Write a JavaScript program to find the most commonly occurring item in a given object.","completion":"function mostCommonlyOccuring(obj) { let count = {}; let maxCount = 0; let mostCommon = null; for (const key in obj) { if (obj.hasOwnProperty(key)) { if (obj[key] in count) { count[obj[key]]++; } else { count[obj[key]] = 1; } if (count[obj[key]] > maxCount) { maxCount = count[obj[key]]; mostCommon = obj[key]; } } } return mostCommon; }"},{"prompt":"Construct a JS code snippet to add a class \\"active\\" to an HTML element with an id \\"example\\".","completion":"document.getElementById(\\"example\\").classList.add(\\"active\\");"},{"prompt":"Build an HTML form containing 3 input elements (name, email, password) and a submit button.","completion":"<form action=\\"\\"> Name: <input type=\\"text\\" name=\\"name\\"> Email: <input type=\\"email\\" name=\\"email\\"> Password: <input type=\\"password\\" name=\\"password\\"> <input type=\\"submit\\" value=\\"Submit\\"> </form>"},{"prompt":"Generate a JS code snippet to switch between two colours (red and blue) while hovering the mouse pointer over an HTML element.","completion":"<style> .element:hover { background-color: red; transition: background-color 1s ease; } .element:hover:after { background-color: blue; } </style>"},{"prompt":"Construct a sql query to select the names and age of all employees who have a salary greater than 45000","completion":"SELECT name, age FROM employee WHERE salary > 45000;"},{"prompt":"Create a python function that takes a string of characters as an argument and returns a list of all unique combinations of characters possible. abc","completion":"def generate_unique_permutations(string): output = [] for x in range(len(string)): for y in range(x + 1,len(string)+1): output.append(''.join(sorted(string[x:y]))) return output print(generate_unique_permutations(\\"abc\\")) #Output: ['a', 'ab', 'abc', 'ac', 'b', 'bc', 'c']"},{"prompt":"Construct a Python function to count the number of words in a given sentence This is a sentence","completion":"def word_count(sentence): return len(sentence.split()) print(word_count('This is a sentence')) # Output: 5"},{"prompt":"Write a Java method to replace all spaces from a given string with a provided character Hello World! Z","completion":"public static String replaceCharacter(String str, char c) { return str.replaceAll(\\" \\", String.valueOf(c)); } System.out.println(replaceCharacter(\\"Hello World!\\", 'Z')); // Output: HelloZWorld!"},{"prompt":"Generate a css code block to create a white text shadow for a given HTML element","completion":".element { text-shadow: 1px 0 white, 0 1px white, 1px 1px white, -1px 0 white, 0 -1px white, -1px -1px white; }"},{"prompt":"Create a dictionary where each key is a unique integer and the value of each key is the corresponding product of the two given numbers. x = 15 y = 2","completion":"d = {} for i in range(1, x + 1): d[i] = i * y print(d)"},{"prompt":"Write a single-line lambda expression that multiplies any two numbers.","completion":"mul = lambda x, y: x * y"},{"prompt":"Generate a list of numbers from 1 to 10 in reverse order.","completion":"lst = list(range(10, 0, -1))"},{"prompt":"Using the numpy library, reshape the given matrix array to 5 rows and 2 columns. import numpy as np arr = np.array([[1, 2], [3, 4], [5, 6], [7, 8], [9, 10], [11, 12]])","completion":"arr = np.array([[1, 2], [3, 4], [5, 6], [7, 8], [9, 10], [11, 12]]) reshaped_arr = arr.reshape(5, 2) print(reshaped_arr)"},{"prompt":"Replace all empty strings with a default value using the following list. my_list = [\\"apple\\", \\"\\", \\"grapes\\", \\"\\", \\"bananas\\"]","completion":"my_list = [\\"apple\\", \\"\\", \\"grapes\\", \\"\\", \\"bananas\\"] my_list = [x if x != \\"\\" else \\"default\\" for x in my_list] print(my_list)"},{"prompt":"Create a new list with the contents of the given list plus the new element at the beginning. my_list = [3, 5, 6, 7] new_element = 1","completion":"my_list = [3, 5, 6, 7] new_element = 1 new_list = [new_element] + my_list print(new_list)"},{"prompt":"Using the re library, trim the following string of all whitespace. my_string = \\" Hello, World!","completion":"import re my_string = \\" Hello, World! \\" modified_string = re.sub('s+', '', my_string) print(modified_string)"},{"prompt":"there an error in the following code? price = 10 if prive > 10: print('Price must be 10 or less')","completion":"true"},{"prompt":"Write a code to form a triangle pattern with the character ''","completion":"for i in range(5): for j in range(i+1): print('', end=\\"\\") print()"},{"prompt":"Suggest ways to debug the following code x = 'Address' print(\\"Topic:\\", x)","completion":"- Add four spaces of indentation before the print statement to make it part of the block - Check the spelling of x to ensure there is no typo - Check the documentation for the correct syntax to print the value of x - Check the scope of x to ensure the value has been properly set outside the loop - Run the code in a debugger to find any issues that may arise during code execution"},{"prompt":"Suggest a more efficient code to solve the following task. x = 5 y = 10 if x > y: result = x else: result = y","completion":"x = 5 y = 10 result = max(x, y)"},{"prompt":"Write a code to reverse the order of characters in a string. text = \\"Hello World","completion":"text = \\"Hello World\\" rev_str = reversed(text) print(''.join(rev_str))"},{"prompt":"w to check if a given year is a leap year in Python?","completion":"def leap_year(year): if (year % 4 == 0) and (year % 100 != 0 or year % 400 == 0): return True return False"},{"prompt":"Generate a key-value pair such that the key is a string of length 3 and the value is a random number from 0 to 9","completion":"import random key = ''.join(random.choices(string.ascii_letters, k = 3)) value = random.randint(0, 9) data = {key : value}"},{"prompt":"Write a Python function that takes an integer as an argument and returns the square of that number","completion":"def square(n): return n ** 2"},{"prompt":"Generate a dictionary that has 5 string-string key-value pairs","completion":"import random keys = [''.join(random.choices(string.ascii_letters, k = 3)) for i in range(5)] values = [''.join(random.choices(string.ascii_letters, k = 3)) for i in range(5)] data = {key:value for key, value in zip(keys, values)}"},{"prompt":"Using the bubble sort algorithm, sort the following array. [3, 5, 2, 1, 4]","completion":"def bubbleSort(arr): n = len(arr) # Traverse through all array elements for i in range(n): # Last i elements are already in place for j in range(0, n-i-1): # traverse the array from 0 to n-i-1 # Swap if the element found is greater # than the next element if arr[j] > arr[j+1] : arr[j], arr[j+1] = arr[j+1], arr[j] return arr # Driver code arr = [3, 5, 2, 1, 4] bubbleSort(arr) Output: [1, 2, 3, 4, 5]"},{"prompt":"Add an element to a given list. List: ['a', 'b', 'c'] Element: 'd'","completion":"list1 = ['a', 'b', 'c'] list1.append('d') print(list1) Output: ['a', 'b', 'c', 'd']"},{"prompt":"Using a while loop, write a program to print the Fibonacci sequence.","completion":"# function to print Fibonacci sequence def fibo(n): counter = 0 a = 0 b = 1 while counter < n: print(a, end = \\" \\") fibonacci = a + b a = b b = fibonacci counter += 1 fibo(10) Output: 0 1 1 2 3 5 8 13 21 34"},{"prompt":"Programmatically generate 10 random numbers between 0 and 1.","completion":"import random for x in range(10): print(random.random()) Output: 0.06344054085111036 0.2881477132700741 0.17747003808770072 0.4838670382036148 0.8504676489597706 0.6951969864720918 0.3444948373996736 0.251203536083174 0.603054609456176 0.8579147959146845"},{"prompt":"Compress a given string by counting the occurrences of each character.","completion":"def compress_string(s): l = len(s) # If operations length is 0 if l == 0: return \\"\\" # Erroneous characters in the #original string are ignored. if l == 1 or s[0] == s[1]: return s[0] + str(1) # Initialize the variable count = 1 s1 = \\"\\" # Here i is the indexing variable i = 1 while i < l: # If the current character matches with the next one if (s[i] == s[i - 1]): count += 1 else: s1 = s1 + s[i - 1] + str(count) count = 1 i += 1 s1 = s1 + s[i - 1] + str(count) return s1 s = \\"geeksforgeeks\\" print(compress_string(s)) Output: g1e2k2s2f1o1r1g1e1e1k1s1"},{"prompt":"Create an object-oriented program in Java to calculate the area of a rectangle.","completion":"public class Rectangle { private int width; private int height; public Rectangle(int width, int height){ this.width = width; this.height = height; } public int calculateArea(){ return this.width * this.height; } }"},{"prompt":"Given a sentence as input, check if the sentence is a palindrome \\"Madam, I'm Adam","completion":"def is_palindrome(s): s = s.replace(\\" \\", \\"\\") return s == s[::-1] is_palindrome(\\"Madam, I'm Adam\\") # returns True"},{"prompt":"Write a Visual Basic Script to add two numbers","completion":"Function add(a As Integer, b As Integer) add = a + b End Function MsgBox(add(5, 2))"},{"prompt":"Write a Ruby script to calculate the square root of a number","completion":"def sqrt(number) Math.sqrt(number) end puts sqrt(9) # output 3.0"},{"prompt":"Create an algorithm to generate a random password","completion":"def generate_password(length): password = \\"\\" characters = \\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#%^&*()\\" for i in range(length): password += choice(characters) return password print(generate_password(10)) // output 5s@N#s9J@2"},{"prompt":"Develop Python code to print out all the divisors of a given number 30","completion":"def get_divisors(n): divisors = [] for i in range(1, n+1): if n % i == 0: divisors.append(i) return divisors print(get_divisors(30)) # output [1, 2, 3, 5, 6, 10, 15, 30]"},{"prompt":"Analyze an HTML text to check if it contains the tag <p> <p>This is a paragraph.</p>","completion":"def has_p_tag(html): return \\"<p>\\" in html has_p_tag(\\"<p>This is a paragraph.</p>\\") # output True"},{"prompt":"Edit the output of a C program so that the last line prints \\"Hello World! #include <stdio.h> int main() { printf(\\"Hello!\\"); return 0; }","completion":"#include <stdio.h> int main() { printf(\\"Hello!\\"); printf(\\"Hello World!\\"); return 0; }"},{"prompt":"Given a sentence, separate the words and store them in an array. Sentence: Programming is fun.","completion":"words = [\\"Programming\\", \\"is\\", \\"fun\\"]"},{"prompt":"Sort these integers in ascending order. 6, 5, 10, 1","completion":"[1, 5, 6, 10]"},{"prompt":"Describe what an abstract class is used for.","completion":"An abstract class is a class that contains abstract methods and variables. Abstract classes are meant to be inherited and customized by their subclasses. They are used to provide basic implementations of commonly used methods, as well as impose a common interface between different subclasses."},{"prompt":"Generate an HTML form element to input a password.","completion":"<input type=\\"password\\" name=\\"password\\" />"},{"prompt":"w can one manage memory in C++?","completion":"In C++, memory can be managed by allocating and deallocating memory dynamically. This can be done either manually, using the new and delete operators, or by the use of smart pointers and other library functions. One can also free up memory by deleting unneeded objects, or by taking advantage of resource-managing classes like std::string, std::array, and std::vector."},{"prompt":"Check if a given string is a numeric value. String: 12345678","completion":"true"},{"prompt":"Write a SQL query to get the count of records in a table.","completion":"SELECT COUNT(*) FROM myTable;"},{"prompt":"Compare two strings and return the differences in the two strings. String1: \\"Today is a great day!\\" String2: \\"Today is a beautiful day!","completion":"The differences are \\"great\\" and \\"beautiful\\"."},{"prompt":"Create a class with a method that returns the sum of its two parameters.","completion":"public class Sum { public int getSum(int a, int b) { return a + b; } }"},{"prompt":"w can a user increase performance with SQL queries?","completion":"Performance can be improved by using proper indexes and query optimization techniques. Additionally, users can create more efficient queries by avoiding unnecessary joins and taking advantage of set-based operations. Finally, users can take advantage of caching if available."},{"prompt":"Write a JavaScript program to generate random alphanumeric characters of length 10.","completion":"function generateAlphaNum() { let length = 10; let characters = \\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\\" let result = ''; for (let i = 0; i < length; i++) { result += characters.charAt(Math.floor(Math.random() * characters.length)); } return result; }"},{"prompt":"Create a class in Ruby to store information about shopping items and their prices.","completion":"class ShoppingItem attr_accessor :name, :price def initialize(name, price) @name = name @price = price end end"},{"prompt":"Write a C# program to remove all occurrences of an item from an array. [1,2,3,4,5,2,3,4]","completion":"public static void RemoveOccurrence(int[] array, int item) { //Declare a new variable to store new list of items List<int> result = new List<int>(); for (int i = 0; i < array.Length; i++) { if (array[i] != item) { result.Add(array[i]); } } //Print remaining items Console.WriteLine(\\"After removing, remaining elements are:\\"); foreach (int num in result) { Console.Write(num + \\" \\"); } }"},{"prompt":"Write SQL to create a database called Products that has three columns: id, name, and price.","completion":"CREATE TABLE Products ( id INTEGER PRIMARY KEY, name VARCHAR(255), price DECIMAL(9,2) );"},{"prompt":"Create a JavaScript function to compare 2 strings to determine if they are anagrams (words with the same letters as each other).","completion":"function anagramCheck(str1, str2) { // Remove whitespace, convert strings to lowercase, and split into arrays let arr1 = str1.replace(/s/g, '').toLowerCase().split(''); let arr2 = str2.replace(/s/g, '').toLowerCase().split(''); // If the arrays are different lengths, they cannot be anagrams if (arr1.length !== arr2.length) { return false; } // Sort both arrays, and check if they are the same let sortedArr1 = arr1.sort(); let sortedArr2 = arr2.sort(); for (let i=0; i<sortedArr1.length; i++) { if (sortedArr1[i] !== sortedArr2[i]) { return false; } } return true; }"},{"prompt":"Create a Java method to print a binary tree in level order.","completion":"public class BinaryTree { // Root of Binary Tree Node root; // Function to print binary tree in level order void printLevelOrder() { int h = height(root); int i; for (i = 1; i <= h; i++) levelOrder(root, i); } // Print nodes at a given level void levelOrder(Node root, int level) { if (root == null) return; if (level == 1) System.out.print(root.data + \\" \\"); else if (level > 1) { levelOrder(root.left, level - 1); levelOrder(root.right, level - 1); } } // Compute the height of a tree--the number of nodes // along the longest path from the root node down to // the farthest leaf node int height(Node root) { if (root == null) return 0; else { // compute height of each subtree int lheight = height(root.left); int rheight = height(root.right); // use the larger one if (lheight > rheight) return (lheight + 1); else return (rheight + 1); } } }"},{"prompt":"Create an HTML form that, when submitted, displays all the user input on the same page.","completion":"<!DOCTYPE html> <html> <head> <title>User Input</title> </head> <body> <h1>User Input</h1> <form action=\\"#\\" method=\\"post\\"> <label>Name: </label> <input type=\\"text\\" name=\\"name\\" /><br> <label>Email: </label> <input type=\\"email\\" name=\\"email\\" /><br> <label>Country: </label> <input type=\\"text\\" name=\\"country\\" /><br><br> <input type=\\"submit\\" value=\\"Submit\\" name=\\"submit\\" /> </form> <?php if(isset(_POST['submit'])){ name = _POST['name']; email = _POST['email']; country = _POST['country']; echo \\"<p>Your name is: name <br>\\"; echo \\"Your email is: email <br>\\"; echo \\"Your country is: country <br></p>\\"; } ?> </body> </html>"},{"prompt":"Write a MySQL query to find all records whose name starts with 'A'.","completion":"SELECT * FROM tableName WHERE name LIKE 'A%';"},{"prompt":"Create an Angular Component to display a user's profile information.","completion":"import { Component, Input } from '@angular/core'; @Component({ selector: 'user-profile', template: \` <div> <img src=\\"{{ user.avatar }}\\" alt=\\"Profile Image\\" /> <h3>{{ user.name }}</h3> <p>{{ user.email }}</p> </div> \` }) export class UserProfileComponent { @Input() user; }"},{"prompt":"Write an HTML code snippet to create a heading with the text \\"GPT Demo\\".","completion":"<h1>GPT Demo</h1>"},{"prompt":"Write a JavaScript code to add the numbers 8 and 4.","completion":"var num1 = 8; var num2 = 4; var sum = num1 + num2; console.log(sum);"},{"prompt":"Write a PHP code to loop through an associative array and print all the key-value pairs. arr = array( 'name' => 'John', 'age' => 28, 'gender' => 'male' );","completion":"foreach(arr as key=>value){ echo key.':'.value.\\"<br>\\"; }"},{"prompt":"Create a method to validate an email address in Java.","completion":"public static boolean isValidEmail(String str) { String emailRegex = \\"^[a-zA-Z0-9_+&*-]+(?:.\\"+ \\"[a-zA-Z0-9_+&*-]+)*@\\" + \\"(?:[a-zA-Z0-9-]+.)+[a-z\\" + \\"A-Z]{2,7}\\"; Pattern pat = Pattern.compile(emailRegex); if (str == null) return false; return pat.matcher(str).matches(); }"},{"prompt":"Create a JavaScript object with two properties and their respective values.","completion":"var myData = { name: 'John', age: 28 };"},{"prompt":"Create a method to generate a random integer between 1 and 10 in Python.","completion":"import random def random_int(): return random.randint(1, 10)"},{"prompt":"Write a SQL query to retrieve the names of employees who have been employed in the organization for more than 5 years.","completion":"SELECT name FROM employees WHERE years_employed > 5;"},{"prompt":"Create a HTML form to accept a username and password.","completion":"<form action=\\"\\"> <label for=\\"username\\">Username:</label><br> <input type=\\"text\\" id=\\"username\\" name=\\"username\\"><br> <label for=\\"password\\">Password:</label><br> <input type=\\"password\\" id=\\"password\\" name=\\"password\\"><br><br> <input type=\\"submit\\" value=\\"Submit\\"> </form>"},{"prompt":"Write a SQL query to return the ranking of the employees with highest salary. SELECT * FROM Employees ORDER BY Salary DESC","completion":"SELECT e.*, RANK() OVER (ORDER BY Salary DESC) AS Rank FROM Employees e"},{"prompt":"Find the length of the string in the given input. string = \\"Hello World","completion":"len_string = len(string) print(len_string) # output: 11"},{"prompt":"Compute the absolute difference between two given numbers. x = 7 y = 4","completion":"diff = abs(x - y) print(diff) # output: 3"},{"prompt":"Create an object structure to represent a 3X3 grid of numbers. This grid should contain two 2’s, two 4’s, and a 6.","completion":"\`\`\` let grid = [ [2, 4, 6], [4, 2, 6], [2, 6, 4] ]; \`\`\`"},{"prompt":"Create a class \\"Car\\" that has an attribute \\"make\\" and an attribute \\"model\\".","completion":"\`\`\` class Car: def __init__(self, make, model): self.make = make self.model = model \`\`\`"},{"prompt":"Create an array of integers ranging from 0 to 20 and print it.","completion":"\`\`\` array = [] for i in range(0,21): array.append(i) print(array) \`\`\`"},{"prompt":"Extract the first name, last name and age from a given string. \\"John Smith, 33","completion":"\`\`\` import re s = 'John Smith, 33' firstName = re.match(\\"^w+\\", s).group(0) lastName = re.search(\\"w+\\", s).group(0) age = re.findall(\\"(d+)\\", s)[0] print(firstName, lastName, age) \`\`\`"},{"prompt":"mplement a function to calculate the absolute value of a number. -7","completion":"\`\`\` def absValue(num): if num >= 0: return num else: return -num print( absValue(-7) ) \`\`\`"},{"prompt":"Create an object to store key/value pairs representing students and their grades.","completion":"\`\`\` let grades = { \\"John\\": { \\"math\\": 80, \\"science\\": 90 }, \\"Alex\\": { \\"math\\": 75, \\"science\\": 95 } }; \`\`\`"},{"prompt":"Create a class in Python with a constructor and two methods.","completion":"class MyClass: def __init__(self): self.x = 0 def method_1(self): self.x +=1 def method_2(self, arg1): self.x += arg1"},{"prompt":"Write a Python function to filter a given list of strings by the specified character? my_list = ['Hello', 'World', 'Hi', 'Python'] character = 'o'","completion":"def filter_list_by_character(my_list, character): return [item for item in my_list if character in item]"},{"prompt":"Write a Python program to return a boolean indicating whether a substring is present within a given string. string = 'Hello world' substring = 'world'","completion":"def contains_substring(string, substring): return substring in string"},{"prompt":"Create an HTML form that has two input fields, first name and last name, and a submit button.","completion":"<form action=\\"\\"> First name: <input type=\\"text\\" name=\\"firstname\\"><br> Last name: <input type=\\"text\\" name=\\"lastname\\"><br> <input type=\\"submit\\" value=\\"Submit\\"> </form>"},{"prompt":"w would you implement a Binary Search Tree in Java?","completion":"public class BinarySearchTree { /* Class containing left, right and root nodes */ class Node { int key; Node left, right; public Node(int item) { key = item; left = right = null; } } // Root of BST Node root; // Constructor BinarySearchTree() { root = null; } // This method mainly calls insertRec() void insert(int key) { root = insertRec(root, key); } /* A recursive function to insert a new key in BST */ Node insertRec(Node root, int key) { // When the tree is empty, return a new node if (root == null) { root = new Node(key); return root; } // Otherwise, recurr down the tree if (key < root.key) root.left = insertRec(root.left, key); else if (key > root.key) root.right = insertRec(root.right, key); // return the root return root; } }"},{"prompt":"Write a function in Ruby which takes an array of numbers as input and return the smallest number in that array. numbers = [14, 25, 120, 66, 5]","completion":"def find_min(numbers) min = numbers[0] numbers.each do |num| if num < min min = num end end min end"},{"prompt":"Create a CSS stylesheet to style a text so that its size is one font size larger than the default text size.","completion":"body { font-size: 1em; } h1 { font-size: 1.2em; } h2 { font-size: 1.3em; } h3 { font-size: 1.4em; }"},{"prompt":"Write a Python program to find the minimum cost of a path from top left cell to bottom right cell of a matrix. matrix = [[2, 0, 3, 5], [4, 5, 1, 2], [3, 1, 2, 7]]","completion":"def min_path_sum(matrix): # initialize the solution matrix res = [[0 for _ in range(len(matrix[0]))] for _ in range(len(matrix))] # copying the first row elements res[0] = matrix[0] # iterate over the remaining rows for i in range(1, len(matrix)): # copy the first element res[i][0] = res[i-1][0] + matrix[i][0] for j in range(1, len(matrix[0])): # choose the smaller of the two res[i][j] = min(res[i-1][j], res[i][j-1]) + matrix[i][j] # return the bottom-right element return res[len(matrix)-1][len(matrix[0])-1]"},{"prompt":"w would you transform a JSON object into an XML document with JavaScript?","completion":"function json2xml(json) { // Create the return variable let xml = ''; // Parse the input if (typeof json == 'object') { for (let key in json) { // Add a start tag xml += '<' + key + '>'; // Check for child elements if (typeof json[key] == 'object') { // Recursively traverse the child elements xml += json2xml(json[key]); } else if (typeof json[key] == 'string') { // Add a value xml += json[key]; } else { // Add nothing } // Add an end tag xml += '</' + key + '>'; } } else if (typeof json == 'string') { // Add the value xml += json; } else { // Add nothing } // Return the XML return xml; }"},{"prompt":"Create an HTML page with a table showing the results of the following SQL query: SELECT student_name, grade FROM students ORDER BY grade DESC","completion":"<html> <head> <title>Student Grades</title> </head> <body> <h2>Student Grades</h2> <table> <thead> <tr> <th>Student Name</th> <th>Grade</th> </tr> </thead> <tbody> <?php // Connect to the database // Run the query // Loop through the results ?> </tbody> </table> </body> </html>"},{"prompt":"Create a CSS style to highlight code blocks on a web page.","completion":"pre { background-color: #f7f7f7; padding: 10px; border: 1px solid #ccc; border-radius: 5px; } code { color: #f80; background-color: #fcfcfc; padding: 3px; border: 1px solid #ccc; border-radius: 3px; }"},{"prompt":"Read the code and delete the unnecessary code. Output should contain the refactored code. def remove_duplicates(data): \\"\\"\\" Return a new list with duplicates removed. \\"\\"\\" output = [] for item in data: if item not in output: output.append(item) return outpu","completion":"def remove_duplicates(data): \\"\\"\\"Return a new list with duplicates removed.\\"\\"\\" return list(set(data))"},{"prompt":"You need to answer the following question: what is the output of the following code? def double_value(number): return number * 2 x = double_value(3) print(x)","completion":"6"},{"prompt":"Create a SQL query to select all properties with a price between 500 and 1000.","completion":"SELECT * FROM properties WHERE price BETWEEN 500 AND 1000;"},{"prompt":"Modify the HTML code with the following: Make all the text bold without changing the fontsize. <div> <h1>Welcome</h1> <p>This is an example text</p> </div>","completion":"<div> <h1><strong>Welcome</strong></h1> <p><strong>This is an example text</strong></p> </div>"},{"prompt":"You need to edit the following code so that it returns \\"hello world\\" as a string. function greet() { return 'hello' }","completion":"function greet() { return 'hello' + ' world' }"},{"prompt":"You need to use a for loop to create the following sequence: 1,4,7,10,13","completion":"for (let i = 1; i <= 13; i += 3) { console.log(i) }"},{"prompt":"Write a SQL query to select all the distinct cities in the given dataset.","completion":"SELECT DISTINCT City FROM dataset;"},{"prompt":"Determine the number of times a specific value exists in an array. arr = [1, 2, 3, 3, 4, 5, 3] num = 3","completion":"let num = 3; let count = 0; for (let i = 0; i < arr.length; i++) { if (arr[i] === num) { count++; } } console.log(count);"},{"prompt":"You need to create a loop that prints out the square root of the numbers from 1 to 10.","completion":"for (let i = 1; i <= 10; i++) { console.log(Math.sqrt(i)); }"},{"prompt":"Output the following string in reverse order using loops. Hello World","completion":"for (let i = 10; i >= 0; i--) { console.log(msg[i]); }"},{"prompt":"Count how many words are in a given sentence. This sentence contains five words.","completion":"let sentence = \\"This sentence contains five words.\\"; let words = sentence.split(\\" \\"); console.log(words.length);"},{"prompt":"Create a function to compute the Fibonacci sequence for a given input","completion":"def compute_fibonacci(n): fib_list = [] a, b = 0, 1 while a < n: fib_list.append(a) a, b = b, a+b return fib_list"},{"prompt":"Create a boolean function to check whether a given string contains all alphabets phrase = \\"The quick brown fox jumps over the lazy dog","completion":"def is_alphabetical(phrase): alphabet = \\"abcdefghijklmnopqrstuvwxyz\\" for letter in alphabet: if letter not in phrase: return False return True"},{"prompt":"Using the given information, write a function to calculate a 5-digit ISBN number. Author name: Bob Smith Title of Book: Learn Programming Publisher: Aztec Publishing Year Published: 2020","completion":"def calculate_isbn(authorname, title, publisher, yearpublished): authorname_string = authorname.replace(' ', '') title_string = title.replace(' ', '') publisher_string = publisher.replace(' ', '') isbn_total = 0 for letter in authorname_string: isbn_total += ord(letter) for letter in title_string: isbn_total += ord(letter) for letter in publisher_string: isbn_total += ord(letter) isbn_total += yearpublished while isbn_total > 9999: isbn_total = isbn_total % 10000 isbn_string = str(isbn_total).zfill(5) return isbn_string"},{"prompt":"Write a function to find the n-th Fibonacci number for a given n","completion":"def get_fibonacci(n): a, b = 0, 1 for _ in range(2, n): a, b = b, a + b return b"},{"prompt":"Write a C++ class to store student information","completion":"class Student { private: string name; int age; string address; public: Student(); Student(string name, int age, string address); void setName(string name); void setAge(int age); void setAddress(string address); string getName(); int getAge(); string getAddress(); };"},{"prompt":"Create a Python program to replace all instances of a specific character in a string. string = \\"Hello World!\\" character = \\"o\\" replacement_character = \\"_","completion":"def replace_character(string, character, replacement_character): new_string = \\"\\" for c in string: if c == character: new_string += replacement_character else: new_string += c return new_string"},{"prompt":"Write a C++ program to print a pyramid of asterisks with a given height. height = 5","completion":"void print_pyramid(int height) { for (int i = 0; i < height; i++) { for (int j = 0; j < height - i - 1; j++) cout << \\" \\"; for (int k = 0; k <= i; k++) cout << \\"* \\"; cout << endl; } }"},{"prompt":"Create a function to print a multiline message in Python message = \\"This is a multiline message.","completion":"def print_multiline_message(message): print(message)"},{"prompt":"Create a JavaScript program to print out the values of each key of an object myObj = { \\"name\\": \\"Bob\\", \\"age\\": 20, \\"city\\": \\"New York\\" }","completion":"function printObject(myObj) { for (let key in myObj) { console.log(myObj[key]); } }"},{"prompt":"Please fix the following broken HTML code. <html> <head> <title>Test HTML Page </head> <body> /body> </html>","completion":"<html> <head> <title>Test HTML Page</title> </head> <body> </body> </html>"},{"prompt":"Write a JavaScript program to loop through an array in reverse order. var arr = [5, 2, 6, 9, 3];","completion":"var arr = [5, 2, 6, 9, 3]; for (var i = arr.length-1; i >= 0; i--) { console.log(arr[i]); }"},{"prompt":"Describe a pipelined architecture for a processor","completion":"A pipelined Processor architecture is one in which the instruction set is divided into separate stages, each associated with a specific segment in the computation process. As an instruction is entered, it is routed to the appropriate stage in the pipeline and progresses sequentially, thereby allowing the processor to complete multiple instructions simultaneously. The stages, known as the pipeline stages, can include IF (Instruction Fetch), ID (Instruction Decode), EX (Execution), MEM (Memory Access) and WB (Write-Back). The IF and ID stages typically handle instruction fetch and decode, while EX and MEM perform instruction execution and memory access, respectively. The final stage, WB, is responsible for writing the result to memory or a register."},{"prompt":"Add a function to the following JavaScript code to search a value in a given array const arr = [12, 5, 8, 130, 44];","completion":"const arr = [12, 5, 8, 130, 44]; function searchValue(arr, value) { for (let i = 0; i < arr.length; i++) { if (arr[i] === value) { return (i); } } return -1; }"},{"prompt":"Create a global function in Java to convert an integer number into its String equivalent.","completion":"public static String numberToString(int num) { StringBuilder sb = new StringBuilder(); // if num is negative, append '-' to sb if (num < 0) { sb.append('-'); } // obtain absolute value to accommodate for all numbers num = Math.abs(num); // extract each digit and append to sb while (num > 0) { int digit = num % 10; sb.append(digit); num /= 10; } return sb.reverse().toString(); }"},{"prompt":"Design an approach in Python to retrieve a record from a database.","completion":"import sqlite3 def retrieve_record(db_name, table_name, id): try: con = sqlite3.connect(db_name) cur = con.cursor() cur.execute(\\"SELECT * FROM {} where id={};\\".format(table_name, id)) record = cur.fetchone() except: record = None finally: cur.close() con.close() return record"},{"prompt":"Create a function in C that creates a new string with all the characters in reverse order.","completion":"char* reverseString(char* str) { int length = strlen(str); char* revString = (char*) malloc(length + 1); for (int i = 0; i < length; i++) { revString[i] = str[length - i - 1]; } revString[length] = '0'; return revString; }"},{"prompt":"Write an SQL query to delete a row in table \\"book\\" with an id of \\"100\\".","completion":"DELETE FROM book WHERE id=100;"},{"prompt":"Rewrite the following ruby program: begin puts \\"Hello World!\\" end","completion":"puts \\"Hello World!\\""},{"prompt":"Generate a pseudocode of a breadth first search algorithm.","completion":"1. Create a queue Q 2. Enqueue item S(source) onto Q 3. For each element v in the adjacency list of S 3.1. Enqueue v onto Q 3.2. Set v's predecessor to S 4. While Q is not empty 4.1. Dequeue an item u from Q 4.2. For each element v in the adjacency list of u 4.2.1. If v is unvisited, then 4.2.1.1. set v's predecessor to u 4.2.2.2. enqueue v onto Q 5. Return each node's predecessor"},{"prompt":"Compile the following Java program. class HelloWorld { public static void main(String args[]) { System.out.println(\\"Hello, World\\"); } }","completion":"javac HelloWorld.java"},{"prompt":"Edit the code below to add an exception handling mechanism in it. def divide(a, b): return a/b","completion":"def divide(a, b): try: return a/b except ZeroDivisionError: print(\\"Division by zero is undefined\\")"},{"prompt":"Create a function that takes two integers and returns the remainder when the greater integer is divided by the smaller integer.","completion":"def remainder(a,b): if a > b: return a % b else: return b % a"},{"prompt":"Compose a query in SQL to delete all records from a table named \\"students\\".","completion":"DELETE FROM students;"},{"prompt":"Create a list of the first 10 perfect squares.","completion":"[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]"},{"prompt":"Create an HTML page that displays a table containing four columns: first name, last name, age, and city. Put your own data into the columns.","completion":"<html> <head> <title>People Table</title> </head> <body> <table> <tr> <th>First Name</th> <th>Last Name</th> <th>Age</th> <th>City</th> </tr> <tr> <td>John</td> <td>Doe</td> <td>50</td> <td>New York</td> </tr> <tr> <td>Jane</td> <td>Smith</td> <td>41</td> <td>Los Angeles</td> </tr> <tr> <td>Dave</td> <td>Jackson</td> <td>28</td> <td>Boston</td> </tr> </table> </body> </html>"},{"prompt":"Write a Ruby program to swap two given variables a and b. a = 10, b = 5","completion":"a, b = b, a puts a # => 5 puts b # => 10"},{"prompt":"Write an HTML form to collect user input for a username and password.","completion":"<form action=\\"\\"> <label for=\\"username\\"> Username: </label> <input type=\\"text\\" name=\\"username\\" id=\\"username\\" required /> <br /> <label for=\\"password\\"> Password: </label> <input type=\\"password\\" name=\\"password\\" id=\\"password\\" required /> <br /> <input type=\\"submit\\" value=\\"Submit\\" /> </form>"},{"prompt":"Convert the following regular expression to match strings of 3 or 4 digits: \\"(d{3,4})\\".","completion":"^d{3,4}"},{"prompt":"Generate a Java program that creates a random array of 10 integers ranging from 0 to 9.","completion":"import java.util.Random; class GenerateRandomArray{ public static void main(String[] args) { int[] arr = new int[10]; Random random = new Random(); for (int i=0; i<arr.length; i++){ arr[i] = random.nextInt(10); } // print the elements for (int i=0; i<arr.length; i++){ System.out.print(arr[i]+ \\" \\"); } } }"},{"prompt":"Create an HTML page with an input field and a button, and write a JavaScript function that sets the font size of the entered text in the input field to 16pt when the button is clicked.","completion":"<html> <head> <title>Change Font Size</title> <script type=\\"text/javascript\\"> function changeFontSize() { var inputField = document.getElementById(\\"inputField\\"); inputField.style.fontSize = \\"16pt\\"; } <\/script> </head> <body> <input type=\\"text\\" id=\\"inputField\\" placeholder=\\"Enter Text Here\\"> <button type=\\"button\\" onclick=\\"changeFontSize()\\">Change Font Size</button> </body> </html>"},{"prompt":"Given an array of integers, write a Java method to find the largest three numbers. [3, 5, 9, 4, 8, 6, 1]","completion":"public static void largestThreeNumbers(int[] numbers) { Arrays.sort(numbers); int size = numbers.length; System.out.println(\\"Largest three numbers: \\" + numbers[size-1] + \\" \\" + numbers[size-2] + \\" \\" + numbers[size-3]); }"},{"prompt":"Design a Python function to return the list of values in two separate lists for even and odd numbers in a given list. [1, 2, 3, 4, 5]","completion":"def separateEvenOdd(nums): evenList = [] oddList = [] for n in nums: if n % 2 == 0: evenList.append(n) else: oddList.append(n) return evenList, oddList print(separateEvenOdd([1,2,3,4,5]))"},{"prompt":"Produce a MySQL query to calculate the average age of people who have age greater than 23.","completion":"SELECT AVG(age) FROM people WHERE age > 23;"},{"prompt":"Convert the following regular expression to one that matches strings of at least 3 digits: \\"d+\\".","completion":"^d{3,}"},{"prompt":"Create a function in python that takes a string as an argument and prints out two copies of the string. string = \\"Hello World!","completion":"def print_twice(string): print(string) print(string) print_twice(string)"},{"prompt":"Create an SQL query to find the names of all students enrolled in a particular course. table_name = \\"students\\" course_name = \\"Data Science","completion":"SELECT name FROM students WHERE course_name = 'Data Science'"},{"prompt":"Using the given list, calculate the mode and median. [2, 4, 5, -6, 8, 9, -9, 10, 19]","completion":"Mode: -9 Median: 7"},{"prompt":"Sort the given list. [7, 3, 5, 6, 2]","completion":"[2, 3, 5, 6, 7]"},{"prompt":"Using the comment as a guide, add the appropriate exception handling code. try: div_num=5/0 except ZeroDivisionError as e: # TODO: print(\\"Divide by zero error\\")","completion":"try: div_num=5/0 except ZeroDivisionError as e: # TODO: print(\\"Divide by zero error\\") print(\\"Error message: \\" + str(e))"},{"prompt":"Create a program that logs the time a user entered a program.","completion":"import time def log_time(): current_time = time.time() print(\\"You entered the program at\\", current_time)"},{"prompt":"Create a Python loop that will iterate through the following list and will print each item's value multiplied with 5. numbers = [5, 10, 15, 20, 25]","completion":"for number in numbers: print(number*5)"},{"prompt":"Create a JavaScript code snippet that will sum all the numbers in the following array and will then print the result. numbers = [5, 10, 15, 20, 25]","completion":"let result = 0; for (let number of numbers){ result += number; } console.log(result);"},{"prompt":"Using the given array of numbers, write a JavaScript code to print the sum of all the numbers. numbers = [5, 10, 15, 20, 25]","completion":"let result = 0; for (let number of numbers){ result += number; } console.log(result);"},{"prompt":"Create a JavaScript object with two keys, \\"firstName\\" and \\"lastName\\". The values should be two strings, your first and last name.","completion":"let user = { firstName: 'Jane', lastName: 'Doe' };"},{"prompt":"Write a SQL query to find the names of all customers whose last names start with the letter \\"S\\".","completion":"SELECT * FROM customers WHERE last_name LIKE 'S%';"},{"prompt":"Write a JavaScript to read the following JSON object and print its \\"name\\" key value data = { \\"name\\": \\"John\\", \\"age\\": \\"33\\", \\"city\\": \\"New York\\" }","completion":"console.log(data.name);"},{"prompt":"Using the given code, create a JavaScript to add an item to the data array. let data = [ {name:\\"John\\", age:20}, {name:\\"Amy\\", age:21} ]","completion":"data.push({name: 'Bob', age: 25});"},{"prompt":"Write a PHP function which receives an array as input and return a filtered array. <?php temp_array = array (1, 2, 3, 4, 5, 6, 7, 8, 9);","completion":"<?php function filter_array(array) { // This function will filter the array and remove values that are not a number filtered_array = array(); foreach (array as value) { if (is_numeric(value)) { filtered_array[] = value; } } return filtered_array; } temp_array = array (1, 2, 3, 4, 5, 6, 7, 8, 9); filtered_array = filter_array(temp_array);"},{"prompt":"Generate a query in SQL which can retrieve the maximum price for each product.","completion":"SELECT product_id, MAX(price) FROM product_table GROUP BY product_id;"},{"prompt":"Create a function in a Java class which can receive a string and remove punctuations.","completion":"public class StringUtils { public static String removePunctuation(String input) { String output = input.replaceAll(\\"[^a-zA-Z0-9 ]\\", \\"\\"); return output; } }"},{"prompt":"You need to group an array of objects according to their property. Output an object containing the grouped items. let array = [ { name: \\"John\\", type: \\"fruit\\" }, { name: \\"Paul\\", type: \\"vegetable\\" }, { name: \\"Ringo\\", type: \\"fruit\\" } ]","completion":"let groupedItems = { fruit: [{name: \\"John\\", type: \\"fruit\\"}, {name: \\"Ringo\\", type: \\"fruit\\"}], vegetable: [{name: \\"Paul\\", type: \\"vegetable\\"}] }"},{"prompt":"JavaScript, write a function which can split a string into its constituent words.","completion":"function split_string_to_words(string) { return string.split(' '); }"},{"prompt":"You need to prefill an array with a given value. let array = new Array(10); let val = 'foo'","completion":"let prefilledArray = array.fill(val);"},{"prompt":"Create a script in Python which can generate random numbers in a given range.","completion":"import random def generate_random_number_in_range(min_value, max_value): return random.randint(min_value, max_value)"},{"prompt":"You need to generate an array of strings of length 5 to 10 characters.","completion":"import string import random def generate_string_array(length): # This function will generate an array of strings array_of_strings = [] for _ in range(length): new_string = ''.join(random.choice(string.ascii_lowercase) for _ in range(random.randint(5,10))) array_of_strings.append(new_string) return array_of_strings"},{"prompt":"Reorder an array of numbers in descending order. let array = [3, 8, 5, 1, 9]","completion":"let sortedArray = array.sort((a,b) => b - a);"},{"prompt":"You need to run a loop 'n' times and print a value each time. let n = 10;","completion":"for (let i = 0; i < n; i++) { console.log(i); }"},{"prompt":"Write code to generate a random six-character string that contains at least one lowercase letter and one number.","completion":"import string import random def generate_code(): chars = string.ascii_lowercase + string.digits return ''.join(random.choices(chars, k=6))"},{"prompt":"w can we remove all elements of a list that meet a certain condition?","completion":"def remove_condition(lst, condition): return [x for x in lst if not condition(x)]"},{"prompt":"What is the syntax to create a list of numbers from 0 to n in Python?","completion":"def create_list(n): return [i for i in range(n+1)]"},{"prompt":"Reverse the order of a list without using the built-in reverse function.","completion":"def reverse_list(lst): rev = [] for x in lst: rev.insert(0, x) return rev"},{"prompt":"w can we check if a given string is a valid IP address or not?","completion":"import re def isvalid_ip(string): regex = r\\"^d{1,3}.d{1,3}.d{1,3}.d{1,3}\\" if re.search(regex, string): return True else: return False"},{"prompt":"w can we sort a given list of integers in ascending order?","completion":"def sort_list(lst): return sorted(lst)"},{"prompt":"w can we trim a specified amount of characters from the beginning of a string in Python?","completion":"def trim_string(string, n): return string[n:]"},{"prompt":"Design a MySQL query to retrieve the title of all subscribed books from the library database. Table: books Fields: id, title, author, is_subscribed","completion":"SELECT title FROM books WHERE is_subscribed IS TRUE;"},{"prompt":"Create a node module for connecting to a MongoDB database","completion":"const MongoClient = require('mongodb').MongoClient; // Connect to the db module.exports.connect = function(opts, callback) { MongoClient.connect(opts.db_url, (err, client) => { if (err) { return callback(err); } const db = client.db(opts.db_name); return callback(null, db); }); };"},{"prompt":"Write a SQL query to list the names of all members who have not yet made a payment this month. Table: members Fields: member_id, name, paid_this_month","completion":"SELECT name FROM members WHERE paid_this_month IS FALSE;"},{"prompt":"Edit the following CSS code to make all headings appear in bold. h1, h2, h3 { font-size: 1em; color: #111111; }","completion":"h1, h2, h3 { font-size: 1em; color: #111111; font-weight: bold; }"},{"prompt":"Write a function in C# to find the area of a triangle given 3 side lengths.","completion":"public static double Area(double a, double b, double c) { // Calculate the semiperimeter double s = (a + b + c) / 2; // Calculate the area double area = Math.Sqrt(s * (s - a) * (s - b) * (s - c)); return area; }"},{"prompt":"Write a method in Java that takes a string as input and returns its length.","completion":"public static int getStringLength(String str) { // Return the length of the string return str.length(); }"},{"prompt":"Design a SQL query to list all the unique authors in the book table. Table: books Fields: id, title, author, is_subscribed","completion":"SELECT DISTINCT author FROM books;"},{"prompt":"Construct a HTML form with three input fields and a submit button.","completion":"<form> <label for=\\"name\\">Name:</label> <input type=\\"text\\" id=\\"name\\" name=\\"name\\"><br><br> <label for=\\"age\\">Age:</label> <input type=\\"number\\" id=\\"age\\" name=\\"age\\"><br><br> <label for=\\"salary\\">Salary:</label> <input type=\\"number\\" id=\\"salary\\" name=\\"salary\\"><br><br> <input type=\\"submit\\" value=\\"Submit\\"> </form>"},{"prompt":"Create a Java program that calculates the probability of rolling a pair of dice and getting the number 8.","completion":"public static double calculateProbability(int target) { int numFavorableOutcomes = 0; int numTotalOutcomes = 36; for (int i = 1; i <=6; i++) { for (int j = 1; j <= 6; j++) { if (i + j == target) { numFavorableOutcomes++; } } } return (double) numFavorableOutcomes/numTotalOutcomes; }"},{"prompt":"Construct a web page with three columns and a header.","completion":"<html> <head> <title>Three Column Page</title> </head> <body> <h1> Three Column Page </h1> <div> <div style=\\"float:left;width:33%;\\"> Content for Column 1 </div> <div style=\\"float:left;width:33%;\\"> Content for Column 2 </div> <div style=\\"float:left;width:33%;\\"> Content for Column 3 </div> </div> </body> </html>"},{"prompt":"Design a query in SQLite to retrieve information about the books with more than 10 pages. Table: books Fields: id, title, author, num_page","completion":"SELECT title, author, num_pages FROM books WHERE num_pages > 10;"},{"prompt":"Update the following Swift code to print the message \\"Hello from Swift!\\".","completion":"print(\\"Hello from Swift!\\")"},{"prompt":"Create an HTML form for entering a user's age.","completion":"<form> <label for=\\"age\\">Age: </label> <input type=\\"number\\" name=\\"age\\" id=\\"age\\"/> </form>"},{"prompt":"Explain the purpose of the \\"head\\" tag in HTML.","completion":"The \\"head\\" tag in HTML is used to contain metadata about a page. This metadata includes tags such as title, description, js/css resources to include, additional search keywords, etc. This metadata is essential for web search engine optimization and helps improve the visibility of the page on search engines. Additionally, the \\"head\\" tag can also be used to include additional scripts and style sheets to be used in the page."},{"prompt":"Write a Java Program to print the Fibonacci numbers for a given range.","completion":"public class Fibonacci { public static void main(String[] args) { int range = 10; int i = 0; int fibo = 0; int fibo1 = 1; int fibo2 = 1; while(i <= range) { System.out.print(fibo + \\" \\"); fibo = fibo1 + fibo2; fibo1 = fibo2; fibo2 = fibo; i++; } } }"},{"prompt":"What data structure would be best used to store a phone book?","completion":"A hash table is a suitable data structure to store a phone book as it provides quick and efficient access to stored data via a simple hashing algorithm. This allows for simple lookups of data stored against a key, like a person's name. A hash table also provides quick insertion and deletion of data without impacting the efficiency of searches."},{"prompt":"Create a MongoDB query to find all documents where the 'name' field contains the string 'alex'.","completion":"db.collection.find({\\"name\\": {regex : /alex/i}})"},{"prompt":"Name 3 methods for making a web page more responsive","completion":"Three methods for making a web page more responsive are: 1. Minimize the number and size of images used in the page. This reduces the page size and load time. 2. Implement lazy loading of images, i.e. delay loading images until they are needed. This helps avoid loading images that are far down the page and will not be visible to the user. 3. Make use of modern web technologies such as AJAX to asynchronously update elements on the page without requiring a full page refresh."},{"prompt":"Describe 3 ways to make a web page more accessible","completion":"Three ways to make a web page more accessible are: 1. Provide alternative text for images and videos. This ensures people with vision or hearing impairment can understand the content on the page. 2. Ensure that the page is navigable with a keyboard. This allows people who cannot use a mouse to still use the web page. 3. Structure the page elements following standards such as HTML5 and ARIA to aid assistive technology users in navigating the page. This also helps machines understand the content and structure of a page."},{"prompt":"Using the data structure created in question 4, write a function to populate the person details. name: John age: 23 street: 123 Main St city: New York state: NY zip: 10222","completion":"def populate_person(name, age, street, city, state, zip): person_data['name'] = name person_data['age'] = age person_data['address']['street'] = street person_data['address']['city'] = city person_data['address']['state'] = state person_data['address']['zip'] = zip"},{"prompt":"You need to write a function to find the absolute difference between a number and its reverse.","completion":"def absolute_difference(n): num = str(n) rev = num[::-1] diff = int(num) - int(rev) return abs(diff)"},{"prompt":"You need to write a function to find the sum of the squares of even numbers in a given list. list_example = [2, 3, 4, 5]","completion":"def sum_of_even_squares(lst): sum = 0 for elem in lst: if elem % 2 == 0: sum += elem**2 return sum total_sum = sum_of_even_squares(list_example) #total_sum is equal to"},{"prompt":"Create a script to convert a number in scientific notation into a float Number: 6.02e23","completion":"x = float(6.02e23) print(x) # 6.02E+23"},{"prompt":"What is the Euclidean distance between two points? Two points: (1, 0) and (4, 3)","completion":"The Euclidean distance between two points (1, 0) and (4, 3) is 5.0."},{"prompt":"What is the Python built-in function to swap two values?","completion":"The Python built-in function to swap two values is the \\"tuple unpacking\\" operator (x, y = y, x). This allows you to swap two variables without having to use a temporary variable."},{"prompt":"w to generate a random string of a given length in Python? Length: 10","completion":"import random import string length = 10 x = ''.join(random.choices(string.ascii_letters + string.digits, k=length)) print(x) # 'sbMTWHmfrh'"},{"prompt":"Write a method to sum up two matrices Matrix A: [[3, 5, 7], [1, 6, 9]] Matrix B: [[4, 8, 2], [3, 5, 7]]","completion":"def matrix_addition(A, B): if len(A) != len(B) or len(A[0]) != len(B[0]): return 'Matrices cannot be added!' else: result = [[0 for i in range(len(A[0]))] for j in range(len(A))] for i in range(len(A)): for j in range(len(A[0])): result[i][j] = A[i][j] + B[i][j] return result A = [[3, 5, 7], [1, 6, 9]] B = [[4, 8, 2], [3, 5, 7]] print(matrix_addition(A, B)) # [[7, 13, 9], [4, 11, 16]]"},{"prompt":"Who is the author of the book \\"Alice in Wonderland\\"?","completion":"The author of the book \\"Alice in Wonderland\\" is Lewis Carroll."},{"prompt":"Create a Python function that takes one argument as an array of integers and returns the sum of all the integers. [2, 3, 4, 5]","completion":"def sum_array(array): res = 0 for i in array: res += i return res"},{"prompt":"Create a data structure in C to store student information, including name, age, statistical data.","completion":"#include <stdio.h> #include <string.h> typedef struct { char* name; int age; float statistics[]; } student;"},{"prompt":"Create an algorithm in Python that sorts an array of n numbers using insertion sort. [5, 3, 2, 4, 1]","completion":"def insert_sort(arr): for i in range(1, len(arr)): key = arr[i] j = i-1 while j >= 0 and key < arr[j] : arr[j + 1] = arr[j] j -= 1 arr[j + 1] = key"},{"prompt":"Construct an HTML page with a table that displays employee information, including name, age, and salary.","completion":"<html> <head> <title>Employee Information</title> </head> <body> <table> <tr> <th>Name</th> <th>Age</th> <th>Salary</th> </tr> <tr> <td>John</td> <td>32</td> <td>50000</td> </tr> <tr> <td>Karen</td> <td>30</td> <td>45000</td> </tr> <tr> <td>Bob</td> <td>35</td> <td>55000</td> </tr> </table> </body> </html>"},{"prompt":"Create an algorithm in JavaScript to merge two sorted arrays into one. arr1 = [1, 3, 5, 7] arr2 = [2, 4, 6, 8]","completion":"function mergeArrays(arr1, arr2) { let result = []; let index1 = 0; let index2 = 0; while (index1 < arr1.length && index2 < arr2.length) { if (arr1[index1] < arr2[index2]) { result.push(arr1[index1]); index1++; } else { result.push(arr2[index2]); index2++; } } while (index1 < arr1.length) { result.push(arr1[index1]); index1++; } while (index2 < arr2.length) { result.push(arr2[index2]); index2++; } return result; }"},{"prompt":"Compute the median of an array of integers in Python. [1, 2, 3, 4, 5]","completion":"def median(arr): arr.sort() if (len(arr) % 2 != 0): return arr[len(arr) // 2] else: return (arr[(len(arr) // 2) - 1] + arr[len(arr) // 2]) / 2.0"},{"prompt":"Construct a regex in Java that matches a valid email address.","completion":"String regex = \\"^[w-_.+]*[w-_.]@([w]+.)+[w]+[w]\\";"},{"prompt":"Create a Bash script to delete the contents of a directory but preserve the directory structure.","completion":"#!/bin/bash DIRECTORY=1 find DIRECTORY -mindepth 1 -maxdepth 1 -type f -exec rm '{}' ;"},{"prompt":"Construct an SQL query to get the most recent entries from a table of blog posts.","completion":"SELECT * FROM blog_posts ORDER BY timestamp DESC LIMIT 10;"},{"prompt":"Design a class that stores information about a person.","completion":"class Person: def __init__(self, first_name, last_name, age, gender): self.first_name = first_name self.last_name = last_name self.age = age self.gender = gender"},{"prompt":"Create a function that takes a string and returns the longest set of characters in descending order. Hello World","completion":"def longest_substring(string): longest = '' current = '' for i in range(len(string)): if (i==0 or string[i] >= string[i-1]): current += string[i] if (len(current) > len(longest)): longest = current else: current = string[i] return longest"},{"prompt":"Design an algorithm to find the maximum number from a set of numbers Set of numbers: [24, 5, 40, 15]","completion":"# Algorithm 1. Initialize maximum as 0 2. Iterate through each number in the set a. if number > maximum: i. set maximum as number 3. Return maximum"},{"prompt":"Write Java code to generate a matrix of size n. n = 5","completion":"public static int[][] generateMatrix(int n){ int[][] matrix = new int[n][n]; for(int i = 0; i < n; i++){ for(int j = 0; j < n; j++){ matrix[i][j] = i * n + j; } } return matrix; }"},{"prompt":"Generate a loop that prints odd numbers between 0 to 10.","completion":"for(int i = 0; i <= 10; i++){ if(i % 2 != 0) System.out.println(i); }"},{"prompt":"Create a program that adds two sets of numbers together. Set 1: [1, 3, 5] Set 2: [2, 4, 6]","completion":"def add_sets(set1, set2): result=[] for i in range(max(len(set1),len(set2))): if i < len(set1): result.append(set1[i]) if i < len(set2): result.append(set2[i]) return result"},{"prompt":"ert this line of code to the third place in the for loop. sum +=","completion":"for i in range(1, n): sum += i - 1 sum += i sum += i + 1"},{"prompt":"Create a program that implements a Stack (LIFO) using an array","completion":"class Stack: def __init__(self): self.stack = [] def push(self, item): self.stack.append(item) def pop(self): if self.is_empty(): return None return self.stack.pop() def is_empty(self): return len(self.stack) == 0"},{"prompt":"Write a function in Java for calculating the Modified Julian Date for a given date.","completion":"public double calculateModifiedJulianDate(String date) { int year = Integer.parseInt(date.substring(0, 4)); int month = Integer.parseInt(date.substring(5, 7)); int day = Integer.parseInt(date.substring(8, 10)); int hour = Integer.parseInt(date.substring(11, 13)); int minute = Integer.parseInt(date.substring(14, 16)); int second = Integer.parseInt(date.substring(17)); double julianDayNumber = 367*year - (7.0/4.0) * (year + (month + 9)/12.0) + (275.0/9.0)*(month) + day - 719561.5; double modifiedJulianDayNumber = julianDayNumber + (hour + (minute + (second/60.0))/60.0)/24.0; return modifiedJulianDayNumber; }"},{"prompt":"Create a SQL query to find records from the given table with age greater than or equal to 30 and status is active. Table: name | age | status John | 28 | Active Doe | 30 | Inactive Alice | 40 | Active","completion":"SELECT * FROM table WHERE age >= 30 AND status = 'Active';"},{"prompt":"Create an API endpoint in Node.js that would accept a GET request and print out the current date and time.","completion":"app.get('/print-date-time', (req, res) => { var newDate = new Date(); var currentDateTime = newDate.toLocaleString(); res.status(200).send(currentDateTime); });"},{"prompt":"Create a SQL query to join two tables on the customer_id column and print the name, age and income of all the customers. Table 1: customer customer_id | name | age 1 | John | 25 2 | Doe | 30 Table 2: income customer_id | income 1 | 30,000 2 | 40,000","completion":"SELECT c.name, c.age, i.income FROM customer c INNER JOIN income i ON c.customer_id = i.customer_id;"},{"prompt":"Generate a list of words that contain the substring \\"al\\" using Python.","completion":"words = [\\"arrival\\", \\"essential\\", \\"animal\\", \\"pascal\\", \\"medieval\\", \\"festival\\", \\"final\\", \\"spirited\\", \\"downfall\\", \\"functional\\", \\"locational\\", \\"fundamental\\"]"},{"prompt":"Modify the following code to make it work with big integers. def multiply(x, y): return x * y","completion":"def multiply(x, y): return int(x) * int(y)"},{"prompt":"Write a function in JavaScript for computing the average value of a given array.","completion":"function calculateAverage(arr) { let sum = 0; arr.forEach(element => { sum += element; }); return sum / arr.length; }"},{"prompt":"Create a function in Swift to split a string by the given delimiter.","completion":"func splitString(str: String, separator: String) -> [String] { return str.components(separatedBy: separator) }"},{"prompt":"mplement an efficient sorting algorithm in Python.","completion":"def sort(arr): if len(arr) == 0: return [] else: pivot = arr[0] lesser = sort([x for x in arr[1:] if x < pivot]) greater = sort([x for x in arr[1:] if x >= pivot]) return lesser + [pivot] + greater"},{"prompt":"Given an array of integers, write a function to determine whether the array is a palindrome. array = [1,2,3,2,1]","completion":"def isPalindrome(array): return array == array[::-1] # reversed array"},{"prompt":"Compute the absolute value of a given number. x = -2","completion":"absX = abs(x) print(\\"Absolute value of\\", x, \\"is\\", absX)"},{"prompt":"Convert a natural number to its binary representation. n = 4","completion":"bin_n = bin(n) print(bin_n) # Returns 0b100"},{"prompt":"Explain the differences between the list, set, and dictionary data structures in Python.","completion":"List is an ordered sequence of data that can hold duplicate values. It is one of the most widely used data structures in Python, and is created by placing all the items in a square bracket and separating them by commas. Set is an unordered collection of data that cannot hold duplicate values. Set is created by enclosing all the items in a set() function. Dictionary is an unordered collection of key:value pairs. It is similar to real-life dictionaries in that it stores key-value pairs and retrieves values based on the associated key. It is created with curly brackets and key:value pairs, separated by commas."},{"prompt":"Determine whether a given number is divisible by 3. n = 15","completion":"if n % 3 == 0: print(str(n) + \\" is divisible by 3.\\") else: print(str(n) + \\" is not divisible by 3.\\")"},{"prompt":"Search for the index of a given element in a given array. array = [1,2,3,4,5] element = 3","completion":"index = array.index(element) print(\\"Index of the element\\", element, \\"is\\", index)"},{"prompt":"Refactor this code to use the built-in functions. def find_odd(array): is_odd = False for element in array: if element % 2 == 1: is_odd = True break return is_odd","completion":"def find_odd(array): return any(element % 2 == 1 for element in array)"},{"prompt":"Write a Python program to generate a dictionary that contains a number (x) of random numbers. x = 10","completion":"import random random_numbers = {} for i in range(x + 1): n = random.randint(1, 50) random_numbers[i+1] = n print(random_numbers)"},{"prompt":"Reverse the order of words in a given sentence. sentence = \\"This is Python Language","completion":"words = sentence.split(\\" \\") reverse_sentence = ' '.join(reversed(words)) print(reverse_sentence)"},{"prompt":"Using the provided data structure, create a class in Python to represent a car. car = { \\"make\\": \\"Honda\\", \\"model\\": \\"Civic\\", \\"year\\": 2011 }","completion":"class Car: def __init__(self, make, model, year): self.make = make self.model = model self.year = year def __str__(self): return f\\"{self.make} {self.model} ({self.year})\\""},{"prompt":"Using the provided objects and classes, write a code snippet in Python to implement polymorphism. class Animal: def sound(self): pass class Cat(Animal): def sound(self): print(\\"Meow\\") class Dog(Animal): def sound(self): print(\\"Bark\\")","completion":"def make_sound(animal): animal.sound() make_sound(Cat()) #Prints \\"Meow\\" make_sound(Dog()) #Prints \\"Bark\\""},{"prompt":"Write a HTML code snippet for a navigation bar which contains three links with the text \\"Home\\", \\"About\\", and \\"Contact\\".","completion":"<nav> <a href=\\"index.html\\">Home</a> <a href=\\"about.html\\">About</a> <a href=\\"contact.html\\">Contact</a> </nav>"},{"prompt":"What is the time complexity of the Bubble Sort algorithm?","completion":"The time complexity of Bubble Sort is O(n^2)."},{"prompt":"Using the provided values and data structure, create a program in C to check if two points belong to the same quadrant. Point1 = {1, -2} Point2 = {-3, 4}","completion":"#include<stdio.h> int is_same_quadrant(int x1, int y1, int x2, int y2) { //determining quadrants for coordinates int q1 = (y1 >= 0) ? (x1 >= 0 ? 1 : 2) : (x1 >= 0 ? 4 : 3); int q2 = (y2 >= 0) ? (x2 >= 0 ? 1 : 2) : (x2 >= 0 ? 4 : 3); // If both the coordinates // belongs to same quadrants // then returns 1 return (q1 == q2); } int main() { int x1 = 1, y1 = -2; int x2 = -3, y2 = 4; if(is_same_quadrant(x1, y1, x2, y2)) printf(\\"Yes\\"); else printf(\\"No\\"); return 0; }"},{"prompt":"Write a code snippet to replace the given character in a string with another given character. str = \\"This is a string\\" old_char = 's' new_char = 'x'","completion":"str = str.replace(old_char, new_char)"},{"prompt":"Write an HTML code snippet to override the default font-size attribute of the body tag.","completion":"<body style=\\"font-size: 16px;\\">"},{"prompt":"Write a Bash shell script that takes two integers as arguments and prints the sum of those two numbers.","completion":"#!/bin/bash if [ \\"#\\" -ne 2 ]; then echo \\"Usage: sum.sh number1 number2\\" exit 1 fi sum=((1+2)) echo \\"Sum of 1 and 2 is sum\\""},{"prompt":"Create a JavaScript function that takes an array of objects and returns an array of objects with unique values by a specified key. var input = [ { id: 1, name: 'John' }, { id: 2, name: 'John' }, { id: 3, name: 'Alice'}, ]","completion":"function getUniqueValuesByKey(arr, key) { const set = new Set(); return arr.filter((el) => { const valueToCheck = el[key]; const isUnique = !set.has(valueToCheck); if (isUnique) set.add(valueToCheck); return isUnique; }); }"},{"prompt":"Write a MySQL query to select all students from a table named \\"students\\" whose age is greater than 18.","completion":"SELECT * FROM students WHERE age > 18;"},{"prompt":"Explain in brief the concept of type casting in programming languages.","completion":"Type casting is the process of converting one data type into another. It is generally used to convert values from one type to another in order to perform specific operations. In programming languages, type casting involves converting a value of one data type such as an integer or a string into a new data type such as a float or a boolean. Type casting ensures that the operations performed on the data are valid and helps reduce the chances of errors due to incompatibility of data types."},{"prompt":"Create a Python class for a student that holds their name, age and grade.","completion":"class Student: def __init__(self, name, age, grade): self.name = name self.age = age self.grade = grade def get_student_info(self): return (f\\"{self.name}, {self.age}, {self.grade}\\")"},{"prompt":"Write a SELECT query in MySQL to retrieve the names of all students whose last name is Jones","completion":"SELECT name FROM students WHERE last_name = 'Jones';"},{"prompt":"You need to create a function that takes a character as input and prints out all words from a given dictionary that start with the given character. dictionary = [\\"apple\\", \\"ball\\", \\"cat\\", \\"dog\\"] character = 'd'","completion":"def search_dictionary(dictionary, character): result = [] for word in dictionary: if word[0] == character: result.append(word) return result"},{"prompt":"You need to remove duplicates from a list while preserving the order of the items.","completion":"def remove_duplicates(list): output = [] seen = set() for i in list: if i not in seen: seen.add(i) output.append(i) return output"},{"prompt":"You need to write a program to convert a given number to its binary representation.","completion":"def binary_representation(num): if num > 1: binary_representation(num//2) print(num % 2, end = '')"},{"prompt":"You need to convert any given number to its octal representation.","completion":"def octal_representation(num): output = \\"\\" while num > 0: output = str(num % 8) + output num //= 8 return output"},{"prompt":"You need to create a regex (regular expression) to check if a given string contains a given substring.","completion":"import re def check_substring(string, substring): pattern = r\\".*\\"+substring+\\".*\\" if re.match(pattern, string): return True else: return False"},{"prompt":"Write a python code to concatenate two strings and reverse the result. string1 = \\"Hello\\" string2 = \\"World","completion":"res = string1+string2 res = res[::-1] print(res)"},{"prompt":"Write a java code to calculate the sum of two numbers provided as input. int num1 = 25; int num2 = 24;","completion":"int result = num1 + num2; System.out.println(result);"},{"prompt":"Create a HTML paragraph tag with the text \\"This is a awesome place\\".","completion":"<p>This is an awesome place</p>"},{"prompt":"Design a SQL query to search for a specific character string in a table. Table name: usertable Character string: HelloWorld","completion":"SELECT * FROM usertable WHERE fieldname LIKE '%HelloWorld%'"},{"prompt":"Write a JavaScript code to detect whether a webpage contains a specific text or not. Page content: \\"This is the awesome page.\\" Text to be searched: \\"awesome","completion":"if(document.body.innerHTML.indexOf('awesome') > -1){ console.log('Text found!'); } else { console.log('Text not found!'); }"},{"prompt":"Translate the following sentence into binary language. This is a great day.","completion":"01010100 01101000 01101001 01110011 00100000 01101001 01110011 00100000 01100001 00100000 01100111 01110101 01110100 01100101 01110011 00100000 01100100 01100001 01110100 00100001"},{"prompt":"Write a PHP code to fetch data from a database table. Database name: UsersTable Table name: User","completion":"query = \\"SELECT * FROM Users\\"; result = mysqli_query(conn, query); while (row = mysqli_fetch_array(result)) { // Perform operations on the data }"},{"prompt":"Design a regular expression for validating email address.","completion":"^[a-z0-9]+@[a-z]+.[a-z]+"},{"prompt":"Construct a java method to convert alphabets to uppercase. String str = \\"This is a great day","completion":"public static String convertToUpper(String str){ char ch[]= str.toCharArray(); for (int i=0; i < str.length(); i++){ if (ch[i] >= 'a' && ch[i] <= 'z') { // convert into uppercase ch[i] = (char)(ch[i] - 'a' + 'A'); } } String st = new String(ch); return st; }"},{"prompt":"Create a Swift method to sort a dictionary alphabetically. Dictionary - key1: value1, key2: value2, key3: value3","completion":"func sort(dict: [String: String]) -> [String: String] { let sortedKeys = dict.keys.sorted { 0 < 1 } var sortedDict = [String: String]() for key in sortedKeys { sortedDict[key] = dict[key] } return sortedDict }"},{"prompt":"Write an SQL query that returns the 5 most popular books in the library. SELECT * FROM libraryBook","completion":"SELECT bookID, bookTitle, COUNT(*) AS Count FROM libraryBook GROUP BY bookID, bookTitle ORDER BY Count DESC LIMIT 5;"},{"prompt":"Upon user entry, filter the array of objects to find the relevant object. const array = [ {name:\\"John\\", age: 20}, {name:\\"Jane\\", age: 21}, {name:\\"Jim\\", age: 22}, ]","completion":"function filterArray(userInput) { return array.filter(item => item.name === userInput); }"},{"prompt":"Using CSS, style the <h1> tag with font color, font size, and font family of your choice.","completion":"h1 { color: #000000; font-size: 24px; font-family: Arial, Helvetica, sans-serif; }"},{"prompt":"Define a class in Python that takes a string and returns the length of the string.","completion":"class StringLength: def __init__(self, string): self.string = string def getLength(self): return len(self.string)"},{"prompt":"Create a script in PHP that checks if a number is odd or even.","completion":"<?php function checkNumber(number){ if(number % 2 == 0){ echo \\"The number is even.\\"; } else { echo \\"The number is odd.\\"; } } checkNumber(3); ?>"},{"prompt":"Create a program in Ruby that takes in a number and then checks if it is divisible by three.","completion":"def check_divisibility(number) if (number % 3 == 0) puts 'The number is divisible by three.' else puts 'The number is not divisible by three.' end end check_divisibility(9)"},{"prompt":"Write a query in MySQL for finding all the customers who have ordered a specific product. SELECT * FROM order","completion":"SELECT * FROM orders WHERE orders.productID = <Specific Product ID>;"},{"prompt":"Create a program in Assembly that adds two numbers and prints the result.","completion":".data number1: .word 10 number2: .word 20 .text main: ADD word [number1], [number2] MOV EAX, 0 MOV EBX, 0 PUSH [number1] MOV EAX, [number1] ADD EBX, EAX POP EAX PRINT num1 PRINT num2 PRINT result HALT"},{"prompt":"Create a class in Java that takes two parameters, \\"name\\" and \\"age\\".","completion":"public class User { private String name; private int age; public User(String name, int age) { this.name = name; this.age = age; } public String getName() { return this.name; } public int getAge() { return this.age; } }"},{"prompt":"Write a basic python program to accept a string input, use it to create a dictionary and sort it by alphabetical order ToBeOrNotToBe","completion":"inp =raw_input(\\"Enter String:\\") my_dict = {} for character in inp: if character not in my_dict: my_dict[character] = 1 else: my_dict[character] += 1 sorted_order = sorted(my_dict.items(), key=lambda x: x[0]) print(\\"Sorted Dictionary\\") for character in sorted_order: print(\\"{} : {}\\".format(character[0], character[1]))"},{"prompt":"Create a program that takes no input and prints out the phrase \\"Hello World\\".","completion":"print(\\"Hello World\\")"},{"prompt":"Use a for loop to add up all odd elements in a list list=[4,5,7,9,11,3]","completion":"odd_total = 0 for element in list: if element % 2 != 0: odd_total += element print(odd_total) # Prints 25"},{"prompt":"Generate code to find the maximum element from a given list list=[-2, 12, 3, 0, -5]","completion":"def find_max(list): max_element = float('-inf') for element in list: if element > max_element: max_element = element return max_element print(find_max(list)) # Prints 12"},{"prompt":"Write a basic HTML structure with a header and a footer","completion":"<!DOCTYPE html> <html lang=\\"en\\"> <head> <meta charset=\\"UTF-8\\"> <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1.0\\"> <title>Document</title> </head> <body> <header> <!-- Header Content Here --> </header> <main> <!-- Page Content Here --> </main> <footer> <!-- Footer Content Here --> </footer> </body> </html>"},{"prompt":"Create a basic JavaScript program to accept user input and print out the result","completion":"let userInput = prompt('Please enter some input.'); alert(\`The input entered was {userInput}\`);"},{"prompt":"Remove all duplicates from this list using Python list=[5,5,5,7,8,8,9]","completion":"list=[5,7,8,9] list = list(dict.fromkeys(list))"},{"prompt":"Write a basic HTML structure with two navigation links","completion":"<!DOCTYPE html> <html lang=\\"en\\"> <head> <meta charset=\\"UTF-8\\"> <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1.0\\"> <title>Document</title> </head> <body> <header> <nav> <a href=\\"#\\">Link 1</a> <a href=\\"#\\">Link 2</a> </nav> </header> </body> </html>"},{"prompt":"Write a SQL query for finding the oldest student record in the table Table Name: Stude","completion":"SELECT * FROM Students ORDER BY age DESC LIMIT 1;"},{"prompt":"Edit this code so it prints the sum of the increasing odd numbers from 10 to 50 total = 0 for num in range(10, 50): if num % 2 == 0: total += num","completion":"total = 0 for num in range(10, 50, 2): total += num"},{"prompt":"Print the following statements in a sorted order I am learning Python I am learning Jav","completion":"I am learning Java I am learning Python"},{"prompt":"Edit the code to produce the output of the following matrix multiplication X = [[2, 3, 9], [8, 7, 6], [1, 6, 4]] Y = [[9, 4, 5], [7, 3, 3], [2, 1, 5]]","completion":"X = [[2, 3, 9], [8, 7, 6], [1, 6, 4]] Y = [[9, 4, 5], [7, 3, 3], [2, 1, 5]] def mat_mult(X, Y): result = [[0, 0, 0], [0, 0, 0], [0, 0, 0]] for i in range(len(X)): for j in range(len(Y[0])): for k in range(len(Y)): result[i][j] += X[i][k] * Y[k][j] return result"},{"prompt":"Write a Python program to generate a 3x3 Identity matrix","completion":"def generate_identity_matrix(): matrix = [[0, 0, 0], [0, 0, 0], [0, 0, 0]] for i in range(len(matrix)): for j in range(len(matrix)): if i == j: matrix[i][j] = 1 else: matrix[i][j] = 0 return matrix"},{"prompt":"Write a function that takes a two-dimensional array and returns its transpose. arr = [[1,2,3], [4,5,6], [7,8,9]]","completion":"def transpose(arr): transpose_arr = [[0] *len(arr) for _ in range(len(arr[0]))] for row in range(len(arr)): for col in range(len(arr[0])): transpose_arr[col][row] = arr[row][col] return transpose_arr"},{"prompt":"Write a function to reverse an integer. x = 12345","completion":"def reverse_integer(x): rev_int = 0 while x > 0: rev_int = rev_int * 10 + (x % 10) x //= 10 return rev_int"},{"prompt":"Write a function to simulate a dice roll.","completion":"import random def roll_dice(): return random.randint(1, 6)"},{"prompt":"Develop a JS snippet to display the elements in an ordered list.","completion":"let list = document.getElementById('list'); list.innerHTML = ''; list.appendChild(document.createElement('ul')); for (let i = 0; i < elements.length; i++) { list.firstChild.appendChild(document.createElement('li')).innerHTML = elements[i]; }"},{"prompt":"What is the most important concept in object-oriented programming?","completion":"The most important concept in object-oriented programming is encapsulation, which refers to the process of packaging related data and functionality together in an object. Encapsulation provides a high degree of abstraction and modularity, allowing developers to manage complexity and reduce the dependencies between various classes of objects."},{"prompt":"Create a switch statement to convert a string input to its corresponding enumerated type. Input: \\"Red\\", \\"Blue\\", \\"Green\\", \\"Yellow","completion":"enum Color { Red, Blue, Green, Yellow }; Color color; std::string str = \\"Red\\"; switch (str) { case \\"Red\\": color = Color::Red; break; case \\"Blue\\": color = Color::Blue; break; case \\"Green\\": color = Color::Green; break; case \\"Yellow\\": color = Color::Yellow; break; default: color = Color::Red; break; }"},{"prompt":"Write a script to calculate the sum of two numbers stored in variables. var x = 4; var y = 10;","completion":"function sum(x,y) { return x + y; } console.log(sum(x,y));"},{"prompt":"Construct an SQL statement to select the customers who have orders with a total price over 100.","completion":"SELECT c.name from customers as c LEFT JOIN orders as o ON c.customer_id = o.customer_id WHERE o.total_price > 100"},{"prompt":"Write a Java code to find the longest common prefix in a string array. String [] arr = {\\"flower\\",\\"flow\\",\\"flight\\"}","completion":"public static String longestCommonPrefix(String[] arr) { if (arr.length == 0) return \\"\\"; String prefix = arr[0]; for (int i = 1; i < arr.length; i++) { while (arr[i].indexOf(prefix) != 0) { prefix = prefix.substring(0, prefix.length() - 1); if (prefix.isEmpty()) return \\"\\"; } } return prefix; }"},{"prompt":"Create a function to evaluate a given expression written in infix notation. exp = \\"5 + (7 * 8) / 3","completion":"def eval_exp(exp): stack = [] for char in exp: if char in \\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\\" or char in \\"0123456789\\": stack.append(char) else: val1 = stack.pop() val2 = stack.pop() stack.append(str(eval(val2 + char + val1))) return int(stack.pop()) print(eval_exp(exp))"},{"prompt":"Edit the following code to include user input. def hello_world(): # Prints \\"Hello, World!\\" print(\\"Hello, World!\\")","completion":"def hello_world(): # Prompt user for input user_input = input(\\"Please enter your name: \\") # Prints \\"Hello, {user_input}!\\" print(\\"Hello, {}!\\".format(user_input))"},{"prompt":"Go through the following code and create test cases for it. def reverse_string(string): rev_str = \\"\\" # Loop through the string in reverse order for i in range(len(string)-1, -1, -1): rev_str += string[i] return rev_str","completion":"import unittest class ReverseStringTests(unittest.TestCase): def test_reverse_string_with_single_character_string(self): result = reverse_string(\\"a\\") self.assertEqual(result, \\"a\\") def test_reverse_string_with_even_length_string(self): result = reverse_string(\\"hello\\") self.assertEqual(result, \\"olleh\\") def test_reverse_string_with_odd_length_string(self): result = reverse_string(\\"world\\") self.assertEqual(result, \\"dlrow\\") if __name__ == '_main_': unittest.main()"},{"prompt":"Edit the following code so it prints out a message when the condition is true. if conditio","completion":"if condition: print(\\"Condition is true!\\")"},{"prompt":"Write a function that takes in two arrays of integers and returns the sum of the elements in both arrays. array1 = [1, 2, 3] array2 = [4, 5, 6]","completion":"def sum_arrays(arr1, arr2): sums = [] for i in range(len(arr1)): sums.append(arr1[i] + arr2[i]) return sums"},{"prompt":"Create a function in Python that takes in a string and returns a list of all unique characters in it. string = \\"b","completion":"def unique_chars(string): char_list = [] for char in string: if(char not in char_list): char_list.append(char) return char_list"},{"prompt":"Create a JavaScript class that takes in two strings and returns the longer string. string1 = \\"Hello\\" string2 = \\"World","completion":"class LongerString { constructor(str1, str2) { this.string1 = str1; this.string2 = str2; } getLongerString() { return (this.string1.length > this.string2.length) ? this.string1 : this.string2; } }"},{"prompt":"Write a module in Rust to identify palindromic strings.","completion":"fn is_palindrome(target: &str) -> bool { let mut char_vec: Vec<char> = target.chars().collect(); char_vec.reverse(); let reversed_target: String = char_vec.into_iter().collect(); if target == reversed_target { return true; } return false; }"},{"prompt":"Go through the following code and make sure there is an appropriate return statement at the end. def add_two_numbers(num1, num2): num3 = num1 + num2 print(num3)","completion":"def add_two_numbers(num1, num2): num3 = num1 + num2 print(num3) return num3"},{"prompt":"Write a function in PHP that takes in two integers and prints the smallest one. num1 = 5; num2 = 10;","completion":"function smallest(num1, num2) { if (num1 < num2) { echo \\"num1 is smaller\\"; } else if (num2 < num1) { echo \\"num2 is smaller\\"; } else { echo \\"Both numbers are equal\\"; } }"},{"prompt":"Create a function in C that takes in a number and returns \\"true\\" if it is divisible by 3 or else returns \\"false\\". num = 9","completion":"#include <stdbool.h> bool is_divisible_by_three(int num){ if (num % 3 == 0) { return true; } else { return false; } }"},{"prompt":"Write a function in Go that takes in a number and returns true if it is a prime number. num = 13","completion":"func isPrime(num int) bool { if num <= 1 { return false } for i := 2; i*i <= num; i++ { if num%i == 0 { return false } } return true }"},{"prompt":"Create an algorithm in C# with a time complexity of O(n2).","completion":"public static void printAllPairs(int[] array, int n) { for (int i = 0; i < n; i++) for (int j = i + 1; j < n; j++) Console.Write(\\"(\\" + array[i] + \\", \\" + array[j] +\\") \\"); }"},{"prompt":"Create a function in Ruby that determines if a number is Sublime. num = 21","completion":"def is_sublime(num) return num % 3 == 0 && num % 7 == 0 end"},{"prompt":"Explain how to use selectors and filters in CSS.","completion":"Selectors are used to target specific elements in an HTML document, while filters are used to apply style rules to these elements. Selectors are identified by their attribute like ids, classes, and tags, while filters are indicated by attributes such as color, font size, and display type. Selectors commonly utilize combinators to further narrow down the selection of elements. Filters can be used to style one or more selections, or to specify what values should apply based on the properties of other elements."},{"prompt":"Create a SQL query to list all customers who are located in the city of London. Name of the table: customer","completion":"SELECT * FROM customers WHERE city = 'London';"},{"prompt":"Create a matrix in C++ that stores the numbers from 1 to 10.","completion":"int matrix[10][10]; int c = 1; for (int i = 0; i < 10; i++) for (int j = 0; j < 10; j++) matrix[i][j] = c++;"},{"prompt":"Modify the program to take input from the user and create a two-dimensional array in Python.","completion":"rows, cols = (int(x) for x in input(\\"Enter size of 2D array: \\").split()) arr = [[None for x in range(cols)] for y in range(rows)] for i in range(rows): for j in range(cols): arr[i][j] = int(input(\\"Enter element: \\"))"},{"prompt":"Explain how to use functions in Python to perform operations on dictionaries.","completion":"Python dictionaries are mappings between keys and values, allowing for efficient retrieval of values using its associated key. Various functions can be used to manipulate the data in the dictionaries, such as the get() function to retrieve the value for a given key, the clear() function to delete all values, the keys() and values() functions to retrieve all keys and values respectively, and the items() function to retrieve a list of key-value pairs."},{"prompt":"Develop an HTML page with a navigation bar for a website. List of navigation options: Home, About, Services, Contac","completion":"<ul> <li><a href=\\"index.html\\">Home</a></li> <li><a href=\\"about.html\\">About</a></li> <li><a href=\\"services.html\\">Services</a></li> <li><a href=\\"contact.html\\">Contact</a></li> </ul>"},{"prompt":"Describe how LSTMs are used to predict time-series data.","completion":"Long Short-Term Memory (LSTM) networks are a type of Recurrent Neural Network (RNN) that enable the model to learn long-term dependencies by remembering information from long periods of time. LSTMs are commonly used to model time-series data such as stock prices, sensor readings, or other sequences of data points that contain predictable patterns. The LSTM predicts the next step in the sequential data using the past data points, and can be used to perform tasks such as forecasting future data points and anomaly detection."},{"prompt":"Explain how to use pointers for passed parameters in C++.","completion":"When passing parameters to a function in C++, it is possible to use pointers. This can be done by declaring the argument in the function as a pointer, and passing the address of the variable to be passed as the argument. This is beneficial over passing the parameter by value as passing a pointer is more efficient, as the function will be able to directly access the memory address of the passed parameter and there will be no need to make a copy."},{"prompt":"Create a function that appends the input string to a given array. find the string “hello world”","completion":"def append(array, string): array.append(string) return array array = [] string = \\"hello world\\" append(array, string) # Output array = ['hello world']"},{"prompt":"Write a regex to detect valid email addresses.","completion":"^(([^<>()[].,;:s@\\"]+(.[^<>()[].,;:s@\\"]+)*)|(\\".+\\"))@(([[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}])|(([a-zA-Z-0-9]+.)+[a-zA-Z]{2,}))"},{"prompt":"What is the syntax to print out the following string? string = \\"Hello World!","completion":"print(string)"},{"prompt":"What is the correct syntax to prompt and save a user's input?","completion":"name = input(\\"What is your name? \\")"},{"prompt":"What is the syntax to convert a string to an integer in Java?","completion":"int num = Integer.parseInt(string);"},{"prompt":"Describe the difference between the 'break' and 'continue' keywords in Python.","completion":"The 'break' keyword is used to end a loop and exit the loop, whereas the 'continue' keyword is used to skip the current iteration and continue with the next iteration."},{"prompt":"Make a class that creates a list and has a maximum length.","completion":"class LimitedList: def __init__ (self, max_len): self.max_len = max_len self.items = [] def add(self, item): if len(self.items) < self.max_len: self.items.append(item) else: self.items.pop(0) self.items.append(item) def get_list(self): return self.items"},{"prompt":"Write a function to compare two lists of objects and return true if the objects in both lists are the same. list1 = [{'id': 1, 'name': 'John'}, {'id': 3, 'name': 'Sara'}] list2 = [{'id': 1, 'name': 'John'}, {'id': 3, 'name': 'Sara'}]","completion":"def compare_lists(list1, list2): return list1==list2"},{"prompt":"Create a list comprehension for a given list that only contains odd numbers. [1, 2, 3, 4, 5, 6, 7, 8]","completion":"odd_nums = [num for num in [1, 2, 3, 4, 5, 6, 7, 8] if num % 2 != 0 ]"},{"prompt":"Convert a given list to a dictionary with items as keys and their corresponding position in the list as values. [‘a’, ‘b’, ‘c’, ‘d’]","completion":"def list_to_dict(lst): return {k: v for v, k in enumerate(lst)}"},{"prompt":"Calculate the sum of squared differences between every number in a list and the mean of the list. [1, 2, 3, 4]","completion":"def sum_squared_diffs(nums): mean = sum(nums) / len(nums) return sum((num - mean)**2 for num in nums)"},{"prompt":"Create a class that has 3 methods. The first method should multiply two numbers, the second should add two numbers, and the third should calculate the modulus of two numbers.","completion":"class Calculator: def multiply(self, num1, num2): return num1 * num2 def add(self, num1, num2): return num1 + num2 def modulus(self, num1, num2): return num1 % num2"},{"prompt":"Write a JavaScript function to filter out all falsy values from an array. [NaN, 0, false, \\"\\", undefined]","completion":"function filterFalsy(arr) { return arr.filter(el => Boolean(el)); }"},{"prompt":"Write a JavaScript program to convert an array of objects into a comma-separated values (CSV) string with column headers. [ {name: 'John', age: 28, city: 'New York'}, {name: 'Mary', age: 34, city: 'London'}, {name: 'Bob', age: 23, city: 'Los Angeles'} ]","completion":"function arrayToCSV(data) { let csv = ''; const headers = Object.keys(data[0]); csv += headers.join(',') + 'n'; data.forEach((item) => { let row = ''; Object.values(item).forEach((value) => { row += \`\\"{value}\\",\`; }); row = row.slice(0, -1); csv += \`{row}n\`; }); return csv; }"},{"prompt":"Write a regular expression to find all the email addresses in a given text.","completion":"regex = r\\"([a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+)\\""},{"prompt":"Suggest a way to extract all the words from an HTML page using Python.","completion":"Using the BeautifulSoup library, you can parse the HTML page and extract all the words using the \\"get_text()\\" method."},{"prompt":"Name four different types of sorting algorithms.","completion":"The four different types of sorting algorithms are Selection sort, Bubble sort, Insertion sort and Merge sort."},{"prompt":"w can you find the sum of all numbers in a list?","completion":"The sum of all numbers in a list can be found by using the \\"sum()\\" function."},{"prompt":"Create a function to print out words that include the letter \\"e\\" from a given list of strings. mylist = [\\"hello\\", \\"world\\", \\"fire\\", \\"feline\\"]","completion":"def print_words_with_e(mylist): for word in mylist: if 'e' in word: print(word) print_words_with_e(mylist) #Output: hello fire feline"},{"prompt":"mplement a switch-case statement in Java.","completion":"public static void main(String[] args) { int day = 4; switch (day) { case 1: System.out.println(\\"Monday\\"); break; case 2: System.out.println(\\"Tuesday\\"); break; case 3: System.out.println(\\"Wednesday\\"); break; case 4: System.out.println(\\"Thursday\\"); break; case 5: System.out.println(\\"Friday\\"); break; case 6: System.out.println(\\"Saturday\\"); break; case 7: System.out.println(\\"Sunday\\"); break; default: System.out.println(\\"Invalid day\\"); break; } }"},{"prompt":"Manipulate a given list of strings to capitalize the first letter in each string. mylist = [\\"this\\", \\"is\\", \\"a\\", \\"list\\"]","completion":"def capitalize(mylist): new_list = [] for item in mylist: new_list.append(item.capitalize()) return new_list print(capitalize(mylist)) #Output: ['This', 'Is', 'A', 'List']"},{"prompt":"Construct an SQL query to get the sum of all integers in a given table over a condition. table: books condition: price > 20","completion":"SELECT SUM(price) FROM books WHERE price > 20;"},{"prompt":"Use the zip function to combine two lists by index. list1 = [1, 2, 3] list2 = [4, 5, 6]","completion":"list3 = list(zip(list1, list2)) #Output: list3 = [(1, 4), (2, 5), (3, 6)]"},{"prompt":"Generate a correct Python code to turn a list of strings into a list of their lengths. mylist = [\\"hello\\", \\"world\\", \\"fire\\", \\"feline\\"]","completion":"length_list = [len(x) for x in mylist] #Output: length_list = [5, 5, 4, 6]"},{"prompt":"Find the most common element in a list of strings. mylist = [\\"red\\", \\"blue\\", \\"red\\", \\"green\\", \\"green\\", \\"red\\"]","completion":"def most_common_element(mylist): count = 0 common = None for i in mylist: curr_count = mylist.count(i) if curr_count > count: common = i count = curr_count return common print(most_common_element(mylist)) #Output: red"},{"prompt":"Create a for loop in JavaScript to iterate over the following array. [\\"apple\\", \\"banana\\", \\"mango\\", \\"pear\\"];","completion":"for(let i=0; i<arr.length; i++){ let item = arr[i]; console.log(item); }"},{"prompt":"Create a class in C++ named 'Animal' that has a method named getDescription().","completion":"class Animal { public: // constructor Animal(int age); // member function virtual string getDescription() const; };"},{"prompt":"Find all the occurrences of the word \\"the\\" in the following text. The quick brown fox jumps over the lazy dog.","completion":"The word \\"the\\" occurs 2 times in the text."},{"prompt":"Create an object in JavaScript named 'user' with the following attributes: name, age, and gender.","completion":"let user = { name: \\"\\", age: 0, gender: \\"\\" };"},{"prompt":"Create a method in Python to generate all the prime numbers between 1 and 100.","completion":"def prime_generator(n): primes = [] for i in range(2, n+1): is_prime = True for j in range(2, i): if i%j == 0: is_prime = False break if is_prime: primes.append(i) return primes print(prime_generator(100))"},{"prompt":"Explain the difference between a variable and a constant in C++.","completion":"In C++, a variable is a named storage location for data that can be modified during the program execution. On the other hand, a constant is a named storage location for data that can not be modified once it has been declared. Constants are immutable and the value must be set when declared."},{"prompt":"Create a class in Java named 'Person' that has the following fields: name, age, and gender.","completion":"public class Person { private String name; private int age; private String gender; public Person(String name, int age, String gender) { this.name = name; this.age = age; this.gender = gender; } }"},{"prompt":"Suggest an improvement to the following C++ for-loop to make it more efficient. for(int i = 0; i<arr.length; i++){ if(arr[i] == target){ return true; } }","completion":"for(int i = 0; i<arr.length; i++){ if(arr[i] == target){ return true; } else if (arr[i] > target){ break; } }"},{"prompt":"Rewrite this code in JavaScript. def find_max(nums): maximum = 0 for num in nums: if num > maximum: maximum = num return maximum","completion":"function find_max(nums) { let maximum = 0; for (let num of nums) { if (num > maximum) { maximum = num; } } return maximum; }"},{"prompt":"Use this data to predict the weather for the next week. Current temperature: 34 degrees Humidity: 66% Precipitation chance: 30%","completion":"The weather for the next week is predicted to be warm and mostly dry, with only a slight chance of rain scattered throughout the week. Temperatures will remain around the 34 degree mark, and humidity levels should stay fairly moderate, around 66%."},{"prompt":"Change this code so that it uses an appropriate data structure. x = 0 y = 0","completion":"coordinates = (0,0)"},{"prompt":"What type of data structure is this? array = [1, 2, 3, 4, 5]","completion":"This is an array data structure."},{"prompt":"Using the input, create a function to calculate the average of the set. nums = [1, 2, 3, 4, 5]","completion":"def avg_nums(nums): total = 0 for num in nums: total += num avg = total / len(nums) return avg print(avg_nums([1, 2, 3, 4, 5])) # Output: 3.0"},{"prompt":"Write a schema for a table to store student grades in a school.","completion":"CREATE TABLE grades ( student_id INT PRIMARY KEY, student_name VARCHAR(255) NOT NULL, grade INT NOT NULL, course VARCHAR(255) NOT NULL );"},{"prompt":"Describe the concept of static variables in Java.","completion":"In Java, static variables (also known as class variables) are variables that are declared with the static keyword and are available to access through the class name. These variables are shared between all objects. They are typically used for storing information that does not change between objects."},{"prompt":"Given an array of integers, find the maximum value. arr = [8, 1, 2, -1, 4, 9]","completion":"int max_value = arr.Max(); // 9"},{"prompt":"Create a data visualization comparing the population of California and New York.","completion":"import matplotlib.pyplot as plt # X axis values x = ['California', 'New York'] # Y axis values pop = [39.56, 19.45] # plotting bars plt.bar(x, pop) # Naming the x-axis plt.xlabel('State') # naming the y-axis plt.ylabel('Population') # giving a title to the figure plt.title('California vs. New York Population') # function to show the plot plt.show()"},{"prompt":"Given a sentence, clean up any duplicate words. My favorite favorite food is pizza.","completion":"my favorite food is pizza."},{"prompt":"Given two strings, find the longest common substring between them. s1 = \\"Hello, world!\\" s2 = \\"world, goodbye!","completion":"def longest_substring(s1, s2): m = [[0] * (1 + len(s2)) for i in range(1 + len(s1))] longest, x_longest = 0, 0 for x in range(1, 1 + len(s1)): for y in range(1, 1 + len(s2)): if s1[x - 1] == s2[y - 1]: m[x][y] = m[x - 1][y - 1] + 1 if m[x][y] > longest: longest = m[x][y] x_longest = x else: m[x][y] = 0 return s1[x_longest - longest: x_longest] s1 = \\"Hello, world!\\" s2 = \\"world, goodbye!\\" print(longest_substring(s1, s2)) # Output: world"},{"prompt":"mplement an autocomplete feature for an input field.","completion":"input_field.addEventListener(\\"input\\", function(e) { // Fetch the input value var inputValue = e.target.value; // Check the input value matches one from our list if (list.includes(inputValue)) { // If so, complete it input_field.value = inputValue; } });"},{"prompt":"Using MongoDB, create a database to store user information.","completion":"// Import the mongodb library const { MongoClient } = require('mongodb'); // Create global connection variable let db; // Connecting to the MongoDB instance MongoClient.connect('mongodb://localhost:27017', {useNewUrlParser: true, useUnifiedTopology: true}, (err, client) => { if (err) { console.log('Error occurred while connecting to the MongoDB instance'); } else { console.log('Successfully connected to the MongoDB instance'); db = client.db('users_db'); } }); // Create users collection db.createCollection('users', { name: { type: String, required: true }, age: { type: Number }, email: { type: String } });"},{"prompt":"Given a string and a number, print the string the number of times specified by the number. str = \\"Hello\\" num = 3","completion":"console.log(str.repeat(num)); // HelloHelloHello"},{"prompt":"Use a RegEx function to identify all the words that contain at least 7 characters in a given sentence. Sentence: This is a sample sentence to test.","completion":"import re pattern = r\\"bw{7,}b\\" sentence = \\"This is a sample sentence to test\\" matches = re.findall(pattern, sentence) print(matches)"},{"prompt":"Use HTML to create a basic web page which displays a welcome message and a button to redirect the user to another page.","completion":"<html> <header> <title>Welcome Page</title> </header> <body> <h1>Welcome to My Website</h1> <p>This website offers a variety of resources.</p> <button onclick=\\"window.location.href='anotherpage.html'\\">Redirect</button> </body> </html>"},{"prompt":"Write a SQL query to display the SKU, product name, and price of all products with a price higher than 10.","completion":"SELECT SKU, product_name, price FROM Products WHERE price > 10;"},{"prompt":"Write a SQL query to display the name and most recent transaction date of top 5 customers.","completion":"SELECT customer_name, MAX(transaction_date) FROM Customers GROUP BY customer_name ORDER BY MAX(transaction_date) DESC LIMIT 5;"},{"prompt":"Create a HTML form which includes a dropdown list and a submit button.","completion":"<form> <select> <option value=\\"volvo\\">Volvo</option> <option value=\\"saab\\">Saab</option> <option value=\\"mercedes\\">Mercedes</option> <option value=\\"audi\\">Audi</option> </select> <input type=\\"submit\\" value=\\"Submit\\"> </form>"},{"prompt":"Write a Python script to display the number of days between two given dates. Date 1: 21 May 2020 Date 2: 13 June 2020","completion":"import datetime start_date = datetime.date(2020, 5, 21) end_date = datetime.date(2020, 6, 13) delta = end_date - start_date print(\\"Number of days between two dates:\\", delta.days)"},{"prompt":"Use PHP to create a login page which contains an input field to accept the username and a submit button.","completion":"<!DOCTYPE html> <html> <body> <form action=\\"action_login.php\\" method=\\"post\\"> Username: <input type=\\"text\\" name=\\"username\\"> <input type=\\"submit\\" value=\\"Submit\\"> </form> </body> </html>"},{"prompt":"Edit the given sql query to return all employee details having age greater than 30 SELECT * FROM employees;","completion":"SELECT * FROM employees WHERE age > 30;"},{"prompt":"Write a JavaScript program to compare two given strings, and count the number of common characters between them. str1 = “Apple”, str2 = “Banana”","completion":"function countCommon(str1, str2) { let count = 0; for (let i = 0; i < str1.length; i++) { if (str2.includes(str1[i])) { count++; } } return count; }"},{"prompt":"Create a C program to read in a 3x3 matrix composed of integers, and print it. Input Matrix: [[1, 2, 3], [4, 5, 6], [7, 8, 9]]","completion":"#include<stdio.h> int main() { int a[3][3], i, j; printf(\\"Enter the elements of the 3x3 matrix : n\\"); for (i = 0; i < 3; i++) for (j = 0; j < 3; j++) scanf(\\"%d\\", &a[i][j]); printf(\\"The matrix is: n\\"); for (i = 0; i < 3; i++) { for (j = 0; j < 3; j++) printf(\\"%d \\", a[i][j]); printf(\\"n\\"); } return 0; }"},{"prompt":"Edit the following Java program to read 5 integers from the user and display the largest one.","completion":"import java.util.*; public class LargestOfFive { public static void main(String[] args) { Scanner sc = new Scanner(System.in); int [] numbers = new int [5]; for(int i=0; i<5; i++) { System.out.print(\\"Enter an integer: \\"); numbers[i] = sc.nextInt(); } sc.close(); int largest = numbers[0]; for (int i=1; i<5; i++) { if (numbers[i] > largest) largest = numbers[i]; } System.out.println(\\"The largest number is \\" + largest); } }"},{"prompt":"Generate a MySQL query to calculate the total number of employees from the \\"employees\\" table.","completion":"SELECT COUNT(*) FROM employees;"},{"prompt":"Create a C program to read two numbers and display the minimum of them. num1 = 13, num2 = 23","completion":"#include<stdio.h> int main() { int num1, num2; printf(\\"Enter two numbers: n\\"); scanf(\\"%d %d\\", &num1, &num2); if (num1 < num2) printf(\\"Minimum is: %d\\", num1); else printf(\\"Minimum is: %d\\", num2); return 0; }"},{"prompt":"Write a Java program to print a right triangle star pattern with a given base. base = 4","completion":"public class RightTrianglePattern { // Function to demonstrate printing pattern public static void printPattern(int baseSize) { int i, j; // outer loop to handle the number of rows for(i=0; i<baseSize; i++) { // inner loop to handle number spaces // values changing according to requirement for(j=2*(baseSize-i); j>=0; j--) { // printing spaces System.out.print(\\" \\"); } // inner loop to handle number of columns // values changing according to outer loop for(j=0; j<=i; j++) { // printing stars System.out.print(\\"*\\" + \\" \\"); } System.out.println(); } } // Driver Function public static void main(String args[]) { int baseSize = 4; printPattern(baseSize); } }"},{"prompt":"Edit the given MySQL query to return all employee details from the \\"employees\\" table having both salary and designation value \\"Manager\\". SELECT * FROM employees;","completion":"SELECT * FROM employees WHERE salary = 'Manager' AND designation = 'Manager';"},{"prompt":"Generate a Python program to extract the digits of a given number and print the extracted digits in descending order. num = 318","completion":"def extractDigits(num): extracted_list = [] while num > 0: extracted_list.append(num%10) num //= 10 extracted_list.sort(reverse=True) return extracted_list"},{"prompt":"Generate input data for a convolutional neural network (CNN). The CNN will classify objects in an image.","completion":"Input data should include an image dataset of the objects to be classified. Each image should contain its corresponding label. Image labels can be one-hot encoded. The dataset should be split into separate training, validation and test datasets."},{"prompt":"Edit the given data to ensure data integrity. Given data: Name Location John US Julia Germany","completion":"Name Location John United States Julia Germany"},{"prompt":"Create a two-dimensional array in Java with values corresponding to the given output. Output: [4, 6, 10]","completion":"int[][] arr = {{4, 6, 10}};"},{"prompt":"Describe the concept of text mining.","completion":"Text mining is the process of extracting valuable information from textual data, typically through the application of natural language processing and machine learning algorithms. Text mining can identify hidden patterns and relationships in text, including key words, topics, and complex themes, by analyzing sentence structure, co-occurrences, metaphors and other characteristics of natural language."},{"prompt":"Employ an algorithm to predict the customer churn rate. A dataset containing customer data such as demographics, spending patterns, customer lifetime value and customer satisfaction.","completion":"A supervised learning algorithm can be employed to predict customer churn rate. This will involve training the algorithm on the customer dataset, by providing features such as customer age, spending pattern, customer lifetime value and customer satisfaction, as well as a target the algorithm should learn from. The trained model can then be used to predict customer churn rate."},{"prompt":"mplement a sorting algorithm in Python for the given data. Data: [4, 2, 3, 8, 1]","completion":"def sort_data(data): for i in range(len(data)): min_index = i for j in range(i+1, len(data)): if data[min_index] > data[j]: min_index = j data[i], data[min_index] = data[min_index], data[i] return data"},{"prompt":"Using the given dataset, generate a tree chart visualization. Dataset: Name Category John A Kate B Jake B","completion":"A - John B - Kate - Jake"},{"prompt":"Using Django, develop a web application to manage a blog.","completion":"Create a Django project and develop an application with models to manage a blog. Write views to create and manage blog posts, categories and tags, and customize the URL routing. Create templates to display the blog posts, categories and tags. Implement authentication to protect access to the blog posts."},{"prompt":"Given the following Python code, generate a function that will print the first 5 elements of a list. my_list = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]","completion":"def print_first_five(my_list): \\"\\"\\"This function prints the first five elements of a list.\\"\\"\\" print(my_list[:5])"},{"prompt":"Sort an array of integers in ascending order without using the built-in sort() function. my_array = [1, 6, 9, 5, 8, 10, 4, 2, 7, 3]","completion":"def sort_ascending(my_array): '''This function sorts an array of integers in ascending order without using the built-in sort() function.''' n = len(my_array) for i in range(n): for j in range(0, n-i-1): if my_array[j] > my_array[j+1]: my_array[j], my_array[j+1] = my_array[j+1], my_array[j] return my_array"},{"prompt":"Create a class named Person.","completion":"class Person: '''This class represents a person with a name and age.''' def __init__(self, name, age): self.name = name self.age = age"},{"prompt":"Create a function that takes in two variables and checks if they have the same type.","completion":"def type_checker(x, y): '''This function takes in two variables and checks if they have the same type.''' return type(x) == type(y)"},{"prompt":"Create a function that takes in a number and returns all the prime factors. num = 30","completion":"def prime_factorize(num): '''This function takes in a number and returns all the prime factors.''' primes = [] i = 2 while i * i <= num: while num % i == 0: primes.append(i) num //= i i += 1 if num > 1: primes.append(num) return primes"},{"prompt":"Create a function which will take in a string and returns a string in reverse order.","completion":"def reverse_string(s): '''This function takes in a string and returns a string in reverse order.''' return s[::-1]"},{"prompt":"Analyze a provided string of characters and return the number of occurrences of each character. input_string = \\"HelloWorld","completion":"def analyze_string(input_string): '''This function analyzes a provided string of characters and returns the number of occurrences of each character.''' dict_count = {} for char in input_string: if char in dict_count: dict_count[char] += 1 else: dict_count[char] = 1 return dict_count"},{"prompt":"Convert the following string of HTML into a DOM tree. html_string = \\"<p>Hello <b>World</b></p>","completion":"def convert_html_to_dom_tree(html_string): '''This function converts a string of HTML into a DOM tree.''' from bs4 import BeautifulSoup soup = BeautifulSoup(html_string, 'html.parser') return soup.prettify()"},{"prompt":"Calculate the value of the following expression: 2 to the power of 5.","completion":"def calculate_expression(expression): '''This function calculates a given expression.''' return eval(expression)"},{"prompt":"Write a function which will take an array as an argument and return an object with the keys being the elements of the array and the values being their counts. my_array = [1, 2, 2, 3]","completion":"def count_elements(my_array): '''This function takes an array as an argument and returns an object with the keys being the elements of the array and the values being their counts.''' counts = {} for element in my_array: if element in counts: counts[element] += 1 else: counts[element] = 1 return counts"},{"prompt":"Create a function that takes in a positive integer up to 1000 and prints out its prime factorization. num = 17","completion":"def prime_factorization(num): '''This function takes in a positive integer and prints out its prime factorization.''' factors = [] dividend = num divisor = 2 while divisor <= dividend: if dividend % divisor == 0: factors.append(divisor) dividend //= divisor else: divisor += 1 return factors"},{"prompt":"Create a function for splitting a string into an array of characters.","completion":"def split_string_to_chars(string): '''This function takes a string and splits it into an array of characters.''' return list(string)"},{"prompt":"Write a function which will take an array of integers and returns an array with no repeated elements. my_array = [1, 2, 3, 2, 4, 6, 1, 2]","completion":"def remove_duplicates(my_array): '''This function takes an array of integers and returns an array with no repeated elements.''' return list(set(my_array))"},{"prompt":"Create a regular expression to match numbers between 10 and 100","completion":"[1-9]d{1,2}"},{"prompt":"What is the maximum value a 32-bit signed integer can represent?","completion":"2147483647"},{"prompt":"Compile and execute the following C++ program #include <iostream> using namespace std; int main() { cout << \\"Hello world\\" << endl; return 0; }","completion":"Hello world"},{"prompt":"Decompile the following HTML code <h1>Hello World</h1>","completion":"<html> <head> </head> <body> <h1>Hello World</h1> </body> </html>"},{"prompt":"Convert the following string \\"Hello World!\\" to an integer. \\"Hello World!","completion":"101946"},{"prompt":"Given the following code snippet, rewrite it using for loop. let counter = 0 while (counter < 10) { console.log(counter); counter++; }","completion":"for(let counter = 0; counter < 10; counter++) { console.log(counter); }"},{"prompt":"Create a function to calculate the sum of all the even numbers between 20 and 100.","completion":"const calculateSum = (start, end) => { let sum = 0; for (let i = start; i <= end; i++) { if (i % 2 === 0) sum += i } return sum; } calculateSum(20, 100); // 1890"},{"prompt":"Create a server in Node.js to respond with status code 200 when a client hits the '/' endpoint.","completion":"const http = require(\\"http\\"); const server = http.createServer((req, res) => { if (req.url === \\"/\\") { res.writeHead(200, { \\"Content-Type\\": \\"text/html\\" }); res.end(\\"hello world!\\"); } }); server.listen(8080);"},{"prompt":"Write an array filter to remove any element with the value 0. [0,1,2,3,4,0,6]","completion":"const result = arr.filter(item => item !== 0); // result will be [1,2,3,4,6]"},{"prompt":"Create a Python class to represent a 3 x 3 matrix with variable values.","completion":"class Matrix: def __init__(self, a00=0, a01=0, a02=0, a10=0, a11=0, a12=0, a20=0, a21=0, a22=0): self.matrix = [[a00, a01, a02], [a10, a11, a12], [a20, a21, a22]] def __str__(self): return str(self.matrix)"},{"prompt":"Design a Python class to represent a rectangle with a length and width attribute.","completion":"class Rectangle: def __init__(self, length, width): self.length = length self.width = width def get_area(self): return self.length*self.width"},{"prompt":"Create a JavaScript function to take a string of numbers and convert it to an array of integers. const inputString = '1 2 3 4 5'","completion":"function stringToArray(str) { return str.split(' ').map(item => parseInt(item)); } stringToArray(inputString);"},{"prompt":"Generate a two-dimensional array of random integers in JavaScript.","completion":"function generateRandomArray(rows, cols) { let array = []; for (let i=0; i < rows; i++) { array.push(Array.from({length: cols}, () => Math.floor(Math.random() * 10))); } return array; }"},{"prompt":"Create a Python class to represent an employee record with fields name and salary.","completion":"class Employee: def __init__(self, name, salary): self.name = name self.salary = salary def get_name(self): return self.name def get_salary(self): return self.salary"},{"prompt":"Design a Python class to represent a 3 x 3 chess board.","completion":"class ChessBoard: def __init__(self): self.board = [ [\\"a1\\",\\"b1\\",\\"c1\\"], [\\"a2\\",\\"b2\\",\\"c2\\"], [\\"a3\\",\\"b3\\",\\"c3\\"] ] def __str__(self): board_string = \\"\\" for row in self.board: for col in row: board_string += col + \\" \\" board_string += \\"n\\" return board_string"},{"prompt":"Write a CSS code snippet to style all buttons in red.","completion":"button { background-color: red; }"},{"prompt":"Create a JavaScript function to log a friendly message when the page is loaded.","completion":"window.onload = function () { console.log('Welcome to my website!'); }"},{"prompt":"Design a Python class to represent a user with fields name and age.","completion":"class User: def __init__(self, name, age): self.name = name self.age = age def get_name(self): return self.name def get_age(self): return self.age"},{"prompt":"Write a function that takes two strings and returns a boolean value indicating whether the two strings are anagrams or not.","completion":"def anagram(s1, s2): # Strip whitespaces and convert to lowercase s1 = s1.replace(' ', '').lower() s2 = s2.replace(' ', '').lower() # Return boolean indicating anagram status return sorted(s1) == sorted(s2) if __name__ == '__main__': print(anagram('tea', 'eat')) # should print True"},{"prompt":"Categorize the following text into its corresponding sentiment The newest addition to the concert line-up is incredibly disappointing.","completion":"Negative sentiment."},{"prompt":"Create a web application that allows users to search for movies and save their favorites.","completion":"\\"\\"\\" Create a web application that allows users to search for movies and save their favorites \\"\\"\\" # Import libraries import flask import sqlalchemy # Create Flask application app = flask.Flask(__name__) # Connect to database engine = sqlalchemy.create_engine('sqlite:///movies.db') # Define routes @app.route(\\"/\\") def index(): # Return homepage return flask.render_template(\\"index.html\\") @app.route(\\"/search\\") def search(): # Get search terms from query string terms = flask.request.args.get(\\"terms\\") # Query database conn = engine.connect() query = f\\"SELECT * FROM movies WHERE title LIKE '%{terms}%'\\" results = conn.execute(query).fetchall() conn.close() # Render results return flask.render_template(\\"search.html\\", results=results) @app.route(\\"/save\\") def save(): # Get the movie id from query string movie_id = flask.request.args.get(\\"id\\") # Save the movie to the database conn = engine.connect() query = f\\"INSERT INTO favorites (movie_id) VALUES ({movie_id})\\" conn.execute(query) conn.close() # Redirect to homepage return flask.redirect(\\"/\\") if __name__ == '__main__': app.run(debug=True)"},{"prompt":"Make a 3D scatter chart with a dataset containing 5 rows and 3 columns. import pandas as pd # Sample dataset data = {'X': [1,2,3,4,5], 'Y': [6,7,8,9,10], 'Z': [11,12,13,14,15]} df = pd.DataFrame(data)","completion":"import matplotlib.pyplot as plt from mpl_toolkits.mplot3d import Axes3D # Create 3D scatter plot fig = plt.figure() ax = Axes3D(fig) ax.scatter(df['X'], df['Y'], df['Z']) ax.set_xlabel('X') ax.set_ylabel('Y') ax.set_zlabel('Z') plt.show()"},{"prompt":"Create a function that takes two lists and returns a dictionary with the elements of each list as keys. list1 = ['a', 'b', 'c'] list2 = [1, 2, 3]","completion":"def create_dictionary(list1, list2): \\"\\"\\" Function to create a dictionary with two lists \\"\\"\\" return {list1[i]: list2[i] for i in range(len(list1))} if __name__ == '__main__': list1 = ['a', 'b', 'c'] list2 = [1, 2, 3] print(create_dictionary(list1, list2)) # should print {'a': 1, 'b': 2, 'c': 3}"},{"prompt":"Calculate the area of a triangle given the coordinates of its three vertices. x1 = 1 y1 = 5 x2 = 4 y2 = 3 x3 = 7 y3 = 2","completion":"def calculate_triangle_area(x1, y1, x2, y2, x3, y3): \\"\\"\\" Function to calculate the area of a triangle given the coordinates of its 3 vertices \\"\\"\\" a = ((x2 - x1)**2 + (y2 - y1)**2)**0.5 b = ((x3 - x2)**2 + (y3 - y2)**2)**0.5 c = ((x1 - x3)**2 + (y1 - y3)**2)**0.5 s = (a + b + c) / 2 return ((s*(s-a)*(s-b)*(s-c))**0.5) if __name__ == \\"__main__\\": x1 = 1 y1 = 5 x2 = 4 y2 = 3 x3 = 7 y3 = 2 print(calculate_triangle_area(x1, y1, x2, y2, x3, y3)) # should print 4.24"},{"prompt":"Build a neural network using Python import numpy as np # Sample data X = np.array([[0, 0], [0, 1], [1, 0], [1, 1]]) y = np.array([[0, 1, 1, 0]]).T","completion":"import keras # Create a neural network model = keras.Sequential([ keras.layers.Dense(2, activation='sigmoid'), keras.layers.Dense(1, activation='sigmoid') ]) # Compile the model model.compile(optimizer='adam', loss='mean_squared_error') # Train the model model.fit(X, y, epochs=1000)"},{"prompt":"Merge two dictionaries into another dictionary dict1 = {'a':1, 'b':2} dict2 = {'c':3, 'd':4}","completion":"def merge(dict1, dict2): \\"\\"\\" Function to merge two dictionaries \\"\\"\\" return {**dict1, **dict2} if __name__ == '__main__': dict1 = {'a':1, 'b':2} dict2 = {'c':3, 'd':4} print(merge(dict1, dict2)) # should print {'a': 1, 'b': 2, 'c': 3, 'd': 4}"},{"prompt":"Create a web page that displays a greeting using HTML","completion":"<!doctype html> <html> <head> <title>Greeting</title> </head> <body> <h1>Hello World!</h1> </body> </html>"},{"prompt":"Generate all possible permutations of the characters in a given string","completion":"def permutations(string): \\"\\"\\" Function to generate all possible permutations of a given string \\"\\"\\" if len(string) == 0: return [''] prev_list = permutations(string[1:len(string)]) next_list = [] for i in range(0,len(prev_list)): for j in range(0,len(string)): new_string = prev_list[i][0:j]+string[0]+prev_list[i][j:len(string)-1] if new_string not in next_list: next_list.append(new_string) return next_list if __name__ == '__main__': string = 'abcd' print(permutations(string)) # should print ['abcd', 'bacd', 'bcad', 'bcda', 'acbd', 'cabd', 'cbad', 'cbda', 'acdb', 'cadb', 'cdab', 'cdba', 'dabc', 'dbac', 'bdac', 'bdca', 'dacb', 'dcab', 'dcba', 'adbc', 'dbca', 'dcab', 'dcba']"},{"prompt":"Develop a script in Java to generate Fibonacci numbers to nth place.","completion":"public class Fibonacci { public static void main(String[] args) { int n = 10, t1 = 0, t2 = 1; System.out.print(\\"First \\" + n + \\" terms: \\"); for (int i = 1; i <= n; ++i) { System.out.print(t1 + \\" \\"); int sum = t1 + t2; t1 = t2; t2 = sum; } } }"},{"prompt":"Develop a function in Python to convert a temperature in Celsius to Fahrenheit. Temperature in Celsius: 30","completion":"def celsius_to_fahrenheit(celsius): return (celsius * 1.8) + 32 print(celsius_to_fahrenheit(30))"},{"prompt":"Create a program in Python to generate a random number in the range from 0 to 10.","completion":"import random print(random.randint(0, 10))"},{"prompt":"Develop a function in C to find the power of a given base to an exponent. Base: 2 Exponent: 7","completion":"#include <stdio.h> int power(int base, int exponent) { int result = 1; while (exponent != 0) { result = result * base; --exponent; } return result; } int main() { printf(\\"This is 2 to the power of 7: %d\\", power(2, 7)); return 0; }"},{"prompt":"Develop a function in JavaScript to get the maximum and minimum values from an array. Array elements: 10, 5, 8, 12, 9","completion":"function getMaxMin(arr) { let max = -Infinity; let min = Infinity; arr.forEach(function (item) { if (item > max) { max = item; } if (item < min) { min = item; } }); return { \\"max\\": max, \\"min\\": min }; } let arr = [10, 5, 8, 12, 9]; let result = getMaxMin(arr); console.log(result);"},{"prompt":"Create a script in Java to find the most repeated element in an array. Array in string form: “a,b,c,d,a,a,b,d,d”","completion":"public class MaxOccurring { static final int ASCII_SIZE = 256; static char getMaxOccuringChar(String str) { int count[] = new int[ASCII_SIZE]; int len = str.length(); for (int i=0; i<len; i++) count[str.charAt(i)]++; int max = -1; // Initialize max count char result = ' '; // Initialize result // Traversing through the string and maintaining // the count of each character for (int i = 0; i < len; i++) { if (max < count[str.charAt(i)]) { max = count[str.charAt(i)]; result = str.charAt(i); } } return result; } // Driver Method public static void main(String[] args) { String str = \\"a,b,c,d,a,a,b,d,d\\"; System.out.println(\\"Max occurring character is \\" + getMaxOccuringChar(str)); } }"},{"prompt":"Create a function in Python that will print out a random word from a given list. words_list = ['cat', 'dog', 'ball', 'toy']","completion":"import random def random_word(words_list): word = random.choice(words_list) print(word) random_word(words_list)"},{"prompt":"Write a code to generate an array of 10 random integers in the range 0-99.","completion":"import random def random_int_array(num): array = [] for i in range(num): num = random.randint(0, 99) array.append(num) return array print(random_int_array(10))"},{"prompt":"Construct a list in Python that contains the names of the months in order, starting with January.","completion":"months = [\\"January\\", \\"February\\", \\"March\\", \\"April\\", \\"May\\", \\"June\\", \\"July\\", \\"August\\", \\"September\\", \\"October\\", \\"November\\", \\"December\\"]"},{"prompt":"Write a JavaScript code for setting a different background color for every odd table row. <table> <tr> <td>row1 cell1</td> <td>row1 cell2</td> </tr> <tr> <td>row2 cell1</td> <td>row2 cell2</td> </tr> <tr> <td>row3 cell1</td> <td>row3 cell2</td> </tr> </table>","completion":"function setBackgroundColor(){ var table = document.getElementsByTagName(\\"table\\")[0]; for (var i = 0, row; row = table.rows[i]; i++) { (i%2 == 0) ? (row.style.backgroundColor = \\"#F2F2F2\\") : (row.style.backgroundColor = \\"#FFFFFF\\"); } } setBackgroundColor();"},{"prompt":"Write a Java code snippet to calculate the area of a triangle, given three points. x1, y1 = 0, 0 x2, y2 = 3, 4 x3, y3 = 4, 0","completion":"public class TriangleAreaCalculator { // Returns the area of the given triangle, given three points static double area(int x1, int y1, int x2, int y2, int x3, int y3){ double side1 = Math.pow(Math.abs(x1-x2),2) + Math.pow(Math.abs(y1-y2),2); double side2 = Math.pow(Math.abs(x2-x3),2) + Math.pow(Math.abs(y2-y3),2); double side3 = Math.pow(Math.abs(x3-x1),2) + Math.pow(Math.abs(y3-y1),2); double sperimeter = (side1 + side2 + side3) / 2; double area = Math.sqrt(sperimeter*(sperimeter-side1)*(sperimeter-side2)*(sperimeter-side3)); return area; } public static void main(String[] args) { int x1 = 0; int y1 = 0; int x2 = 3; int y2 = 4; int x3 = 4; int y3 = 0; System.out.println(\\"The area of the triangle is: \\" + area(x1, y1, x2, y2, x3, y3)); } }"},{"prompt":"Create a JavaScript expression that will iterate over an array of numbers and print out the square root of each number. num_array = [1, 4, 9, 16]","completion":"num_array.forEach(num => { console.log(Math.sqrt(num)); });"},{"prompt":"Define a function in Java that will take any string as argument and returns it in uppercase.","completion":"public static String toUpperCase(String s) { return s.toUpperCase(); }"},{"prompt":"Write code to print out the sum of two numbers in Ruby. num1 = 5 num2 = 10","completion":"def sum_of_two_numbers(num1, num2) puts num1 + num2 end sum_of_two_numbers(5, 10)"},{"prompt":"Using a JavaScript array of strings, write code to remove all strings that start with \\"a\\". arr = [\\"apple\\", \\"banana\\", \\"apricot\\", \\"guava\\"]","completion":"let newArr = arr.filter(word => !word.startsWith('a')); console.log(newArr); // Output: [\\"banana\\", \\"guava\\"]"},{"prompt":"Write a JavaScript program to check whether two or more arrays have the same elements. array1 = [1, 2, 3, 4]; array2 = [3, 4, 5, 6];","completion":"function sameElementCheck(arr1, arr2) { if (arr1.length !== arr2.length) { return false; } let flag = true; arr1.forEach((elem) => { if (!arr2.includes(elem)) { flag = false; } }) return flag; }"},{"prompt":"You need to parse a given HTML string and obtain the list of tags in the string. html_string = \\"<div> <h1>Hello World!</h1> <p>This is a HTML string.</p> </div>","completion":"tag_list = [] for tag in html_string.split(): if tag[0] == '<' and tag[-1] == '>': tag_list.append(tag[1:-1]) print(tag_list)"},{"prompt":"Create a C program to check if the given number is prime or not.","completion":"#include <stdio.h> int isPrime(int n) { int flag = 1; int i; for (i = 2; i <= n / 2; ++i) { if (n % i == 0) { flag = 0; break; } } if (flag == 1) return 1; else return 0; } int main() { int n; printf(\\"Enter a number: \\"); scanf(\\"%d\\", &n); if (isPrime(n)) printf(\\"%d is a prime number.\\", n); else printf(\\"%d is not a prime number.\\", n); return 0; }"},{"prompt":"Create a function in Python to generate all possible strings of length k from given lowercase characters. set = {'a', 'b', 'c'} k = 3","completion":"def generate_strings(set, k): strings = [] n = len(set) def generate_strings_recur(sub, count): # Base cases if count == 0 : strings.append(sub) return for i in range(n): # Next character of string to be # formed new_sub = sub + set[i] # Recursion call generate_strings_recur(new_sub, count-1) count = k sub = \\"\\" # Call to generate all strings of length k generate_strings_recur(sub, count) return strings"},{"prompt":"You need to edit the given code for sorting. Make the array sort in descending order. arr = [3, 5, 8, 9, 10]","completion":"def quick_sort(arr): if len(arr) <= 1: return arr pivot = arr[-1] lesser_elements = [i for i in arr[:-1] if i <= pivot] greater_elements = [i for i in arr[:-1] if i > pivot] return quick_sort(greater_elements) + [pivot] + quick_sort(lesser_elements)"},{"prompt":"You need to write an API request in Python to return JSON data from an API endpoint.","completion":"import requests API_ENDPOINT = 'api.example.com/data' response = requests.get(API_ENDPOINT) if response.status_code == 200: data = response.json()"},{"prompt":"You need to write a CSS rule to change the background color of all divs in a web page.","completion":"div { background-color: blue; }"},{"prompt":"You need to find the area of a given circle with the formula: Area = pi * r * r r = 5","completion":"const PI = 3.14; const r = 5; const area = PI * r * r; console.log(area);"},{"prompt":"Read the given JSON data and return a list of all the keys. { \\"name\\": \\"John\\", \\"age\\": 21, \\"isActive\\": true }","completion":"def get_keys(data): keys = [] for key in data: keys.append(key) return keys"},{"prompt":"You need to write a Java program to check whether a given string is a palindrome or not.","completion":"public class Palindrome { public static void main(String[] args) { String a = \\"Madam\\"; String b = \\"\\"; int n = a.length(); for(int i = n - 1; i >= 0; i--) { b = b + a.charAt(i); } if(a.equalsIgnoreCase(b)) { System.out.println(\\"The string is a palindrome.\\"); } else { System.out.println(\\"The string is not a palindrome.\\"); } } }"},{"prompt":"Edit the statements given below so that they can be compiled and run without any errors. public class Test { public static void main(String[] args) { System.out.println(\\"Hello World\\"); int x; System.out.println(x); } }","completion":"public class Test { public static void main(String[] args) { System.out.println(\\"Hello World\\"); int x = 0; System.out.println(x); } }"},{"prompt":"Write a C++ program to read a single character from stdin.","completion":"#include <iostream> int main() { char c; std::cin >> c; std::cout << c; return 0; }"},{"prompt":"mplement a function that calculates the sum of n numbers. numbers = [1,2,3,4]","completion":"def sum_n_numbers(numbers): '''This function returns the sum of n numbers''' total = 0 for n in numbers: total += n return total"},{"prompt":"Convert a given string to the CamelCase format. string = \\"this is a string","completion":"def to_camel_case(string): '''This function converts a given string to the CamelCase format''' res = \\"\\" for word in string.split(): res += word[0].upper() + word[1:] return res"},{"prompt":"Create a Python script that shows the frequency of words in a given text. text = \\"Hello, this is a sentence.","completion":"def calc_word_freq(text): '''This function calculates word frequency in a given text''' word_freq = {} for word in text.split(): if word in word_freq: word_freq[word] += 1 else: word_freq[word] = 1 for word,freq in word_freq.items(): print(f'{word} - {freq}')"},{"prompt":"Generate an SQL query that returns the names of all employees who are engineers.","completion":"SELECT name FROM Employees WHERE title = 'Engineer'"},{"prompt":"Create a Python program that compares two given lists to check if they have any common element. list1 = [1,2,3] list2 = [4,5,6]","completion":"def compare_lists(list1, list2): '''This function checks if two lists have any common element''' found_common = False for x in list1: if x in list2: found_common = True break return found_common"},{"prompt":"Create a Python class that encodes a given number using the Base58 algorithm. number = 123456789","completion":"class Base58Encoder: '''This class encodes numbers using the Base58 algorithm''' def __init__(self,number): self.number = number def encode(self): encoded = \\"\\" alphabet = \\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\\" while self.number > 0: remainder = self.number % 58 self.number = self.number // 58 encoded = alphabet[remainder] + encoded return encoded"},{"prompt":"Create a MySQL query that creates a table with two columns, one for id and one for name.","completion":"CREATE TABLE table_name ( id INT NOT NULL AUTO_INCREMENT, name VARCHAR(255) NOT NULL, PRIMARY KEY (id) );"},{"prompt":"Using the given array of integers, calculate the mean and output the result. [7, 4, 5, 9]","completion":"The mean of the given array is 6.5."},{"prompt":"Write a Python script that reads in a string and checks if it is a palindrome. \\"Radar","completion":"The given string is a palindrome."},{"prompt":"Write a Bash command to list the top 20 processes that are currently running on the system.","completion":"ps -aux --sort=-%cpu | head -n 20"},{"prompt":"Write a JavaScript code snippet to remove all children that are of the class 'myclass' in a div with id 'myDiv'.","completion":"document.getElementById(\\"myDiv\\").querySelectorAll(\\".myclass\\").forEach(el => el.remove());"},{"prompt":"Write an SQL query to select all rows from the table 'users' where the 'last_name' is 'Smith'.","completion":"SELECT * FROM users WHERE last_name = 'Smith'"},{"prompt":"C++, create a class called 'Point' that stores a 2D point with x and y coordinates.","completion":"class Point { private: int x; int y; public: Point(int x, int y) : x(x), y(y) {} int getX() const { return x; } int getY() const { return y; } };"},{"prompt":"Create a JavaScript object that stores the properties name, age and favorite color.","completion":"let person = { name: \\"John Smith\\", age: 30, favoriteColor: \\"blue\\" };"},{"prompt":"Create a C# program that creates a List of five strings and prints out each one.","completion":"List<string> myList = new List<string>(); myList.Add(\\"hello\\"); myList.Add(\\"world\\"); myList.Add(\\"testing\\"); myList.Add(\\"123\\"); myList.Add(\\"goodbye\\"); foreach (string s in myList) { Console.WriteLine(s); }"},{"prompt":"Create a Python program that prints out a given list of numbers in reverse order. [1, 2, 3, 4, 5]","completion":"for i in range(len(list) - 1, -1, -1): print(list[i])"},{"prompt":"Using the given JSON data, create a JavaScript object and output its first element. {\\"people\\": [{\\"name\\": \\"John\\", \\"age\\": 30}, {\\"name\\": \\"Alice\\", \\"age\\": 25}]}","completion":"let jsonData = { \\"people\\": [{\\"name\\": \\"John\\", \\"age\\": 30}, {\\"name\\": \\"Alice\\", \\"age\\": 25}] }; let firstElement = jsonData.people[0]; console.log(firstElement);"},{"prompt":"Write a C program that prints out a pyramid of numbers.","completion":"#include <stdio.h> void printPyramid(int n) { int i, j; for (i=0; i<n; i++) { for (j=0; j<=i; j++) printf(\\"%d \\", j+1); printf(\\"n\\"); } } int main() { int n = 5; printPyramid(n); return 0; }"},{"prompt":"Create a function in JavaScript to show a message.","completion":"function showMessage() { console.log('This is a message'); }"},{"prompt":"Change the code to allow two parameters to be passed. function sum(a) { return a; }","completion":"function sum(a, b) { return a + b; }"},{"prompt":"Describe the difference between a loop and a conditional statement.","completion":"A loop is a set of instructions that is execute repeatedly until a certain condition is met. A conditional statement is an instruction that is used to check a condition, and if the condition is true, it will execute certain code. Loops can be used to execute a block of code multiple times, while a conditional statement can be used to choose between different blocks of code."},{"prompt":"Write an SQL query to find all the employees based in France.","completion":"SELECT * FROM employees WHERE country = 'France';"},{"prompt":"Write an algorithm to sort a list of numbers from least to greatest.","completion":"def sort_list(mylist): for i in range(len(mylist)): min_idx = i for j in range(i+1, len(mylist)): if mylist[min_idx] > mylist[j]: min_idx = j mylist[i], mylist[min_idx] = mylist[min_idx], mylist[i] return mylist"},{"prompt":"What are the three main principles of OOP?","completion":"The three main principles of Object Oriented Programming (OOP) are encapsulation, inheritance, and polymorphism. Encapsulation is the process of wrapping data and functions together into one unit. Inheritance is the process of allowing a class to inherit the properties and behavior of a parent class. Polymorphism is the ability to define multiple versions of the same function or object depending on the context in which they are used."},{"prompt":"Write a code snippet to get the first element of an array in JavaScript. let myArray = [1,2,3];","completion":"let firstElement = myArray[0];"},{"prompt":"Compare and contrast classes and functions in C#.","completion":"Classes and functions in C# serve similar purposes, such as organizing code, adding structure to a program, and making it easier to understand and maintain, but they are different in several ways. Classes are an aggregate of various related data and methods; they are used to represent real-world entities and represent a model of an object or concept in the program. Functions are separate, independent, self-contained pieces of code that perform a specific operation; they accept data as input, perform some kind of operation on that input, and then return a result."},{"prompt":"Write an algorithm to print the first 10 natural numbers.","completion":"\\"\\"\\" Write an algorithm to print the first 10 natural numbers \\"\\"\\" for i in range(1, 11): print(i)"},{"prompt":"Create an algorithm to search for a substring in a given string. \`<code>'Hello World!', substring = 'll'</code>\`","completion":"\\"\\"\\" Create an algorithm to search for a substring in a given string \\"\\"\\" def search(string, substring): for i in range(len(string)): if string[i: i + len(substring)] == substring: return True return False if __name__ == '__main__': print(search('Hello World!', 'll'))"},{"prompt":"Construct an algorithm to find the longest common prefix string amongst an array of strings. \`<code>['leet', 'leets', 'lee', 'leeston', 'leeve']</code>\`","completion":"\\"\\"\\" Construct an algorithm to find the longest common prefix string amongst an array of strings \\"\\"\\" def longest_common_prefix(strs): prefix = strs[0] i = 0 while i < len(prefix): for string in strs: if i >= len(string) or string[i] != prefix[i]: return prefix[0:i] i += 1 return prefix if __name__ == '__main__': print(longest_common_prefix(['leet', 'leets', 'lee', 'leeston', 'leeve']))"},{"prompt":"Construct a program to print the Pyramid pattern using asterisks.","completion":"\\"\\"\\" Construct a program to print the Pyramid pattern using asterisks \\"\\"\\" for i in range(0, 5): for j in range(0, i+1): print(\\"*\\", end=\\"\\") print()"},{"prompt":"Construct a function to set up a dictionary with words and corresponding counts of occurrences of each word. \`<code>'hey hey hello hello hell oh hello',</code>\`","completion":"\\"\\"\\" Construct a function to set up a dictionary with words and corresponding counts of occurrences of each word \\"\\"\\" def word_count(string): word_dict = {} for word in string.split(): if word in word_dict: word_dict[word] += 1 else: word_dict[word] = 1 return word_dict if __name__ == '__main__': print(word_count('hey hey hello hello hell oh hello'))"},{"prompt":"Design a function in Java that takes a parameter of type array as an argument and returns its maximum value. Array = {21, 8, 43, 10, 7}","completion":"public int maxElement(int[] array) { int max = array[0]; for (int i = 1; i < array.length; i++) if (array[i] > max) max = array[i]; return max; }"},{"prompt":"Write an SQL query that designates a unique identifier for each row in a table. Table name: \\"User\\" Columns: id, name, occupatio","completion":"SELECT id, name, occupation, ROW_NUMBER() OVER (ORDER BY id) AS row_id FROM User;"},{"prompt":"Debug this Java code to make it work. public class test { public static void main(String args[]) { int a = 5; int b = 0; int c = a + b; System.out.println(\\"Result is: \\" + c); } }","completion":"public class test { public static void main(String args[]) { int a = 5; int b = 0; if(b!=0) { int c = a + b; System.out.println(\\"Result is: \\" + c); } else { System.out.println(\\"Error: Cannot divide by 0!\\"); } } }"},{"prompt":"Create a class in Python called 'Rectangle' to store the coordinates of a rectangle.","completion":"class Rectangle: def __init__(self, x1, y1, x2, y2): self.x1 = x1 self.y1 = y1 self.x2 = x2 self.y2 = y2 def get_coordinates(self): return (self.x1, self.y1, self.x2, self.y2)"},{"prompt":"Create an algorithm in JavaScript that calculates the average of a series of numbers. Series of numbers: [2, 3, 7, 8]","completion":"function calculateAverage(arr) { let sum = 0; arr.forEach(num => sum += num); return sum/arr.length; } console.log(calculateAverage([2, 3, 7, 8]))"},{"prompt":"Design a function in PHP to add two numbers together.","completion":"function addNumbers(a, b) { return a + b; }"},{"prompt":"Create a program in C that outputs all perfect square numbers between 1 and 100.","completion":"#include <stdio.h> int main() { for (int i = 1; i <= 100; i++) { int sq = i * i; if (sq <= 100) printf(\\"%d \\", sq); } return 0; }"},{"prompt":"Write a function in Haskell that takes two strings as arguments and returns them in reverse order.","completion":"reverseOrder :: String -> String -> String reverseOrder x y = y ++ x"},{"prompt":"Edit the following C code to remove any syntax errors. int main() { int a,b; printf(\\"Enter two numbers:\\"); scanf(\\"%d &d\\", &a, &b) printf(\\"Product = %d\\", a*b) return 0; }","completion":"int main() { int a,b; printf(\\"Enter two numbers:\\"); scanf(\\"%d %d\\", &a, &b); printf(\\"Product = %d\\", a*b); return 0; }"},{"prompt":"Write an assembly code to calculate the sum of a series of numbers. Series of numbers: [1, 5, 8, 10]","completion":"MOV R1, #1 ; Load the first number ADD R2, R1 ; Initialize the sum LOOP CMP R1, #10 ; Check if we have reached the last number BEQ SUM ; If yes, jump to SUM ADD R1, #1 ; Increment the number ADD R2, R1 ; Add the number to sum B LOOP ; Loop SUM ; At the end, the sum is in R2"},{"prompt":"Using the given information, create a SQL query to find the total number of products in the database. Table: products Columns: product_id, product_name","completion":"SELECT COUNT(*) FROM products;"},{"prompt":"Using the parameters provided, create a new variable \\"n\\" that stores the sum of \\"a\\" and \\"b\\". a = 25 b = 10","completion":"n = a + b"},{"prompt":"Construct a for loop to print out numbers ranging from 1 to 10, skipping even numbers.","completion":"for i in range(1,11): if i % 2 != 0: print(i)"},{"prompt":"Create a list of all the words in the given sentence. The quick brown fox jumped over the lazy dog.","completion":"words_list = [\\"The\\", \\"quick\\", \\"brown\\", \\"fox\\", \\"jumped\\", \\"over\\", \\"the\\", \\"lazy\\", \\"dog\\"]"},{"prompt":"Construct a while loop that prints integers from 0 to 9.","completion":"i = 0 while i < 10: print(i) i+=1"},{"prompt":"Given a sorted list of integers, write a Python function to search for a specific target element.","completion":"def binary_search(list, target): low = 0 high = len(list) - 1 while low <= high: mid = (low + high) // 2 if list[mid] < target: low = mid + 1 elif list[mid] > target: high = mid - 1 else: return mid return False"},{"prompt":"Using the given list, create a new variable \\"result\\" that stores the sum of all the elements. items = [1, 2, 3, 4, 5]","completion":"result = 0 for item in items: result += item"},{"prompt":"Modify the existing code so it prints out the numbers from 0 to 10 in reverser order. for (let i = 0; i < 10; i++) { console.log(i); }","completion":"for (let i = 10; i >= 0; i--) { console.log(i); }"},{"prompt":"Read the data structure and output the sum of all the values. data = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]","completion":"let total = 0; data.forEach((arr)=> { arr.forEach(num => { total += num; }); }); console.log(total); //45"},{"prompt":"Develop a program for sorting an array of numbers. arr = [40, 10, 5, 50, 30]","completion":"function sortArray(arr) { let n = arr.length; for (let i = 0; i < n-1; i++) { let minIndex = i; for (let j = i + 1; j < n; j++){ if (arr[j] < arr[minIndex]) minIndex = j; } let temp = arr[minIndex]; arr[minIndex] = arr[i]; arr[i] = temp; } return arr; } console.log(sortArray(arr)) // Output: [5, 10, 30, 40, 50]"},{"prompt":"Create a HTML page with a table with three columns and four rows and give it an appropriate CSS styling.","completion":"<style> table { border-collapse: collapse; } th, td { border: 1px solid #000; padding: 8px; } </style> <table> <thead> <tr> <th>Column 1</th> <th>Column 2</th> <th>Column 3</th> </tr> </thead> <tbody> <tr> <td>Row 1 Col 1</td> <td>Row 1 Col 2</td> <td>Row 1 Col 3</td> </tr> <tr> <td>Row 2 Col 1</td> <td>Row 2 Col 2</td> <td>Row 2 Col 3</td> </tr> <tr> <td>Row 3 Col 1</td> <td>Row 3 Col 2</td> <td>Row 3 Col 3</td> </tr> <tr> <td>Row 4 Col 1</td> <td>Row 4 Col 2</td> <td>Row 4 Col 3</td> </tr> </tbody> </table>"},{"prompt":"Develop a function to search for a value in an array and return its position. arr = [25, 100, 98, 50]; value = 50","completion":"function searchValue(arr, value) { let position = -1; arr.forEach((n, i)=> { if (n == value) { position = i; } }); return position; } let position = searchValue(arr, value); console.log(position); // 3"},{"prompt":"mprove the code to return the sum of all the numbers in the given vector. vector<float> nums = {1.5, 2.5, 3.5, 4.5};","completion":"float get_sum(vector<float>& nums) { float sum = 0; for (auto n : nums) { sum += n; } return sum; }"},{"prompt":"Create a Python class called Dog that contains the following attributes: breed, name, and age.","completion":"class Dog: def __init__(self, breed, name, age): self.breed = breed self.name = name self.age = age"},{"prompt":"Create a copy of the given code without using the copy.deepcopy() import copy list1 = [[1, 2], [3, 4]] list2 = copy.deepcopy(list1)","completion":"list2 = [] for i in range(len(list1)): list2.append(list1[i].copy())"},{"prompt":"Calculate the cosine similarity between the given two sentence vectors. vec1 = [1,2,3,4,5] vec2 = [2,3,4,5,6]","completion":"def cosine_similarity(vec1, vec2): dot_product = np.dot(vec1, vec2) norm_vec1 = np.linalg.norm(vec1) norm_vec2 = np.linalg.norm(vec2) return dot_product / (norm_vec1 * norm_vec2)"},{"prompt":"Define a custom Exception for an invalid data type.","completion":"class InvalidDataTypeError(Exception): \\"\\"\\"Exception raised when an invalid data type is encountered\\"\\"\\" def __init__(self, message): self.message = message"},{"prompt":"Given a list of tuples, return a new list with the value of each tuple increased by one. tuples = [(1,2), (2,3), (3,4)]","completion":"new_tuples = [] for t in tuples: new_tuples.append((t[0] + 1, t[1] + 1))"},{"prompt":"Construct a SQL query to find all customers in a given database table. Table: Customer","completion":"SELECT * FROM Customers;"},{"prompt":"dentify the largest element of an array with python. [9, 4, 2, 8, 7]","completion":"def find_largest_num(a): if len(a) == 0: return max = a[0] for num in a: if num > max: max = num return max"},{"prompt":"Generate a python script that concatenates two strings. String 1: \\"foo\\" String 2: \\"bar","completion":"str1 = \\"foo\\" str2 = \\"bar\\" concatenated_str = str1 + str2 print(concatenated_str)"},{"prompt":"Create a line chart from given data on the number of car sales in the UK from 2008 to 2019. year = ['2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019'] number_of_sales = [1.8, 2.1, 2.5, 2.6, 2.8, 3.0, 3.2, 3.5, 3.7, 3.8, 4.0, 4.2]","completion":"import matplotlib.pyplot as plt # Make a data frame from the given data df = pd.DataFrame({'year': year, 'number_of_sales': number_of_sales}) # Plot a line chart plt.plot(df['year'], df['number_of_sales'], linewidth=3) plt.title(\\"Car Sales in the UK from 2008 to 2019\\") plt.xlabel(\\"Year\\") plt.ylabel(\\"Number of sales\\") # Show the plot plt.show()"},{"prompt":"Create an SQL query that joins two tables, Orders and Customers, and returns a list of customers who have ordered something in the last month.","completion":"SELECT c.name FROM Orders o INNER JOIN Customers c ON o.customer_id = c.id WHERE o.order_date >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH);"},{"prompt":"Create a Java class called Employee with a constructor taking name and salary as arguments.","completion":"public class Employee { private String name; private double salary; public Employee(String name, double salary) { this.name = name; this.salary = salary; } // Getters and setters public String getName() { return name; } public void setName(String name) { this.name = name; } public double getSalary() { return salary; } public void setSalary(double salary) { this.salary = salary; } }"},{"prompt":"Create an array of 100 elements filled with random numbers from 1 to 100.","completion":"import random # Create an array of 100 elements with 0 values random_num_arr = [0] * 100 # Fill each of the 100 elements with random numbers from 1 to 100 for i in range(100): random_num_arr[i] = random.randint(1, 100) print(random_num_arr)"},{"prompt":"Using jQuery, select all paragraph elements on a page and hide them.","completion":"('p').hide();"},{"prompt":"Write a JavaScript statement to check if a given number is greater than 5.","completion":"// given number let number = 5; if (number > 5) { console.log('Number is greater than 5'); }"},{"prompt":"Convert a given JSON string to a JavaScript object. '{\\"name\\":\\"John\\",\\"age\\":30,\\"city\\":\\"New York\\"}'","completion":"# Convert given JSON string to JavaScript object let obj = JSON.parse('{\\"name\\":\\"John\\",\\"age\\":30,\\"city\\":\\"New York\\"}'); console.log(obj); // Output: {name: \\"John\\", age: 30, city: \\"New York\\"}"},{"prompt":"Perform an left outer join of two tables, Customers and Orders, in an SQL query and order the result by CustomerName in ascending order.","completion":"SELECT c.Name AS CustomerName, o.OrderNumber FROM Customers c LEFT OUTER JOIN Orders o ON c.ID = o.CustomerID ORDER BY CustomerName ASC;"},{"prompt":"Create a program that prompts the user to enter their name and prints it out.","completion":"# Get user input name = input('Enter your name: ') # Print out the user's name print('Hello ' + name + '!')"},{"prompt":"Write a JavaScript statement to determine whether a given string is empty or not.","completion":"// given string let str = \\"\\"; if (str == \\"\\") { console.log('String is empty'); }"},{"prompt":"Write a Python function to normalize a given list of numbers so that they sum up to 1. arr = [2, 4, 6, 8]","completion":"def normalize(arr): # calculate the sum of the given numbers total = sum(arr) # normalize each number in the array normalized_arr = [number / total for number in arr] return normalized_arr # print the normalized array print(normalize(arr)) # prints [0.1, 0.2, 0.3, 0.4]"},{"prompt":"Create a class in Python to represent a book with the title, author and year of publication as attributes.","completion":"class Book: def __init__(self, title, author, year): self.title = title self.author = author self.year = year"},{"prompt":"Create a class in JavaScript to represent a person with properties like name, age, and gender.","completion":"class Person { constructor(name, age, gender) { this.name = name; this.age = age; this.gender = gender; } }"},{"prompt":"Write a code to print the words \\"Hello world!\\" n times if n is given as an input.","completion":"def hello(n): if n > 0: for x in range(n): print(\\"Hello world!\\") else: print(\\"Input should be a number greater than 0\\") hello(5)"},{"prompt":"Write a SQL query to select the records from the table \\"users\\" where the age is greater than 18. SELECT * FROM user","completion":"SELECT * FROM users WHERE age > 18;"},{"prompt":"Create a JavaScript loop that counts from 1 to 10.","completion":"for (let i = 1; i <= 10; i++) { console.log(i); }"},{"prompt":"Fix the syntax error in the following Java code. String[] x = {\\"a\\", \\"b\\", \\"c\\"} for (int i=0; i<x.lenght; i++) { System.out.println(x[i]); }","completion":"String[] x = {\\"a\\", \\"b\\", \\"c\\"}; for (int i=0; i<x.length; i++) { System.out.println(x[i]); }"},{"prompt":"Generate an algorithm to perform the task described below Given two strings, find out if one string is a rotation of other.","completion":"The following algorithm can be used to find out if a given string is a rotation of another given string: 1. Create a concatenated string by concatenating the first string with itself 2. Check if the second string is a substring of the concatenated string. 3. If yes, then the second string is a rotation of the first string"},{"prompt":"Complete the following C++ code to sort a two-dimensional array. int[][] arr = {{4, 9}, {2, 8}, {3, 1}};","completion":"#include <algorithm> int[][] arr = {{4, 9}, {2, 8}, {3, 1}}; // Sort by the first element std::sort(arr.begin(), arr.end(), [](const std::vector<int>& a, const std::vector<int>& b) { return a[0] < b[0]; }); // Sort by the second element std::sort(arr.begin(), arr.end(), [](const std::vector<int>& a, const std::vector<int>& b) { return a[1] < b[1]; });"},{"prompt":"Manually debug the following code to find any errors. def foo(x): y = x**3 z = y + 2 return z","completion":"No errors found in the given code."},{"prompt":"Create a basic HTML page using HTML tags.","completion":"<!DOCTYPE html> <html> <head> <title>My page</title> </head> <body> <h1>This is my page</h1> </body> </html>"},{"prompt":"Create a MySQL query to select the unique emails from a table.","completion":"SELECT DISTINCT email FROM tableName;"},{"prompt":"Write a JavaScript program to create a class 'Shape' and create an object 'circle' of this class.","completion":"class Shape { constructor() { this.type = \\"Shape\\"; } } let circle = new Shape(); circle.type = \\"Circle\\"; console.log(circle.type);"},{"prompt":"What is an example of a one-to-one mapping?","completion":"An example of a one-to-one mapping is a function, which pairs each element in one set to a unique element in another set, such that each element in the first set is paired with exactly one element in the second set. For example, the following function is one-to-one: f(x) = x + 1. This function maps each number x to a unique number x + 1."},{"prompt":"Write a SQL query to select the customers who live in the given zip code. Zip Code: 10003","completion":"SELECT * FROM customers WHERE zip_code = 10003;"},{"prompt":"Create a Python function that will take two lists as inputs, and return a list that contains all the common items between the lists. list1 = [1,2, 3, 4, 5] list2 = [2,4,6,8]","completion":"def common_elements(list1, list2): return [item for item in list1 if item in list2] list1 = [1,2, 3, 4, 5] list2 = [2,4,6,8] common_items_list = common_elements(list1, list2) print(common_items_list)"},{"prompt":"Sort the given list of employee names alphabetically (A-Z). employee_names = ['John', 'Lisa', 'Emily', 'Mia']","completion":"employee_names = ['John', 'Lisa', 'Emily', 'Mia'] sorted_employees = sorted(employee_names) print(sorted_employees)"},{"prompt":"What is a use case for inheritance in object-oriented programming?","completion":"In object-oriented programming, inheritance is used to create and maintain a hierarchical relationship between classes. By inheriting properties and methods from a parent class, a child class can reuse and extend the functionalities of the parent class. This allows developers to write less code and keep their codebase organized by logically grouping similar classes into a hierarchy, which can then be further extended with new features."},{"prompt":"Write a method to take two strings as the inputs and check if the second string is a substring of the first one or not. String1: hello world String2: world","completion":"def is_substring(string1, string2): if string2 in string1: return True else: return False string1 = 'hello world' string2 = 'world' is_substring(string1, string2) # will return True"},{"prompt":"What is a use case for the switch statement in C++?","completion":"A switch statement in C++ is used to execute a statement or group of statements for a given value. This is particularly useful when dealing with a large number of cases. The switch statement evaluates an expression and compares the result with different case labels, and executes the code associated with the matching case label."},{"prompt":"What kind of sorting algorithm is Insertion Sort?","completion":"Insertion sort is a comparison-based sorting algorithm in which the elements are compared and arranged in a particular order. In this algorithm, a sublist is created which is sorted and at each iteration it is compared with the elements of the original list and placed in the correct position. It is an in-place sorting algorithm, meaning it doesn’t require any additional data structures for sorting."},{"prompt":"Write a function to take three integers as input and return their product. x=3, y=5, z=7","completion":"def product(x,y,z): return x*y*z x = 3 y = 5 z = 7 res = product(x,y,z) print(res)"},{"prompt":"What is the advantage of using Dynamic programming over Greedy algorithms?","completion":"The main advantage of using dynamic programming over greedy algorithms is that it is optimized for the long-term. Dynamic programming takes into account the entire problem and finds the optimal solution based on the entire problem. On the other hand, greedy algorithms may find an optimal solution to a given sub-problem, but they may not find the optimal solution to the entire problem. In addition, dynamic programming is better suited for problems with overlapping sub-problems, which may not be solved by a greedy algorithm."},{"prompt":"What is a use case for exception handling in Java?","completion":"Exception handling in Java is used to catch and handle errors in code. When an exception occurs, a program may throw an exception object and propagate it to the code that invoked the program; this allows the program to handle the exception and take the necessary actions. Exception handling also allows for code to be written that handles expected errors and ensures the failure of a program does not lead to an undesired result or invalid state."},{"prompt":"Create a recursive function that returns the Fibonacci number corresponding to a given input.","completion":"def Fibonacci(n): if n <= 1: return n else: return(Fibonacci(n-1) + Fibonacci(n-2)) # Driver Code nterms = 10 # check if the number of terms is valid if nterms <= 0: print(\\"Plese enter a positive integer\\") else: print(\\"Fibonacci sequence:\\") for i in range(nterms): print(Fibonacci(i))"},{"prompt":"Write an SQL query that returns the seating capacity of a given theater. theater name = “Fox Theatre”","completion":"SELECT theater_name, seating_capacity FROM theater WHERE theater_name = 'Fox Theatre';"},{"prompt":"Create a Python code snippet to create a line chart with three different categories. category1 = [1,2,3,4] category2 = [4,5,6,7] category3 = [7,8,9,10]","completion":"import matplotlib.pyplot as plt # Data to plot category1 = [1,2,3,4] category2 = [4,5,6,7] category3 = [7,8,9,10] # Create the line plot plt.plot(category1, label='Category 1') plt.plot(category2, label='Category 2') plt.plot(category3, label='Category 3') # change font type and size plt.rc('font', size=16) # Add a legend plt.legend() # Show the plot plt.show()"},{"prompt":"Write a JavaScript code snippet that returns a random element from a given array. array = [1,2,3,4,5,6]","completion":"function getRandomElement(arr) { return arr[Math.floor(Math.random() * arr.length)]; } array = [1,2,3,4,5,6]; console.log(getRandomElement(array));"},{"prompt":"Create a PHP script that returns the same result as a given MySQL query. SELECT id, name, price FROM produc","completion":"<?php con = new mysqli(\\"localhost\\",\\"username\\",\\"password\\",\\"database\\"); if(con->connect_error){ echo \\"Connection failed \\"; } sql = \\"SELECT id, name, price FROM product\\"; result = con->query(sql); if(result->num_rows > 0){ while(row = result->fetch_assoc()){ echo \\"ID: \\" .row['id']. \\" - Name: \\" .row['name']. \\" - Price: \\" .row['price']. \\"<br>\\"; } } con->close(); ?>"},{"prompt":"Using HTML and CSS, create a basic website with three sections.","completion":"<!DOCTYPE html> <html lang=\\"en\\"> <head> <title>My Website</title> <style> .section{ width: 75%; padding: 25px; margin: auto; } #section1, #section2, #section3{ background-color: #f1f1f1; } </style> </head> <body> <div id=\\"section1\\" class=\\"section\\"> <h1>Section 1</h1> </div> <div id=\\"section2\\" class=\\"section\\"> <h1>Section 2</h1> </div> <div id=\\"section3\\" class=\\"section\\"> <h1>Section 3</h1> </div> </body> </html>"},{"prompt":"Create a Java program to print out the number of times a string appears in an array. array = [“Apple”, “Orange”, “Apple”, “Banana”] String = “Apple”","completion":"public class Main { public static void main(String[] args) { String str = \\"Apple\\"; String[] array = {\\"Apple\\", \\"Orange\\", \\"Apple\\", \\"Banana\\"}; int count = 0; for(int i=0; i<array.length; i++) { if(array[i].equals(str)) { count++; } } System.out.println(\\"Number of times \\"+str+\\" appears in the array = \\"+count); } }"},{"prompt":"Create a Python program to sort a dictionary by value. my_dict = {“One”:1, “Two”:2, “Three”:3}","completion":"my_dict = {'One': 1, 'Two': 2, 'Three': 3} #sort dictionary by value sorted_dict = sorted(my_dict.items(), key=lambda kv: kv[1]) print(sorted_dict)"},{"prompt":"Write a Bash script to evaluate whether a provided number is prime or not.","completion":"#!/bin/bash num=1 if [ \\"num\\" -lt 2 ] then echo 0 else i=2 until [ i -gt ((num/2)) ] do if [ ((num%i)) -eq 0 ] then echo 0 exit fi i=((i+1)) done echo 1 fi"},{"prompt":"Create a web page with two input boxes to calculate the total cost of a product after sales tax.","completion":"<!DOCTYPE html> <html> <head> <title>Price and Tax Calculations</title> <script> function calculate(){ let price = document.getElementById('price').value; let tax = document.getElementById('tax').value; let total = parseFloat(price) + (parseFloat(price)*parseFloat(tax)/100); document.getElementById('total').value = total; } <\/script> </head> <body> <input type=\\"text\\" id=\\"price\\" oninput=\\"calculate()\\" placeholder=\\"Price\\" /> <input type=\\"text\\" id=\\"tax\\" oninput=\\"calculate()\\" placeholder=\\"Tax %\\" /> <input type=\\"text\\" id=\\"total\\" placeholder=\\"Total\\" readonly=\\"true\\" /> </body> </html>"},{"prompt":"Calculate the mean of the following array elements: 4, 9, 16, 11, 15.","completion":"The mean of the array elements is 11."},{"prompt":"Create a loop to print out all even numbers in the given set [3, 7, 10, 18, 21, 24].","completion":"for (let i=0; i < arr.length; i++) { if (arr[i] % 2 === 0) { console.log(arr[i]); } } // Output: 10, 18, 24"},{"prompt":"List 5 elements of the Python standard library.","completion":"sys, os, logging, string, collections"},{"prompt":"Create a hashmap in Java with the following key-value pairs: \\"Car\\" -> \\"Honda\\", \\"Flower\\" -> \\"Rose\\".","completion":"HashMap<String, String> map = new HashMap<>(); map.put(\\"Car\\", \\"Honda\\"); map.put(\\"Flower\\", \\"Rose\\");"},{"prompt":"Write a Python code snippet to iterate over a list of strings and print the length of each string. List: [\\"Hello\\", \\"World\\", \\"!\\"]","completion":"for string in list: print(len(string)) # Output: 5, 5, 1"},{"prompt":"Write a C# code to convert a double value to a string. Double: 7.75","completion":"string val = Convert.ToString(7.75);"},{"prompt":"Create an array in Java and add the following elements: 5, 7, 3.","completion":"int[] arr = {5, 7, 3};"},{"prompt":"Write an HTML page containing a heading with the text \\"Welcome\\".","completion":"<!DOCTYPE html> <html> <head> <title>Welcome</title> </head> <body> <h1>Welcome</h1> </body> </html>"},{"prompt":"Arrange the following functions in order of complexity from least complex to most complex. A) linearSearch B) binarySearch C) insertionSort D) quickSort","completion":"A) linearSearch C) insertionSort B) binarySearch D) quickSort"},{"prompt":"Fix the following Java code by adding a missing semicolon. public static void main(String[] args) { System.out.println(\\"Hello World\\")","completion":"public static void main(String[] args) { System.out.println(\\"Hello World\\"); }"},{"prompt":"Create a variable in Python and assign it the value 15.","completion":"num = 15"},{"prompt":"Compile the following Java code and explain the output. class Test { static int x = 8; static int y = 3; static int z; static void addition() { z = x + y; System.out.println(\\"The sum: \\" + z); }","completion":"// Output when compiled: The sum: 11 // Explanation: The above code assigns 'x' to 8, 'y' to 3 and 'z' to the sum of 'x' and 'y' (11). The program then prints out the value of 'z' which is 11."},{"prompt":"Write a Bash script that prints out all the arguments passed to it.","completion":"#!/bin/bash for arg in \\"@\\" do echo \\"arg\\" done"},{"prompt":"What is the output of the following code snippet? int a = 5; int b = 6; int result = a * b;","completion":"The output of the code snippet is 30. This is the result of multiplying the values of 'a' (5) and 'b' (6)."},{"prompt":"w can we convert strings to float in Python?","completion":"We can convert strings to float in Python by using the float() function. This takes a string argument and returns a floating-point number. For example, float(\\"10.5\\") would return 10.5 as a float."},{"prompt":"What is the most efficient way to find the index of a given element in an unsorted array using JavaScript?","completion":"The most efficient way to find the index of a given element in an unsorted array using JavaScript is by using the indexOf() method. This method returns the index of the first occurrence of a given element in the array, or -1 if it is not present."},{"prompt":"w can we debug our JavaScript code?","completion":"We can debug our JavaScript code by using the console.log() method to log values and events to the console. We can also use the JavaScript debugger statement to pause the execution at a particular point in the code, and step through the code line by line. We can also add breakpoints and inspect variables at different stages of the program."},{"prompt":"Edit this HTML code to make it compliant with the HTML5 standard. <html> <head> <title>My HTML Page</title> </head> <body> <p>My HTML Page</p> </body> </html>","completion":"<!DOCTYPE html> <html> <head> <title>My HTML Page</title> </head> <body> <p>My HTML Page</p> </body> </html>"},{"prompt":"Create a basic HTML page with a heading and a paragraph of text.","completion":"<!DOCTYPE html> <html> <head> <title>My HTML Page</title> </head> <body> <h1>My HTML Page</h1> <p>This is a basic HTML page with a heading and a paragraph of text.</p> </body> </html>"},{"prompt":"Update this JavaScript code to use the new ES6 syntax. var myArray = [3, 4, 5]; for (var i = 0; i < myArray.length; i++) { console.log(myArray[i]); }","completion":"const myArray = [3, 4, 5]; for (let i = 0; i < myArray.length; i++) { console.log(myArray[i]); }"},{"prompt":"Write a JavaScript program to accept a string and check if it is a palindrome or not.","completion":"function isPalindrome(str) { var len = str.length; for ( var i = 0; i < Math.floor(len/2); i++ ) { if (str[i] !== str[len - 1 - i]) { return false; } } return true; }"},{"prompt":"Create a PHP script to provide pagination on a website.","completion":"<?php // Get the total number of items total_items = //sql query to get total items // Calculate the total number of pages total_pages = ceil( total_items / 10 ); // Determine the current page number if ( ! isset( _GET['pagenum'] ) ) { pagenum = 1; } else { pagenum = intval( _GET['pagenum'] ) ; } // Create the pagination links pagination_links = paginate_links( array( 'base' => add_query_arg( 'pagenum', '%#%' ), 'format' => '', 'total' => total_pages, 'current' => pagenum, 'show_all' => false, 'end_size' => 1, 'mid_size' => 2, 'prev_next' => True, 'prev_text' => __('« Previous'), 'next_text' => __('Next »'), 'type' => 'plain', ) ); // Display the pagination links if (pagination_links) { echo pagination_links; } ?>"},{"prompt":"Analyze this SQL query and explain its purpose. SELECT * FROM customers WHERE age BETWEEN 30 AND 40 ORDER BY join_date DESC;","completion":"This query retrieves all customer records from the customers table where the age is greater than or equal to 30 and less than or equal to 40 and orders the results by join_date in descending order. This query will return records with the newest join date first."},{"prompt":"Update this JavaScript code to use modern coding practices. var x = 10; if(x == 10){ alert(\\"x is equal to 10\\"); }","completion":"const x = 10; if (x === 10) { console.log(\\"x is equal to 10\\"); }"},{"prompt":"Assume that we have an array of integers. Create code to input the array and output the sum of all the elements of the array. arr = [1, 2, 3, 4, 5]","completion":"def calculate_sum(arr): \\"\\"\\"Calculates sum of all elements in the given array\\"\\"\\" total = 0 for num in arr: total += num return total if __name__ == '__main__': arr = [1, 2, 3, 4, 5] print(calculate_sum(arr))"},{"prompt":"Are there any palindromes in the given sequence of numbers? seq = [2332, 24124, 1221, 89898]","completion":"def has_palindrome(seq): \\"\\"\\"Returns True if the given sequence has a palindrome, otherwise returns False\\"\\"\\" for num in seq: if str(num) == str(num)[::-1]: return True return False if __name__ == '__main__': seq = [2332, 24124, 1221, 89898] print(has_palindrome(seq))"},{"prompt":"Create code to extract the middle character of a given string. string = \\"middle","completion":"def get_middle_char(string): \\"\\"\\"Returns the middle character of a given string.\\"\\"\\" middle_index = int(len(string) / 2) return string[middle_index] if __name__ == '__main__': string = \\"middle\\" print(get_middle_char(string))"},{"prompt":"w many unique elements are present in the given array? arr = [1, 2, 2, 3, 3, 3, 4, 4, 4, 4]","completion":"def count_unique_elements(arr): \\"\\"\\"Returns the number of unique elements present in the given array.\\"\\"\\" unique_elements = set(arr) return len(unique_elements) if __name__ == '__main__': arr = [1, 2, 2, 3, 3, 3, 4, 4, 4, 4] count = count_unique_elements(arr) print('Number of unique elements:', count)"},{"prompt":"Reorder a given array such that all even elements are placed before odd elements. arr = [1, 2, 3, 4, 5, 6, 7, 8]","completion":"def reorder_array(arr): \\"\\"\\"Reorders a given array such that all even elements are placed before odd elements.\\"\\"\\" even = [i for i in arr if i % 2 == 0] odd = [j for j in arr if j % 2 != 0] return even + odd if __name__ == '__main__': arr = [1, 2, 3, 4, 5, 6, 7, 8] ordered = reorder_array(arr) print(ordered)"},{"prompt":"Add 10 to the last element of a given array. [1, 2, 3, 4]","completion":"arr = [1, 2, 3,4] arr[-1] += 10 print(arr)"},{"prompt":"Find the index of the element 8 in the list [3, 8, 9, 5, 1, 6].","completion":"list = [3, 8, 9, 5, 1, 6] index = list.index(8) print(\\"Index of 8 is:\\", index)"},{"prompt":"Read the following dictionary: {'A': [1, 2, 3], 'B': [4, 5, 6], 'C': [7, 8, 9] }","completion":"myDict = {'A': [1, 2, 3], 'B': [4, 5, 6], 'C': [7, 8, 9]} for key, val in myDict.items(): print(\\"key:\\", key, \\"values:\\", val)"},{"prompt":"Extract all values from the following dictionary: {'A': [1, 2, 3], 'B': [4, 5, 6], 'C': [7, 8, 9] }","completion":"myDict = {'A': [1, 2, 3], 'B': [4, 5, 6], 'C': [7, 8, 9]} values = [val for vals in myDict.values() for val in vals] print(values)"},{"prompt":"Convert the following SQL statement to a Pyspark Query. SELECT employee_id, name, salary FROM employees WHERE salary > 50000","completion":"spark.sql(\\"SELECT employee_id, name, salary FROM employees WHERE salary > 50000\\").show()"},{"prompt":"Write a for loop to output all the odd numbers from 1 to 10 in Python.","completion":"for i in range(1,11): if (i % 2 != 0): print(i)"},{"prompt":"Write a function that given a string of character, returns the number of vowels in it. Example string: \\"hello world","completion":"def count_vowels(s): vowels = 'aeiou' count = 0 for char in s: if char in vowels: count += 1 return count"},{"prompt":"Write a C++ program to print out the first 5 lines of the Pascal Triangle.","completion":"#include<iostream> using namespace std; int main() { for (int i = 0; i < 5; i++) { for (int j = 0; j <= i; j++) cout << binomialCoeff(i, j) << \\" \\"; cout << \\"n\\"; } return 0; } int binomialCoeff(int n, int k) { int res = 1; if (k > n - k) k = n - k; for (int i = 0; i < k; ++i) { res *= (n - i); res /= (i + 1); } return res; }"},{"prompt":"Now write a function to generate all the factorial numbers from 1 to n.","completion":"def generate_factorials(n): factorials = [1] for num in range(1,n+1): if num == 1: factorials.append(1) else: factorials.append(factorials[-1]*num) return factorials"},{"prompt":"Given an integer array, output the largest sum of all the possible subarray sums, use Python for the solution. Example array: [-2,1,-3,4,-1,2,1,-5,4]","completion":"def largest_sum(arr): cur_sum = 0 max_sum = float(\\"-inf\\") for i in range(len(arr)): cur_sum = max(arr[i], cur_sum + arr[i]) max_sum = max(max_sum, cur_sum) return max_sum"},{"prompt":"Write a query in MongoDB to search for documents where the address field contains the string \\"California\\".","completion":"db.collection.find({\\"address\\":{regex: \\".*California.*\\"}})"},{"prompt":"Sort a given array using quicksort algorithm. arr = [3, 2, 9, 10, 1]","completion":"def quicksort(arr): if len(arr) <= 1: return arr pivot = arr[len(arr) // 2] left = [x for x in arr if x < pivot] middle = [x for x in arr if x == pivot] right = [x for x in arr if x > pivot] return quicksort(left) + middle + quicksort(right) print(quicksort(arr))"},{"prompt":"Design a CSS selector to select all the h2 tags under the div tag with class \\"container\\".","completion":"div.container h2 { }"},{"prompt":"Write a Python function to compare two strings and return all the common elements. s1='python' s2='programming'","completion":"def find_common_elements(s1, s2): res = [] for i in s1: if i in s2: res.append(i) return res find_common_elements(s1,s2) #Output: ['n']"},{"prompt":"Create a Python function to generate the first n prime numers.","completion":"def generate_prime_numbers(n): prime_nums = [] i = 2 while len(prime_nums) < n: if is_prime(i): prime_nums.append(i) i += 1 return prime_nums def is_prime(n): if n <= 1: return False for i in range(2, int(n**0.5) + 1): if n % i == 0: return False return True"},{"prompt":"Create a Python script to separate a given string into words and count the number of times the each word is used in the string.","completion":"def count_words(string): counts = {} words = string.split() for word in words: if word in counts: counts[word] += 1 else: counts[word] = 1 return counts"},{"prompt":"Create a Python code to reverse the given string.","completion":"def reverse_string(string): return string[::-1]"},{"prompt":"Write a function in Python to select all the elements from a list whose index is a multiple of 3. test_list = [2, 5, 8, 12, 9, 82, 3]","completion":"def select_multiples_of_3(input_list): result = [] for index, num in enumerate(input_list): if index % 3 == 0: result.append(num) return result # test test_list = [2, 5, 8, 12, 9, 82, 3] print(select_multiples_of_3(test_list)) # [2, 12, 3]"},{"prompt":"Generate a linear regression model with a categorical independent variable.","completion":"from sklearn.linear_model import LogisticRegression from sklearn.preprocessing import OneHotEncoder X = df[[\\"categorical_var\\"]] y = df[\\"target\\"] encoder = OneHotEncoder() encoded_X = encoder.fit_transform(X) model = LogisticRegression(solver=\\"lbfgs\\") model.fit(encoded_X, y)"},{"prompt":"Train a random forest model for the given dataset. import pandas as pd from sklearn.model_selection import train_test_split df = pd.read_csv(\\"mydata.csv\\") X = df.drop('target', axis = 1) y = df[\\"target\\"] X_train, X_test, y_train, y_test = train_test_split(X, y, testSize = 0.2, randomState = 42)","completion":"from sklearn.ensemble import RandomForestClassifier rf_model = RandomForestClassifier(n_estimators=100, max_depth=5, random_state=42) rf_model.fit(X_train, y_train)"},{"prompt":"Compute the occurrence of each character in a given string. my_string = \\"Hello World!","completion":"def compute_occurrences(my_string): count_dict = {} for c in my_string: count_dict[c] = count_dict.get(c, 0) +1 return count_dict # test my_string = \\"Hello World!\\" print(compute_occurrences(my_string)) # {'H': 1, 'e': 1, 'l': 3, 'o': 2, ' ': 1, 'W': 1, 'r': 1, 'd': 1, '!': 1}"},{"prompt":"Debug this code snippet to print a list of all 6-digit numbers.","completion":"def printList(): i = 11 while(i <= 99999): if (i >= 10000 and i <= 99999): print(i) i = i + 1 # Call the function printList()"},{"prompt":"Write a C++ program that prints out the numbers from 1 to 100, with the exception of numbers divisible by 3 being replaced with \\"Fizz\\", and numbers divisible by 5 replaced with \\"Buzz\\".","completion":"#include <iostream> using namespace std; int main() { for(int i = 1; i <= 100; i++) { if((i % 3 == 0) && (i % 5 == 0)) { cout << \\"FizzBuzz\\" << endl; } else if (i % 3 == 0) { cout << \\"Fizz\\" << endl; } else if (i % 5 == 0) { cout << \\"Buzz\\" << endl; } else { cout << i << endl; } } return 0; }"},{"prompt":"Edit this three lines of code to remove the last item from a given array. Input array: [1, 2, 3, 4]","completion":"arr = [1, 2, 3, 4] last_item = arr.pop() arr.remove(last_item)"},{"prompt":"Generate a function that takes an array of strings and returns a new array with the strings sorted in alphabetical order. Input array: [\\"hello\\", \\"world\\", \\"this\\", \\"is\\", \\"a\\", \\"sentence\\"]","completion":"def sort_strings(arr): sorted_arr = sorted(arr) return sorted_arr print(sort_strings([\\"hello\\", \\"world\\", \\"this\\", \\"is\\", \\"a\\", \\"sentence\\"])) # Output: ['a', 'hello', 'is', 'sentence', 'this', 'world']"},{"prompt":"Create a function that takes two arrays and returns the elements that are present in both of them. Input array 1: [1, 2, 3, 4, 5] Input array 2: [3, 4, 5, 6, 7]","completion":"def find_common_elements(arr1, arr2): common_elements = [] for element1 in arr1: if element1 in arr2: common_elements.append(element1) return common_elements print(find_common_elements([1, 2, 3, 4, 5], [3, 4, 5, 6, 7])) # Output: [3, 4, 5]"},{"prompt":"Output a section of valid html for a content header <h2> Products </h2>","completion":"<h2 class=\\"content-header\\">Products</h2>"},{"prompt":"Write a Python script to validate the following input Validate a Date type field with the following format: YYYY/MM/DD","completion":"# Import the required datetime module import datetime def validate_date(date): # Check if the date matches with the given format try: datetime.datetime.strptime(date, '%Y/%m/%d') return True except ValueError: return False"},{"prompt":"What parameters will we pass to the following function? def factorial(n)","completion":"We will pass one parameter, an integer 'n', to the factorial function."},{"prompt":"Transform the following code snippet from ES6 to older version of JavaScript let numbers = [1, 2, 3, 4, 5]; let multipliedNumbers = numbers.map(number => number * 2);","completion":"var numbers = [1, 2, 3, 4, 5]; var multipliedNumbers = numbers.map(function(number) { return number * 2; });"},{"prompt":"Output a struct in Golang for the following scenario Create a struct for a post on a blog that includes theTitle, Author, Timestamp, Body and Comments.","completion":"type Post struct { Title string Author string Timestamp time.Time Body string Comments []Comment }"},{"prompt":"Write a SQL query to find the number of cars of each model Table name: \\"cars\\" Columns: model (string), make (string)","completion":"SELECT make, model, COUNT(*) as num_cars FROM cars GROUP BY make, model;"},{"prompt":"Modify the following Python code to make it run faster def roll_dice(n): values = [] for i in range(n): values.append(random.randint(1,6)) return value","completion":"import random def roll_dice(n): values = [] random.seed() for i in range(n): values.append(random.randint(1,6)) return values"},{"prompt":"Create a PHP script that prints out the sum of all even numbers","completion":"<?php start_num = 3; end_num = 8; sum = 0; for(i = start_num; i <= end_num; i++) { if(i % 2 == 0) sum = sum + i; i++; } echo \\"Sum of all even numbers between start_num to end_num = sum\\"; ?>"},{"prompt":"Demonstrate how to use the following JavaScript function Math.max(arg1, arg2)","completion":"// To get the maximum number from the two input numbers let x = 15; let y = 25; let maxNum = Math.max(x, y); console.log(maxNum); // Output: 25"},{"prompt":"Where does a Python interpreter look for modules?","completion":"The Python interpreter looks for modules in the following locations: the home directory, the built-in modules, the PYTHONPATH environment variable, and the standard Python library path."},{"prompt":"Translate the given code into Java. let x = 10;","completion":"int x = 10;"},{"prompt":"Explain the purpose of the new operator in JavaScript.","completion":"The new operator in JavaScript is used to create an instance of an object. It allocates memory for the object and calls the object's constructor to initialize the object. It also sets the object's [[Prototype]] property to the constructor function's prototype object."},{"prompt":"Write a SELECT SQL statement to display the employee name and department in descending order of salary.","completion":"SELECT employee_name, department FROM employee ORDER BY salary DESC;"},{"prompt":"Explain the uses of the \`in\` operator in Python.","completion":"The in operator in Python is used to determine whether an item is present in a sequence. It checks for the presence of an item in lists, sets, tuples, dictionaries, and strings. It is also used to iterate over the items of a sequence in a for loop."},{"prompt":"Compare functions and classes in Python.","completion":"Functions in Python are blocks of reusable code that are used to perform a single, specific action. Classes, on the other hand, are a way of grouping related data and functions together. Classes allow objects to be grouped and given common properties and behaviors."},{"prompt":"Code an if statement in Java to check if an integer is odd","completion":"if (num % 2 == 1) { // num is odd }"},{"prompt":"Create a function in JavaScript that takes two temperatures and returns their average.","completion":"function average_temperature(temp1, temp2) { return (temp1 + temp2) / 2; }"},{"prompt":"Follow the given CSS syntax and write a code to create a class called \\"box","completion":".box { width: 300px; height: 200px; background-color: #f1f1f1; border: 2px solid #333; margin: 20px; float: left; }"},{"prompt":"Write a Python function to input a number and print if it is positive, negative, or zero","completion":"def check_sign(num): if num > 0: print(\\"Positive\\") elif num < 0: print(\\"Negative\\") else: print(\\"Zero\\")"},{"prompt":"What are the characteristics of a Function in JavaScript?","completion":"A function in JavaScript is a block of code that is delimited by curly brackets and is designed to perform a specific task. It consists of a function declaration, which includes the function name and its parameters, and a function body containing the code that is to be executed when the function is called. The function can return a value and can be either named or anonymous. Functions can also accept arguments and can be used to create objects and closures."},{"prompt":"Write a Node.js command to rotate an array by one element. let arr = [1, 2, 3, 4, 5]","completion":"let temp = arr[0]; for (let i = 0; i < arr.length - 1; i++) { arr[i] = arr[i + 1]; } arr[arr.length - 1] = temp;"},{"prompt":"Code a for loop in Java to find the maximum value in an array int[] arr = {2,5,3,7,1};","completion":"int max = arr[0]; for (int i = 0; i < arr.length; i++) { if (arr[i] > max) { max = arr[i]; } }"},{"prompt":"What is a Hash Table in C++?","completion":"A Hash Table (also known as Hash Map) is a data structure in C++ which uses a hash function to map keys to values. It can be used to store, add, and remove elements in constant time and is often used for caches and associative arrays."},{"prompt":"Write a JavaScript command to check if an object is empty.","completion":"function isEmpty(obj) { for (var key in obj) { if (obj.hasOwnProperty(key)) return false; } return true; }"},{"prompt":"Follow the given SQL syntax and create a table \\"students","completion":"CREATE TABLE students ( student_id INT PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, age INT NOT NULL );"},{"prompt":"What is the use of tuple in python?","completion":"Tuple is an immutable collection of objects in Python. It is sequence of values which are immutable, meaning that the values can't be modified. Tuple is useful in data integrity because it ensures that the values in the tuple will remain consistent when passed to a function or used in an expression. It is also used to store related data that must not be changed throughout a program. Some common operations on tuple include indexing, iteration, membership testing. Tuples are also useful in multiple function argument packing and unpacking. Tuples are also commonly used in dictionary as keys."},{"prompt":"w can you create a function to connect to MySQL database?","completion":"import mysql.connector def db_connect(): conn = mysql.connector.connect( user='user_name', password='password', host='localhost', database='database_name' ) return conn # Main if __name__ == '__main__': conn = db_connect() print(conn)"},{"prompt":"You are given a list of numbers, write a program to calculate the mode. [1, 2, 3, 3, 4, 4, 5]","completion":"from collections import Counter def find_mode(lst): counter = Counter(lst) mode_vals = [val for val, count in counter.items() if count == max(counter.values())] return min(mode_vals) print(find_mode([1, 2, 3, 3, 4, 4, 5]))"},{"prompt":"w can you create a class in python?","completion":"A class can be created in Python by using the keyword class followed by the name of the class. The class should include a constructor method __init__() that specifies the attributes and behaviors of the class and it should also end with a colon. Inside the class body, methods and attributes can be defined as required."},{"prompt":"Design a function that counts the number of times a word occurs in a sentence. sentence = \\"The quick brown fox jumped over the lazy dog.","completion":"\\"\\"\\" Design a function that counts the number of times a word occurs in a sentence. Input: sentence (string) Output: number of times word appears in the sentence (int) \\"\\"\\" def count_word(sentence, word): return sentence.lower().split().count(word.lower()) if __name__ == '__main__': sentence = \\"The quick brown fox jumped over the lazy dog.\\" print(count_word(sentence, \\"The\\")) # Output: 1"},{"prompt":"Generate a random 16 character string.","completion":"import random import string def generate_string(): chars = string.ascii_letters + string.digits return ''.join(random.choice(chars) for _ in range(16)) if __name__ == '__main__': print(generate_string()) # Output: 5A5l7p9XohHmFWhh"},{"prompt":"Given the following code, write a function to calculate the length of the linked list. \\"\\"\\" class Node: def __init__(self, val, next=None): self.val = val self.next = next head = Node(4, Node(3, Node(2, Node(1)))) \\"\\"","completion":"\\"\\"\\" Given the following code, write a function to calculate the length of the linked list. Input: Head of the linked list (Node) Output: Length of the linked list (int) \\"\\"\\" def get_length(head): if head is None: return 0 length = 1 node = head while node.next is not None: length += 1 node = node.next return length if __name__ == '__main__': head = Node(4, Node(3, Node(2, Node(1)))) print(get_length(head)) # Output: 4"},{"prompt":"Determine the index of an element in a given array using binary search. arr = [1, 2, 3, 4, 5, 6, 7] element = 4","completion":"\\"\\"\\" Determine the index of an element in a given array using binary search. Input: arr (list) element (int) Output: index (int) \\"\\"\\" def binary_search(arr, element): start = 0 end = len(arr) - 1 while start <= end: mid = (start + end) // 2 if element < arr[mid]: end = mid - 1 elif element > arr[mid]: start = mid + 1 else: return mid return -1 if __name__ == '__main__': arr = [1, 2, 3, 4, 5, 6, 7] element = 4 print(binary_search(arr, element)) # Output: 3"},{"prompt":"Write a PHP code to send an email notification to someone.","completion":"<?php // Create a new PHP mailer instance mail = new PHPMailer(true); try { // Set the mailer to use SMTP mail->isSMTP(); // Specify SMTP server details mail->Host = 'smtp.example.com'; mail->SMTPAuth = true; mail->Username = 'username'; mail->Password = 'password'; mail->SMTPSecure = 'ssl'; mail->Port = 465; // Recipient's details mail->setFrom('from@example.com', 'From Name'); mail->addAddress('to@example.com', 'To Name'); // Email content mail->isHTML(true); mail->Subject = 'Email Notification'; mail->Body = 'This is an email notification'; // Send the email mail->send(); echo 'Message has been sent'; } catch (Exception e) { echo \\"Message could not be sent. Mailer Error: {mail->ErrorInfo}\\"; } ?>"},{"prompt":"Create an algorithm to compute the sum of the digits of a given positive integer.","completion":"\\"\\"\\" Create an algorithm to compute the sum of the digits of a given positive integer. Input: number (int) Output: sum of the digits of the number (int) \\"\\"\\" def compute_sum(number): if number < 0: return 0 # get the last digit last_digit = number % 10 # recursive call to get the sum of the remaining digits remainder_sum = compute_sum(number // 10) return last_digit + remainder_sum if __name__ == '__main__': number = 9876 print(compute_sum(number)) # Output: 36"},{"prompt":"Debug the following C++ code by finding and fixing errors. int findMax(int arr[], int n) { if(arr[i] < n) { int max = arr[i]; for (int i = 0; i < n; i++) if (arr[I] > max) max = arr[i]; return max; } }","completion":"int findMax(int arr[], int n) { if(n > 0) { int max = arr[0]; for (int i = 1; i < n; i++) if (arr[i] > max) max = arr[i]; return max; } }"},{"prompt":"Design a efficient algorithm to check if two tree structures are identical at the root node level.","completion":"\\"\\"\\" Design a efficient algorithm to check if two tree structures are identical at the root node level. Input: Two root nodes (Node1, Node2) Output: Boolean \\"\\"\\" # This approach uses a breadth-first search def is_identical(root1, root2): if root1 is None and root2 is None: return True # Check if the data of both nodes is the same if root1 is not None and root2 is not None: if root1.data != root2.data: return False # If yes, then recursively traverse left and right sub-trees return (is_identical(root1.left, root2.left) and is_identical(root1.right, root2.right)) # If we reach here, then one node is NULL and other is not return False"},{"prompt":"Write a CSS code to align the text within a \`<div>\` element horizontally to the right.","completion":"div { text-align:right; }"},{"prompt":"Create a MySQL query to find all clients who have made more than one purchase in the last two months.","completion":"SELECT client_id FROM purchases WHERE purchase_date >= NOW() - INTERVAL 2 MONTH GROUP BY client_id HAVING COUNT(*) > 1;"},{"prompt":"Generate a list of the data type of each element in the given list. my_list = [12, 'hello', 15.7]","completion":"[int, str, float]"},{"prompt":"Determine how many times the given string appears in the paragraph. Paragraph: In one moment, I paused in a quiet street and suddenly quite near me, the beauty of a full moon shot up into the sky. String: moo","completion":"1"},{"prompt":"Count the number of times each letter occurs in the given text. Text: Coding is fun!","completion":"{'C':1, 'o':2, 'd':1, 'i':2, 'n':1, 'g':2, ' ':2, 'f':1, 'u':1, '!':1}"},{"prompt":"Create a function to transform all strings to capital letters. my_string = 'Hello World!'","completion":"def to_upper(string): return string.upper()"},{"prompt":"mplement a sorting algorithm for the given list of numbers. sort_me = [10, 4, 1, 5]","completion":"def sorting_algorithm(sort_me): len_sortme = len(sort_me) for i in range(len_sortme): for j in range(0, len_sortme-i-1): if sort_me[j] > sort_me[j+1]: sort_me[j], sort_me[j+1] = sort_me[j+1], sort_me[j] return sort_me"},{"prompt":"Tell the difference between the two provided pieces of code. def recursive(num): if num<=0: return 0 else: return num + recursive(num-1) def iterative(num): result = 0 for i in range(1, num+1): result += i return resul","completion":"The recursive code uses a recursive call to loop through each value from num to 0, while the iterative code uses a for-loop to add up from 1 to num."},{"prompt":"Simplify the following code as much as possible counter = 0 for item in fruits: if item == 'apple': counter += 1","completion":"counter = fruits.count('apple')"},{"prompt":"Create a function to capitalize the first letter in each word of the given string. my_string = 'this is a test'","completion":"def capitalize_words(string): words = string.split(' ') capitalized_words = [] for word in words: capitalized_word = word[0].upper() + word[1:] capitalized_words.append(capitalized_word) return ' '.join(capitalized_words)"},{"prompt":"Calculate the number of bits required to represent the given letter. letter = 'A'","completion":"8 bits."},{"prompt":"Convert the given list to a set and remove all duplicates. my_list = [1, 2, 1, 20, 10, 5, 4, 4]","completion":"my_set = set(my_list) my_set = {1, 2, 5, 10, 20, 4}"},{"prompt":"Unwrap the value in the following nested tuple. my_tuple = ((1, (2, (3, 4))), 5)","completion":"4"},{"prompt":"Extract all the numbers from the given string. my_string = 'I have 4 cats and 2 dogs in my house'","completion":"[4, 2]"},{"prompt":"With the provided data, write a SQL statement to select all columns from a table called 'Customers'. SELECT * FROM Customers;","completion":"SELECT * FROM Customers;"},{"prompt":"Write a function in Java to remove duplicates from a list of Strings.","completion":"public List<String> removeDuplicates(List<String> inputList) { // Create a new HashSet HashSet<String> hs = new HashSet<>(); // Add the contents of inputList to the HashSet hs // HashSet does not allow duplicates hs.addAll(inputList); // Clear inputList inputList.clear(); // add the elements of hs to inputList inputList.addAll(hs); // return the list return inputList; }"},{"prompt":"Create a SQL query to calculate the sum of values in a column called \\"sales\\" in the \\"sales\\" table. SELECT SUM(sales) FROM sales;","completion":"SELECT SUM(sales) FROM sales;"},{"prompt":"Create a function in JavaScript to replace the spaces in a given string with underscores.","completion":"function replaceSpacesWithUnderscores(string) { return string.replace(/s+/g, '_'); }"},{"prompt":"Create a SQL query to search for all records in the \\"customers\\" table where the \\"age\\" field is greater than 30. SELECT * FROM customers WHERE age > 30;","completion":"SELECT * FROM customers WHERE age > 30;"},{"prompt":"Generate an HTML snippet for a basic two-column layout.","completion":"<div class=\\"container\\"> <div class=\\"column\\"> <!-- Your left column content --> </div> <div class=\\"column\\"> <!-- Your right column content --> </div> </div>"},{"prompt":"Write a query in SQL to calculate the total profits for a given month. Revenue table with columns (date, product_id, sales_value)","completion":"SELECT SUM(sales_value) FROM revenue WHERE date BETWEEN <given_month_start_date> AND <given_month_end_date>"},{"prompt":"Create an algorithm in pseudocode to find the maximum value in an array.","completion":"max = 0 for each element in array if element > max max = element return max"},{"prompt":"Write a query in MySQL to select the top 10 most expensive products from the table \\"Product\\". Table \\"Product\\" with columns (product_id, name, price)","completion":"SELECT product_id, name, price FROM Product ORDER BY price DESC LIMIT 10;"},{"prompt":"Write a function in JavaScript to extract the Kth highest digit from a given number. Number = 192 K = 2","completion":"function extractKthHighestDigit(num, k) { let numStr = num.toString(); let numArr = numStr.split(\\"\\"); numArr.sort((a, b) => b - a); return +numArr[k-1]; }"},{"prompt":"Design a C program to print \\"Hello World!","completion":"#include <stdio.h> int main() { printf(\\"Hello World!\\"); return 0; }"},{"prompt":"Create a database table in SQL with two columns UserId and Username.","completion":"CREATE TABLE Users ( UserId INT NOT NULL, Username VARCHAR(255) NOT NULL, PRIMARY KEY (UserId) );"},{"prompt":"Change the following JavaScript code so that it prints out the square root of a given number. function sqr(x) { return x*x; }","completion":"function sqr(x) { return Math.sqrt(x); }"},{"prompt":"Create a Python script that calculates the sum of two given numbers.","completion":"def sum(x, y): return x + y;"},{"prompt":"Compute the minimum of 3 given numbers using a JavaScript function.","completion":"function minNum(a, b, c) { let min = a; if (b < min) { min = b; } if (c < min) { min = c; } return min; }"},{"prompt":"Create a SQL query which returns the products that have a price greater than 10 and a quantity greater than 5.","completion":"SELECT * FROM products WHERE price > 10 AND quantity > 5;"},{"prompt":"Write a SQL query which returns the product name and the number of times it has been purchased","completion":"SELECT product_name, COUNT(*) FROM purchases GROUP BY product_name;"},{"prompt":"Correct the following JavaScript code to print the first letter of the given string. let str = \\"Hello World\\"; console.log(str[0]);","completion":"let str = \\"Hello World\\"; console.log(str.charAt(0));"},{"prompt":"Generate a 10 digit random number using a JavaScript function","completion":"Math.floor(Math.random()*10000000000);"},{"prompt":"Create a SQL table which has 3 columns id, name and price.","completion":"CREATE TABLE products ( id INTEGER AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL );"},{"prompt":"Create a function in Java to take a string and print all words of length n and greater in the string. String: \\"Welcome to the programming world!\\" n: 5","completion":"public static void printLongWords(String str, int n) { // loop through each character of // input string for (int i = 0; i < str.length(); i++) { // variable to store the current word String word = \\"\\"; // condition to look for words while (i < str.length() && str.charAt(i) != ' ') { word = word + str.charAt(i); i++; } // if the length of current word is less them n // it is not printed if (word.length() >= n) System.out.print(word + \\" \\"); } }"},{"prompt":"Write a function in JavaScript to delete duplicate characters from a string. String: \\"google","completion":"function deleteDuplicates(str) { let result = \\"\\"; let frequency = {}; // creating a map of all characters with their frequency in the string for (let i = 0; i < str.length; i++) { let currentChar = str.charAt(i); if (frequency[currentChar]) { frequency[currentChar]++; } else { frequency[currentChar] = 1; } } // adding only those characters which have frequency greater than one for (let i = 0; i < str.length; i++) { let currentChar = str.charAt(i); if (frequency[currentChar] == 1) { result += str.charAt(i); } } return result; }"},{"prompt":"Make an HTML table of the given integers. [2, 3, 4, 5, 6]","completion":"<table> <tbody> <tr> <td>2</td> <td>3</td> <td>4</td> <td>5</td> <td>6</td> </tr> </tbody> </table>"},{"prompt":"Create an algorithm in Java to calculate the sum of all elements of an array.","completion":"public int calculateSum(int[] arr) { int sum = 0; for (int i = 0; i < arr.length; i++) { sum += arr[i]; } return sum; }"},{"prompt":"Change the background color of the second element in a list in CSS.","completion":"ul li:nth-child(2){ background-color: #e6e6e6; }"},{"prompt":"Construct a SELECT query in MySQL to find all records where the age is greater than 18 Table: Stude","completion":"SELECT * FROM Student WHERE age > 18;"},{"prompt":"Debug the given Python code and make sure that it runs without errors. def add_two_numbers(a, b): return a b","completion":"def add_two_numbers(a, b): return a + b"},{"prompt":"Create a JavaScript function to get the highest value from a given array.","completion":"function getMax(arr) { let max = 0; for(let i = 0; i < arr.length; i++) { if(arr[i] > max) max = arr[i]; } return max; }"},{"prompt":"Construct a function in C++ to check if two numbers are co-prime or not.","completion":"bool isCoprime(int a, int b) { // Everything divides 0 if (a == 0 || b == 0) return false; // base case if (a == 1 || b == 1) return true; // a is divisible by b if (a % b == 0 || b % a == 0) return false; // a is even if (a % 2 == 0) return (b % 2 == 1) ? isCoprime(a/2, b) : isCoprime(a/2, b/2); // b is even if (b % 2 == 0) return isCoprime(a, b/2); // reduce larger number return (a > b) ? isCoprime(a-b, b) : isCoprime(a, b-a); }"},{"prompt":"Calculate the total of all characters in the given string. String: \\"Hello World!","completion":"int sum = 0; for (int i = 0; i < str.length(); i++) { sum += str.charAt(i); } return sum;"},{"prompt":"Create a SQL query to retrieve all records in the table with the price greater than 500. Table Name: item","completion":"SELECT * FROM items WHERE price > 500;"},{"prompt":"Add a border to the first element of a list in CSS.","completion":"ul li:first-child { border: 1px solid black; }"},{"prompt":"Render a webpage with three columns using just HTML and CSS.","completion":"<style> .container { display: flex; flex-direction: row; } </style> <div class=\\"container\\"> <div>Column 1 </div> <div>Column 2 </div> <div>Column 3 </div> </div>"},{"prompt":"Give an example of a class in Java.","completion":"public class Animal { private String species; private int age; public Animal(String species, int age) { this.species = species; this.age = age; } }"},{"prompt":"Write a CSS selector that selects all paragraphs within a div element with the class \`\`main-content\`\`.","completion":"div.main-content p { /* CSS selector to select all paragraphs within a div element with the class \\"main-content\\" */ }"},{"prompt":"Replace the following placeholder with an appropriate variable in the following JavaScript code. const user_name = __PLACEHOLDER__; console.log('Hello, ' + user_name + '!');","completion":"const user_name = 'John'; console.log('Hello, ' + user_name + '!');"},{"prompt":"Create a recursive function in Python which returns the sum of the elements in a given list.","completion":"def recursive_sum(arr): if len(arr) == 0: return 0 else: return arr[0] + recursive_sum(arr[1:])"},{"prompt":"Name the grammar that is used to identify data in a Javascript string.","completion":"The grammar used to identify data in a JavaScript string is JSON (JavaScript Object Notation)."},{"prompt":"Show the output of the following array when it is printed in the console. let arr = [5, 8, 15, 7];","completion":"[5, 8, 15, 7]"},{"prompt":"Describe the purpose of the \`\`await\`\` operator in an asynchronous JavaScript function.","completion":"The purpose of the \\"await\\" operator in an asynchronous JavaScript function is to pause the execution of the function until a Promise is resolved and to return the resolved value from the Promise."},{"prompt":"Write a function in JavaScript which takes an array of numbers and returns the average of all the numbers.","completion":"function getAverage(arr) { let sum = 0; for (let i = 0; i < arr.length; i++) { sum += arr[i]; } return sum / arr.length; }"},{"prompt":"Suggest a way to solve the following problem. Given an array of integers, find the most occuring element in the array.","completion":"One way to solve this problem is to use a hash map to store the count of each element in the array. Then, traverse the hash map to find the element which has the highest count."},{"prompt":"Modify the Python code below to solve the following error: \\"TypeError: 'str' object is not callable\\". \\"\\"\\" def greet(name): print('Hello', name()) greet('John') \\"\\"","completion":"def greet(name): print('Hello', name) greet('John')"},{"prompt":"mplement a neural network that classifies an MNIST digit into one of the 10 classes.","completion":"import tensorflow as tf # Load the mnist data set mnist = tf.keras.datasets.mnist (x_train, y_train), (x_test, y_test) = mnist.load_data() # Normalize the input from 0-255 to 0-1 x_train = tf.keras.utils.normalize(x_train, axis=1) x_test = tf.keras.utils.normalize(x_test, axis=1) # Build the model model = tf.keras.models.Sequential() model.add(tf.keras.layers.Flatten()) # Add two hidden layers model.add(tf.keras.layers.Dense(128, activation=tf.nn.relu)) model.add(tf.keras.layers.Dense(128, activation=tf.nn.relu)) # Add the output layer model.add(tf.keras.layers.Dense(10, activation=tf.nn.softmax)) # Compile the model model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy']) # Train the model model.fit(x_train, y_train, epochs=3) # Evaluate the accuracy val_loss, val_acc = model.evaluate(x_test, y_test) print(val_loss, val_acc)"},{"prompt":"Create a method in JavaScript to convert a string to camel case.","completion":"function toCamelCase(input){ let result = \\"\\"; let words = input.split(\\" \\"); for( let i=0; i < words.length; i++){ let word = words[i]; result += word.charAt(0).toUpperCase() + word.slice(1); } return result; }"},{"prompt":"Create a MySQL query to get the sum of the sales of each product. Table Name: sales Columns: product_id, product_name, sales Sample Data: 1, shoes, 10 2, clothes, 20 3, hats, 5 4, shirts, 15 5, jeans, 35","completion":"SELECT product_name, SUM(sales) AS total_sales FROM sales GROUP BY product_name;"},{"prompt":"Create an SQL query to get the most recent customer review. Table Name: customer_reviews Columns: review_id, customer_name, review_date Sample Data: 1, John, 2020-01-01 2, Andrea, 2020-02-02 3, Abhishek, 2020-05-01 4, Sarah, 2020-03-05","completion":"SELECT customer_name, review_date FROM customer_reviews ORDER BY review_date DESC LIMIT 1;"},{"prompt":"Write a HTML code to create an input field with a placeholder.","completion":"<input type=\\"text\\" placeholder=\\"Enter Your Email Address\\">"},{"prompt":"Write a JavaScript code to print the total number of items in an array. arr = [1, 10, 20, 30, 40]","completion":"console.log(arr.length)"},{"prompt":"For a given two dimensional array, convert it into a valid JSON object Input array: [[1,2,3], [4,5,6], [7,8,9]","completion":"{ \\"1\\": [1,2,3], \\"2\\": [4,5,6], \\"3\\": [7,8,9] }"},{"prompt":"Convert a given string in the form of a camelCase notation to snake_case notation camelCaseString","completion":"camel_case_string"},{"prompt":"Write a JavaScript program to detect if a given element exists in an array or not. Array: [1,2,3,4,5] Search element: 3","completion":"function findElement(arr, element){ for (let i = 0; i < arr.length; i++) { if (arr[i] === element) { return true } } return false; }"},{"prompt":"Write an SQL query to create a table called \\"students","completion":"CREATE TABLE students ( id INT(11) NOT NULL PRIMARY KEY AUTO_INCREMENT, name VARCHAR(50) NOT NULL, age INT(11) NOT NULL );"},{"prompt":"Design a system that can take an integer list as its input and return a sorted list [70, 2, 8, 45, 23]","completion":"[2, 8, 23, 45, 70]"},{"prompt":"Create a Python class for Animal","completion":"class Animal: def __init__(self, name, type): self.name = name self.type = type"},{"prompt":"Develop a function that takes a dictionary and returns a list {\\"Name\\": \\"John\\", \\"Age\\": 45}","completion":"def dict_to_list(d): lst = [] for k, v in d.items(): lst.append((k, v)) return lst"},{"prompt":"Edit the following code to convert it into a generic function def add_two_numbers(a, b): return a + b","completion":"def add_numbers(a, b): return a + b"},{"prompt":"Write a CSS code to make an element's background color red","completion":"element { background-color: red; }"},{"prompt":"Design a class in Java that stores information about a person's name, age, and phone number.","completion":"public class Person { private String name; private int age; private String phoneNumber; public Person(String name, int age, String phoneNumber) { this.name = name; this.age = age; this.phoneNumber = phoneNumber; } public String getName() { return name; } public int getAge() { return age; } public String getPhoneNumber() { return phoneNumber; } public void setName(String name) { this.name = name; } public void setAge(int age) { this.age = age; } public void setPhoneNumber(String phoneNumber) { this.phoneNumber = phoneNumber; } } //end class"},{"prompt":"Write a SQL query to find all customers who did not place an order in the last 3 months.","completion":"SELECT * FROM Customers WHERE CustomerId NOT IN ( SELECT CustomerId FROM Orders WHERE ORDERDATE > DATEADD(MONTH, -3, GETDATE()) )"},{"prompt":"Calculate the factorial of a positive integer in C.","completion":"#include <stdio.h> int factorial(int n) { int i, fact = 1; // handles cases greater than 1 if (n > 1) { for (i = 2; i <= n; i++) fact = fact * i; } return fact; } int main() { printf(\\"The factorial of 5 is %d\\", factorial(5)); return 0; }"},{"prompt":"Write a SQL query to retrieve the highest paid employee.","completion":"SELECT TOP 1 * FROM Employees ORDER BY Salary DESC"},{"prompt":"Generate a Python program that creates a list of numbers from 1 to 10.","completion":"# Create a list of numbers from 1 to 10 numbers = list(range(1, 11)) print(numbers)"},{"prompt":"Write a Rust program that prints the factorial of the given number. n = 5","completion":"fn main(){ let n = 5; let factorial = 1; // Calculate the factorial for i in 1..(n+1){ factorial *= i; } println!(\\"The factorial of {} is {}\\",n,factorial); }"},{"prompt":"Using the given set and scores, find the maximum score. set = {1, 2, 3}, scores = {4, 3, 6},","completion":"# Find the maximum score maxScore = max(scores[i] for i in set) print(maxScore)"},{"prompt":"Explain the purpose and implementation of the media query.","completion":"A media query is a CSS tool that allows a web page to adapt to different screen sizes (desktop, mobile, tablet, etc.). It uses a set of rules consisting of media type, media feature and value, which, when satisfied, trigger the application of a corresponding CSS stylesheet. Media queries are implemented using the @media rule, which combines a media type and media query expression, and has a corresponding block of style rules that get applied when the condition is true."},{"prompt":"Create a MySQL database and add a table with the following schema. tb_animals - id (INTEGER) - name (VARCHAR) - age (INTEGER)","completion":"CREATE DATABASE IF NOT EXISTS animals; USE animals; CREATE TABLE IF NOT EXISTS tb_animals ( id INTEGER PRIMARY KEY, name VARCHAR(255) NOT NULL, age INTEGER );"},{"prompt":"Write a Bash script to print the largest number in an array. array=(51 72 23 39 52)","completion":"#! /bin/bash # Declare an array array=(51 72 23 39 52) # Get the length of the array n={#array[@]} # Assume the first element as largest largest={array[0]} # Loop through the array for ((i=1;i<n;i++)) do # Compare the element with the largest if [ {array[i]} -gt largest ] then # Replace the largest largest={array[i]} fi done # Print the largest echo largest"},{"prompt":"Classify the given text into either positive or negative sentiment. This movie was one of the worst movies I've ever seen.","completion":"Negative sentiment."},{"prompt":"Design a class in Java to represent a bank account.","completion":"public class BankAccount { private double balance; public BankAccount(double balance) { this.balance = balance; } public void deposit(double depositAmount) { balance += depositAmount; } public void withdraw(double withdrawAmount) { balance -= withdrawAmount; } public double getBalance() { return balance; } }"},{"prompt":"Write an HTML element to create a checkbox in a form.","completion":"<input type=\\"checkbox\\" name=\\"checkboxname\\" />"},{"prompt":"Convert the following JSON string into an array. {\\"key1\\": \\"value1\\", \\"key2\\": \\"value2\\"}","completion":"[[\\"key1\\", \\"value1\\"], [\\"key2\\", \\"value2\\"]]"},{"prompt":"What attribute in HTML is used to completely hide an element from the page?","completion":"The attribute that is used to completely hide an element from the page is the \\"display\\" attribute with the value of \\"none\\"."},{"prompt":"Write a function to sort a list of numbers using merge sort. myList = [4, 8, 2, 3, 1]","completion":"def mergeSort(myList): if len(myList) >1: mid = len(myList)//2 #Finding the mid of the array L = myList[:mid] # Dividing the array elements R = myList[mid:] # into 2 halves mergeSort(L) # Sorting the first half mergeSort(R) # Sorting the second half i = j = k = 0 # Copy data to temp arrays L[] and R[] while i < len(L) and j < len(R): if L[i] < R[j]: myList[k] = L[i] i+= 1 else: myList[k] = R[j] j+= 1 k+= 1 # Checking if any element was left while i < len(L): myList[k] = L[i] i+= 1 k+= 1 while j < len(R): myList[k] = R[j] j+= 1 k+= 1"},{"prompt":"Write a query in MongoDB that selects all documents in a given collection.","completion":"db.collection.find({})"},{"prompt":"Parse the following XML code and print all the \\"name\\" fields. <employees> <employee> <name>John</name> <age>35</age> </employee> <employee> <name>Alex</name> <age>42</age> </employee> </employees>","completion":"import xml.etree.ElementTree as ET # parse the xml file root = ET.parse('employees.xml').getroot() for employee in root.findall('employee'): name = employee.find('name').text print(name)"},{"prompt":"Write a function in JavaScript to validate a credit card number.","completion":"function validateCreditCardNumber(number) { // remove any spaces or dashes number = number.replace(/s/g, \\"\\"); // remove any spaces number = number.replace(/-/g, \\"\\"); // remove any dashes // check for valid credit card length if (number.length != 16) { return false; } // check that each number is a valid number for (let i = 0; i < 15; i++) { let n = parseInt(number[i]); if (isNaN(n)) { return false; } } // validate the credit card let sum = 0; for (let i = 0; i < 15; i++) { let n = parseInt(number[i]); if (i % 2 == 0) { n *= 2; if (n > 9) { n = (n % 10) + 1; } } sum += n; } let last = parseInt(number[15]); let check = 10 - (sum % 10); return last == check; }"},{"prompt":"Edit the following code snippet to display the data in a structured table data = {'name': ['John', 'Smith', 'Adam'], 'age' : [23, 45, 56]}","completion":"<table> <thead> <tr> <th>Name</th> <th>Age</th> </tr> </thead> <tbody> {% for item in data %} <tr> <td>{{ item.name }}</td> <td>{{ item.age }}</td> </tr> {% endfor %} </tbody> </table>"},{"prompt":"Generate a random word from a given list of words words = ['apple', 'banana', 'grape', 'orange']","completion":"import random def get_random_word(words): return random.choice(words) if __name__ == '__main__': print(get_random_word(words))"},{"prompt":"Create a for loop for printing \\"Hello World N times\\", where N is a given number N = 5","completion":"for i in range(N): print(\\"Hello World\\")"},{"prompt":"Design a class for representing a triangle with its 3 sides","completion":"class Triangle: def __init__(self, side1, side2, side3): self.side1 = side1 self.side2 = side2 self.side3 = side3 def area(self): semi = (self.side1 + self.side2 + self.side3) / 2.0 return (semi*(semi-self.side1)*(semi-self.side2)*(semi-self.side3)) ** 0.5"},{"prompt":"Print the letter frequency of a given string string = \\"Hello World","completion":"from collections import Counter def get_letter_frequency(string): counter = Counter(string) for key, value in counter.items(): print(f'{key}: {value}') if __name__ == '__main__': get_letter_frequency(string)"},{"prompt":"Unpack a given list of tuples tuples = [('John', 23), ('Adam', 45)]","completion":"def unpack_tuples(tuples): names, ages = zip(*tuples) return list(names), list(ages) if __name__ == '__main__': names, ages = unpack_tuples(tuples) print(names) print(ages)"},{"prompt":"Create an array of strings containing the names of your relatives","completion":"relatives = ['John', 'Adam', 'Sarah', 'Paul', 'Emily']"},{"prompt":"Produce a 3D array from a given list of numbers. [1, 2, 3, 4, 5, 6]","completion":"[[[1], [2], [3]], [[4], [5], [6]]]"},{"prompt":"Change the given Python script to not assign any variables x = 10 y = \\"Some Tex","completion":"# no variables are assigned"},{"prompt":"Create an HTML table using the dataset provided. DataSet = [{'Name': 'John', 'Age': 23}, {'Name': 'Mary', 'Age': 24}, {'Name': 'David', 'Age': 20}]","completion":"<table> <tr> <th>Name</th> <th>Age</th> </tr> <tr> <td>John</td> <td>23</td> </tr> <tr> <td>Mary</td> <td>24</td> </tr> <tr> <td>David</td> <td>20</td> </tr> </table>"},{"prompt":"Design a class in Java which allows user to set the value of an Attribute.","completion":"public class MyClass { private int attribute; public void setAttribute(int attribute) { this.attribute = attribute; } }"},{"prompt":"Write the SQL query to select all employees from the 'employee' table whose salary is above 10000.","completion":"SELECT * FROM employee WHERE salary > 10000;"},{"prompt":"Convert the following if-else block of code into a ternary expression. if (condition){ do_something(); } else { do_something_else(); }","completion":"condition ? do_something() : do_something_else();"},{"prompt":"Generate a valid HTML markup from the given JSON data. { \\"name\\": \\"Sample Name\\", \\"city\\": \\"New Delhi\\", \\"state\\": \\"Delhi\\" }","completion":"<html> <head> <title>Sample Information</title> </head> <body> <h2>Sample Information</h2> <ul> <li>Name: Sample Name</li> <li>City: New Delhi</li> <li>State: Delhi</li> </ul> </body> </html>"},{"prompt":"Create the HTML component for a form field. Field Name: First Name Field Type: Tex","completion":"<label for=\\"first_name\\">First Name</label> <input type=\\"text\\" id=\\"first_name\\" name=\\"first_name\\">"},{"prompt":"Create a Python function to generate all prime numbers less than a given number.","completion":"def generate_prime_numbers(n): primes = [] for num in range(2, n + 1): is_prime = True for i in range(2, num): if (num % i == 0): is_prime = False if is_prime: primes.append(num) return primes"},{"prompt":"the given code, convert the output to its equivalent integer type.","completion":"x = \\"10\\" y = int(x)"},{"prompt":"Change the given code so that the variable is incremented only if the condition returns true.","completion":"x = 0 if (condition): x += 1"},{"prompt":"Determine the data type for the given value. value: \\"hello","completion":"string"},{"prompt":"Compute the sum of all numbers from 1 to 5 using a for loop.","completion":"total = 0 for i in range(1, 6): total += i print(total)"},{"prompt":"Suggest a code snippet to shuffle a list of numbers. [1, 2, 3, 4, 5]","completion":"import random numbers = [1, 2, 3, 4, 5] random.shuffle(numbers) print(numbers)"},{"prompt":"Find the most frequent word from the given list. ['apple', 'mango', 'banana', 'apple', 'orange']","completion":"from collections import Counter words = ['apple', 'mango', 'banana', 'apple', 'orange'] word_counts = Counter(words) most_frequent = word_counts.most_common(1) print(most_frequent[0][0]) # prints 'apple'"},{"prompt":"Edit the following code to ensure that it runs without any error. print('Hello world)","completion":"print('Hello world')"},{"prompt":"Create an iterator in Python that yields only even numbers.","completion":"def even_numbers(): i = 0 while True: if i % 2 == 0: yield i i += 1"},{"prompt":"Sort the given list of integers in descending order using the Bubble sort technique. [3, 5, 2, 8, 9, 1]","completion":"def bubble_sort_descending(nums): for i in range(len(nums)): for j in range(i+1, len(nums)): if nums[i] < nums[j]: nums[i], nums[j] = nums[j], nums[i] return nums a = [3, 5, 2, 8, 9, 1] a = bubble_sort_descending(a) print(a) # prints [9, 8, 5, 3, 2, 1]"},{"prompt":"Retrieve the data of the third item from the given list. [{\\"name\\":\\"Mary\\",\\"age\\":27,\\"city\\":\\"NY\\"},{\\"name\\":\\"David\\",\\"age\\":35,\\"city\\":\\"LA\\"},{\\"name\\":\\"John\\",\\"age\\":22,\\"city\\":\\"Uk\\"}]","completion":"data_list = [{\\"name\\":\\"Mary\\",\\"age\\":27,\\"city\\":\\"NY\\"},{\\"name\\":\\"David\\",\\"age\\":35,\\"city\\":\\"LA\\"},{\\"name\\":\\"John\\",\\"age\\":22,\\"city\\":\\"Uk\\"}] third_item = data_list[2] print(third_item) # prints {\\"name\\":\\"John\\",\\"age\\":22,\\"city\\":\\"Uk\\"}"},{"prompt":"Write a validation code to verify if a given string is an integer.","completion":"def is_integer(s): try: int(s) return True except ValueError: return False"},{"prompt":"Delete the last element from the given list. [4, 8, 15, 16, 23, 42]","completion":"my_list = [4, 8, 15, 16, 23, 42] del my_list[-1] print(my_list) # prints [4, 8, 15, 16, 23]"},{"prompt":"Write a code snippet in Javascript to print out the alphabetical characters in a string. var myString = \\"Taichi Tamur","completion":"var myString = \\"Taichi Tamura\\"; var letters = \\"\\"; for (var i=0; i < myString.length; i++) { var currentLetter = myString[i]; if (currentLetter.match(/[a-zA-Z]/)) { letters += currentLetter; } } console.log(letters); // Outputs \\"TaichiTamura\\""},{"prompt":"Create a program in JavaScript that can detect a palindrome. var str = \\"racecar","completion":"var str = \\"racecar\\"; function isPalindrome(str) { return str == str.split('').reverse().join(''); } console.log(isPalindrome(str)); // Outputs true"},{"prompt":"Print out the Fibonacci sequence up to 25 in Java.","completion":"int limit = 25; int[] fib = new int[25]; fib[0] = 0; fib[1] = 1; for (int i = 2; i < limit; i++){ fib[i] = fib[i - 1] + fib[i - 2]; } for (int i = 0; i < limit; i++){ System.out.println(fib[i]); }"},{"prompt":"Generate an HTML list from a given array in JavaScript. var days = [\\"Monday\\", \\"Tuesday\\", \\"Wednesday\\", \\"Thursday\\", \\"Friday\\", \\"Saturday\\", \\"Sunday\\"]","completion":"var days = [\\"Monday\\", \\"Tuesday\\", \\"Wednesday\\", \\"Thursday\\", \\"Friday\\", \\"Saturday\\", \\"Sunday\\"]; var html = \\"<ul>\\"; for(var i = 0; i < days.length; i++) { html += \\"<li>\\" + days[i] + \\"</li>\\"; } html += \\"</ul>\\"; document.write(html);"},{"prompt":"Create a program in Java that takes in 2 numbers and swaps them. int a = 5 int b = 3","completion":"int a = 5; int b = 3; int temp = a; a = b; b = temp; System.out.println(\\"a is: \\" + a); // Outputs 3 System.out.println(\\"b is: \\" + b); // Outputs 5"},{"prompt":"Print all the odd numbers between a given range in Python. start = 5 end = 20","completion":"start = 5 end = 20 for num in range(start, end+1): if num % 2 != 0: print(num, end = ' ') # Outputs 5 7 9 11 13 15 17 19"},{"prompt":"Develop an algorithm to find the maximum number of overlapping intervals. [[2, 3], [1, 5], [7, 10]]","completion":"def maxOverlaps(intervals): if len(intervals) == 0: return 0 # Sort intervals according to their starting time intervals.sort(key = lambda x: x[0]) # Creating an array that stores the number of # overlapping intervals for each interval result = [0] * len(intervals) # Initialising result[0] (as the first interval is always # non-overlapping as it has no previous intervals) result[0] = 1 # Initializing the endpoint variable for comparison endpoint = intervals[0][1] for i in range(1, len(intervals)): # If the current interval's start time is less # than or equal to the endpoint, it's overlapping if intervals[i][0] <= endpoint: # Store the maximum number of overlapping # intervals result[i] = result[i - 1] + 1 else: result[i] = 1 # Update the endpoint endpoint = max(endpoint, intervals[i][1]) # Finding the maximum number of overlapping intervals maximum_overlaps = max(result) return maximum_overlaps"},{"prompt":"Edit the following program to improve its execution speed #include <iostream> int n = 100; void foo(int n) { for (int i = 0; i < n; i++) std::cout << i << \\"n\\"; } int main() { foo(n); return 0; }","completion":"#include <iostream> int n = 100; void foo(int n) { int chunk_size = 5; for (int i = 0; i < n; i+=chunk_size) { for (int j = i; j < i + chunk_size; j++) std::cout << j << \\"n\\"; } } int main() { foo(n); return 0; }"},{"prompt":"Develop a program to find all pairs in a list that sum up to a given number [1, 2, 4, 5, 6, 7], 8","completion":"def pair_sum(arr, k): # Seen pairs pairs = set() # Iterate through the array for i in range(0, len(arr)): # Calculate the complement value complement = k - arr[i] # Check if the complement exists in the array if complement in arr[i + 1:]: # Add the pair to the seen pairs set pairs.add((arr[i], complement)) return pairs # Driver code arr = [1, 2, 4, 5, 6, 7] k = 8 pair_sums = pair_sum(arr, k) print(pair_sums)"},{"prompt":"Write a query to find the number of students enrolled in each class each semester. Table Name: enroll Fields: enroll_id, student_id, class_id, semester","completion":"SELECT class_id, semester, COUNT(student_id) FROM enroll GROUP BY class_id, semester;"},{"prompt":"What is the output from this snippet of JavaScript code? var a = 5; var b = 10; a = b; console.log(a, b);","completion":"The output of this code is 10 10 as 'a' is set to the value of 'b'."},{"prompt":"Write a Lambda function to filter out the even numbers [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","completion":"const evenNumbers = arr => arr.filter(num => num % 2 == 0); console.log(evenNumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));"},{"prompt":"Generate a C program to generate a multiplication table up to a given number. n = 10","completion":"#include <stdio.h> int main() { int i, j, n; printf(\\"Enter the value of n: \\"); scanf(\\"%d\\", &n); for (i = 1; i <= n; i++) { for (j = 1; j <= 10; j++) printf(\\"%d * %d = %dn\\", i, j, i * j); printf(\\"n\\"); } return 0; }"},{"prompt":"Create a variable in Java for storing a user's first name.","completion":"String firstName;"},{"prompt":"Create an array variable in JavaScript for storing song names.","completion":"let songNames = [];"},{"prompt":"What is the correct code for looping through a list of elements in Python?","completion":"for element in list: print(element)"},{"prompt":"Change the font size of a <div> element using CSS. <div>This is a div element</div>","completion":"<div style=\\"font-size: 20px;\\">This is a div element</div>"},{"prompt":"Determine the largest number in a list of integers using C. int list[] = {3, -2, 0, 7, 1};","completion":"int max = list[0]; for (int i = 1; i < (sizeof(list) / sizeof(list[0])); i++) { if (list[i] > max) max = list[i]; } printf(\\"Maximum number in given array is: %d\\", max);"},{"prompt":"Create a regex pattern for extracting emails from a text.","completion":"([a-zA-Z0–9_.+-]+@[a-zA-Z0–9-]+.[a-zA-Z0–9-.]+)"},{"prompt":"Modify the following code to add an element 'item7' to a JSON array. { \\"items\\": [\\"item1\\", \\"item2\\", \\"item3\\", \\"item4\\", \\"item5\\", \\"item6\\"] }","completion":"{ \\"items\\": [\\"item1\\", \\"item2\\", \\"item3\\", \\"item4\\", \\"item5\\", \\"item6\\", \\"item7\\"] }"},{"prompt":"Create a hash table in C with 5 elements.","completion":"#include <stdio.h> #include <stdlib.h> struct HashTable { int key; int value; } h[5]; void main() { for (int i = 0; i < 5; i++) { h[i].key = i; h[i].value = i * i; } for (int i = 0; i < 5 ; i++) printf(\\"%d %dn\\", h[i].key, h[i].value); }"},{"prompt":"What is the JavaScript command to place the cursor at the end of a text field?","completion":"element.focus(); element.setSelectionRange(element.value.length, element.value.length);"},{"prompt":"Write a CSS rule to display a paragraph in italic font. <p>This is a paragraph</p>","completion":"p { font-style: italic; }"},{"prompt":"Edit the following code to produce a 3x3 multiplication table for the numbers 4 to 6. for(int i = 1, j = 4; i < 8; i += 2, j++) System.out.print(i + \\" × \\" + j + \\" = \\" + i * j + \\" \\");","completion":"for(int i = 4; i<7; i++){ for(int j = 1; j<=3; j++){ System.out.print(i + \\" × \\" + j + \\" = \\" + i * j + \\" \\"); } System.out.println(\\"\\"); }"},{"prompt":"Find all vowels in a sentence using Python. sentence = \\"This is a sample sentence.","completion":"vowels = [] for c in sentence: if c in ('a', 'e', 'i', 'o', 'u'): vowels.append(c) print(vowels)"},{"prompt":"Create an object in JavaScript representing a pet dog.","completion":"let pet = { name: 'Max', species: 'Dog', age: '3', healthStatus: 'healthy' };"},{"prompt":"Write an SQL query that counts the number of rows in a table named 'employees'.","completion":"SELECT COUNT(*) FROM employees;"},{"prompt":"Write a C++ program that calculates the area of a circle given the radius.","completion":"#include <iostream> #include <cmath> int main() { float radius; float area; std::cout << \\"Enter the radius of the circle: \\"; std::cin >> radius; area = 3.14159 * pow(radius, 2); std::cout << \\"Area of the circle: \\" << area; return 0; }"},{"prompt":"Modify the code in the following snippet to include a try/catch block. function getStringLength() { let string = prompt(\\"Please enter a string\\"); let length = string.length; console.log(length); }","completion":"function getStringLength() { try { let string = prompt(\\"Please enter a string\\"); let length = string.length; console.log(length); } catch (error) { console.log('ERROR: ', error); } }"},{"prompt":"Write a function in JavaScript to perform the following operation: Add two numbers a and b","completion":"function sum(a, b) { return a + b; }"},{"prompt":"Build an algorithm to compare two strings and report whether they are identical or not. string1 = \\"hello\\"; string2 = \\"world\\";","completion":"function compareStrings(string1, string2) { if (string1 === string2) { return \\"the strings are identical\\" } else { return \\"the strings are not identical\\" } }"},{"prompt":"Design an algorithm to search for the longest string in a list. list = [\\"apples\\", \\"bananas\\", \\"kiwis\\"]","completion":"def find_longest_string(list): # Set initial max_length to the length of the first item in list max_length = len(list[0]) # Set initial max_string to the first string in the list max_string = list[0] # Loop through remaining strings in the list for i in range(1, len(list)): current_string = list[i] current_length = len(current_string) if current_length > max_length: max_length = current_length max_string = current_string return max_string"},{"prompt":"Convert a number in base 10 to binary num = 5","completion":"def base10_to_binary(num): binary_num = '' while num > 0: remainder = num % 2 binary_num = str(remainder) + binary_num num = num // 2 return binary_num base10_to_binary(5) # '101'"},{"prompt":"Create a Javascript function that will add two string","completion":"function addStrings(str1,str2) { return str1 + str2; } addStrings(\\"hello\\", \\"world\\") // \\"helloworld\\""},{"prompt":"Write an algorithm to find the maximum depth of nested dictionary dict = {‘a’:{‘b’:{‘c’:1}}, ‘d’:2}","completion":"def findMaxDepth(dict_): max_depth = 1 for val in dict_.values(): if isinstance(val, dict): max_depth = max(max_depth, 1 + findMaxDepth(val)) return max_depth findMaxDepth(dict) // 3"},{"prompt":"Create a program that converts a string to a URL friendly slug string = \\"My Page Title","completion":"def create_slug(string): slug = string.replace(\\" \\", \\"-\\").lower() return slug create_slug(\\"My Page Title\\") // \\"my-page-title\\""},{"prompt":"Create a SQL query that fetches all customers from a table named 'customers' whose name starts with 'John'","completion":"SELECT * FROM customers WHERE name LIKE 'John%';"},{"prompt":"Write a Python program to select all rows from a table named 'products' that have a price less than 10","completion":"SELECT * FROM products WHERE price < 10;"},{"prompt":"Create an SQL query to return the customer name and total amount spent on all orders in the past week.","completion":"SELECT customer_name, SUM(amount) AS total_spent FROM orders WHERE order_date > DATE_SUB(NOW(), INTERVAL 1 WEEK) GROUP BY customer_name;"},{"prompt":"Find the second largest number in the following array of integers. [1, 6, 4, 8, 7]","completion":"7"},{"prompt":"Replace all words with 4 letters or more with \\"*****\\" in the following text. This is an example of text.","completion":"This is an ***** of *****."},{"prompt":"Write an if-else condition to check for vowel or consonants in a character in Python.","completion":"\\"\\"\\" Write an if-else condition to check for vowel or consonants in a character in Python. \\"\\"\\" def is_vowel_or_consonant(letter): vowels = \\"aeiouAEIOU\\" if letter in vowels: return \\"Vowel\\" else: return \\"Consonant\\" if __name__ == '__main__': print(is_vowel_or_consonant(\\"a\\")) # Vowel"},{"prompt":"Create a function that takes two numbers and returns their greatest common divisor in Python.","completion":"\\"\\"\\" Create a function that takes two numbers and returns their greatest common divisor in Python. \\"\\"\\" def greatest_common_divisor(a, b): if a == 0: return b if b == 0: return a if a == b: return a if a > b: return greatest_common_divisor(a - b, b) return greatest_common_divisor(a, b - a) if __name__ == '__main__': print(greatest_common_divisor(20, 25)) # 5"},{"prompt":"Create a recursive Python function to generate the Fibonacci series up to n-th terms.","completion":"\\"\\"\\" Create a recursive Python function to generate the Fibonacci series up to n-th terms. \\"\\"\\" def fibonacci(n): if n == 0: return 0 elif n == 1: return 1 else: return fibonacci(n-1) + fibonacci(n-2) if __name__ == '__main__': print(fibonacci(5)) # 5"},{"prompt":"Combine the following two lists into a dictionary in Python. list1 = [\\"a\\", \\"b\\", \\"c\\"] list2 = [1, 2, 3]","completion":"dict1 = { \\"a\\": 1, \\"b\\": 2, \\"c\\": 3 }"},{"prompt":"Make a program to find the sum of each row in a two-dimensional array. [[1,2,3], [2,3,4]]","completion":"def row_sum(arr): total_sum = 0 for row in arr: total_sum += sum(row) return total_sum"},{"prompt":"Create a function to input a string from the user and return its reversed version.","completion":"def reverse_string(string): return string[::-1]"},{"prompt":"write a piece of code to print out the first n Fibonacci numbers in Python. n = 8","completion":"def Fibonacci(n): fibList = [0, 1] if n <= 0: print(\\"Incorrect input\\") elif n == 1: print(fibList[0]) elif n == 2: print(fibList) else: temp = fibList[0] + fibList[1] while len(fibList) < n: fibList.append(temp) temp = fibList[len(fibList)-1] + fibList[len(fibList)-2] return fibList print(Fibonacci(8))"},{"prompt":"Develop a python program to sort a list of strings alphabetically from a-z. list1 = [\\"cat\\", \\"apple\\", \\"banana\\", \\"dog\\"]","completion":"def sort_alphabetically(list1): list1.sort() return list1 print(sort_alphabetically(list1))"},{"prompt":"de a Python script that converts temperatures in celsius to fahrenheit.","completion":"def celsius_to_fahrenheit(celsius): return (celsius * 9/5) + 32"},{"prompt":"Create a function to input a number and prints out its prime factorization 24","completion":"def prime_factors(num): factors = list() x = 2 while x * x <= num: while num % x == 0: factors.append(x) num /= x x += 1 if num > 1: factors.append(num) return factors print(prime_factors(24))"},{"prompt":"Generate a Python program to calculate the total number of vowels in a given string. string = \\"Today is a beautiful day","completion":"def calculate_vowels(string): vowels = 'aeiou' count = 0 for char in string: if char in vowels: count += 1 return count print(calculate_vowels(\\"Today is a beautiful day\\"))"},{"prompt":"Code a script that prints out the first n elements of the Fibonacci sequence. n = 8","completion":"def Fibonacci(n): fibList = [0, 1] if n <= 0: print(\\"Incorrect input\\") elif n == 1: print(fibList[0]) elif n == 2: print(fibList) else: temp = fibList[0] + fibList[1] while len(fibList) < n: fibList.append(temp) temp = fibList[len(fibList)-1] + fibList[len(fibList)-2] return fibList print(Fibonacci(8))"},{"prompt":"Create a program to convert a binary number to its decimal equivalent.","completion":"def binary_to_decimal(number): result = 0 power = 0 for digit in str(number)[::-1]: if digit == '1': result += 2 ** power power += 1 return result"},{"prompt":"Create a function to accept an array of integers and return an array with the corresponding squares of each element. arr = [1, 2, 3, 4]","completion":"def array_sqr(arr): return [x*x for x in arr] print(array_sqr(arr))"},{"prompt":"Suggest a Pandas DataFrame command to remove element duplicates from a given dataframe.","completion":"df.drop_duplicates()"},{"prompt":"Suggest an appropriate way to select the last element of a given list in Python.","completion":"list[-1]"},{"prompt":"Modify the following Java code snippet to include an \\"else if\\" statement. int val=20; if (val > 15) System.out.println(\\"val is greater than 15\\");","completion":"int val=20; if (val > 15) System.out.println(\\"val is greater than 15\\"); else if (val == 15) System.out.println(\\"val is equal to 15\\");"},{"prompt":"Provide an appropriate regular expression for checking if a given string contains only numbers","completion":"^[0-9]+"},{"prompt":"Create a class in Python to represent a bank account and add methods to display, withdraw, deposit and transfer money. The bank account has the following details: - Customer Name: John Doe - Account Number: 12345 - Balance: 1000","completion":"class BankAccount: def __init__(self, customer_name, account_number, balance): self.customer_name = customer_name self.account_number = account_number self.balance = balance def display_balance(self): print('Your balance is', self.balance) def withdraw_amount(self, amount): self.balance -= amount print('You withdrew', amount, 'from your account.') def deposit_amount(self, amount): self.balance += amount print('You deposited', amount, 'into your account.') def transfer_amount(self, target_account, amount): self.balance -= amount target_account.balance += amount print('You transferred', amount, 'to the account', target_account.account_number)"},{"prompt":"Create a website for the company ACME with all the following pages: Home, About Us, Contact Us, FAQ and Privacy Policy.","completion":"<html> <head> <title>ACME</title> </head> <body> <header> <h1>ACME</h1> </header> <nav> <ul> <li><a href=\\"index.html\\">Home</a></li> <li><a href=\\"about.html\\">About Us</a></li> <li><a href=\\"contact.html\\">Contact Us</a></li> <li><a href=\\"faq.html\\">FAQ</a></li> <li><a href=\\"privacy-policy.html\\">Privacy Policy</a></li> </ul> </nav> </body> </html>"},{"prompt":"Design a class in Java to represent a rectangle and include methods to calculate and return its perimeter and area.","completion":"public class Rectangle { private int width; private int height; public Rectangle(int width, int height) { this.width = width; this.height = height; } public int getPerimeter() { return 2 * (width + height); } public int getArea() { return width * height; } }"},{"prompt":"Create a bash script to print the name of the directory the script was started from.","completion":"#!/bin/bash echo (pwd)"},{"prompt":"Generate a valid Java code for a for loop to count from 5 to 10.","completion":"for(int i=5; i<=10; i++) { System.out.println(i); }"},{"prompt":"Create a class in Python to represent a car and include methods to set and get the car's color, model, and year.","completion":"class Car: def __init__(self, model, year, color): self.model = model self.year = year self.color = color def set_color(self, color): self.color = color def get_color(self): return self.color def set_model(self, model): self.model = model def get_model(self): return self.model def set_year(self, year): self.year = year def get_year(self): return self.year"},{"prompt":"Write a SQL query to filter books published after 2002 and before 2008.","completion":"SELECT * FROM Books WHERE publish_date > '2002-01-01' AND publish_date < '2008-01-01';"},{"prompt":"Create a web page with two text fields for username and password.","completion":"<html> <head> <title>Login</title> </head> <body> <h1>Login</h1> <form action=\\"\\"> <label for=\\"username\\">Username:</label> <input type=\\"text\\" name=\\"username\\" id=\\"username\\" /> <label for=\\"password\\">Password:</label> <input type=\\"password\\" name=\\"password\\" id=\\"password\\" /> <input type=\\"submit\\" value=\\"Login\\" /> </form> </body> </html>"},{"prompt":"Suggest a valid CSS rule for the following HTML element: <div class=\\"main\\">","completion":".main { display: block; }"},{"prompt":"Generate a valid C++ code to reverse an array.","completion":"void reverseArray(int arr[], int n) { int start = 0; int end = n-1; while (start < end) { int temp = arr[start]; arr[start] = arr[end]; arr[end] = temp; start++; end--; } }"},{"prompt":"Write a code snippet to remove all white spaces from a given string in JavaScript. \\" Hello World!","completion":"let outputString = \\"Hello World!\\"; outputString = outputString.replace(/s/g, ''); // removes white spaces console.log(outputString);"},{"prompt":"Sort a given list of numbers from smallest to largest with Python. [12,3,7,9,1]","completion":"myList = [12,3,7,9,1] myList.sort() print(myList) # Prints [1,3,7,9,12]"},{"prompt":"Create a K Nearest Neighbor (KNN) classifier in R.","completion":"# Load the Libraries library(class) library(kknn) # creating a training data set df <- data.frame(feature1=c(2,3,4,5,6), feature2=c(3.1, 4.1, 5.1, 6.1, 5.9), outcome=c(\\"yes\\",\\"yes\\",\\"no\\",\\"no\\",\\"yes\\")) # set the predictor and outcome variables X <- as.matrix(df[, 1:2]) y <- df[,3] # Build k-Nearest Neighbors Model model <- kknn(outcome~., data=df, k=5) # Predict the response variable pred <- predict(model, X) # get the accuracy of the model accuracy <- mean(y == pred) * 100 # Print accuracy print(accuracy)"},{"prompt":"Replace all vowels in a given string with the character \\"X\\" in C++. \\"Hello World!","completion":"#include<iostream> #include<string> using namespace std; int main() { string s = \\"Hello World!\\"; for (int i=0; s[i]!='0'; i++) { if (s[i] == 'A' || s[i] == 'a' || s[i] == 'E' || s[i] == 'e' || s[i] == 'I' || s[i] == 'i' || s[i] == 'O' || s[i] == 'o' || s[i] == 'U' || s[i] == 'u') s[i] = 'X'; } cout << s; return 0; }"},{"prompt":"Generate 10 random strings of 5 characters in length with JavaScript.","completion":"let randomString = []; for (let i = 0; i < 10; i++) { let randomChars = Math.random().toString(36).slice(-5); randomString.push(randomChars); } console.log(randomString);"},{"prompt":"Select all elements with the class “active” in JavaScript.","completion":"const activeElements = document.querySelectorAll(\\".active\\"); console.log(activeElements);"},{"prompt":"mplement a Search algorithm in Python with a space complexity of O(n).","completion":"def search(list, target): for i in range(len(list)): if list[i] == target: return i return -1"},{"prompt":"Transform a given Python list of integers into a dictionary that contains the numbers as keys and its squares as values. [1,2,3]","completion":"my_list = [1,2,3] dict_squares = {x:x**2 for x in my_list}"},{"prompt":"Generate a random sphere with radius 1 in JavaScript.","completion":"const radius = 1; let x = (Math.random() * 2 - 1) * radius; let y = (Math.random() * 2 - 1) * radius; let z = (Math.random() * 2 - 1) * radius; const spherePosition = new THREE.Vector3(x, y, z);"},{"prompt":"Write a code in Java to print the Fibonacci series till a given number.","completion":"public static void FibonacciSeries(int limit) { int prevNum = 0, nextNum = 1; for (int i = 0; i < limit; i++) { System.out.print(prevNum + \\" \\"); int sum = prevNum + nextNum; prevNum = nextNum; nextNum = sum; } }"},{"prompt":"Create a JavaScript object representing a student. { name: \\"John Smith\\", age: 15 }","completion":"let student = { name: \\"John Smith\\", age: 15 };"},{"prompt":"Write a Python program that finds the most common word in a given string. This is the first sentence of a sample text.","completion":"def get_most_common_word(text): words = text.split() common_words = {} for word in words: if word in common_words: common_words[word] += 1 else: common_words[word] = 1 max_word = \\"\\" max_count = 0 for word, count in common_words.items(): if count > max_count: max_word = word max_count = count return max_word"},{"prompt":"Create a React component for displaying a list of books. var books = [ { title: \\"The Great Gatsby\\", author: \\"F. Scott Fitzgerald\\" }, { title: \\"To Kill a Mockingbird\\", author: \\"Harper Lee\\" }, { title: \\"1984\\", author: \\"George Orwell\\" } ];","completion":"import React from \\"react\\"; const BookList = ({ books }) => { return ( <ul> {books.map(book => ( <li key={book.title}> {book.title} by {book.author} </li> ))} </ul> ); }; export default BookList;"},{"prompt":"Write a Bash script that finds the factorial of a given number.","completion":"#!/bin/bash num={1} factorial=1 if [ num -lt 0 ] then echo \\"Please enter a positive number.\\" exit 1 fi if [ num -gt 0 ] then for (( i=1; i<=num; i++ )) do factorial=[ factorial * i ] done fi echo \\"The factorial of num is factorial\\""},{"prompt":"Write a C++ program to create a binary search tree.","completion":"#include <iostream> using namespace std; struct Node { int data; struct Node *left, *right; }; struct Node* newNode(int data) { struct Node* node = new Node; node->data = data; node->left = node->right = NULL; return node; } struct Node* insert(struct Node* node, int data) { if (node == NULL) return newNode(data); if (data < node->data) node->left = insert(node->left, data); else node->right = insert(node->right, data); return node; }"},{"prompt":"Write a SQL query to display owners and their pet names. Table: Owners +------------+---------+ | owner_name | pet_name| +------------+---------+ | John | Buggs | | John | Max | | David | Bella | | Bill | Spike | +------------+---------+","completion":"SELECT o.owner_name, o.pet_name FROM Owners o"},{"prompt":"Create a HTML page that displays the top 5 countries in the world by population. Country Population (Millions) China 1400 India 1351 United 329 Indonesia 265 Brazil 212","completion":"<!DOCTYPE html> <html> <head> <title>World's Top 5 Countries By Population</title> <style> table { font-family: arial, sans-serif; border-collapse: collapse; width: 100%; } td, th { border: 1px solid #dddddd; text-align: left; padding: 8px; } </style> </head> <body> <h1>World's Top 5 Countries By Population</h1> <table> <tr> <th>Country</th> <th>Population (Millions)</th> </tr> <tr> <td>China</td> <td>1400</td> </tr> <tr> <td>India</td> <td>1351</td> </tr> <tr> <td>United States</td> <td>329</td> </tr> <tr> <td>Indonesia</td> <td>265</td> </tr> <tr> <td>Brazil</td> <td>212</td> </tr> </table> </body> </html>"},{"prompt":"Group the list into a Dictionary Key/Value pair, where the key is the name and the value is number of pet animals owned. pets = [\\"Henry 12 dogs\\", \\"Eric 2 cats\\", \\"David 7 birds\\"]","completion":"pets_dict = { \\"Henry\\": 12, \\"Eric\\": 2, \\"David\\": 7 }"},{"prompt":"Create a new list that reverses the order of the original list's elements. old_list = [\\"apple\\", \\"banana\\", \\"kiwi\\"]","completion":"new_list = [\\"kiwi\\", \\"banana\\", \\"apple\\"]"},{"prompt":"Create an empty dictionary with three key-value pairs.","completion":"my_dict = { \\"key1\\": None, \\"key2\\": None, \\"key3\\": None }"},{"prompt":"Create a new string that is the reverse of the original string. my_string = \\"Hello World!","completion":"new_string = \\"!dlroW olleH\\""},{"prompt":"Create a new list that only has the even numbers from the input list. nums = [1, 2, 3, 4, 5, 6, 7]","completion":"even_nums = [2, 4, 6]"},{"prompt":"Create a new string that contains all uppercase letters from the original string. my_string = \\"Hello World!","completion":"new_string = \\"HW\\""},{"prompt":"Write a function to take two integer arguments and return their sum. x = 3 y = 5","completion":"def add(x, y): return x + y"},{"prompt":"Create a new list that is the combination of two other given lists. list_a = [\\"A\\", \\"B\\", \\"C\\"] list_b = [1, 2, 3]","completion":"new_list = [\\"A\\", \\"B\\", \\"C\\", 1, 2, 3]"},{"prompt":"Create an object named 'person' and assign the properties 'name', 'age', and 'hobby'. \\"name\\": \\"John\\", \\"age\\": 18, \\"hobby\\": \\"reading","completion":"person = { \\"name\\": \\"John\\", \\"age\\": 18, \\"hobby\\": \\"reading\\" }"},{"prompt":"What is the data structure of a hash table?","completion":"A hash table is a data structure that maps keys to values using a hash function. It is composed of a key-value pair, where the key is used to locate a specific item in the table, and the value is the item itself."},{"prompt":"Construct a SQL query to retrieve the records from a table that satisfy a certain condition.","completion":"SELECT * FROM table_name WHERE condition;"},{"prompt":"Create a function 'convertStringToInt' that takes a string and converts it into an integer.","completion":"def convertStringToInt(string): convertValue = int(string) return convertValue"},{"prompt":"Create a program that reads an integer and prints out the next Fibonacci number.","completion":"def get_next_fibonacci_number(n): if n == 0 or n == 1: return n else: fibonacci_sequence = [0,1] for i in range(2, n + 1): next_value = fibonacci_sequence[i-2] + fibonacci_sequence[i-1] fibonacci_sequence.append(next_value) return fibonacci_sequence[n]"},{"prompt":"Create a function that prints all the prime numbers between 1 and a given number.","completion":"def print_prime_numbers(upper_limit): prime_numbers_list = [] for num in range(2, upper_limit+1): if all(num % i != 0 for i in range(2, num)): prime_numbers_list.append(num) print(\\"The prime numbers between 1 and\\",upper_limit,\\"are:\\",prime_numbers_list)"},{"prompt":"Create a program that reads 6 numbers from the user and outputs whether they form an increasing subsequence of length 3 or not.","completion":"def increasing_subsequence(arr): for i in range(len(arr)-2): if (arr[i] < arr[i+1]) and (arr[i+1] < arr[i+2]): return 'True' return 'False'"},{"prompt":"Write a function that takes a list of strings and returns the longest common prefix of the list of strings.","completion":"def longest_common_prefix(strings): if len(strings) == 0: return \\"\\" smallest_string = min(strings, key=len) end_word_index = len(smallest_string) for i in range(end_word_index): for word in strings: if word[i] != smallest_string[i]: return smallest_string[:i] return smallest_string"},{"prompt":"You are given an array of integers and the task is to create a function that returns the maximum pairwise product of those numbers.","completion":"def max_pairwise_product(nums): max_product = 0 for i in range(len(nums)): for j in range(i+1,len(nums)): max_product = max(max_product, nums[i] * nums[j]) return max_product"},{"prompt":"Create a program that reads two numbers and prints out their greatest common divisor.","completion":"def gcd(a, b): if a == 0: return b return gcd(b % a, a)"},{"prompt":"Create a program that reads a list of integers and returns the highest prime number in the list.","completion":"def get_highest_prime(numbers): highest_prime = 0 for num in numbers: for i in range(2, num): if (num % i == 0): break else: highest_prime = max(highest_prime, num) return highest_prime"},{"prompt":"Create a program that reads an integer N and calculates the sum of the series 1/1 + 1/2 + 1/3 + . . . . . + 1/N.","completion":"def calculate_series_sum(N): summation = 0 for i in range(1, N+1): summation += (1 / i) return summation"},{"prompt":"Write a Python program that takes a string entered by the user, reverses it and displays the reversed version of the string.","completion":"def reverse_string(s): return s[::-1] input_string = input(\\"Enter a string: \\") reversed_string = reverse_string(input_string) print(\\"The reversed string is:\\", reversed_string)"},{"prompt":"w would you convert a number from decimal to binary using bitwise operators?","completion":"def decimalToBinary(n): return bin(n).replace(\\"0b\\", \\"\\") decimal_num = 7 binary_num = decimalToBinary(decimal_num) print(binary_num) # 111"},{"prompt":"Create a class named 'Person' that has attributes such as name and age.","completion":"class Person: def __init__(self, name, age): self.name = name self.age = age"},{"prompt":"Write a function in JavaScript that takes a sentence as input and returns the number of words in the sentence.","completion":"function countWords(str) { return str.split(\\" \\").length; }"},{"prompt":"Create a Python program that sorts an array of integers using the insertion sort algorithm. [4, 2, 6, 8, 1]","completion":"def insertionSort(arr): # Traverse through 1 to len(arr) for i in range(1, len(arr)): key = arr[i] # Move elements of arr[0..i-1], that are # greater than key, to one position ahead # of their current position j = i-1 while j >= 0 and key < arr[j] : arr[j + 1] = arr[j] j -= 1 arr[j + 1] = key # Driver code to test above arr = [12, 11, 13, 5, 6] insertionSort(arr) print (\\"Sorted array is:\\") for i in range(len(arr)): print (arr[i])"},{"prompt":"Create a Java program that takes an array as argument and then prints out the elements of the array in reversed order. [1,2,3,4,5]","completion":"public class ReverseArray { /* Prints the array in reverse order */ public static void printReversedArray(int arr[]) { int n = arr.length; for (int i=n-1; i>=0; i--) { System.out.print(arr[i] + \\" \\"); } } public static void main(String[] args) { int[] array = { 1, 2, 3, 4, 5 }; printReversedArray(array); } }"},{"prompt":"Create a Python program that generates a random number between 0 and 10 and checks if the generated number is even.","completion":"import random num = random.randint(0, 10) if (num % 2 == 0): print(str(num) + \\" is even.\\") else: print(str(num) + \\" is odd.\\")"},{"prompt":"Write a JavaScript program that takes an array of strings as an argument and then prints those strings in alphabetical order.","completion":"function alphabeticalOrder(arr) { // Sort items in the array arr.sort(function(a, b) { return a.localeCompare(b); }); // Print out the sorted array console.log(arr); }"},{"prompt":"Create a C++ program that sums up all the numbers in a given array. [1,2,3,4,5]","completion":"#include <iostream> using namespace std; // Function to calculate sum of an array int arraySum(int arr[], int n) { int sum = 0; for (int i=0; i<n; i++) sum += arr[i]; return sum; } int main() { int arr[] = {1,2,3,4,5}; int n = sizeof(arr) / sizeof(arr[0]); int sum = arraySum(arr, n); cout << \\"Sum of the array is \\" <<sum; return 0; }"},{"prompt":"Create a JavaScript program that takes a string as an argument and then prints out the characters in reverse order.","completion":"function reverse(str) { // Create an empty string for storing reversed string var reversedString = \\"\\"; // Loop through the string and concatenate it to // the new string for (var i = str.length - 1; i >= 0; i--) { reversedString += str[i]; } // Return the reversed string return reversedString; }"},{"prompt":"Define a function to find the factorial of the given number.","completion":"def factorial(num): if num <= 1: return 1 else: return num * factorial(num-1)"},{"prompt":"Create a program to calculate the Fibonacci sequence up to the nth element.","completion":"def fibonacci(n): a = 0 b = 1 if n==1: print(a) else: print(a) print(b) for i in range(2,n): c=a+b a=b b=c print(b)"},{"prompt":"Create a program to search a nested list and print all the elements containing the number 3. nested_list = [[1, 2, 3], [4, 5, 6], [7, 8, [3, 4, 5]]]","completion":"def search_nested_list(nested_list): for element in nested_list: if isinstance(element, list): search_nested_list(element) elif element == 3: print(element) search_nested_list(nested_list)"},{"prompt":"Determine the two largest numbers in a given list. lst = [11, 5, 3, 21, 19, 17]","completion":"def find_two_largest(lst): max1 = 0 max2 = 0 for val in lst: if val > max1: max2 = max1 max1 = val elif val > max2: max2 = val return (max1, max2) print(find_two_largest(lst))"},{"prompt":"Create a method that given an array as input, outputs the quantity of odd numbers. [1,2,3,4,5,6,7]","completion":"def countOdds(arr): return len([x for x in arr if x % 2 != 0])"},{"prompt":"Write a SQL query to count the total number of customers who haven't placed an order yet. Table Name: customer","completion":"SELECT COUNT(*) FROM customers WHERE id NOT IN (SELECT customer_id FROM orders);"},{"prompt":"Explain the purpose of principal component analysis.","completion":"Principal Component Analysis (PCA) is a method of dimensionality reduction used to reduce the number of variables in large datasets. It works by transforming a set of correlated variables into a new set of uncorrelated variables, called principal components. The principal components represent the most relevant information in the data, while also reducing the complexity of the data. By using these components as variables in analysis, it helps to visualize and interpret the data more easily."},{"prompt":"Create a list comprehension that outputs a list of strings with the same character. string=\\"This is a test.","completion":"[x for x in string if x == 't']"},{"prompt":"Write a JavaScript function that takes an array of numbers and a function as arguments and returns an array with the same numbers as the input, but sorted in ascending order. [2, 4, 3, 1]","completion":"function sortArrayAsc(arr, func) { return arr.sort(func); } function compareNumbers(a, b) { return a - b; }"},{"prompt":"Write a SQL query that returns the average salary of each department. Table Name: employee","completion":"SELECT department, AVG(salary) AS Average_Salary FROM Employees GROUP BY Department;"},{"prompt":"Given an integer n, write a Python program to print a pattern. n = 5","completion":"for i in range(1, n+1): for j in range(1,i+1): print(\\"* \\", end=\\"\\") print(\\"r\\")"},{"prompt":"Create a method that takes an array as input and outputs a Boolean indicating if the sum of the numbers in the array is divisible by 5. [3,7,8]","completion":"def divisibleByFive(arr): return (sum(arr) % 5 == 0)"},{"prompt":"Explain what overfitting is, in the context of machine learning.","completion":"Overfitting is a phenomenon in which a machine learning model performs better on training data than on new data. This occurs when a model is excessively complex and able to learn the underlying noise of the training data. As a result, the model doesn’t generalize well on previously unseen data and does not perform as expected. Overfitting is typically the result of the model having too many features or parameters relative to the amount of training data available."},{"prompt":"Perform the following operation on this array and print the result: remove the last two elements and add them to the beginning. arr = [1, 2, 3, 4, 5]","completion":"arr.splice(-2); arr.unshift(4,5);"},{"prompt":"Explain why normalization is needed for natural language processing.","completion":"Normalization is a step in natural language processing (NLP) that is used to make the text more consistent and easier to process. It is important in NLP because different pieces of text can still have the same meaning even if the words used in the text are different. Normalization can make the text more consistent by unifying the words to a common form, such as lowercasing all words, so that the model can process them more effectively. It can also be used to remove irrelevant characters, like punctuation, so that they don't affect the analysis."},{"prompt":"Create a list in Python using list comprehension to obtain a new list which contains only the even numbers from the given list. originalList = [1, 3, 4, 17, 19, 6, 2]","completion":"evenlist = [i for i in originalList if i%2==0]"},{"prompt":"Write a computer program to generate a matrix filled with zeros.","completion":"def generateMatrix(m, n): # Initialize a m * n matrix with all 0s matrix = [[0 for x in range(n)] for y in range(m)] return matrix # Driver code m = 4 n = 5 print(generateMatrix(m, n))"},{"prompt":"Write a Java code to clone a linked list using iteration.","completion":"public class LinkedListCloneExample { static Node head; static class Node { int data; Node next; Node(int d) { this.data = d; this.next = null; } } static Node CloneList(Node node) { Node curr = node; Node next = null; Node temp = null; while (curr != null) { next = curr.next; // Cloned node temp = new Node(curr.data); // Inserting the cloned node // just next to the original node. temp.next = next; curr.next = temp; curr = next; } // Adjusting the original list // to get the cloned list. curr = node; while (curr != null) { next = curr.next; // Just adapting the original // list to the cloned list. curr.next = next.next; curr = next.next; } return node; } static void printList(Node node) { while (node != null) { System.out.print(node.data + \\" \\"); node = node.next; } } public static void main(String[] args) { head = new Node(1); head.next = new Node(2); head.next.next = new Node(3); head.next.next.next = new Node(4); System.out.println(\\"Linked List original: \\"); printList(head); System.out.println(\\"nCloned Linked List: \\"); Node cloned_list = CloneList(head); printList(cloned_list); }"},{"prompt":"Write a C++ program to find the elements that appear once in an array. arr[] = {2, 3, 4, 5, 6, 2, 3, 4};","completion":"#include <bits/stdc++.h> using namespace std; int getSingle(int arr[], int n) { // initialize result int result = 0; // Iterate through every bit for (int i = 0; i < 32; i++) { // Find sum of set bits at i'th position in all // array elements int x = 0; for (int j = 0; j < n; j++) x += (arr[j] & (1 << i)); // The bits with sum not multiple of 3, are the // bits of element with single occurrence. if (x % 3) result |= (1 << i); } return result; } // Driver code int main() { int arr[] = {2, 3, 4, 5, 6, 2, 3, 4}; int n = sizeof(arr) / sizeof(arr[0]); cout << \\"The element with single occurrence is \\" << getSingle(arr, n); }"},{"prompt":"Generate SQL code to create a table of users with the columns (user_id, name, email, age).","completion":"CREATE TABLE users ( user_id INT NOT NULL AUTO_INCREMENT, name VARCHAR(255), email VARCHAR(255), age INT, PRIMARY KEY (user_id) );"},{"prompt":"Write a code in Python to find the subsequence of a given sequence. sequence = [1, 6, 2, 4, 3, 7]","completion":"def findSubsequence(sequence): subSeq = [] maxLen = 1 # looping through the sequence for i in range(len(sequence)): j = i + 1 while j < len(sequence): # checking for non decreasing sequence if sequence[j] >= sequence[i]: subSeq.append(sequence[j]) i = j j += 1 # checking for the subsequence with the max length if len(subSeq) > maxLen: maxLen = len(subSeq) # reset subSeq for the next subsequence if current element is starting of new subsequence else: subSeq = [] # return-1 when there is no subsequence if maxLen == 1: return -1 else: return maxLen # Driver Code sequence = [1, 6, 2, 4, 3, 7] print(\\"LCS is \\", findSubsequence(sequence))"},{"prompt":"Write a SQL query to list all the product categories with their sales numbers in the given data set. Table: Products | id | product_name | category | sale_price | 1 iPhone Phones 400 2 iPad Tablets 500 3 Apple Watch Phones 300 4 In-ear headset Audio 50 5 Pen Drive Storage 20 6 32GB RAM Storage 100","completion":"SELECT category, SUM(sale_price) as total_sales FROM Products GROUP BY category"},{"prompt":"Edit the given HTML code so that the header of the web page is centered. <html> <head> <title>Centering a header</title> </head> <body> <h1>This header is not centered</h1> </body> </html>","completion":"<html> <head> <title>Centering a header</title> </head> <body> <h1 style=\\"text-align: center;\\">This header is now centered</h1> </body> </html>"},{"prompt":"Classify the given text as either suitable for children or not. The dog barked loudly in the middle of the night, causing a lot of people to wake up.","completion":"Not suitable for children."},{"prompt":"Generate a Fibonacci sequence of 10 numbers using Java.","completion":"public static void printFibonacci(int count) { int n1 = 0, n2 = 1, n3; System.out.print(n1 + \\" \\" + n2); // printing fibonacci sequence for (int i = 2; i < count; ++i) { n3 = n1 + n2; System.out.print(\\" \\" + n3); n1 = n2; n2 = n3; } }"},{"prompt":"Write a SQL query to list all the distinct products names and their corresponding sales price. Table: Products | id | product_name | sale_price | 1 iPhone 400 2 iPad 500 2 Apple Watch 300","completion":"SELECT DISTINCT product_name, sale_price FROM Products"},{"prompt":"Write a Python program to filter out all the elements greater than 5 in the given list. [1, 2, 3, 4, 5, 6, 7, 8, 9]","completion":"myList = [1, 2, 3, 4, 5, 6, 7, 8, 9] result = list(filter(lambda x: x <= 5, myList)) print(result)"},{"prompt":"Write a SQL query to select the rows from the following table based on a certain condition. Table: Student | enroll_no | name | marks | 1 Jack 30 2 Tom 40 3 Lisa 50 4 Lucy 60","completion":"SELECT * FROM Student WHERE marks > 45"},{"prompt":"w would you modify the following code to store the output of the function in a dictionary? def convert_list_keys(list_of_data): key_list = [] for item in list_of_data: key_list.append(item[0]) return key_l","completion":"def convert_list_keys(list_of_data): key_dict = {} for item in list_of_data: key_dict[item[0]] = item return key_dict"},{"prompt":"Generate a complete HTML document using the given parameters. title: GPT Demo heading: Welcome to the GPT Demo body: This is a demo of GPT on coding tasks.","completion":"<!DOCTYPE html> <html> <head> <title>GPT Demo</title> </head> <body> <h1>Welcome to the GPT Demo</h1> <p>This is a demo of GPT on coding tasks.</p> </body> </html>"},{"prompt":"Using the given JSON data, write a function that returns the value associated with a given key. json_data = { \\"name\\": \\"John Smith\\", \\"age\\": 30, \\"occupation\\": \\"Software Engineer\\" }","completion":"def get_value(json_data, key): return json_data[key]"},{"prompt":"Compare the input list with a pre-defined list and return a new list containing only the elements that are present in both lists. my_list = [1, 2, 3, 4] pre_defined_list = [2, 4, 6, 8]","completion":"def compare_lists(my_list, pre_defined_list): new_list = [] for element in my_list: if element in pre_defined_list: new_list.append(element) return new_list"},{"prompt":"w would you modify the code to check whether the list contains an even number? list_data = [1, 2, 3, 4] for item in list_data: print(item)","completion":"list_data = [1, 2, 3, 4] flag = False for item in list_data: print(item) if item % 2 == 0: flag = True if flag: print(\\"List contains even number.\\")"},{"prompt":"Edit the function so that an element can be deleted from the list. def delete_element(list, element): # TODO","completion":"def delete_element(list, element): # iterate through the list for elem in list: if elem == element: list.remove(elem) return list"},{"prompt":"Rewrite the following piece of code to check if a string is a palindrome or not. String text = \\"malayalam","completion":"def is_palindrome(text): start = 0 end = len(text) - 1 while start < end: if text[start] != text[end]: return False start += 1 end -= 1 return True"},{"prompt":"Write a code to find the factorial of a given number using a recursive function.","completion":"def factorial(n): if n == 0: return 1 else: return n * factorial(n-1)"},{"prompt":"Write a code to reverse a string in Java.","completion":"public class Reverse { public static void main(String[] args) { String str = \\"Hello World\\"; // Output is reversed string System.out.println(reverseString(str)); } public static String reverseString(String str) { StringBuilder strBuilder = new StringBuilder(); char[] strChars = str.toCharArray(); for (int i = strChars.length - 1; i >= 0; i--) { strBuilder.append(strChars[i]); } return strBuilder.toString(); } }"},{"prompt":"Create an HTML page with a table containing 2 columns.","completion":"<!DOCTYPE html> <html> <head> <title>Table Design</title> </head> <body> <table> <tr> <th>Column 1</th> <th>Column 2</th> </tr> </table> </body> </html>"},{"prompt":"Create a program in Ruby to print the Fibonacci sequence until the 10th element.","completion":"def fibonacci_sequence a = 0 b = 1 10.times do yield(b) c = a a = b b = c + b end end fibonacci_sequence do |num| puts num end"},{"prompt":"Write a regular expression in JavaScript to find all hyperlinks in a piece of text.","completion":"/http[s]?://(?:[a-zA-Z]|[0-9]|[-_@.&+]|[!*(),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+/"},{"prompt":"Format the following JSON data into XML. { \\"name\\": \\"John Doe\\", \\"age\\": 34, \\"address\\": \\"123 Any Street, AnyTown, USA\\" }","completion":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?> <root> <name>John Doe</name> <age>34</age> <address>123 Any Street, AnyTown, USA</address> </root>"},{"prompt":"Create a style sheet in CSS to change the font size and font family of a text element with an id of \\"example_text\\".","completion":"#example_text { font-size: 20px; font-family: Arial, sans-serif; }"},{"prompt":"Write an HTML code to display a table of 3 columns and 5 rows.","completion":"<table> <tr> <th>Column1</th> <th>Column2</th> <th>Column3</th> </tr> <tr> <td>Row1_data1</td> <td>Row1_data2</td> <td>Row1_data3</td> </tr> <tr> <td>Row2_data1</td> <td>Row2_data2</td> <td>Row2_data3</td> </tr> <tr> <td>Row3_data1</td> <td>Row3_data2</td> <td>Row3_data3</td> </tr> <tr> <td>Row4_data1</td> <td>Row4_data2</td> <td>Row4_data3</td> </tr> <tr> <td>Row5_data1</td> <td>Row5_data2</td> <td>Row5_data3</td> </tr> </table>"},{"prompt":"Write a JavaScript code to copy an array including its elements. arr1 = [1, 2, 3]","completion":"function copyArray(arr) { let arr2 = arr.slice(); return arr2; } let arr1 = [1, 2, 3]; let arr2 = copyArray(arr1); console.log(arr2); // output: [1, 2, 3]"},{"prompt":"Compute the minimum string edit distance between two strings of same length. str1 = \\"kitten\\" str2 = \\"sitting","completion":"def minimumEditDistance(str1, str2): m = len(str1) n = len(str2) dp = [[0 for _ in range(n + 1)] for _ in range(m + 1)] for i in range(m + 1): for j in range(n + 1): if i == 0: dp[i][j] = j elif j == 0: dp[i][j] = i elif str1[i - 1] == str2[j - 1]: dp[i][j] = dp[i - 1][j - 1] else: dp[i][j] = 1 + min(dp[i][j - 1], dp[i - 1][j], dp[i - 1][j - 1] ) return dp[m][n] min_edit_distance = minimumEditDistance(str1, str2) print(min_edit_distance) # output: 3"},{"prompt":"Generate a JSON string from a given Python dictionary my_dict = { \\"title\\": \\"GPT Model Evaluation\\", \\"category\\": \\"Natural Language Processing\\", \\"score\\": 8 }","completion":"json.dumps(my_dict)"},{"prompt":"Create a CSS animation to animate a ball bouncing up and down","completion":"@keyframes bounce { 0%, 20%, 50%, 80%, 100% { transform: translateY(0); } 40% { transform: translateY(-50px); } 60% { transform: translateY(-45px); } } .ball { animation: bounce 1s ease infinite; }"},{"prompt":"Write a JavaScript class that generates a random integer between 1 and 100","completion":"class RandomInt { constructor() { this.min = 1; this.max = 100; } generateInt() { return Math.floor(Math.random() * (this.max - this.min + 1)) + this.min; } }"},{"prompt":"Generate a HTML page displaying the following information Company name: Acme Corp Company motto: “We make the impossible possible!”","completion":"<html> <head> <title>Acme Corp</title> </head> <body> <h1>Acme Corp</h1> <p>We make the impossible possible!</p> </body> </html>"},{"prompt":"Construct a loop to print all the numbers divisible by 3 between 1 and 20","completion":"for num in range(1, 21): if num % 3 == 0: print(num)"},{"prompt":"Construct a SQL query that gets the average salary of all employees who work in Department A","completion":"SELECT AVG(salary) FROM employees WHERE department = 'A'"},{"prompt":"Write a Python function to find all pairs in a given list of numbers whose sum equals a given target number Given List: [1, 4, 2, 9, 5] Target number: 7","completion":"def find_pairs_sum(numbers, target): res = [] for i in range(len(numbers)): for j in range(i + 1, len(numbers)): if numbers[i] + numbers[j] == target: res.append([numbers[i], numbers[j]]) return res"},{"prompt":"Create a MySQL query to get the maximum salary from the employees table section. Table structure: employees id | name | department | salary |","completion":"SELECT MAX(salary) FROM employees;"},{"prompt":"ert a new row in the table Inventory with itemname as \\"keyboard\\", quantity of 10, and price of 10.25. Table structure: Inventory id | itemname | quantity | price |","completion":"INSERT INTO Inventory (itemname, quantity, price) VALUES ('keyboard', 10, 10.25);"},{"prompt":"Parse this list of JSON objects to get the first name of the second employee. [ { \\"firstName\\": \\"John\\", \\"lastName\\": \\"Doe\\", \\"age\\": 28 }, { \\"firstName\\": \\"Alice\\", \\"lastName\\": \\"Smith\\", \\"age\\": 33 }, { \\"firstName\\": \\"Dave\\", \\"lastName\\": \\"Moore\\", \\"age\\": 42 } ]","completion":"const employeeList = [ { \\"firstName\\": \\"John\\", \\"lastName\\": \\"Doe\\", \\"age\\": 28 }, { \\"firstName\\": \\"Alice\\", \\"lastName\\": \\"Smith\\", \\"age\\": 33 }, { \\"firstName\\": \\"Dave\\", \\"lastName\\": \\"Moore\\", \\"age\\": 42 } ]; const secondEmployeeFirstName = employeeList[1].firstName; // Alice"},{"prompt":"dify the given css code to make the font size to 48px. body { font-family: \\"Roboto\\", sans-serif; font-size: 20px; }","completion":"body { font-family: \\"Roboto\\", sans-serif; font-size: 48px; }"},{"prompt":"Build a machine learning model to classify the type of iris flower.","completion":"from sklearn.datasets import load_iris from sklearn.ensemble import RandomForestClassifier # Load data iris_data = load_iris() X = iris_data.data y = iris_data.target # Create a model and train it model = RandomForestClassifier() model.fit(X, y) # Make predictions predictions = model.predict(X)"},{"prompt":"Construct an SQL statement to get the average salary of each department. Table structure: employees id | name | department | salary |","completion":"SELECT department, AVG(salary) FROM employees GROUP BY department;"},{"prompt":"Write a shell script to create a directory if it does not already exist.","completion":"if [ ! -d \\"directory_name\\" ]; then mkdir directory_name fi"},{"prompt":"Design a form in HTML that takes user name and date of birth.","completion":"<form> <label>Name:</label> <input type=\\"text\\" name=\\"name\\" placeholder=\\"Enter your name\\"> <label>Date of birth:</label> <input type=\\"date\\" name=\\"birthdate\\" placeholder=\\"Enter your Date of birth\\"> <input type=\\"submit\\" value=\\"Submit\\"> </form>"},{"prompt":"Write a CSS rule to set the background color to pink and the text color to white.","completion":"body { background-color: pink; color: white; }"},{"prompt":"Use the given code snippet to convert the data type of the x_data from float to integer. x_data = [3.4, 6.2, 3.7]","completion":"x_data = [int(x) for x in x_data]"},{"prompt":"What are the main data types in Python?","completion":"The main data types in Python are numbers, strings, lists, tuples, dictionaries, and sets."},{"prompt":"Given two strings, write a Python function that finds the common letters between them. String 1: apple String 2: orange","completion":"def find_common_letters(s1, s2): letters = set() for letter in s1: if letter in s2: letters.add(letter) return letters # Example s1 = 'apple' s2 = 'oranges' print(find_common_letters(s1, s2)) # Output: {'a', 'e'}"},{"prompt":"Create a function which takes a variable number of arguments, checks if all of them are a list, and then adds all the items in the lists. my_lists = [[1,2,3], [4,5], [6,7,8]]","completion":"# Function which takes variable arguments def add_lists(*args): # Check if all arguments are lists for arg in args: if not isinstance(arg, list): return \\"All the arguments should be a list.\\" # Add all items of the lists result = 0 for lst in args: # Iterate each item in the list for item in lst: result += item return result # Example my_lists = [[1,2,3], [4,5], [6,7,8]] print(add_lists(*my_lists)) # Output: 36"},{"prompt":"Create a function which takes a string, converts it to lowercase, and prints out the most commonly-used character in the string. string = \\"Hello World","completion":"def most_common_char(string): # Convert to lowercase string = string.lower() # Create an empty dict chars = dict() # Iterate over string for char in string: # Check if the character is in the dict if char in chars: chars[char] += 1 else: chars[char] = 1 # Get most common char most_common_char = sorted(chars.items(), key=lambda x: x[1], reverse=True)[0][0] return most_common_char # Example string = \\"Hello World\\" print(most_common_char(string)) # Output: l"},{"prompt":"Create a function which takes a set of numbers as argument and returns a dictionary containing the frequency of each number. my_set = {1, 2, 2, 3, 4, 5, 6}","completion":"def freq_dict(my_set): # Initialize a empty dict frequency_dict = dict() # Iterate over given set for num in my_set: # Add or update item in the dict frequency_dict[num] = frequency_dict.get(num, 0) + 1 return frequency_dict # Example my_set = {1, 2, 2, 3, 4, 5, 6} print(freq_dict(my_set)) # Output: {1: 1, 2: 2, 3: 1, 4: 1, 5: 1, 6: 1}"},{"prompt":"Write a function that takes a string, checks if it is a palindrome, and returns a corresponding boolean value. string = \\"racecar","completion":"def is_palindrome(string): # Reverse string reversed_string = string[::-1] # Compare strings if string == reversed_string: return True else: return False # Example string = \\"racecar\\" print(is_palindrome(string)) # Output: True"},{"prompt":"Write a function that takes a number x and multiplies it by itself n amount of times using recursion. x = 4 n = 3","completion":"def recursive_multiply(x, n): # Base case if n == 0: return 1 return x * recursive_multiply(x, n - 1) # Example x = 4 n = 3 print(recursive_multiply(x, n)) # Output: 64"},{"prompt":"Given a matrix of m*n size, write a program to find the largest number in the matrix. matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]","completion":"def largest_number_in_matrix(matrix): largest = -1 for row in matrix: for ele in row: largest = max(largest, ele) return largest matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]] print(largest_number_in_matrix(matrix)) # 9"},{"prompt":"Write a Python program to print a dictionary where the keys are numbers between 1 and 15 (both included) and the values are square of keys.","completion":"dct = {} for i in range(1, 16): dct[i] = i**2 print(dct)"},{"prompt":"Write a JavaScript program to extract the first word of a given string. str = \\"Hello World!","completion":"function firstWord(str) { return str.split(\\" \\")[0] } str = \\"Hello World!\\" console.log(firstWord(str)) // \\"Hello\\""},{"prompt":"Write a Java code to generate a Fibonacci number at a given index.","completion":"public class Fibonacci { public static int getFibonacciNumber(int index) { // base cases if (index == 0) { return 0; } if (index == 1 || index == 2) { return 1; } // recursive case return getFibonacciNumber(index - 1) + getFibonacciNumber(index - 2); } }"},{"prompt":"Write a JavaScript program to get the number of days in a given month of the current year.","completion":"function getDaysInMonth(month) { return new Date(2020, month + 1, 0).getDate(); } if (typeof module != 'undefined') { module.exports = getDaysInMonth; }"},{"prompt":"Write an HTML page to calculate the area of a circle given its radius.","completion":"<!DOCTYPE html> <html> <head> <title>Area of Circle</title> <script> // get radius from user var radius = prompt(\\"Enter the radius of Circle\\"); // calculate area var area = 3.14 * radius * radius; // print the area document.write(\\"Area of Circle : \\" + area); <\/script> </head> <body> </body> </html>"},{"prompt":"Explain what an abstract data type is and provide an example in C++.","completion":"An abstract data type is a type of data that is more a collection of related data rather than a particular type of data. An abstract data type allows the user to define a new data type with the desired properties and operations. For example, a stack is an abstract data type that is composed of a collection of items that can be stored and retrieved in a LIFO (last in, first out) manner. An example of implementing a stack as an abstract data type in C++ would be: #include <iostream> #include <stack> using namespace std; // Create an empty stack stack<int> s; // Push items onto the stack s.push(10); s.push(20); s.push(30); // Pop items from stack cout << s.top() << endl; s.pop(); cout << s.top() << endl; s.pop(); cout << s.top() << endl; s.pop(); return 0;"},{"prompt":"Write a Bash script to run a command and store its output in a variable.","completion":"#!/bin/bash # Run a command and store it output in a variable my_result=\\"(ls -l)\\" # Print the output echo \\"my_result\\""},{"prompt":"Create a SQL query to find out the average price of a product from a table. products (id, name, category, price)","completion":"SELECT AVG(price) FROM products;"},{"prompt":"Create a HTML page to show a result of the sum of two numbers.","completion":"<!DOCTYPE html> <html> <head> <title>Sum of Two Numbers</title> <script> // get numbers from user var a = prompt(\\"Enter the first number\\"); var b = prompt(\\"Enter the second number\\"); // calculate the sum var sum = +a + +b; // print the result document.write(\\"Result : \\" +sum); <\/script> </head> <body> </body> </html>"},{"prompt":"Create a SQL query that gets the list of names of all employees who work at the company 'ABC'.","completion":"SELECT name FROM employees WHERE company = 'ABC';"},{"prompt":"Answer the following question about the data structure Stack. What is the order of accessing elements from the Stack?","completion":"The order of accessing elements from the Stack is Last In First Out (LIFO)."},{"prompt":"Write a bash script that can add two numbers.","completion":"#!/bin/bash number1=2 number2=2 sum=((number1 + number2)) echo \\"The sum is: sum\\""},{"prompt":"Create a single line program in Python to check if a number is divisible by 5.","completion":"print(lambda x: x%5 == 0, \\"is divisible by 5.\\")"},{"prompt":"Create a JavaScript program to capitalize each word in a given string.","completion":"function capitalize(str) { let words = str.split(' '); let capitalizedWords = words.map(word => word.charAt(0).toUpperCase() + word.slice(1)); let result = capitalizedWords.join(' '); return result; }"},{"prompt":"Python, create a function that takes 2 integers and returns the maximum number.","completion":"def maximum(a, b): if a > b: return a else: return b"},{"prompt":"Create an HTML page with 4 sections containing text.","completion":"<html> <body> <h1>Heading1</h1> <p>Paragraph1</p> <h2>Heading2</h2> <p>Paragraph2</p> <h3>Heading3</h3> <p>Paragraph3</p> <h4>Heading4</h4> <p>Paragraph4</p> </body> </html>"},{"prompt":"Write an algorithm in MIPS assembly language to determine if a given character is an uppercase letter or not. Character: ‘A’","completion":"li t0, 65 li t1, 90 beq t0, t1, isUpperLetter j isNotUpperLetter isUpperLetter: # Do something isNotUpperLetter: # Do something"},{"prompt":"What is the Big O time complexity of selection sort?","completion":"Selection sort has a time complexity of O(N2) in the worst case."},{"prompt":"Write a SQL statement to create a new table named \\"Users\\" in a database.","completion":"CREATE TABLE Users ( id INT NOT NULL, name VARCHAR(50) NOT NULL, age INT NOT NULL );"},{"prompt":"Create a Windows batch command to check if a folder named \\"Temp\\" exists or not. Folder Name: Temp","completion":"IF EXIST \\"Temp\\" ( ECHO Folder exists ) ELSE ( ECHO Folder does not exist )"},{"prompt":"Write a LaTex command that displays a matrix of size 2x3.","completion":"begin{pmatrix} a & b & c d & e & f end{pmatrix}"},{"prompt":"Write a regex pattern for identifying a valid email address.","completion":"^[w-.]+@([w-]+.)+[w-]{2,4}"},{"prompt":"Give an example input to the following instruction. Write a JavaScript code snippet that calculates the sum of the squares of two numbers.","completion":"let x = 3; let y = 2; let sum = x * x + y * y; console.log(sum); // prints 13"},{"prompt":"Write an algorithm for sorting an array in ascending order using the Bubble Sort technique. [3, 7, 4, 1, 9]","completion":"// Start loop for i in range(length of array): // Start inner loop for j in range(i+1, length of array): // Compare elements and swap if needed if array[i] > array[j]: temp = array[i] array[i] = array[j] array[j] = temp // End inner loop // End loop // Result: array is now sorted in ascending order [1, 3, 4, 7, 9]"},{"prompt":"Write an MySQL query to create a view displaying the average monthly income per worker Table contains workerid, month, income colum","completion":"CREATE VIEW averageMonthlyIncome AS SELECT workerid, MONTH(month) AS Month, AVG(income) AS avg_income FROM Table GROUP BY workerid, MONTH(month);"},{"prompt":"Come up with Java code to find the square root of a given number. 9","completion":"public double squareRoot(double x) { double start = 0; double end = x; double precision = 0.00001; while (end - start > precision) { double mid = (start + end) / 2; double midSqr = mid * mid; if (midSqr > x) { end = mid; } else { start = mid; } } return (start + end) / 2; }"},{"prompt":"Write an algorithm to solve the Stock Span problem. [100, 80, 60, 70, 60, 75, 85]","completion":"// Create an empty stack stack stack; int stock_span[N] = { }; // Push index of first element to stack stack.push(0); // Calculate stock span values for rest of the elements for (int i=1; i<N; i++) { // Pop elements from stack while stack is not empty and top of // stack is smaller than price[i] while (!stack.empty() && arr[stack.top()] <= arr[i]) stack.pop(); // If stack becomes empty, then price[i] is greater than all elements // on left of it, i.e., price[0], price[1],..price[i-1]. Else price[i] // is greater than elements after top of stack stock_span[i] = (stack.empty())? (i + 1) : (i - stack.top()); // Push this element to stack stack.push(i); }"},{"prompt":"Generate a valid Python expression that multiplies the given numbers. 3 and 4","completion":"3 * 4"},{"prompt":"Write an algorithm for the Caesar Cipher encryption technique Text: \\"Hello, World!\\" Key: 3","completion":"// Take each letter of the string for(i=0; i<text.length; i++) { // Find the character code of each letter letter = text.charCodeAt(i); // Apply the key and add it to character code cipher = letter + key; // Convert the cipher back to letters encrypted_letter = String.fromCharCode(cipher); // Store the encrypted letters into an encrypted string encrypted_string += encrypted_letter; } // Result: encrypted_string = \\"Khoor,#Zruog!\\""},{"prompt":"Edit the given Python program to print the sum of two given numbers firstNumber = 5 secondNumber = 10 print(\\"The difference is: \\", firstNumber - secondNumber)","completion":"firstNumber = 5 secondNumber = 10 print(\\"The sum is: \\", firstNumber + secondNumber)"},{"prompt":"Write a pseudocode for the Depth-First Search algorithm","completion":"// Define a function DFS(vertex): DFS(vertex): // Mark the current node as Visited Mark the current node as Visited // Loop through the adjacent nodes for each adjacent node of vertex: // If the adjacent node has not been visited if the adjacent node has not been visited: // Call DFS on the adjacent node call DFS(adjacent node) // Call the DFS function on the root node call DFS(root node)"},{"prompt":"Design a JavaScript function that can convert any string into a camel case version.","completion":"function camelCase(str){ const modifiedString = str.replace(/(?:^w|[A-Z]|bw|s+)/g, function(match, index) { if (+match === 0) return \\"\\"; // or if (/s+/.test(match)) for white spaces return index === 0 ? match.toLowerCase() : match.toUpperCase(); }); return modifiedString; }"},{"prompt":"Complete the following Java code to sort a list of integers. List<Integer> list = Arrays.asList(5, 2, 8, 1); // Code to sor","completion":"List<Integer> list = Arrays.asList(5, 2, 8, 1); Collections.sort(list);"},{"prompt":"Create a Javascript object that can generate a random list of numbers between 1 and 10.","completion":"let randomGenerator = { getRandomList : function(length) { let randomList = []; for (let i = 0; i < length; i++) { randomList.push(Math.floor(Math.random() * 10) + 1); } return randomList; } };"},{"prompt":"Write a HTML structure with a form that includes \`\`name\`\` and \`\`email\`\` fields.","completion":"<form> <label>Name: </label> <input type=\\"text\\" name=\\"name\\" ></input> <br> <label>Email: </label> <input type=\\"email\\" name=\\"email\\" ></input> <br> <input type=\\"submit\\" value=\\"Submit\\" ></input> </form>"},{"prompt":"Design a JavaScript function to convert a given time in 24-hour notation to 12-hour notation.","completion":"function convertTime(time) { const [ hours, minutes ] = time.split(':'); const convertedTime = hours <= 12 ? \`{ hours }:{ minutes } AM\` : \`{ hours - 12 }:{ minutes } PM\`; return convertedTime; }"},{"prompt":"Create a Python function to generate a Fibonacci sequence of a given length.","completion":"def generate_fibonacci(length): result = [0, 1] for i in range(2,length): result.append(result[i-2] + result[i-1]) return result"},{"prompt":"Write a SQL query to get all the users who have registered in the last 7 days.","completion":"SELECT * FROM Users WHERE registration_date > DATE_SUB(CURDATE(), INTERVAL 7 DAY);"},{"prompt":"Create a CSS style to underline a given element.","completion":"element { text-decoration: underline; }"},{"prompt":"What is an inheritance in Java?","completion":"In Java, inheritance is a mechanism in which one class (known as the subclass) inherits the characteristics of another class (known as the superclass). This enables the subclass to reuse the attributes and methods of the superclass without having to code them again. It also allows for increased code modularity and code reusability. With class inheritance, a subclass can obtain all of the public and protected methods and fields from its parent class. This allows the developer to reuse existing code and to avoid writing the same code over and over again. Additionally, class inheritance promotes polymorphism, which allows the same code to be used with different objects."},{"prompt":"Write a function in PHP that takes one parameter and checks if it is a valid email address. email_address = \\"hello@example.com","completion":"function validateEmail(email_address) { if (filter_var(email_address, FILTER_VALIDATE_EMAIL)) { return true; } else { return false; } } validateEmail(email_address) // returns true"},{"prompt":"Write a JavaScript snippet to detect whether or not the current browser is Internet Explorer.","completion":"if (navigator.userAgent.indexOf('MSIE') !== -1 || navigator.appVersion.indexOf('Trident/') > -1) { console.log('Browser is Internet Explorer.'); } else { console.log('Browser is not Internet Explorer.'); }"},{"prompt":"What is a \\"Boolean\\" in Java?","completion":"In Java, a Boolean is a data type that can store two possible values - true or false. Boolean types are typically used to represent predicates such as \\"is the door open?\\" or \\"does the user have permission to access this content?\\". Boolean expressions can be used in decision making, such as if-else statements and multiple condition checks. A Boolean object can be declared using the keyword \\"boolean\\" or the class \\"java.lang.Boolean\\"."},{"prompt":"Create a CSS snippet to set a font size of 18px for all elements in the webpage.","completion":"* { font-size: 18px; }"},{"prompt":"Create a JavaScript code snippet to get the current date.","completion":"let currentDate = new Date(); console.log(currentDate);"},{"prompt":"Write a function to detect the smallest window in a string containing all characters of another string. string1 = \\"abcde\\", string2 = \\"ade","completion":"def smallest_window(str1, str2): min_str = \\"\\" min_size = float(\\"inf\\") for i in range(len(str1)): for j in range(i+1, len(str1)): curr_str = str1[i:j+1] count = 0 for ch in str2: if ch in curr_str: count += 1 if len(curr_str) < min_size and count == len(str2): min_str = curr_str min_size = len(curr_str) return min_str print(smallest_window(\\"abcde\\", \\"ade\\"))"},{"prompt":"Given a matrix, write a program to traverse it spirally. matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]","completion":"def spiral_traverse(arr): res = [] top_row, bottom_row = 0, len(arr) - 1 left_col, right_col = 0, len(arr[0]) - 1 while top_row <= bottom_row and left_col <= right_col: for i in range(left_col, right_col + 1): res.append(arr[top_row][i]) top_row += 1 for i in range(top_row, bottom_row + 1): res.append(arr[i][right_col]) right_col -= 1 for i in range(right_col, left_col - 1, -1): res.append(arr[bottom_row][i]) bottom_row -= 1 for i in range(bottom_row, top_row - 1, -1): res.append(arr[i][left_col]) left_col += 1 return res print(spiral_traverse(matrix))"},{"prompt":"Given a list of numbers, write a program to check if there exists a triplet in the list whose sum is equal to the given number. nums = [2, 7, 11, 15], target = 24","completion":"def triplet_sum(nums, target): for i in range(len(nums) - 2): for j in range(i+1, len(nums) - 1): for k in range(j+1, len(nums)): if nums[i] + nums[j] + nums[k] == target: return True return False print(triplet_sum(nums, target))"},{"prompt":"Create a HTML page that includes a table with 3 columns and 3 rows.","completion":"<html> <head> <title>Table Example</title> </head> <body> <table> <tr> <th>Column 1 Header</th> <th>Column 2 Header</th> <th>Column 3 Header</th> </tr> <tr> <td>Row 1, Column 1</td> <td>Row 1, Column 2</td> <td>Row 1, Column 3</td> </tr> <tr> <td>Row 2, Column 1</td> <td>Row 2, Column 2</td> <td>Row 2, Column 3</td> </tr> <tr> <td>Row 3, Column 1</td> <td>Row 3, Column 2</td> <td>Row 3, Column 3</td> </tr> </table> </body> </html>"},{"prompt":"mplement a heuristic algorithm in Python to find an approximate solution to the traveling salesman problem.","completion":"def traveling_salesman_heuristic(distance_matrix): # Create a list of cities num_cities = len(distance_matrix) cities = range(num_cities) # Create a list of visited cities and an empty list for the route visited = [False for _ in range(num_cities)] route = [] # Start from the first city current_city = 0 visited[current_city] = True route.append(current_city) # Find the total distance of the route so far total_distance = 0 # Keep looping until all cities are visited while False in visited: # Find the nearest unvisited city best_city = 0 best_distance = float('inf') for i in range(1, num_cities): if not visited[i] and distance_matrix[current_city][i] < best_distance: best_city = i best_distance = distance_matrix[current_city][i] # Mark the best city as visited visited[best_city] = True # Add the best city to the route route.append(best_city) # Accumulate the total distance total_distance += best_distance # Change the current city to the best city current_city = best_city # Add the distance from the last city to the first total_distance += distance_matrix[route[-1]][route[0]] return route, total_distance"},{"prompt":"Compare two Python objects to check if they have the same values. obj1 = {'a':1,'b':2} obj2 = {'b':2, 'a':1}","completion":"def compareObjects(obj1, obj2): ''' Checks if two Python objects have the same value ''' if obj1 == obj2: return True else: return False"},{"prompt":"Write a Java program that finds the first 5 prime numbers, starting from 2.","completion":"public class PrimeFinder { public static void main(String[] args) { int count = 0; int num = 1; while(count < 5) { num = num + 1; if (isPrime(num)) { System.out.println(num); count++; } } } public static boolean isPrime(int n) { for (int i = 2; i <= Math.sqrt(n); i++) { if (n % i == 0) { return false; } } return true; } }"},{"prompt":"the given CSS stylesheet, change all the h1 heading text to purple. h1 { font-size: 3rem; font-weight: bold; color: #b0b0b0; }","completion":"h1 { font-size: 3rem; font-weight: bold; color: #9100ff; }"},{"prompt":"Using a for loop, print all the odd numbers between 1 and 20 (inclusive).","completion":"for i in range(1, 21): if i % 2 != 0: print(i)"},{"prompt":"Create a Python class that accepts a name and an age to create a person instance.","completion":"class Person: def __init__(self, name, age): self.name = name self.age = age def __str__(self): return f'Name: {self.name}, Age: {self.age}'"},{"prompt":"Generate a random 10 character alphanumeric string in Python.","completion":"import random import string def generate_random_string(): return ''.join(random.choices(string.ascii_letters + string.digits, k=10))"},{"prompt":"Customize a WordPress theme to ensure its compatibility with the latest version of the WordPress software.","completion":"Update the functions.php file of your WordPress theme to use the latest functions, classes, constants, and APIs supplied by WordPress. Also, delete any deprecated code and features that are not supported in the latest version of WordPress. Using the WordPress Theme Check plugin is highly recommended to check the compatibility of any WordPress theme with the newest version of WordPress."},{"prompt":"Develop a machine learning system to detect fraud.","completion":"The machine learning system should use supervised learning techniques to learn from labeled data. It should identify trends, anomalies and irregularities by leveraging statistical techniques such as clustering and classification, feature engineering, and outlier detection. The system should utilize data from sources such as transaction data, customer behavior data and external risk information sources such as IP addresses, device information and anomaly detection."},{"prompt":"Generate a web page with a navigation bar on it.","completion":"<!DOCTYPE html> <html> <head> <title>Navbar Page</title> <style> .navbar { width: 100%; background-color: #555; } .navbar a { float: left; padding: 12px; color: white; text-decoration: none; font-size: 17px; } .navbar a:hover { background-color: #000; } </style> </head> <body> <div class=\\"navbar\\"> <a href=\\"#home\\">Home</a> <a href=\\"#about\\">About</a> <a href=\\"#contact\\">Contact</a> </div> </body> </html>"},{"prompt":"Compile a C program to print the given text “Hello World” to the terminal.","completion":"#include<stdio.h> int main() { printf(\\"Hello World\\"); return 0; }"},{"prompt":"Develop an algorithm to implement a tree traversal.","completion":"A tree traversal is an algorithm for visiting all the nodes of a tree data structure. There are three common traversal algorithms: pre-order, in-order, and post-order. Pre-order traversal visits the root node first, then the left subtree, and then the right subtree. In-order traversal visits the left subtree first, then the root node, and then the right subtree. Post-order traversal visits the left subtree first, then the right subtree, and then the root node."},{"prompt":"mplement a basic calculator in Java.","completion":"import java.util.Scanner; public class Calculator { public static void main(String[] args) { int number1, number2; char operation; double result; Scanner scanner = new Scanner(System.in); System.out.print(\\"Enter number 1: \\"); number1 = scanner.nextInt(); System.out.print(\\"Enter number 2: \\"); number2 = scanner.nextInt(); System.out.print(\\"Choose operation (+, -, *, /): \\"); operation = scanner.next().charAt(0); switch(operation) { case '+': result = number1 + number2; break; case '-': result = number1 - number2; break; case '*': result = number1 * number2; break; case '/': result = (double) number1 / number2; break; default: System.out.println(\\"Invalid operation!\\"); return; } System.out.println(\\"Result: \\" + result); } }"},{"prompt":"Given a list of numbers, write a function to determine if the list is an arithmetic sequence. nums = [2, 4, 6, 8, 10]","completion":"def is_arithmetic_sequence(nums): difference = nums[1] - nums[0] for i in range(len(nums)-1): if nums[i+1] - nums[i] != difference: return False return True"},{"prompt":"Write a SQL query to calculate the total number of items purchased within the last 24 hours.","completion":"SELECT SUM(quantity) FROM orders WHERE order_date > DATE_SUB(NOW(), INTERVAL 24 HOUR);"},{"prompt":"Create a function to remove the second largest element in a given array. arr = [5, 4, 2, 1, 3]","completion":"def remove_second_largest(arr): max_arr = max(arr) arr.remove(max_arr) return max(arr)"},{"prompt":"Write a SQL query to list all unique departments from the employee table.","completion":"SELECT DISTINCT department FROM employee"},{"prompt":"Given a String and a list of words, write a Python program to determine if the String is a sequence of any of the words in the list. string = \\"thequickbrownfox\\" words_list = [\\"the\\", \\"quick\\", \\"brown\\", \\"fox\\"]","completion":"def is_valid_sequence(string, words_list): str_index = 0 for word in words_list: if len(string[str_index:]) < len(word): return False if string[str_index:str_index+len(word)] != word: return False str_index += len(word) return True"},{"prompt":"Write a Python function to print out the squares of the numbers between 1 and 10.","completion":"def print_squares(): for i in range(1, 11): print(i**2)"},{"prompt":"Create a Python class for a thread-safe queue.","completion":"import threading class ThreadSafeQueue(): def __init__(self): self.queue = [] self.lock = threading.Lock() def push(self, item): with self.lock: self.queue.append(item) def pop(self): with self.lock: item = self.queue.pop(0) return item"},{"prompt":"Given a list of numbers, find the lowest and highest numbers in the list. numbers = [5, 8, 2, 9, 4, 7]","completion":"def find_min_max(numbers): lowest = numbers[0] highest = numbers[0] for num in numbers: if num < lowest: lowest = num if num > highest: highest = num return (lowest, highest)"},{"prompt":"Write a function to find the median of 3 numbers.","completion":"def median_of_three(x, y, z): if x>= y: if y>=z: return y elif x>=z: return z else: return x else: if x>=z: return x elif y>=z: return z else: return y"},{"prompt":"Given a 2D array, print out all the elements in a spiral order. [ [1, 2, 3, 4, 5], [6, 7, 8, 9, 10], [11, 12, 13, 14, 15], [16, 17, 18, 19, 20], ]","completion":"def print_in_spiral_order(arr): row_start = 0 row_stop = len(arr) - 1 col_start = 0 col_stop = len(arr[0]) - 1 while row_start <= row_stop and col_start <= col_stop: for i in range(col_start, col_stop + 1): print(arr[row_start][i], end=' ') row_start += 1 for i in range(row_start, row_stop + 1): print(arr[i][col_stop], end=' ') col_stop -= 1 if row_start <= row_stop: for i in range(col_stop, col_start - 1, -1): print(arr[row_stop][i], end=' ') row_stop -= 1 if col_start <= col_stop: for i in range(row_stop, row_start - 1, -1): print(arr[i][col_start], end=' ') col_start += 1"},{"prompt":"Sort the following numbers ascendingly. arr = [3, 9, 5, 8, 6, 4]","completion":"def sort_ascendingly(arr): return sorted(arr)"},{"prompt":"Create an array of five numbers and output the result in reverse order. 1, 2, 3, 4, 5","completion":"ans = [5,4,3,2,1]"},{"prompt":"Create a SQL query to find the names of all students who have scored at least 80 points in Maths and Science.","completion":"SELECT s.name FROM student s WHERE s.math > 80 AND s.science > 80"},{"prompt":"Create a dictionary with key as the string and values as the number of occurrences of the respective character in a given string. mystring","completion":"dict = { 'm': 1, 'y': 1, 's': 1, 't': 1, 'r': 1, 'i': 1, 'n': 1, 'g': 1 }"},{"prompt":"Generate a random string of 10 characters with two vowels, three consonants and five digits.","completion":"import random def generate_string(vowels,consonants,digits): s = '' for _ in range(vowels): s+=random.choice('aeiou') for _ in range(consonants): s+=random.choice('bcdfghjklmnpqrstvwxyz') for _ in range(digits): s+=str(random.randint(0,9)) return s print(generate_string(2,3,5))"},{"prompt":"Given a list of integers, write a program to check if there exist any pairs of numbers that sum to a given number. v = [2, 3, 4, 9], sum = 8","completion":"def findSumPairs(v, sum): v.sort() l = 0 r = len(v) - 1 while l < r: if v[l] + v[r] == sum: return True elif v[l] + v[r] > sum: r -= 1 else: l += 1 return False v = [2, 3, 4, 9] sum = 8 print(findSumPairs(v, sum))"},{"prompt":"Create a Java program that takes an array of six elements and prints out the sum of the three largest values. [3, 8, 4, 16, 1, 7]","completion":"public class Main { public static void main(String[] args) { int[] arr = {3, 8, 4, 16, 1, 7}; int sum = 0; int largest1 = arr[0]; int largest2 = 0; int largest3 = 0; for (int i = 1; i < arr.length; i++) { if (arr[i] > largest1) { largest3 = largest2; largest2 = largest1; largest1 = arr[i]; } else if (arr[i] > largest2) { largest3 = largest2; largest2 = arr[i]; } else if (arr[i] > largest3) { [ largest3 = arr[i]; } } sum = largest1 + largest2 + largest3; System.out.println(\\"The sum of the three largest values is: \\" + sum); } }"},{"prompt":"Classify the following text as one of four categories: sport, technology, health, and entertainment. Apple just released their new line of laptops.","completion":"technology"},{"prompt":"Count the total number of words in a given text. The quick brown fox jumped over the lazy dog.","completion":"9"},{"prompt":"ert the correct syntax to define a constructor for the class Person given below. class Person { String name; int age; }","completion":"class Person { String name; int age; Person(String name, int age) { this.name = name; this.age = age; } }"},{"prompt":"Build a website with HTML and CSS containing three headings and two paragraphs.","completion":"<html> <head> <style> h1 { color: red; font-size: 32px; } h2 { color: blue; font-size: 24px; } h3 { color: green; font-size: 16px; } </style> </head> <body> <h1>Heading 1</h1> <p>This is a paragraph.</p> <h2>Heading 2</h2> <p>This is a second paragraph.</p> <h3>Heading 3</h3> </body> </html>"},{"prompt":"Write a JavaScript program to check if a given string is a palindrome (i.e. reads the same left-to-right as right-to-left). madam","completion":"function isPalindrome(str) { return str == str.split('').reverse().join(''); } console.log(isPalindrome('madam')); // output: true"},{"prompt":"Take a given array and find the number of unique values. [3, 8, 4, 3, 16, 8, 1]","completion":"function countUniqueValues(arr) { let seen = {}; let count = 0; for (let num of arr) { if (!seen[num]) { seen[num] = true; count++; } } return count; } console.log(countUniqueValues([3, 8, 4, 3, 16, 8, 1])); // output: 5"},{"prompt":"Find the maximum of three integers without using any comparison operator.","completion":"public static int max(int a, int b, int c) { int x = Math.max( a, b ); int y = Math.max( b, c ); int z = Math.max( x, y ); return z; }"},{"prompt":"Create a SQL query to join two tables with the condition that the result should include all rows from the first table, even if there is no match in the second table. Table1: id | name | addresses 1 | Alice | 123 street 2 | Bob | 456 avenue Table2: id | name 2 | Bob","completion":"SELECT * FROM Table1 LEFT JOIN Table2 ON Table1.id = Table2.id"},{"prompt":"Write a JavaScript code to compare two arrays and check whether they are exactly same or not. array1 = [3, 8, 4]; array2 = [3, 8, 4];","completion":"function arraysEqual(arr1, arr2) { if (arr1.length !== arr2.length) return false; for (let i = 0; i < arr1.length; i++) { if (arr1[i] !== arr2[i]) return false; } return true; } console.log(arraysEqual([3, 8, 4], [3, 8, 4])); // output: true"},{"prompt":"Create a Angular component which has a text field and prints the user input when the user clicks a button.","completion":"@Component({ selector: 'app-input-form', template: \` <input type=\\"text\\" [(ngModel)]=\\"userInput\\" /> <button (click)=\\"printInput()\\">Print User Input</button> \` }) export class InputFormComponent { userInput: string; printInput() { console.log(this.userInput) } }"},{"prompt":"Write a Bash script to create a new directory given a name and parent directory. Name: new_dir Parent Directory: /home/user","completion":"#!/usr/bin/env bash DIR=\\"/home/user/new_dir\\" if [ ! -d \\"DIR\\" ]; then mkdir \\"DIR\\" fi"},{"prompt":"Output a valid C++ code to implement a Binary Tree.","completion":"class Node { public: int data; Node *left; Node *right; Node(int d) { data = d; left = NULL; right = NULL; } }; class BinaryTree { public: Node *root; BinaryTree() { root = NULL; } };"},{"prompt":"Construct an algorithm that finds the minimum element in an array of values. [5, 4, 11, 7, 12, 55, 3]","completion":"Create a variable called min and set its value to be the first element of the array. Loop through elements of the array and compare the value at each index to the value of min. If the value at the current index is less than min, update min with the current index's value. When the loop has finished, min will contain the minimum element of the array."},{"prompt":"Write a SQL query to select all rows in the table 'students' whose marks are greater than 25.","completion":"SELECT * FROM students WHERE marks > 25;"},{"prompt":"Output the output of this C++ program. #include <iostream> using namespace std; int main() { int x, y; cin >> x >> y; cout << x + y; return 0; }","completion":"Input: 5 6 Output: 11"},{"prompt":"Write a MySQL query to select all the rows from the table 'employees' where the employee name starts with the letter 'A'.","completion":"SELECT * FROM employees WHERE employee_name LIKE 'A%';"},{"prompt":"Given a sorted array and a target value, write a function in JavaScript to search for the target value. arr = [1, 3, 5, 6, 8, 9, 10] target = 6","completion":"function search(arr, target) { let left = 0; let right = arr.length - 1; while (left <= right) { let mid = Math.floor((left + right) / 2); if (arr[mid] === target) { return mid; } else if (arr[mid] > target) { right = mid - 1; } else { left = mid + 1; } } return -1; } index = search(arr, target); console.log(index); # Output: 3"},{"prompt":"You are given an array of strings. Write a function in C++ to remove all empty strings from the array. arr = {\\"\\", \\"stack\\", \\"overflow\\", \\"\\"}","completion":"#include <algorithm> void removeEmptyStrings(string arr[], int n) { arr = remove_if(arr, arr+n, [](const string& s){ return s.empty();} ); n = remove(arr, arr+n, \\"\\"); }"},{"prompt":"Create a function in JavaScript that reverses the given list of strings. list = [\\"stack\\", \\"overflow\\", \\"hello\\"]","completion":"function reverseStringList(list) { return list.reverse(); } rev_list = reverseStringList(list); console.log(rev_list); # Output: [\\"hello\\", \\"overflow\\", \\"stack\\"]"},{"prompt":"You are given a 2-dimensional array. Write a function in Python to find the sum of each row. arr = [[1, 3, 2], [4, 6, 5], [7, 9, 8]]","completion":"def row_sum(arr): row_sum_arr = [] for row in arr: row_sum_arr.append(sum(row)) return row_sum_arr row_sum_arr = row_sum(arr) print(row_sum_arr) # Output: [6, 15, 24]"},{"prompt":"Write a C++ program to print the numbers from 0 to n (in ascending order). n=20","completion":"#include <iostream> using namespace std; int main() { for (int i = 0; i <=20; i++) cout << i << \\"n\\"; return 0; }"},{"prompt":"Design a query in PostgreSQL to print the minimum and maximum of a given field. Table name: Sales Field name: Price","completion":"SELECT MIN(Price), MAX(Price) FROM Sales;"},{"prompt":"Concatenate two lists in Python (using an appropriate method). list1 = [1,2,3,4] list2 = [5,6,7,8]","completion":"list3 = list1 + list2"},{"prompt":"Create a SELECT query in MySQL to find the records in a given table that satisfy a certain condition. Table Name: orders Condition: quantity > 20","completion":"SELECT * FROM orders WHERE quantity > 20;"},{"prompt":"Write a function in C# for sorting an array (using an appropriate sorting algorithm).","completion":"public static void SortArray(int[] arr) { int n = arr.Length; for (int i = 0; i < n - 1; i++) { int min_idx = i; for (int j = i + 1; j < n; j++) if (arr[j] < arr[min_idx]) min_idx = j; int temp = arr[min_idx]; arr[min_idx] = arr[i]; arr[i] = temp; } }"},{"prompt":"Define a function in Python that takes an integer and returns \\"positive\\" if it is positive, \\"zero\\" if the integer is 0, and \\"negative\\" if the integer is negative.","completion":"def pos_neg_zero(num): if num > 0: return \\"positive\\" elif num < 0: return \\"negative\\" else: return \\"zero\\""},{"prompt":"Describe the algorithm and time complexity of selection sort.","completion":"The selection sort algorithm works by repeatedly finding the minimum element in an unsorted list and then swapping it with the element in the current position. The algorithm has a time complexity of O(n^2) as it has to iterate through both the subarray to find the minimum element and then swap it."},{"prompt":"mplement a SQL query to select all distinct entries from a table.","completion":"SELECT DISTINCT * FROM table_name;"},{"prompt":"Write a SQL query to assess the average order value in the past two weeks.","completion":"SELECT AVG(order_value) FROM orders WHERE order_date BETWEEN CURDATE() - INTERVAL 2 WEEK AND CURDATE();"},{"prompt":"Create a program in Java to print the Fibonacci number at the end of the given range. 10","completion":"public class Fibonacci { public static void main(String args[]) { int n = 10; int a = 0, b = 1, c; if (n == 1) System.out.println(\\"Fibonacci of \\" + n + \\" is \\" + a); else { for (int i = 2; i <= n; i++) { c = a + b; a = b; b = c; } System.out.println(\\"Fibonacci of \\" + n + \\" is \\" + b); } } }"},{"prompt":"Create a program to lowercase all characters of a given string. HeLLo WoRLd","completion":"public class LowerCase{ public static void main(String args[]) { String str = \\"HeLLo WoRLd\\"; System.out.println(\\"Original string: \\" + str); System.out.println(\\"Lowercase string: \\" + str.toLowerCase()); } }"},{"prompt":"mplement a C++ program to diaplay prime numbers between two given numbers. 5 10","completion":"#include<iostream> using namespace std; void prime(int a, int b) { while (a<b) { bool prime = true; for(int i = 2; i <= a/2; ++i) { if(a % i == 0) { prime = false; break; } } if (prime) cout << a << \\" \\"; ++a; } } int main() { int a, b; cin >> a >> b; cout << \\"Prime numbers between \\" << a <<\\" and \\" << b <<\\" are: \\"; prime(a, b); return 0; }"},{"prompt":"Write an SQL query for creating a table with two columns, one for a primary key and one for a text.","completion":"CREATE TABLE my_table ( id INT AUTO_INCREMENT PRIMARY KEY, text TEXT );"},{"prompt":"Write a sentence to describe how does a stack data structure works.","completion":"A stack data structure works by allowing elements to be added or removed from the top of the stack in a Last-In-First-Out (LIFO) order."},{"prompt":"Write an SQL query to retrieve all the columns and the total count of each column record from a table.","completion":"SELECT *, COUNT(*) AS total_count FROM [table_name] GROUP BY *;"},{"prompt":"Convert the following sentence into a valid regular expression. The text must contain the words “start”, “end”, and “here”.","completion":"^.*start.*end.*here.*"},{"prompt":"Create a JavaScript code snippet to get the last three characters from a given string. str = 'Hello World'","completion":"var last3Char = str.substring(str.length - 3); console.log(last3Char);"},{"prompt":"Calculate the sum of the following 2-dimensional array in Python. arr = [[1, 2], [3, 4], [5, 6]]","completion":"def sum_2d_array(arr): result = 0 for row in arr: for num in row: result += num return result print(sum_2d_array([[1, 2], [3, 4], [5, 6]]))"},{"prompt":"Construct this HTML table including the table head and body. <table> <thead> <th>Name </th> <th>Age </th> <th>Gender </th> </thead> <tbody> <tr> <td>John </td> <td>22 </td> <td>Male </td> </tr> <tr> <td>Sarah </td> <td>29 </td> <td>Female </td> </tr> <tr> <td>Alex </td> <td>17 </td> <td>Male </td> </tr> </tbody> </table>","completion":"<table> <thead> <th>Name</th> <th>Age</th> <th>Gender</th> </thead> <tbody> <tr> <td>John</td> <td>22</td> <td>Male</td> </tr> <tr> <td>Sarah</td> <td>29</td> <td>Female</td> </tr> <tr> <td>Alex</td> <td>17</td> <td>Male</td> </tr> </tbody> </table>"},{"prompt":"Create a function to group an array of numbers based on the following conditions. array = [3, 15, 10, 5, 11, 14] conditions = [((3 <= x) & (x <= 10)), ((11 <= x) & (x <= 14))]","completion":"def group_arrays(array, conditions): groups = [] for condition in conditions: group = [x for x in array if condition(x)] groups.append(group) return groups"},{"prompt":"Analyze the computational complexity of the following piece of code. int fun(int n){ if(n < 2){ return n; } return fun(n-1) + fun(n-2); }","completion":"The function has a computational complexity of O(2^n) as it involves recursive calls. Each recursive call makes two additional calls, thus each call leads to two additional calls etc. Thus, the time complexity of the algorithm is exponential."},{"prompt":"Reverse a string using the built-in function in R programming language.","completion":"rev_string <- function(string) { rev_string <- paste(rev(strsplit(string, \\"\\")[[1]]), sep = \\"\\") return(rev_string) }"},{"prompt":"Create a conditional statement in C++ to check if a given number is a two-digit number or not.","completion":"if (number >= 10 && number <= 99) cout << \\"Number is a two-digit number.\\" << endl; else cout << \\"Number is not a two-digit number.\\" << endl;"},{"prompt":"Write a class in JavaScript that validates a given email address.","completion":"class EmailValidator { constructor() {} isValidEmail(email) { var re = /^[a-zA-Z0-9.!#%&'*+/=?^_\`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*/; return re.test(email); } }"},{"prompt":"Compile this piece of C code to an executable program #include <stdio.h> int main() { int a = 5; int b = 10; int c = a + b; printf(\\"%d\\",c); return 0; }","completion":"gcc -o output a.c ./output"},{"prompt":"Explain how you would use machine learning to predict the price of a certain type of car.","completion":"To use machine learning to predict the price of a certain type of car, we need to collect data about similar cars, including features such as make, model, year, engine size, and condition. We would then use this data to train a machine learning model to learn the correlation between these features and the car's price. The model would then be used to predict the price based on the features of any given car."},{"prompt":"Explain how to use unsupervised machine learning to classify the following dataset DataSet: A (2, 3, 4) B (5, 6, 7) C (8, 9, 10)","completion":"Unsupervised machine learning methods can be used to classify the given dataset by applying clustering algorithms. Clustering algorithms group objects which are similar to each other into clusters, while also attempting to keep the clusters distinct from each other. A clustering algorithm could be used to group the given dataset together and form distinct clusters. Each cluster would represent a distinct group, and each group would have a distinct set of characteristics. For example, the algorithm could group A, B, and C into one cluster, thus showing that each entry in the dataset has similar characteristics."},{"prompt":"Create a C++ program that takes two integers as an input and outputs their product. 5 6","completion":"#include <iostream> int main() { int a, b, product; std::cout<<\\"Enter two integers: \\"; std::cin>>a>>b; product = a*b; std::cout<<\\"The product of the two numbers is \\"<<product; return 0; }"},{"prompt":"Design an HTML page that prints out \\"Hello, World!\\" in two columns.","completion":"<html> <head> <title>Hello, World!</title> </head> <body> <div style=\\"display: flex;\\"><div>Hello,</div><div> World!</div></div> </body> </html>"},{"prompt":"Create an SQL statement to sort the table 'employees' by salary in descending order.","completion":"SELECT * FROM employees ORDER BY salary DESC;"},{"prompt":"Design a CSS page that displays Hello in two different fonts of red colour.","completion":"<style> h1 { font-size: 30px; color: red; } p { font-size: 25px; color: red; } </style> <h1>Hello</h1> <p>Hello</p>"},{"prompt":"Write a Python script to find the prime factors of a number. Number: 24","completion":"\\"\\"\\" Write a Python script to find the prime factors of a number \\"\\"\\" def find_prime_factors(num): prime_factors = [] for i in range(2, num+1): count = 0 while num % i == 0: count += 1 num //= i if count > 0: prime_factors.append((i, count)) return prime_factors if __name__ == '__main__': n = 24 prime_factors = find_prime_factors(n) print(prime_factors)"},{"prompt":"Create a function for detecting changes in an array of numbers.","completion":"def detect_changes(numbers): results = [] for i in range(1, len(numbers)): if numbers[i] != numbers[i-1]: results.append((i, numbers[i])) return results"},{"prompt":"Make a deep copy of an object using JSON.","completion":"import json def deep_copy(obj): return json.loads(json.dumps(obj))"},{"prompt":"Write a code that adds two integers without using any arithmetic operators.","completion":"def add_two_integers(a, b): while b != 0: carry = a & b a = a ^ b b = carry << 1 return a"},{"prompt":"Sort this array of dictionaries by the value of 'popularity' in descending order. [ { \\"name\\": \\"Apple\\", \\"popularity\\": 5 }, { \\"name\\": \\"Orange\\", \\"popularity\\": 2 }, { \\"name\\": \\"Mango\\", \\"popularity\\": 3 }, { \\"name\\": \\"Grapes\\", \\"popularity\\": 4 } ]","completion":"arr.sort(key=lambda dict: dict['popularity'],reverse=True)"},{"prompt":"Create a list comprehension to generate a new list of composed strings. names = [\\"John\\", \\"Steve\\", \\"Bob\\"] blanks = [\\"__'s cat\\", \\"__'s dog\\", \\"__'s parrot\\"]","completion":"[name + blank for name in names for blank in blanks]"},{"prompt":"w to write a jQuery code to hide a HTML element?","completion":"(document).ready(function(){ (\\"#element_id\\").hide(); });"},{"prompt":"w to write a React component to render an array of numbers?","completion":"class MyComponent extends React.Component { render() { const numbers = [1, 2, 3, 4, 5]; return( <div> {numbers.map(number => <p key={number}>{number}</p>)} </div> ); } }"},{"prompt":"w to write a CSS style to make a text larger?","completion":".className { font-size: larger; }"},{"prompt":"w to write an HTML page that displays the number from 1 to 10?","completion":"<html> <body> <div> <h2>Number from 1 to 10</h2> <ul> <li>1</li> <li>2</li> <li>3</li> <li>4</li> <li>5</li> <li>6</li> <li>7</li> <li>8</li> <li>9</li> <li>10</li> </ul> </div> </body> </html>"},{"prompt":"w to create a GraphQL query to fetch the name and age of all users from the table 'users'?","completion":"query getUserInfo { users { name age } }"},{"prompt":"Write an R script to compute the sum of all the elements of a given list. list = c(1, 2, 3, 4, 5)","completion":"sum <- 0 for(i in list){ sum <- sum + i } print(sum) # Output: 15"},{"prompt":"w to create an HTML form to accept user input?","completion":"<form> <input type=\\"text\\" name=\\"username\\" placeholder=\\"Username\\"> <input type=\\"password\\" name=\\"password\\" placeholder=\\"Password\\"> <input type=\\"submit\\" value=\\"Submit\\"> </form>"},{"prompt":"Format the given string to capital letters and display the output. string = \\"this is a tex","completion":"string = \\"THIS IS A TEXT\\" print(string)"},{"prompt":"Explain what a memory leak is.","completion":"A memory leak is a type of software bug where a program or process allocates memory but is unable to release it back to the operating system, causing an ever-growing consumption of available memory while the program is running. This can cause a decrease in performance, or the program may eventually crash when all available memory is exhausted."},{"prompt":"Create a Fibonacci series of n numbers. n = 5","completion":"def fibonacci_sequence(n): a, b = 0, 1 fib_series = [a] while b < n: fib_series.append(b) a, b = b, a+b return fib_series print(fibonacci_sequence(n)) #[0, 1, 1, 2, 3]"},{"prompt":"dentify the purpose of the given lines of code. # Create a boolean variable is_valid = True","completion":"The given code creates a boolean variable called is_valid and assigns it the value of True."},{"prompt":"Explain the purpose of stack in programming.","completion":"The stack is a data structure which stores data in a Last In First Out (LIFO) manner. It is used in programming for various operations such as function calls, expression evaluation, storing local variables, and peripheral operations such as undo or redo. The stack is an area of memory in which programs temporarily store data as they execute."},{"prompt":"Write a Python function to remove all elements from a set in another set Set A = {1, 2, 3, 4} Set B = {2, 3}","completion":"def remove_from_set(A, B): for element in B: A.discard(element) return A A = {1, 2, 3, 4} B = {2, 3} print(remove_from_set(A,B)) # Output: {1, 4}"},{"prompt":"Create a fizz-buzz Python program to print numbers from 1 to 50 but for multiple of 3 print “Fizz” and for the multiple of 5 print “Buzz” and for numbers which are multiple of both 3 and 5 print “FizzBuzz”.","completion":"for num in range(1,51): if num % 3 == 0 and num % 5 == 0: print(\\"FizzBuzz\\") elif num % 3 == 0: print(\\"Fizz\\") elif num % 5 == 0: print(\\"Buzz\\") else: print(num)"},{"prompt":"w would you write a function in Python for generating a Fibonacci sequence?","completion":"def fibonacci(n): a = 0 b = 1 if n < 0: print(\\"Incorrect input\\") elif n == 0: return a elif n == 1: return b else: for i in range(2,n): c = a + b a = b b = c return b"},{"prompt":"Create an array in JavaScript containing the numbers one to ten.","completion":"let numbers = [1,2,3,4,5,6,7,8,9,10];"},{"prompt":"w would you search for an element in an array using a linear search algorithm in Python?","completion":"def linearSearch(arr, x): for i in range(len(arr)): if arr[i] == x: return i return -1"},{"prompt":"w would you add two matrices in C++?","completion":"#include <iostream> using namespace std; // Dimensions of matrices #define M 3 #define N 3 // Function to add two matrices void addMatrices(int A[][N], int B[][N], int C[][N]) { int i, j; for (i = 0; i < M; i++) for (j = 0; j < N; j++) C[i][j] = A[i][j] + B[i][j]; }"},{"prompt":"Write a function in C# to insert a character into a string at a given index.","completion":"public static string InsertCharAtIndex(string s, char c, int index) { return s.Substring(0, index) + c + s.Substring(index); }"},{"prompt":"Construct a query in SQL to get the names of all customers who have purchased a product with price greater than 50.","completion":"SELECT customer_name FROM customers INNER JOIN orders ON orders.customer_id = customers.customer_id INNER JOIN products ON orders.product_id = products.product_id WHERE products.price > 50"},{"prompt":"Write a Java program to print the nth number in the Fibonacci sequence.","completion":"public class FibonacciExample1{ public static void main(String args[]) { int n = 18, t1 = 0, t2 = 1; System.out.print(\\"First \\" + n + \\" terms: \\"); for (int i = 1; i <= n; ++i) { System.out.print(t1 + \\" + \\"); int sum = t1 + t2; t1 = t2; t2 = sum; } } }"},{"prompt":"Create a list comprehension in Python to extract all the even numbers from a given list. list = [3,4,5,6,7,8]","completion":"evens_list = [num for num in list if num % 2 == 0]"},{"prompt":"Sort the following array of strings alphabetically in C++. string array[] = {\\"sun\\", \\"mon\\", \\"tues\\", \\"wednes\\", \\"thurs\\"};","completion":"#include <algorithm> #include <iostream> using namespace std; int main() { string array[] = {\\"sun\\", \\"mon\\", \\"tues\\", \\"wednes\\", \\"thurs\\"}; int size = sizeof(array) / sizeof(array[0]); sort(array, array + size); for (int i = 0; i < size; i++) cout << array[i] << \\" \\"; return 0; }"},{"prompt":"Extract the next 5 worksdays in JavaScript.","completion":"let nextFiveWorkingDays = []; let today = new Date(); for (let i = 1; i <= 5; i++) { today.setDate(today.getDate() + 1); if (today.getDay() > 0 && today.getDay() < 6) nextFiveWorkingDays.push(today); } console.log(nextFiveWorkingDays);"},{"prompt":"w would you convert the following JSON string to a JavaScript object? \\"{\\"name\\":\\"John\\",\\"age\\":30,\\"city\\":\\"New York\\"}","completion":"let obj = JSON.parse('{\\"name\\":\\"John\\",\\"age\\":30,\\"city\\":\\"New York\\"}'); console.log(obj);"},{"prompt":"Suggest a code in C# to generate a random number between 1 and 5.","completion":"Random random = new Random(); int randomNumber = random.Next(1, 6); Console.WriteLine(randomNumber);"},{"prompt":"Compute the GCD of two numbers in Python. a = 10, b = 15","completion":"def gcd(a,b): if(b==0): return a else: return gcd(b,a%b) a = 10 b = 15 gcd = gcd(a,b) print(gcd)"},{"prompt":"Write a query to return the 3 most popular names from the table named People. Table name: People Columns: Id, Name","completion":"SELECT Name FROM People GROUP BY Name ORDER BY COUNT(Id) DESC LIMIT 3;"},{"prompt":"Use SQL to return the names of customers who have purchased books from the store. Table names: Customers, Purchase","completion":"SELECT Customers.Name FROM Customers INNER JOIN Purchases ON Customers.Id = Purchases.Customer_Id WHERE Purchases.Product_Category = 'Book';"},{"prompt":"Write a JavaScript code snippet that splits a string into an array of words. string = \\"Hello World","completion":"let string = \\"Hello World\\"; let words = string.split(\\" \\"); console.log(words);"},{"prompt":"Develop an algorithm in Python to reverse a given string. string = \\"Hello","completion":"def reverse(string): str = \\"\\" for i in string: str = i + str return str string = \\"Hello\\" print(reverse(string))"},{"prompt":"Using SQL, return all unique books from the library database. Table name: Library Columns: Id, Title","completion":"SELECT DISTINCT Title FROM Library;"},{"prompt":"Create an in-place version of selection sort in Python. arr = [5, 2, 4, 6, 8, 1]","completion":"def selection_sort(arr): # Traverse through all array elements for i in range(len(arr)): # Find the minimum element in remaining unsorted array min_idx = i for j in range(i+1, len(arr)): if arr[min_idx] > arr[j]: min_idx = j # Swap the found minimum element with the first element arr[i], arr[min_idx] = arr[min_idx], arr[i]"},{"prompt":"dentify the data type for the value in the given statement. value = 2 / 3","completion":"float."},{"prompt":"mplement the bubble sort algorithm in JavaScript.","completion":"function bubbleSort(arr) { let swapped; do { swapped = false; for (let i=0; i < arr.length; i++) { if (arr[i] > arr[i+1]) { let temp = arr[i]; arr[i] = arr[i+1]; arr[i+1] = temp; swapped = true; } } } while (swapped); return arr; }"},{"prompt":"Write a jQuery code snippet to change the text color of all p tags to red.","completion":"('p').css('color', 'red');"},{"prompt":"Find the decimal value of the binary number 0110110.","completion":"54."},{"prompt":"Construct an array in Java containing the elements 3, 5, 7, 9.","completion":"int[] arr = {3, 5, 7, 9};"},{"prompt":"Generate a random hexadecimal string with a length of 8 characters.","completion":"import random def generate_hex(): hex_values = '0123456789ABCDEF' string_length = 8 hex_string = '' for _ in range(string_length): hex_character = random.choice(hex_values) hex_string += hex_character return hex_string if __name__ == '__main__': print(generate_hex())"},{"prompt":"Create a variable to store the result of 2 + 5","completion":"result = 7"},{"prompt":"Classify the following sentence into one of the seven categories. Sentence: My cat came home late last nigh","completion":"Animal"},{"prompt":"Detect if the following string is a palindrome or not String: rabcr","completion":"false"},{"prompt":"Write a code to output a substring of the given string String: Hello World Start: 3 End: 5","completion":"\\"\\"\\" Write a code to output a substring of the given string \\"\\"\\" def substring(inp_str, start, end): return inp_str[start:end] if __name__ == '__main__': inp_str = \\"Hello World\\" start = 3 end = 5 print(substring(inp_str, start, end))"},{"prompt":"Write a code to implement Multiple Linear Regression for a dataset.","completion":"\\"\\"\\" A code to implement Multiple Linear Regression for a given dataset \\"\\"\\" import numpy as np def multiple_linear_regression(X, y): ''' This function accepts feature matrix X and target vector y, and returns the coefficients of the determined multiple linear regression model. ''' X = np.concatenate((np.ones((X.shape[0], 1)), X), axis=1) #concatenate a column of ones to X return np.linalg.inv(X.T @ X) @ X.T @ y"},{"prompt":"Describe an efficient way to find the minimum value in an unsorted array.","completion":"One efficient way to find the minimum value in an unsorted array is to make use of the divide-and-conquer approach. We can split the array into two halves and find the minimum element in each of them. Then we can compare the two minimum elements to find the global minimum in the array. This approach runs in O(log n) time complexity."},{"prompt":"w can you convert a binary search tree into an array?","completion":"One way to convert a binary search tree into an array is to first use an inorder traversal to visit all the nodes of the tree in order. We can then store the node values into an array as we traverse. This will result in an array containing the elements in ascending order, which is the same order they would appear in the binary search tree. This approach runs in O(n) time complexity."},{"prompt":"Construct a Linked List class.","completion":"\\"\\"\\" Construct a Linked List class \\"\\"\\" class Node: def __init__(self, data): self.data = data self.next = None class LinkedList: def __init__(self): self.head = None def add_node(self, data): temp = Node(data) temp.next = self.head self.head = temp def print_list(self): current = self.head while current: print(current.data) current = current.next if __name__ == '__main__': llist = LinkedList() llist.add_node(1) llist.add_node(3) llist.add_node(5) llist.add_node(7) llist.print_list() # prints 7 5 3 1"},{"prompt":"Construct a Fibonacci Heap class.","completion":"\\"\\"\\" Construct a Fibonacci Heap class \\"\\"\\" class FibonacciHeap: def __init__(self): self.min = None self.nodes = [] def insert(self, node): self.nodes.append(node) if self.min is None or node.key < self.min.key: self.min = node def extract_min(self): min_node = self.min self.min = None return min_node if __name__ == '__main__': heap = FibonacciHeap() node1 = Node(3) node2 = Node(10) heap.insert(node1) heap.insert(node2) print(heap.extract_min().data) # prints 3"},{"prompt":"Write the equivalent Java code for the following Python code. x = [1, 2, 3, 4] for x in x: print(x)","completion":"int[] x = {1, 2, 3, 4}; for (int i = 0; i < x.length; i++) { System.out.println(x[i]); }"},{"prompt":"Edit the following code so that it will print out all the integer numbers between 0 and 10. for x in range(10): print(x)","completion":"for x in range(11): print(x)"},{"prompt":"Construct a python program to determine if a number is prime or composite.","completion":"# Program to determine whether a number is prime or composite def is_prime(num): if num < 2: return False for i in range(2, num): if num % i == 0: return False return True number = int(input(\\"Enter a number: \\")) if is_prime(number): print(f\\"{number} is a prime number.\\") else: print(f\\"{number} is a composite number.\\")"},{"prompt":"Create a program to subtract the two numbers from the following input. first_num = 4 second_num = 2","completion":"first_num = 4 second_num = 2 # Program to subtract two numbers diff = first_num - second_num print(f\\"The difference between {first_num} and {second_num} is {diff}.\\")"},{"prompt":"mplement a custom defined length function that works with strings.","completion":"# Implementation of custom length function def length(string): count = 0 for char in string: count += 1 return count print(length(\\"Hello World!\\"))"},{"prompt":"Check if the following word is a palindrome word = \\"level","completion":"word = \\"level\\" # Program to check if a word is a palindrome is_palindrome = True for i in range(len(word)//2): if word[i] != word[len(word)-1-i]: is_palindrome = False break if is_palindrome: print(f\\"{word} is a palindrome.\\") else: print(f\\"{word} is not a palindrome.\\")"},{"prompt":"mplement a class to calculate the sum of two numbers.","completion":"# Program to calculate sum of two numbers class Sum: def __init__(self, num1, num2): self.num1 = num1 self.num2 = num2 def calculate_sum(self): return self.num1 + self.num2 num1 = 10 num2 = 20 s = Sum(num1, num2) print(f\\"The sum of {num1} and {num2} is {s.calculate_sum()}.\\")"},{"prompt":"Compute the maximum and minimum number from the following list. my_list = [2, 4, 5, 7, 9]","completion":"my_list = [2, 4, 5, 7, 9] # Program to compute maximum and minimum number max_num = max(my_list) min_num = min(my_list) print(f\\"The maximum number from the list is {max_num} and the minimum number is {min_num}.\\")"},{"prompt":"Generate a function that prints all combination of unique integer elements from an array. Array: [1,2,3]","completion":"def print_all_combinations(arr): n = len(arr) result = [] def combinations(arr, start, end, index, r): if index == r: result.append(list(arr[start : end + 1])) return for i in range(start, end + 1): arr[start], arr[i] = arr[i], arr[start] combinations(arr, start + 1, end, index + 1, r) arr[start], arr[i] = arr[i], arr[start] for i in range(1, n + 1): combinations(arr, 0, n - 1, 0, i) print(*result, sep = \\"n\\")"},{"prompt":"Generate a class in Java that validates if a given number is a prime or not. Number: 13","completion":"public class PrimeNumberValidator { public static boolean validate(int number) { if (number < 2) { return false; } for (int i = 2; i < Math.sqrt(number); i++) { if (number % i == 0) { return false; } } return true; } }"},{"prompt":"Generate an SQL query to get the top 5 oldest people in a database table. Table: people","completion":"SELECT * FROM people ORDER BY age DESC LIMIT 5;"},{"prompt":"Modify the following code to prevent SQL injection attacks. query = \\"SELECT * FROM users WHERE username = '\\" + username + \\"'","completion":"import MySQLdb query = \\"SELECT * FROM users WHERE username = %s\\" db = MySQLdb.connect(host=\\"localhost\\", user=\\"user\\", passwd=\\"pass\\", db=\\"mydb\\") cur = db.cursor() cur.execute(query, (username,))"},{"prompt":"Generate a function to flatten a nested list. list = [1, 2, [3, 4, [5]], [[6], 7]]","completion":"def flatten_list(list): s=[] for v in list: if isinstance(v, list): s+=flatten_list(v) else: s.append(v) return s"},{"prompt":"Generate a method to print the Nth element of a Fibonacci sequence. N: 5","completion":"def Fibonacci(n): f1 = 0 f2= 1 if n<1: print(\\"Incorrect input\\") elif n == 1: return 0 elif n == 2: return 1 else: for x in range(2, n): next = f1 + f2 f1 = f2 f2 = next return f2"},{"prompt":"Generate an HTML form to create a user profile. N/","completion":"<form action=\\"userprofile.php\\" method=\\"post\\"> <label for=\\"username\\">Username</label><br> <input type=\\"text\\" id=\\"username\\" name=\\"username\\" required/><br> <label for=\\"email\\">Email</label><br> <input type=\\"email\\" id=\\"email\\" name=\\"email\\" required/><br> <label for=\\"password\\">Password</label><br> <input type=\\"password\\" id=\\"password\\" name=\\"password\\" required/><br> <input type=\\"submit\\" value=\\"Create Profile\\" /> </form>"},{"prompt":"Translate the following JSON into an XML format. { \\"person\\": { \\"name\\": \\"Jane\\", \\"age\\": 30 } }","completion":"<?xml version=\\"1.0\\"?> <person> <name>Jane</name> <age>30</age> </person>"},{"prompt":"Build a machine learning model to predict the outcome. Input dataset of 200 records with 10 feature","completion":"Using the input dataset, a machine learning model can be built to predict the outcome by training it on the features provided in the dataset."},{"prompt":"Explain the concept of data normalization.","completion":"Data normalization is the process of scaling individual samples to have unit norm or a given absolute sum. Normalization can be applied to data to scale the values of the data to a fixed range, for example 0 to 1, or to standardize the data by removing the mean and scaling to unit variance."},{"prompt":"Change the last line of the code to assign the output of the function call to the variable n. def add_two_numbers(x, y): return x + y # TODO","completion":"def add_two_numbers(x, y): return x + y n = add_two_numbers(x, y)"},{"prompt":"Replace the '?' with the correct Java keyword public ? myMethod(int a, int b) { // ... }","completion":"public static myMethod(int a, int b) { // ... }"},{"prompt":"dentify the parts of speech of the words in the sentence. The cat ran quickly across the street.","completion":"The: article cat: noun ran: verb quickly: adverb across: preposition the: article street: noun"},{"prompt":"Construct a dictionary with the keys \\"name\\" and \\"age\\" and assign the appropriate values. Name: John Age: 25","completion":"my_dict = {\\"name\\": \\"John\\", \\"age\\": 25}"},{"prompt":"Generate the list of numbers from 0 to 10 using a while loop.","completion":"numbers = [] i = 0 while i <= 10: numbers.append(i) i += 1"},{"prompt":"Write a function to replace all whitespaces with the character '*'. my_string = \\"This is a string with whitespace","completion":"def replace_whitespaces(string): return string.replace(\\" \\", \\"*\\") replace_whitespaces(my_string)"},{"prompt":"Write a JavaScript statement to create a pop-up window.","completion":"alert(\\"This is a pop-up window\\");"},{"prompt":"Generate a random text using the given code. seed_text = \\"This is starting sentence.","completion":"This is starting sentence. It was a sunny day with a gentle breeze. I walked slowly, taking in the scenery around me. The birds were singing and the grass was swaying in the wind. The sky was a brilliant blue with white clouds drifting by. I felt a peace come over me, a peace that I hadn't felt in a long time."},{"prompt":"w do you create a namespace in Java?","completion":"In Java a namespace is created by declaring a package statement at the top of a source file. For example: package com.example.myapp; This will create a namespace named \\"com.example.myapp\\" and all class and interfaces declared within the source file will be under this namespace."},{"prompt":"w do you install a Python package on Windows?","completion":"The easiest way to install a Python package on Windows is to open the Command Prompt and type the command 'pip install <package name>'. This will install the package using pip, the Python package manager. Alternatively, Python packages can be installed using the Windows Subsystem for Linux (WSL). To do this, open a bash shell using the Windows Key + x and typing 'bash'. Then, type 'sudo apt install <package name>'. This will install the package from the Ubuntu repositories."},{"prompt":"Construct a CFG to describe the given language. The language {anbmcn | n, m ≥ 0}","completion":"S -> aSbc | aAbc | abM | a | bM | ε A -> nA | ε M -> mM | ε"},{"prompt":"What is the mathematical expression for calculating next fibonacci number from any number?","completion":"The mathematical expression for calculating the next fibonacci number from any number is F(n+1)=F(n)+F(n-1) where n is the number for which we want to calculate the next fibonacci number."},{"prompt":"Write a code that converts a given binary number to its equivalent decimal number.","completion":"def binary_to_decimal(binary): decimal = 0 base = 1 binary = str(binary) length = len(binary) for i in range(length-1, -1, -1): if (binary[i] == '1'): decimal += base base = base * 2 return decimal"},{"prompt":"Generate a Java program to perform the following task. Add two integers a and b and print the sum","completion":"public class Sum { public static void main(String[] args) { int a = 15; int b = 10; int sum = a + b; System.out.println(\\"Sum of a and b is \\" + sum); } }"},{"prompt":"Write a regular expression to match the phone numbers which start with 6 and have 11 digits.","completion":"^6d{11}"},{"prompt":"Create an if-else statement which checks if the number is positive or negative. int num = 5","completion":"if (num > 0): print(\\"The number is positive\\") else: print(\\"The number is negative\\")"},{"prompt":"Output the last four elements of the array. int[] arr = {1, 2, 3, 4, 5, 6, 7, 8}","completion":"print(arr[4:])"},{"prompt":"Create a loop that prints out every other element in the given array. int[] arr = {1, 2, 3, 4, 5, 6, 7, 8}","completion":"for i in range(0, len(arr), 2): print(arr[i])"},{"prompt":"Write a function to remove any leading and trailing whitespaces from a given string. string str = \\" Hello World !","completion":"def trim_whitespace(str): return str.strip() print(trim_whitespace(str))"},{"prompt":"Create a loop that prints each letter in the given string one by one on a new line. string str = \\"Hello World","completion":"for i in str: print(i)"},{"prompt":"Create a function which takes an array as input and check if any of its elements are equal to the given value. Array: [1, 2, 3, 4, 5] Value: 4","completion":"def element_equal(arr, value): \\"\\"\\"Check if any element in the array is equal to the given value.\\"\\"\\" for ele in arr: if ele == value: return True return False"},{"prompt":"Write code to calculate the mean of two numbers numbers = [4, 6]","completion":"def mean(numbers): \\"\\"\\"Calculate the mean of two numbers\\"\\"\\" return sum(numbers) / len(numbers)"},{"prompt":"Create a script to find the most and least frequent words in a given text Text: This is a sample text with a few words that should be counted and analyzed.","completion":"def frequent_words(text): \\"\\"\\"Find the most and least frequent words in a given text\\"\\"\\" words = text.split(' ') word_count = dict() for w in words: if w not in word_count: word_count[w] = 1 else: word_count[w] += 1 most_frequent_word = max(word_count, key=word_count.get) least_frequent_word = min(word_count, key=word_count.get) return most_frequent_word, least_frequent_word"},{"prompt":"encode a given string using the Base64 algorithm String: MySuperSecretString","completion":"import base64 def encode_base64(string): \\"\\"\\"Encode the given string using the Base64 algorithm\\"\\"\\" byte_string = string.encode('utf-8') return base64.b64encode(byte_string).decode('utf-8')"},{"prompt":"edit the code so that it prints out the result val = 5 sum = 0 sum = sum + val","completion":"val = 5 sum = 0 sum += val print(sum) # prints 5"},{"prompt":"Write a function to sort a list of integers in non-increasing order [9, 6, 7, 4, 3, 5]","completion":"def sort_desc(arr): \\"\\"\\"Sort a list of integers in non-increasing order.\\"\\"\\" return sorted(arr, reverse=True)"},{"prompt":"dentify the type of variable initialization in the given code my_var = 0","completion":"This is an implicit variable initialization."},{"prompt":"Create a function to check if an array contains any duplicate elements [1, 3, 5, 7, 9]","completion":"def has_duplicates(arr): \\"\\"\\"Check if an array contains any duplicate elements.\\"\\"\\" return len(arr) != len(set(arr))"},{"prompt":"Convert the following timestamp to ISO 8601 format 1579183000","completion":"import time def timestamp_to_iso8601(timestamp): \\"\\"\\"Convert the given timestamp to ISO 8601 format\\"\\"\\" return time.strftime('%Y-%m-%dT%H:%M:%SZ', time.localtime(timestamp))"},{"prompt":"Create an object-oriented Python program to simulate a simple calculator with a add, subtract and multiply\\" function","completion":"\\"\\"\\"Object-oriented Python program to simulate a simple calculator with add, subtract and multiply function\\"\\"\\" # create a class Calculator class Calculator: def add(self, x, y): return x + y def subtract(self, x, y): return x - y def multiply(self, x, y): return x * y # create an instance of class Calculator calc = Calculator() # call the add, subtract and multiply functions print(calc.add(5,5)) print(calc.subtract(5,5)) print(calc.multiply(5,5))"},{"prompt":"Create a web scraper to download the HTML of a given website.","completion":"\\"\\"\\" A web scraper to download HTML of a given website \\"\\"\\" import requests def get_website_html(url): response = requests.get(url) return response.text if __name__ == '__main__': url = input('Enter URL: ') html = get_website_html(url) print(html)"},{"prompt":"Edit the code to output the sum of array elements. arr = [5, 20, 15]","completion":"arr = [5, 20, 15] total = 0 for num in arr: total += num print(total) # Output: 40"},{"prompt":"Write a function that prints values from the given list in one line separated by a comma and a space. list = [4, 10, 15]","completion":"def print_list(list): for item in list: print(item, end=', ') print_list(list) # Output: 4, 10, 15,"},{"prompt":"Classify the following words according to their part-of-speech tags. busy, psychology, running","completion":"Adjective, Noun, Verb."},{"prompt":"Create a program to calculate the total marks of a student. Marks of 5 Subjects: English: 35 Maths: 88 Chemistry: 70 Physics: 45 Computer: 80","completion":"def calculate_total(marks): total = 0 for mark in marks: total += mark return total scores = { \\"English\\": 35, \\"Maths\\": 88, \\"Chemistry\\": 70, \\"Physics\\": 45, \\"Computer\\": 80 } total_marks = calculate_total(scores.values()) print(total_marks) # Output: 328"},{"prompt":"Write a code to reverse a sentence word by word. This is a sentence","completion":"def reverse_words(sentence): words = sentence.split(' ') reversed_words = [word[::-1] for word in words] return ' '.join(reversed_words) print(reverse_words('This is a sentence')) # Output: sihT si a ecnetnes"},{"prompt":"Generate a random number between 0 and 1 using the random module in Python.","completion":"import random random_number = random.random() print(random_number) # Output: 0.00549342319234"},{"prompt":"Create a generator which generates the first ten square numbers.","completion":"def generate_squares(): for num in range(1, 11): yield num**2 for square in generate_squares(): print(square, end=', ') # Output: 1, 4, 9, 16, 25, 36, 49, 64, 81, 100,"},{"prompt":"ert the given condition into the SQL query to filter the output based on it. SELECT * FROM employees WHERE condition: fname = 'John'","completion":"SELECT * FROM employees WHERE fname = 'John';"},{"prompt":"Transform the following regular expression so that it matches any string that doesn't contain \\"cat\\". let regex = /cat/","completion":"let regex = /^(?:(?!cat).)*/"},{"prompt":"Using the given array, write a Javascript program to sort the elements in descending order. let numbers = [2, 10, 5, 4, 3];","completion":"let numbers = [2, 10, 5, 4, 3]; numbers.sort((a,b) => b - a); console.log(numbers); //output: [10, 5, 4, 3, 2]"},{"prompt":"Write an SQL query and to output an ordered list of employees with their highest salaries.","completion":"SELECT e.name, MAX(s.salary) AS Highest_Salary FROM employee e INNER JOIN salary s ON e.id = s.employee_id GROUP BY e.name ORDER BY Highest_Salary DESC;"},{"prompt":"Compute the overall rating for each product as the weighted sum of ratings given for each feature. product_id | feature_id | rating 1 | 1 | 5 1 | 2 | 4 1 | 3 | 2","completion":"SELECT product_id, SUM(rating * weight) AS Overall_Rating FROM ( SELECT product_id, feature_id, rating, weight FROM products INNER JOIN features ON products.product_id = features.product_id ) tmp GROUP BY product_id;"},{"prompt":"Update the code so that the function will add all numbers in the array. function add(arr) { let total = 0; arr.forEach(num => total += num); //TODO return total; }","completion":"function add(arr) { let total = 0; arr.forEach(num => total += num); total = total/arr.length; return total; }"},{"prompt":"Write a Python program to find all pairs of numbers in the given list whose sum is equal to the given number. nums = [1, 2, 3, 4, 5], sum = 8","completion":"def find_pairs(nums, sum): result = [] for i in range(len(nums)): for j in range(i+1, len(nums)): if nums[i] + nums[j] == sum: result.append((nums[i], nums[j])) return result res = find_pairs(nums, sum) print(res) # Output: [(2, 6), (3, 5)]"},{"prompt":"Write Java code to search for the given element in the list and return its index if it exists. list = [4, 8, 15, 16, 23, 42], element = 15","completion":"public int findElement (int[] list, int element) { for (int i = 0; i < list.length; i++) { if (list[i] == element) return i; } return -1; }"},{"prompt":"Edit the existing HTML code to create a list with bullets. <p>My favorite fruits are: Apple, Banana, Orange</p>","completion":"<p>My favorite fruits are:</p> <ul> <li>Apple</li> <li>Banana</li> <li>Orange</li> </ul>"},{"prompt":"Edit the following program to add all the numbers in the given array. let numbers = [2, 10, 5, 4, 3]; function add(arr) { let total = 0; arr.forEach(num => total += num); //TODO return total; }","completion":"let numbers = [2, 10, 5, 4, 3]; function add(arr) { let total = 0; arr.forEach(num => total += num); total = total/arr.length; return total; }"},{"prompt":"Compose a new CSS class to give the text element a background color of lightgreen.","completion":".lightgreen-background{ background-color: lightgreen; }"},{"prompt":"Write a sql query to select all the employees from table Employee older than 45 years. Table employees: name, email, age","completion":"SELECT * FROM employees WHERE AGE > 45;"},{"prompt":"Write a CSS code to make a dive tag red with a background color of yellow.","completion":"div { background-color: yellow; color: red; }"},{"prompt":"Store the given data in a dictionary structure in python. key: name value: Joh","completion":"mydict = { \\"name\\": \\"John\\" }"},{"prompt":"Calculate the maximum of three numbers in Java. int a = 10; int b = 15; int c = 20;","completion":"int max = Math.max(a, Math.max(b, c)); System.out.println(\\"Maximum of the three numbers is: \\"+max);"},{"prompt":"Load the given JSON data using Javascript. { \\"name\\": \\"John\\", \\"age\\": 30 }","completion":"var data = { \\"name\\": \\"John\\", \\"age\\": 30 }; var jsonData = JSON.parse(data); console.log(jsonData);"},{"prompt":"Create a simple HTML webpage without using any external stylesheets.","completion":"<html> <head> <title>My Web Page</title> </head> <body> <h1>Welcome to My Web Page</h1> <p>This is my first web page.</p> </body> </html>"},{"prompt":"Generate 20 random numbers between 0 and 5 using Java.","completion":"Random random = new Random(); for (int i = 0; i < 20; i++) { System.out.println(random.nextInt(6)); }"},{"prompt":"Write a stored procedure for a search query. Table name: myTable Search query: select all the records from myTable where name is like ‘John’","completion":"CREATE PROCEDURE SearchMyTable @Name varchar(50) AS BEGIN SELECT * FROM myTable WHERE Name LIKE '%' + @Name + '%' END"},{"prompt":"Write a working SQL query to group employees by city and order by their salary. Employees Table | employee_id | name | city | salary | |-------------|----------|---------|--------| | 1 | Joe | London | 50 | | 2 | Frank | Paris | 40 | | 3 | John | Madrid | 30 | | 4 | Michael | London | 60 |","completion":"SELECT city, salary FROM Employees GROUP BY city ORDER BY salary DESC"},{"prompt":"Write a regular expression to validate a string which contains the characters \\"a\\", \\"b\\", \\"c\\".","completion":"^[a-c]+"},{"prompt":"Write a JS code to detect peaks for an array of numbers. [4, 2, 3, 6, 10, 1, 12, 5]","completion":"let numArray = [4, 2, 3, 6, 10, 1, 12, 5]; let peakIndexes = []; for (let i = 1; i < numArray.length - 1; i++) { let left = numArray[i - 1]; let center = numArray[i]; let right = numArray[i + 1]; if (center > left && center > right) { peakIndexes.push(i); } } console.log(peakIndexes); // Output: [3, 5, 6]"},{"prompt":"Write a recursive function in JS to traverse a multi-dimensional array. let arr = [ [1, 2], [3, 4], [5, 6] ];","completion":"function traverseArray (arr) { for (let i = 0; i < arr.length; i++) { if (Array.isArray(arr[i])) { traverseArray(arr[i]); } else { console.log(arr[i]); } } } traverseArray(arr); // Output: 1, 2, 3, 4, 5, 6"},{"prompt":"Write a Python script to find all the numbers which are divisible by 7, but are not multiples of 5; between 2000 and 3200 (both included).","completion":"res = [] for i in range(2000, 3200): if (i%7 == 0) and (i%5 != 0): res.append(str(i)) print(','.join(res))"},{"prompt":"Generate a 5 rows by 4 columns matrix of random numbers between 0 and 10 in Python","completion":"import random matrix = [] for i in range(5): matrix.append([random.randint(0, 10) for j in range(4)]) print(matrix)"},{"prompt":"Write a SQL query to show the 20 most common car makes in a given table. Cars Table | make | model | year | |----------|-------|------| | Honda | Civic | 2019 | | Ford | F150 | 2018 | | Toyota | Camry | 2017 | | Chevrolet| Cruze | 2016 |","completion":"SELECT make, COUNT(*) FROM Cars GROUP BY make ORDER BY COUNT(*) DESC LIMIT 20"},{"prompt":"Create a JavaScript object to contain employee data.","completion":"let employee = { name: \\"John\\", age: 25, job: \\"developer\\", address: { city: \\"Berlin\\", street: \\"Main Street\\" } }"},{"prompt":"Construct a regex pattern to validate an email address.","completion":"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+"},{"prompt":"Write a Java program to calculate the sum of the series 1^3+2^3+3^3+.....+n^3","completion":"public class SumOfSeries { static int calculateSum(int lastNumber) { int sum = 0; for (int i = 1; i <= lastNumber; i++) { sum = sum + (int)Math.pow(i, 3); } return sum; } public static void main(String[] args) { int lastNumber = 4; System.out.println(calculateSum(lastNumber)); } } // Output: 100"},{"prompt":"Describe the main use of a router in computer networking.","completion":"A router is a networking device that forwards data packets between networks. It works by examining the destination address of each packet and forwarding it to the correct final destination. Routers play an important role in computer networks, helping to connect networks together and routing traffic between them efficiently. They also provide security by helping to control network access and creating virtual networks to segment traffic."},{"prompt":"mplement a breadth-first search algorithm to find the shortest path between two nodes.","completion":"def BFS(graph, start, end): # Create an empty queue queue = [] # Create a set to store visited nodes visited = set() # Enqueue the starting node queue.append([start]) while queue: # Get the first path and process it path = queue.pop() # Get the last node from the path node = path[-1] if node == end: return path elif node not in visited: # Create a list of neighbours neighbours = graph[node] # Go through all neighbours for neighbour in neighbours: # Create a new path with the neighbour new_path = list(path) new_path.append(neighbour) # Add the new path to the queue queue.append(new_path) # Mark the node as visited visited.add(node) return None"},{"prompt":"Provide the output from executing the given program. matrix = [ [1, 2, 3], [4, 5, 6], [7, 8, 9] ] for row in matrix: print(row[1])","completion":"2 5 8"},{"prompt":"Add try-catch blocks to the following code. while True: try: x = int(input('Please input a number:')) break except ValueError: print('Enter a valid number!')","completion":"while True: try: x = int(input('Please input a number:')) break except ValueError: print('Enter a valid number!') try: print('Retry') except: print('Failed to retry')"},{"prompt":"Create a list of integers from 16 to 34.","completion":"[16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]"},{"prompt":"Use a nested loop to print the output.","completion":"for i in range(3): for j in range(3): print('*', end=' ') print()"},{"prompt":"Determine the data type of the following string. a = \\"#@ What's up? %^&*&","completion":"string"},{"prompt":"Edit the following program to output a list of the numbers that are divisible by 3 numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]","completion":"numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9] result = [] for num in numbers: if num % 3 == 0: result.append(num) print(result)"},{"prompt":"What needs to be done to use the random module in Python?","completion":"The random module needs to be imported in order to use it in Python. To do this, you can use the following line of code: \\"import random\\". Once the module has been imported, you can use the functions provided by the module in your code."},{"prompt":"Summarize the following Java code. public class MyClass { public static void main(String[] args) { int x = 10; int y = 20; int sum = x + y; System.out.println(\\"The sum of x and y is: \\" + sum); } }","completion":"The given Java code declares two int variables (x and y), adds them and prints the sum of the two variables to the console."},{"prompt":"Write a regular expression to match a positive or negative floating-point number.","completion":"The regular expression to match a positive or negative floating-point number is \\"(-?d*.d+)|(-?d+.d*)\\". This regular expression will match both positive and negative numbers, with or without decimal points."},{"prompt":"Write a JavaScript program to display \\"Welcome to Javascript\\" in the console.","completion":"console.log(\\"Welcome to Javascript\\");"},{"prompt":"dentify the bug in the following code and provide a solution. def calculate_average(numbers): sum = 0 for number in numbers: sum += numbers return sum/len(numbers)","completion":"The bug in the code is that the variable \\"number\\" is not used inside the for loop. Instead, the variable \\"numbers\\" is used. To fix this, the line \\"sum += numbers\\" should be replaced with \\"sum += number\\". This will ensure that the correct variable is used inside the loop and the code will execute as expected."},{"prompt":"Write a SQL query to sort the data in descending order. TABLE users id int, name varchar(20)","completion":"SELECT * FROM users ORDER BY id DESC;"},{"prompt":"CSS, how can the width of a div element be set to 100% of its parent's width?","completion":"In CSS, the width of a div element can be set to 100% of its parent's width by using the \\"width: 100%;\\" property."},{"prompt":"Explain the difference between interface and abstract class in Java.","completion":"The main difference between an interface and an abstract class in Java is that an interface can only contain method signatures and constants, whereas an abstract class can have methods, constants and variables. Additionally, an interface cannot have any method implementation, but an abstract class can contain methods with implementation. Finally, a class can only extend one abstract class, but it can implement multiple interfaces."},{"prompt":"w can a JavaScript function return multiple values?","completion":"A JavaScript function can return multiple values by using an array or an object. For example, the following example returns two values in an array: return [value1, value2];. Similarly, an object can be used to return multiple values, for example: return { value1: val1, value2: val2 };."},{"prompt":"Recognize the type of a credit card from the given string of numbers. 4111 2029 3219 9480","completion":"Visa"},{"prompt":"Formulate an SQL query for finding the students who have scored over 80% in the test.","completion":"SELECT * FROM Students WHERE test_score > 80"},{"prompt":"Merge two sorted arrays. [1, 2, 4, 5] & [3, 6, 7, 8]","completion":"// Merging two sorted arrays int[] a1 = {1, 2, 4, 5}; int[] a2 = {3, 6, 7, 8}; int length1 = a1.length; int length2 = a2.length; int[] mergedArray = new int[length1 + length2]; // indexes for main array int i = 0; int j = 0; int k = 0; while (i < length1 && j < length2) { if (a1[i] < a2[j]) { mergedArray[k] = a1[i]; i++; } else { mergedArray[k] = a2[j]; j++; } k++; } // check for remaining elements of a1[] while (i < length1) { mergedArray[k] = a1[i]; i++; k++; } // check for remaining elements of a2[] while (j < length2) { mergedArray[k] = a2[j]; j++; k++; }"},{"prompt":"Given an array of size n, find the kth largest element by using a Heap. [9, 8, 7, 6, 5], k=2","completion":"// Initialize max heap PriorityQueue<Integer> maxHeap = new PriorityQueue<Integer>(Collections.reverseOrder()); // kth element to be found int k = 2; int[] arr = {9, 8, 7, 6, 5}; // add elements to max heap for (int i : arr) maxHeap.add(i); // Extract kth largest elements for (int i=0; i<k; i++) System.out.print(maxHeap.poll() + \\" \\"); Output: 8 7"},{"prompt":"Write a Java program to implement a binary search on a sorted array of integers. [1, 3, 4, 6, 8, 9], element=6","completion":"// Java Program for Binary Search public class BinarySearchExample { // Returns index of x if it is present in arr[], else return -1 int binarySearch(int arr[], int x) { int low = 0, high = arr.length - 1; while (low <= high) { int mid = low + (high - low) / 2; // Check if x is present at mid if (arr[mid] == x) return mid; // If x greater, ignore left half if (arr[mid] < x) low = mid + 1; // If x is smaller, ignore right half else high = mid - 1; } // if we reach here, then element was not present return -1; } public static void main(String args[]) { BinarySearchExample ob = new BinarySearchExample(); int arr[] = {1, 3, 4, 6, 8, 9}; int x = 6; int result = ob.binarySearch(arr, x); if (result == -1) System.out.println(\\"Element not present\\"); else System.out.println(\\"Element found at index \\" + result); } }"},{"prompt":"Design a SQL query to retrieve data from multiple tables.","completion":"SELECT t1.col1, t1.col2, t2.col1, t2.col2 FROM table1 t1 INNER JOIN table2 t2 ON t1.col1 = t2.col1"},{"prompt":"Convert a given binary tree to a doubly linked list.","completion":"// Java Program to convert binary tree to doubly linked list public class BinaryTreeToDLL { Node root; // A simple recursive function to convert a given Binary tree // to Doubly Linked List Node BTTDLL(Node root) { // Base case if (root == null) return root; // Convert the left subtree and link to root if (root.left != null) { // Convert the left subtree Node left = BTTDLL(root.left); // Find inorder predecessor. After this loop, left // will point to the inorder predecessor for (; left.right != null; left = left.right); // Make root as next of the predecessor left.right = root; // Make predecssor as previous of root root.left = left; } // Convert the right subtree and link to root if (root.right != null) { // Convert the right subtree Node right = BTTDLL(root.right); // Find inorder successor. After this loop, right // will point to the inorder successor for (; right.left != null; right = right.left); // Make root as previous of successor right.left = root; // Make successor as next of root root.right = right; } return root; } }"},{"prompt":"Create a function that examines the character and determines if it's an uppercase letter or not.","completion":"def is_uppercase(character): if character.isalpha and character.isupper(): return True else: return False"},{"prompt":"Sort the array of strings lexicographically. arr = [\\"james\\", \\"john\\", \\"bob\\", \\"michelle\\"]","completion":"def sort_strings_lexicographically(arr): return sorted(arr)"},{"prompt":"erate over a given array and modify each element by adding a constant value to it. arr = [3, 7, 8], constant = 4","completion":"def modify_elements(arr, constant): for i in range(len(arr)): arr[i] += constant"},{"prompt":"Given a string and two substrings, create a function to replace the two substrings with another string. main_string = \\"Replace the first and last substring with this string\\", start_substring = \\"first\\", end_substring = \\"l","completion":"def replace_substrings(main_string, start_substring, end_substring): start_index = main_string.index(start_substring) end_index = main_string.index(end_substring) + len(end_substring) return main_string[:start_index] + \\"this string\\" + main_string[end_index:]"},{"prompt":"Compare two given arrays and find the common elements present in both arr1 = [1, 2, 3, 5], arr2 = [3, 5, 7, 8]","completion":"def get_common_elements(arr1, arr2): common_elements = [] for a in arr1: if a in arr2: common_elements.append(a) return common_elements"},{"prompt":"Produce an alphabetically sorted list from a given set containing both strings and integers s = {1, 3, 5, 1.2, \\"John\\", \\"Bob\\"}","completion":"def sort_alpha_numeric_list(s): return sorted(s, key = lambda x: str(x))"},{"prompt":"Suggest a HTML tag to make a text bold.","completion":"<strong>This text is bold.</strong>"},{"prompt":"Write a JavaScript code to split an array into two equal parts. let arr = [5,6,7,8,9]","completion":"let mid = Math.floor(arr.length/2); let arr1 = arr.slice(0, mid); let arr2 = arr.slice(mid);"},{"prompt":"Suggest a SQL query to retrieve the 10 most populous cities in the USA.","completion":"SELECT city, population FROM cities WHERE country = 'USA' ORDER BY population DESC LIMIT 10;"},{"prompt":"Suggest a CSS property to set the text color of an element.","completion":"color: #000000;"},{"prompt":"Suggest code to delete an element from a linked list in Java.","completion":"// Function to delete a node in a linked list. void deleteNode(Node head_ref, Node del) { // base case if (head == null || del == null) return; // If node to be deleted is head node if (head == del) head = del.next; // Change next only if node to be // deleted is NOT the last node if (del.next != null) { del.data = del.next.data; del.next = del.next.next; } // if node to be deleted is last node else { Node temp = head; while (temp.next != del) temp = temp.next; temp.next = null; } return; }"},{"prompt":"Suggest a SQL query to find the rows that contain the top 3 values of a column.","completion":"SELECT * FROM table ORDER BY column_name DESC LIMIT 3;"},{"prompt":"Write a JavaScript program to count the occurrences of each element in an array.","completion":"function countOccurrences(arr) { const counter = {}; arr.forEach(item => { if (!counter[item]) { counter[item] = 0; } counter[item]++; }); return counter; }"},{"prompt":"Summarize the key concepts in this Python code snippet. import random for x in range(0, 10): print(\\"Random number generated: \\", random.randrange(1, 10))","completion":"This Python code snippet generates and prints out 10 random numbers between 1 and 10 using the \\"random.randrange()\\" function."},{"prompt":"Given the input dictionary below, create a list containing all the items of the dictionary. my_dict = { \\"name\\": \\"John\\", \\"age\\": 21, \\"place\\": \\"Delhi\\" }","completion":"my_list = list(my_dict.values()) print(my_list) # Output: [\\"John\\", 21, \\"Delhi\\"]"},{"prompt":"Write a function in Python to calculate the number of minutes a user has been logged in. log_in_time = '11:30:00', log_out_time = '13:30:00'","completion":"def calculate_time_difference(log_in_time, log_out_time) : time_in = datetime.strptime(log_in_time, '%H:%M:%S') time_out = datetime.strptime(log_out_time, '%H:%M:%S') diff = time_out - time_in minute_difference = diff.seconds // 60 return minute_difference print(calculate_time_difference('11:30:00', '13:30:00')) # Output: 120"},{"prompt":"Edit the following for loop to add a counter that tracks the number of iterations of the loop. for i in range(10): print(i)","completion":"counter = 0 for i in range(10): print(i) counter += 1 print(f\\"Number of iterations: {counter}\\")"},{"prompt":"Given the following two lists, combine them into a single list containing each element of both the lists in order. list_first = [1, 2, 3] list_second = [4, 5, 6]","completion":"list_combined = list_first + list_second print(list_combined) # Output: [1, 2, 3, 4, 5, 6]"},{"prompt":"Using the input list, write a function to calculate the sum of all the elements in the list. my_list = [1, 2, 3, 4]","completion":"def calculate_sum(my_list): sum = 0 for i in my_list: sum += i return sum print(calculate_sum(my_list)) # Output: 10"},{"prompt":"Given the following list, create a Python dictionary having the ID as the key and the full name as the value. my_list = [('John', '1'), ('Alice', '2'), ('Bob', '3')]","completion":"my_dict = dict(my_list) print(my_dict) # Output: {'John': '1', 'Alice': '2', 'Bob': '3'}"},{"prompt":"Create a new virtual environment for Python.","completion":"Convert your current directory to a virtual environment: python3 -m venv <name of virtual environment> Activate the virtual environment: source <name of virtual environment>/bin/activate Deactivate the virtual environment: deactivate"},{"prompt":"Assign a value of 123 to the variable x.","completion":"x = 123"},{"prompt":"Debug a Java program to correct a compile-time error. public class Debug { public static void main(String[] args) { ArrayList<String> list = new ArrayList<String>(); list.add(\\"Hello\\"); list.add(\\"World\\"); } System.out.println(list); }","completion":"public class Debug { public static void main(String[] args) { ArrayList<String> list = new ArrayList<String>(); list.add(\\"Hello\\"); list.add(\\"World\\"); for(String str : list){ System.out.println(str); } } }"},{"prompt":"Create a new HTML page with two buttons.","completion":"<!DOCTYPE html> <html> <head> <title>Two Buttons</title> </head> <body> <button>Button 1</button> <button>Button 2</button> </body> </html>"},{"prompt":"Create a function that adds two integers and subtracts a third.","completion":"def add_subtract(a, b, c): return a + b - c"},{"prompt":"Compute the product of two matrices. A [[2, 4], [3, 7]] B [[9, 2], [7, 1]]","completion":"# Python Program to calculate the product of two matrices A = [[2, 4], [3, 7]] B = [[9, 2], [7, 1]] # function to calculate the product of two matrices def multiplyMatrix(A, B): rowsA = len(A) colsA = len(A[0]) rowsB = len(B) colsB = len(B[0]) if colsA != rowsB: print(\\"Cannot multiply the two matrices. Incorrect dimensions.\\") return # Create an empty product matrix C[rowA][colB] C = [[0 for row in range(colsB)] for col in range(rowsA)] # Multiply and fill in the product matrix for i in range(rowsA): for j in range(colsB): for k in range(colsA): C[i][j] += A[i][k] * B[k][j] return C # Print the product result = multiplyMatrix(A, B) for r in result: print(r)"},{"prompt":"Write a JQuery script to hide an element on the page.","completion":"(document).ready(function(){ ('#element_id').hide(); });"},{"prompt":"Create a PHP script to store data in a MySQL database.","completion":"<?php db_host = \\"localhost\\"; db_user = \\"username\\"; db_pass = \\"password\\"; db_name = \\"database\\"; con = mysqli_connect(db_host, db_user, db_pass, db_name); if( mysqli_connect_errno() ){ die(\\"Failed to connect to MySQL: \\".mysqli_connect_error()); } sql = \\"INSERT INTO table (name, age) VALUES ('John', 25)\\"; if( mysqli_query(con, sql) ){ echo \\"Data stored!\\"; }else{ echo \\"Error: \\".mysqli_error(con); } mysqli_close(con); ?>"},{"prompt":"Design a C++ program that prints out a Fibonacci series of numbers up to 20 elements.","completion":"#include <iostream> using namespace std; int main() { int ele, i, number[20]; //create the fibonacci series number[0] = 0; number[1] = 1; for (i = 2; i < 20; i++) { number[i] = number[i-1] + number[i-2]; } //print the fibonacci series for (i = 0; i < 20; i++) { cout << number[i] << \\" \\"; } return 0; }"},{"prompt":"Generate a random UUID using Node.js.","completion":"const uuid = require('uuid'); const randomUUID = uuid.v4(); console.log(randomUUID);"},{"prompt":"Construct a React component to display a login form.","completion":"function LoginForm(){ return ( <form> <label> Username: <input type=\\"text\\" name=\\"username\\" /> </label> <label> Password: <input type=\\"password\\" name=\\"password\\" /> </label> <input type=\\"submit\\" value=\\"Submit\\" /> </form> ); }"},{"prompt":"Develop a Python script to print out a given string 5 times. str = \\"Hello World!","completion":"for i in range(5): print(str)"},{"prompt":"Design a MySQL query to find the number of distinct entries in a table.","completion":"SELECT COUNT(DISTINCT(*) FROM table_name;"},{"prompt":"Edit the following HTML to create a 2-column form layout with labels. <form> <input type=\\"text\\" name=\\"name\\" placeholder=\\"Name...\\" /> <input type=\\"email\\" name=\\"email\\" placeholder=\\"Email...\\" /> <textarea name=\\"message\\" placeholder=\\"Message...\\" rows=\\"4\\" cols=\\"50\\"></textarea> <input type=\\"submit\\" value=\\"Submit\\" /> </form>","completion":"<form> <div style=\\"display: flex;\\"> <div style=\\"flex: 1;\\"> <label>Name:</label> <input type=\\"text\\" name=\\"name\\" placeholder=\\"Name...\\" /> </div> <div style=\\"flex: 1;\\"> <label>Email:</label> <input type=\\"email\\" name=\\"email\\" placeholder=\\"Email...\\" /> </div> </div> <div style=\\"display: flex;\\"> <div style=\\"flex: 1;\\"> <label>Message:</label> <textarea name=\\"message\\" placeholder=\\"Message...\\" rows=\\"4\\" cols=\\"50\\"></textarea> </div> </div> <input type=\\"submit\\" value=\\"Submit\\" /> </form>"},{"prompt":"Classify the following sentence as either statement or question. \\"She had taken the train to France.","completion":"Statement."},{"prompt":"w do you export a JavaScript variable as a global variable?","completion":"To export a JavaScript variable as a global variable, use the \\"window\\" object and set the variable to a property of the window object. For example, to export the variable \\"myVar\\", use window.myVar = myVar;."},{"prompt":"Write a Python class for a Person with attributes name, age, and address.","completion":"class Person: def __init__(self, name, age, address): self.name = name self.age = age self.address = address def setName(self, name): self.name = name def getName(self): return self.name def setAge(self, age): self.age = age def getAge(self): return self.age def setAddress(self, address): self.address = address def getAddress(self): return self.address"},{"prompt":"Edit the following JavaScript to add validation to an input field. <input type=\\"text\\" id=\\"name\\" name=\\"name\\" />","completion":"<input type=\\"text\\" id=\\"name\\" name=\\"name\\" onChange=\\"validateName()\\" /> <script> function validateName() { var name = document.getElementById(\\"name\\").value; if (name.length < 5) { alert(\\"Name should contain at least 5 characters!\\"); } } <\/script>"},{"prompt":"w do you add an element to the end of an array in Python?","completion":"To add an element to the end of an array in Python, use the append() method. For example, to add the element \\"apple\\" to the end of the array [\\"orange\\", \\"banana\\"], use the following code: my_array = [\\"orange\\", \\"banana\\"] my_array.append(\\"apple\\")"},{"prompt":"Construct a while loop that prints the numbers from 10 to 100 incrementing by 4 with each iteration.","completion":"num = 10 while num <= 100: print(num) num += 4"},{"prompt":"Write a JavaScript code that multiplies two numbers and returns the result. 2 and 3","completion":"function multiply_two_numbers(num1, num2) { return num1 * num2; }"},{"prompt":"Write a Python code that checks if a given string only contains alphabets.","completion":"import re def is_alphabetic(string): Pattern = re.compile(\\"^[a-zA-Z]*\\") return bool(Pattern.match(string))"},{"prompt":"Construct a for loop that iterates 10 times and prints the square of each iteration.","completion":"for i in range(10): print(i**2)"},{"prompt":"Construct an if-else statement that takes an integer as an argument and prints \\"positive\\" if the value is greater than 0 and \\"negative\\" if the value is less than 0. 7","completion":"if (num > 0) { cout << \\"positive\\"; } else { cout << \\"negative\\"; }"},{"prompt":"Create a JavaScript code that checks if an array contains a given element. Array: [2, 5, 9] Element: 5","completion":"function contains(arr, ele) { for (let i = 0; i < arr.length; i++) { if(arr[i] === ele) { return true; } } return false; }"},{"prompt":"Write a Python code to compute the dot product of two given vectors. [1, 2, 3] and [4, 5, 6]","completion":"def dot_product(v1, v2): product = 0 for i in range(len(v1)): product += v1[i] * v2[i] return product"},{"prompt":"Convert this function written in Python to JavaScript code. def divide_two_numbers(a, b): if b == 0: return \\"Division by 0 not allowed!\\" return a / b","completion":"function divide_two_numbers(a, b) { if(b == 0) { return \\"Division by 0 not allowed!\\"; } return a / b; }"},{"prompt":"dentify the string format required to display the date in the following format: dd/mm/yyyy.","completion":"\\"%d/%m/%Y\\""},{"prompt":"Compare two strings and identify the first index of a mismatch. String 1: stack String 2: stacc","completion":"Index: 4"},{"prompt":"Print the length of an array containing the numbers [6, 5, 9, 15].","completion":"4"},{"prompt":"Create a for loop in Python to find the combined length of all the strings in a list. list = ['Data', 'Science', 'AI']","completion":"total_length = 0 for s in list: total_length += len(s) print(total_length)"},{"prompt":"mplement a function in Python to reverse the contents of a given dictionary. dictionary = { \\"name\\": \\"John Doe\\", \\"age\\": 30, \\"city\\": \\"New York\\" }","completion":"def reverse_dictionary(d): return dict(zip(d.values(), d.keys())) print(reverse_dictionary(dictionary))"},{"prompt":"Calculate the dot product of two given 3x3 and 3x1 matrices. Matrix 1: [1, 2, 3] [4, 5, 6] [7, 8, 9] Matrix 2: [1] [2] [3]","completion":"dot_product = 38"},{"prompt":"Generate a 3x3 identity matrix.","completion":"[[1, 0, 0], [0, 1, 0], [0, 0, 1]]"},{"prompt":"Write a Python script to Iterate over a given list and print the square of the numbers in the list. list = [3, 4, 5]","completion":"for num in list: print(num*num)"},{"prompt":"Create a function to reverse a list without using the reverse() method.","completion":"def reverse_list(lst): reversed_list = [] for i in range(len(lst) - 1, -1, -1): reversed_list.append(lst[i]) return reversed_list"},{"prompt":"Name the variable used for looping in this for loop. for i in range(1, 7): print(i)","completion":"The variable used is i."},{"prompt":"ert a comment in the following code snippet to explain what the code is doing. x = 5 y = 7 x = x + y","completion":"#This code is adding the value of y to x and then assigning the result to x. x = 5 y = 7 #add the value of y to x x = x + y"},{"prompt":"Rewrite the code snippet using a different loop structure. i = 0 while i < 5: print(i) i += 1","completion":"for i in range(0, 5): print(i)"},{"prompt":"Classify the type of error in the following code snippet. for i in range(5): print(i, sum)","completion":"The type of error here is a NameError, where a variable is referenced without having been previously defined."},{"prompt":"Calculate the factorial of x and store it in the variable y. x = 5","completion":"y = 120 # 5! = 1 * 2 * 3 * 4 * 5 = 120"},{"prompt":"Parse data from a given JSON object. data: { \\"data\\": [ { \\"name\\": \\"John\\", \\"age\\": 24 }, { \\"name\\": \\"Bob\\", \\"age\\": 26 } ] }","completion":"import json data = '{\\"data\\":[{\\"name\\":\\"John\\",\\"age\\":24},{\\"name\\":\\"Bob\\",\\"age\\":26}]}' parsed_data = json.loads(data) for item in parsed_data['data']: print(item['name'] + \\" is \\" + str(item['age']) + \\"years old.\\")"},{"prompt":"Edit the code so that it does not throw an error. a = 2 + 3 b = a * 2 c = b / a z = b + c","completion":"a = 2 + 3 b = a * 2 c = b / a # We need to explicitly convert c to an integer before doing the addition. z = b + int(c)"},{"prompt":"Find the maximum and minimum values in a given array. array = [2, 3, 5, 1, 9]","completion":"maxValue = 9 minValue = 1"},{"prompt":"Write a script to sort a linear array in descending order arr = [2, 4, 1, 8, 10, 7, 9]","completion":"arr.sort(reverse=True) print(arr)"},{"prompt":"Given an array of n elements and an integer k, find the subarray with the maximum sum less than k. arr = [1, 4, 6, 8, -5, 7], k = 11","completion":"max_sum = 0 start = 0 end = 0 # Loop through each element of the array for i in range(len(arr)): sum = 0 # Find maximum sum subarray for j in range(i, len(arr)): sum += arr[j] if (sum > max_sum and sum <= k): max_sum = sum start = i end = j # Print maximum subarray print(\\"Maximum sum subarray with sum <=\\", k, \\"is\\") print(\\"[\\", end=\\"\\") for i in range(start, end+1): print(arr[i], end=\\", \\") print(\\"]\\")"},{"prompt":"Modify the previous program to also print the sum of the subarray elements arr = [1, 4, 6, 8, -5, 7], k = 11","completion":"max_sum = 0 start = 0 end = 0 # Loop through each element of the array for i in range(len(arr)): sum = 0 # Find maximum sum subarray for j in range(i, len(arr)): sum += arr[j] if (sum > max_sum and sum <= k): max_sum = sum start = i end = j # Print maximum subarray and its sum print(\\"Maximum sum subarray with sum <=\\", k, \\"is\\") print(\\"[\\", end=\\"\\") for i in range(start, end+1): print(arr[i], end=\\", \\") print(\\"]\\") print(\\"Sum of the subarray elements:\\", max_sum)"},{"prompt":"Name the outlier value in the following array of integer values arr = [121, 124, 127, 130, 135]","completion":"135"},{"prompt":"Create a program that finds all the prime numbers between 1-100","completion":"for number in range(1,101): # To check if a number is prime or not is_prime = True # We need to check until the square root of that number for i in range(2, int(number**0.5)+1): if number % i == 0: is_prime = False break if is_prime: print(number, end=\\" \\")"},{"prompt":"Assume you are given two integer variables, b and c, write a program to multiply these two numbers without using the asterisk (*) operator b = 5, c= 7","completion":"mult = 0 for i in range(0, abs(b)): mult = mult + abs(c) if (b < 0 and c < 0) or (b > 0 and c > 0): print(mult) else: print(-mult)"},{"prompt":"Design a program that takes a date in the format dd/mm/yyyy as input and prints the day of that given date 01/02/2020","completion":"day = int(input(\\"Enter date in dd/mm/yyyy format: \\").split('/')[0]) month = int(input(\\"Enter date in dd/mm/yyyy format: \\").split('/')[1]) year = int(input(\\"Enter date in dd/mm/yyyy format: \\").split('/')[2]) # Determine day name day_num = datetime(year, month, day).weekday() days = [\\"Monday\\", \\"Tuesday\\", \\"Wednesday\\", \\"Thursday\\", \\"Friday\\", \\"Saturday\\", \\"Sunday\\"] day_name = days[day_num] print(\\"The day is: \\", day_name)"},{"prompt":"Sort an array of integers according to their frequency of occurrence arr = [1, 1, 2, 2, 2, 3, 4, 4]","completion":"freq = {} for i in arr: if i in freq.keys(): freq[i] += 1 else: freq[i] = 1 # Create list of tuple freq_lst = [] for k,v in freq.items(): freq_lst.append((k,v)) # Sort the list of tuple in descending order freq_lst = sorted(freq_lst, key = lambda x : x[1], reverse = True) # Create list from sorted tuple sorted_arr = [i[0] for i in freq_lst] print(sorted_arr)"},{"prompt":"Create a program that prints out the set of all prime divisors of a given number num = 50","completion":"primes = [] for i in range(2, num+1): is_prime = True for j in range(2, int(i**0.5)+1): if (i % j) == 0: is_prime = False break if is_prime: primes.append(i) prime_divisors = {i for i in primes if num % i == 0} print(prime_divisors)"},{"prompt":"Use the given code to create a Pandas Dataframe. data = {'Name': ['Jack', 'James', 'Joe'], 'Age': [21, 22, 23]}","completion":"import pandas as pd df = pd.DataFrame(data)"},{"prompt":"ert a given element into the correct position of the list. list = [1,3,4,5] element = 2","completion":"list = [1,2,3,4,5]"},{"prompt":"Create a loop for the given range of numbers. start = 5 end = 10","completion":"for i in range(start, end+1): print(i)"},{"prompt":"Use a try-except block to check if a given string can be converted to a float. str = \\"123.45","completion":"try: float(str) print(\\"Valid\\") except ValueError: print(\\"Invalid\\")"},{"prompt":"Create a dictionary to store the phone numbers of your friends. list_friends = [\\"John\\", \\"Doe\\", \\"Jane\\", \\"Smith\\"]","completion":"friends_phone_numbers = {} for name in list_friends: phone_number = input(f'Please enter the phone number for {name}: ') friends_phone_numbers[name] = phone_number"},{"prompt":"Create a script in Python for printing the Fibonacci series for a given range of numbers. start = 1 end = 10","completion":"a,b = 0,1 for i in range(start, end+1): print(a) a,b = b,a+b"},{"prompt":"Create a hash table to store the student data. students = {\\"John\\": 23, \\"Doe\\": 25, \\"Jane\\": 30}","completion":"table = {} for key,value in students.items(): table[key] = value"},{"prompt":"Write a shell script to print out the number of the users currently logged in.","completion":"#!/bin/bash users=(w -h | awk '{print 1}' | sort | uniq | wc -l) echo \\"Total number of users currently logged in: users\\""},{"prompt":"Create a shell script that will run a specified command every 5 minutes.","completion":"#!/bin/bash while true do command sleep 300 done"},{"prompt":"Write a python program to remove all the elements from a list that are less than 10. mylist = [4, 7, 21, 24, 88, 12]","completion":"def remove_less_than_10(mylist): return [n for n in mylist if n >= 10]"},{"prompt":"Define a function in JavaScript that takes 3 numbers as arguments and returns the smallest one.","completion":"function findSmallest(x, y, z) { smallest = x; if(y < smallest) { smallest = y; } if(z < smallest) { smallest = z; } return smallest; }"},{"prompt":"Write a function to normalize a vector in C++.","completion":"#include <iostream> #include <algorithm> #include <cmath> // Function to normalize a vector void normalize(std::vector<float>& vector) { // Compute the magnitude float magnitude = 0.0; for (int i = 0; i < vector.size(); i++) magnitude += vector[i] * vector[i]; magnitude = sqrt(magnitude); // Normalize the vector for (int i = 0; i < vector.size(); i++) vector[i] /= magnitude; }"},{"prompt":"Write a function to rearrange the elements of an array in such a way that no two same numbers are adjacent to each other. mylist = [2, 5, 9, 2, 1, 5, 9, 0]","completion":"def rearrange(mylist): mylist.sort() length = len(mylist) temp = [0]*(length + 1) # to store indexes of mylist[] j, k = 0, length-1; # filling temp[] from both sides for i in range(length): if i%2==0: temp[i] = mylist[j] j += 1 else: temp[i] = mylist[k] k -= 1 # modify original array for i in range(length): mylist[i] = temp[i] return mylist"},{"prompt":"Create a web form in HTML that captures a user's name, address, and a select box for their favorite color.","completion":"<form method=\\"post\\"> <label>Name:</label><br> <input type=\\"text\\" name=\\"name\\"><br> <label>Address:</label><br> <input type=\\"text\\" name=\\"address\\"><br> <label>Favorite Color:</label><br> <select name=\\"favorite_color\\"> <option value=\\"red\\">Red</option> <option value=\\"blue\\">Blue</option> <option value=\\"green\\">Green</option> <option value=\\"purple\\">Purple</option> </select><br><br> <input type=\\"submit\\" value=\\"Submit\\"> </form>"},{"prompt":"Create an if-else statement in Java that prints \\"Yes!\\" if an integer is 5 and prints \\"No!\\" if an integer is not 5.","completion":"if (int == 5) { System.out.println(\\"Yes!\\"); } else { System.out.println(\\"No!\\"); }"},{"prompt":"Create a class in Python named 'Bar' that has an attribute named 'fname' and a single method named 'sayHello'.","completion":"class Bar: def __init__(self, fname): self.fname = fname def sayHello(self): print \\"Hello, \\" + self.fname + \\"!\\""},{"prompt":"Write a SQL statement that updates the value of attribute 'salary' to 80000 where the attribute 'deptname' is equal to 'sales'.","completion":"UPDATE employees SET salary = 80000 WHERE deptname = 'sales';"},{"prompt":"Write a SQL query to list the names of employees who are 25 years or older.","completion":"SELECT name FROM employees WHERE age >= 25;"},{"prompt":"Translate a given string of comma-separated words into a list of words in Python. \\"apple, orange, grape","completion":"words = \\"apple, orange, grape\\".split(\\", \\") print(words) # ['apple', 'orange', 'grape']"},{"prompt":"Write an if-else statement in Java that checks if a given number is divisible by 3 and prints \\"Divisible by 3\\" if true, otherwise \\"Not divisible\\".","completion":"if (num % 3 == 0) { System.out.println(\\"Divisible by 3\\"); } else { System.out.println(\\"Not divisible\\"); }"},{"prompt":"Create a web page with a CSS style to hide all paragraphs in the HTML body.","completion":"<html> <head> <style> p { display: none; } </style> </head> <body> <p>This paragraph is hidden.</p> <p>This paragraph is also hidden.</p> </body> </html>"},{"prompt":"Write a JavaScript function that takes a string argument and returns a count of all the times the letter 'a' appears in the string.","completion":"function countA(str) { let count = 0; for (let i=0; i<str.length; i++) { if (str[i] === 'a') { count += 1; } } return count; }"},{"prompt":"Create a class in Python named 'Foo' that has two methods named 'add' and 'subtract' to add and subtract two given numbers respectively.","completion":"class Foo: def add(self, num1, num2): return num1 + num2 def subtract(self, num1, num2): return num1 - num2"},{"prompt":"Write a query in MySQL to select all records in a table called 'names' where the first letter of the last name is 'K'.","completion":"SELECT * FROM names WHERE last_name LIKE 'K%';"},{"prompt":"Create a class in Java named 'Circle' that has an attribute named 'radius' and a method named 'getArea' to calculate the area of a circle.","completion":"class Circle { double radius; double getArea() { return Math.PI * Math.pow(radius, 2); } }"},{"prompt":"Create a SQL query to retrieve a list of the five most expensive items","completion":"SELECT * FROM Items ORDER BY Price DESC LIMIT 5"},{"prompt":"mplement a function that determines whether an integer is odd or even.","completion":"def is_even(n): return n % 2 == 0"},{"prompt":"Create a programming language syntax to print \\"Hello, World!","completion":"println(\\"Hello, World!\\")"},{"prompt":"Produce an HTML code snippet for creating a list with three items.","completion":"<ul> <li>Item 1</li> <li>Item 2</li> <li>Item 3</li> </ul>"},{"prompt":"Create a bash shell script that assigns two variables with values of 4 and 2 and prints the sum of the two variables.","completion":"#!/bin/bash a=4 b=2 echo 'the sum is' ((a + b))"},{"prompt":"Modify the following C code so it will display the average of numbers in an array #include <stdio.h> int main() { int nums[] = {1,2,3,4};","completion":"#include <stdio.h> #include <stdlib.h> int main() { int nums[] = {1,2,3,4}; int len = sizeof(nums) / sizeof(nums[0]); int sum = 0; double average = 0; for(int i = 0; i < len; i++) { sum += nums[i]; } average = (double)sum / (double)len; printf(\\"The average is: %f\\",average); return 0; }"},{"prompt":"Generate a SQL query to display the employee name and city for a particular employee ID. Employee ID = 56","completion":"SELECT EmployeeName, City FROM Employees WHERE EmployeeID = 56"},{"prompt":"Develop an algorithm in Java for finding all the possible combinations of a given list of numbers. lst = [1, 2, 3, 4]","completion":"public class Combination { static void combinationUtil(int arr[], int n, int r, int index, int data[], int i) { // Current combination is ready // to be printed, print it if (index == r) { for (int j = 0; j < r; j++) System.out.print(data[j] + \\" \\"); System.out.println(\\"\\"); return; } // When no more elements are there to put in data[] if (i >= n) return; // Current is included, put next at next // location data[index] = arr[i]; combinationUtil(arr, n, r, index + 1, data, i + 1); // Current is excluded, replace it with // next (Note that i+1 is passed, but // index is not changed) combinationUtil(arr, n, r, index, data, i + 1); } // Print all combinations of given array static void printCombination(int arr[], int n, int r) { // A temporary array to store all combination // one by one int data[] = new int[r]; // Print all combination using temporary // array 'data[]' combinationUtil(arr, n, r, 0, data, 0); } // Driver code public static void main(String[] args) { int arr[] = { 1, 2, 3, 4 }; int r = arr.length; int n = arr.length; printCombination(arr, n, r); } }"},{"prompt":"What is the algorithm used in the following python snippet? defbinarySearch( arr, low, high, x): if high >= low: mid = (high + low) // 2 # Check if x is present at mid if arr[mid] == x: return mid # If x is greater, ignore left half elif arr[mid] < x: return binarySearch(arr, mid + 1, high, x) # If x is smaller, ignore right half else: return binarySearch(arr, low, mid - 1, x)","completion":"The algorithm used in this python snippet is a binary search algorithm. Binary search is an efficient search algorithm that searches a sorted array for a specified element in O(log n) time complexity. The algorithm works by first determining the median of the array, and then comparing the value at the median to the value being searched for. If the value at the median is the same as the value being searched for, the algorithm returns the index at which it found the element. Otherwise, it will either ignore the left or right half of the array depending on whether the value at the median is larger or smaller than the value being searched for. The algorithm then repeats this step on the narrowed down subarray until the element is found."},{"prompt":"Develop a SQL query to get all the customer data with the customer age more than 25 years.","completion":"SELECT * FROM customer WHERE age > 25;"},{"prompt":"w would you change the following C code to include a while loop? for (int i=0; i<10; i++) printf(\\"I am going to count %dn\\", i);","completion":"#include <stdio.h> int main() { int i = 0; while (i < 10) { printf(\\"I am going to count %dn\\", i); i++; } return 0; }"},{"prompt":"Rewrite the following Java code using a for loop instead of a for-each loop. List<Integer> someList = new ArrayList<>(); for (Integer i : someList) { System.out.println(i); }","completion":"List<Integer> someList = new ArrayList<>(); for (int i=0; i < someList.size(); i++) { System.out.println(someList.get(i)); }"},{"prompt":"Code a program in PHP to swap the values of two variables. a = 10 b = 15","completion":"a = 10; b = 15; list(a, b) = array(b, a); echo a; // Outputs 15 echo b; // Outputs 10"},{"prompt":"w would you change the following HTML to add an \\"alt\\" attribute to the \\"img\\" tag? <img src=\\"sample.jpg\\">","completion":"<img src=\\"sample.jpg\\" alt=\\"Sample Image\\">"},{"prompt":"Suggest a way to gracefully handle errors in Python code.","completion":"In Python, errors can be handled gracefully using try and except blocks. The try block contains the code that might throw an exception and the except block is used to handle the exception. In addition, the finally block is used to perform any clean up after the code is executed. Additionally, custom exception classes can be implemented and used to handle errors more granularly."},{"prompt":"Please write an SQL query to calculate the average age of people born in the year 1980.","completion":"SELECT AVG(EXTRACT(YEAR FROM CURRENT_DATE) - EXTRACT(YEAR FROM birth_date)) FROM people WHERE YEAR(birth_date) = '1980';"},{"prompt":"w can you sort a list of integers by their absolute value in Python?","completion":"You can sort a list of integers by their absolute value using the sort() method. For example: numbers = [2, -1, 5, 0, -4] numbers.sort(key = lambda x: abs(x)) print(numbers) # Output: [0, -1, 2, -4, 5]"},{"prompt":"Please write an SQL query to find the records that have a value higher than the average of all values.","completion":"SELECT * FROM table_name WHERE value > (SELECT AVG(value) FROM table_name);"},{"prompt":"w can you remove the duplicate items from a list of integers in Python?","completion":"You can remove the duplicate items from a list of integers in Python by using the set() function. For example: a = [1, 2, 3, 3, 4] b = list(set(a)) print(b) # Output: [1, 2, 3, 4]"},{"prompt":"Please write an SQL query to find all records with a corresponding score greater than or equal to a given score.","completion":"SELECT * FROM table_name WHERE score >= given_score"},{"prompt":"Write code to construct an object Given a class Patient with the following constructor: \`\`\`python class Patient: def __init__(self, name, age, illness, medical_record): self.name = name self.age = age self.illness = illness self.medical_record = medical_record \`\`\`","completion":"p1 = Patient(\\"John\\", 45, \\"Diabetes\\", \\"1234567890\\")"},{"prompt":"Create a list comprehension Given a list of numbers: nums = [1, 2, 3, 4, 5]","completion":"[x*2 for x in nums]"},{"prompt":"Find the length of the longest substring without repeating characters string = \\"abcabcbb","completion":"def longest_substring(string): longest_substring = \\"\\" curr_substring = \\"\\" char_set = set() for char in string: if char not in char_set: curr_substring += char char_set.add(char) else: if len(curr_substring) > len(longest_substring): longest_substring = curr_substring curr_substring = char char_set = set(char) if len(curr_substring) > len(longest_substring): longest_substring = curr_substring return len(longest_substring)"},{"prompt":"mplement a Java class that encapsulates a basic for loop.","completion":"public class loop { public void forLoop(int start, int end){ for(int i=start; i<end; i++){ System.out.println(i); } } }"},{"prompt":"Convert the following pseudocode into a JavaScript program. Input: A, B Output: maximum of A and B","completion":"function max(A, B) { if (A > B) { return A; } else { return B; } };"},{"prompt":"Write a shell script to find all even numbers from 1 to 50.","completion":"#!/bin/bash for i in {1..50..2} do echo i done"},{"prompt":"mplement a Go program that takes a string as input and prints its reverse.","completion":"package main import \\"fmt\\" func main() { var str string fmt.Printf(\\"Enter a string: \\") fmt.Scanf(\\"%sn\\", &str) fmt.Printf(\\"The reverse of the string is %sn\\", reverse(str)) } func reverse(s string) string { r := []rune(s) for i, j := 0, len(r)-1; i < len(r)/2; i, j = i+1, j-1 { r[i], r[j] = r[j], r[i] } return string(r) }"},{"prompt":"mplement a SQL query to find the longest string present in a column.","completion":"SELECT column_name, LENGTH(column_name) AS len FROM table_name ORDER BY len DESC LIMIT 1;"},{"prompt":"Convert this JSON object to a PHP associative array. { \\"name\\": \\"John Smith\\", \\"age\\": 35, \\"address\\": { \\"streetAddress\\": \\"21 2nd Street\\", \\"city\\": \\"New York\\", \\"state\\": \\"NY\\", \\"postalCode\\": \\"10021\\" }, \\"phoneNumbers\\": [ { \\"type\\": \\"home\\", \\"number\\": \\"212 555-1234\\" }, { \\"type\\": \\"fax\\", \\"number\\": \\"646 555-4567\\" } ] }","completion":"person_arr = array( 'name' => 'John Smith', 'age' => 35, 'address' => array( 'streetAddress' => '21 2nd Street', 'city' => 'New York', 'state' => 'NY', 'postalCode' => '10021', ), 'phoneNumbers' => array( array( 'type' => 'home', 'number' => '212 555-1234', ), array( 'type' => 'fax', 'number' => '646 555-4567', ), ), );"},{"prompt":"Write Java code to calculate the area of a circle with radius 12 cm.","completion":"public class AreaOfCircle { public static void main(String[] args) { double radius = 12.0; double area = Math.PI * Math.pow(radius, 2); System.out.println(\\"Area of circle is: \\" + area + \\" cm²\\"); } }"},{"prompt":"Write Python code to find the nth element of a Fibonacci sequence.","completion":"def Fibonacci(n): if n<0: print(\\"Incorrect input\\") elif n==1: return 0 elif n==2: return 1 else: return Fibonacci(n-1)+Fibonacci(n-2)"},{"prompt":"Find the sum of all the items in this array of integers. [3, 8, 17, 29, 32, 33]","completion":"122"},{"prompt":"Create an HTML page containing a list of all US states.","completion":"<html> <head> <title> US States </title> </head> <body> <ul> <li>Alabama</li> <li>Alaska</li> <li>Arizona</li> <li>Arkansas</li> <li>California</li> <li>Colorado</li> <li>Connecticut</li> <li>Delaware</li> <li>Florida</li> <li>Georgia</li> <li>Hawaii</li> <li>Idaho</li> <li>Illinois</li> <li>Indiana</li> <li>Iowa</li> <li>Kansas</li> <li>Kentucky</li> <li>Louisiana</li> <li>Maine</li> <li>Maryland</li> <li>Massachusetts</li> <li>Michigan</li> <li>Minnesota</li> <li>Mississippi</li> <li>Missouri</li> <li>Montana</li> <li>Nebraska</li> <li>Nevada</li> <li>New Hampshire</li> <li>New Jersey</li> <li>New Mexico</li> <li>New York</li> <li>North Carolina</li> <li>North Dakota</li> <li>Ohio</li> <li>Oklahoma</li> <li>Oregon</li> <li>Pennsylvania</li> <li>Rhode Island</li> <li>South Carolina</li> <li>South Dakota</li> <li>Tennessee</li> <li>Texas</li> <li>Utah</li> <li>Vermont</li> <li>Virginia</li> <li>Washington</li> <li>West Virginia</li> <li>Wisconsin</li> <li>Wyoming</li> </ul> </body> </html>"},{"prompt":"Create an object to represent a user in JavaScript.","completion":"const user = { name: 'John', age: 35, email: 'john@example.com', roles: ['user', 'admin'] };"},{"prompt":"Write HTML code to generate a table of 5 rows and 4 columns.","completion":"<table> <tr> <th>Col1</th> <th>Col2</th> <th>Col3</th> <th>Col4</th> </tr> <tr> <td>Row1</td> <td>Row1</td> <td>Row1</td> <td>Row1</td> </tr> <tr> <td>Row2</td> <td>Row2</td> <td>Row2</td> <td>Row2</td> </tr> <tr> <td>Row3</td> <td>Row3</td> <td>Row3</td> <td>Row3</td> </tr> <tr> <td>Row4</td> <td>Row4</td> <td>Row4</td> <td>Row4</td> </tr> <tr> <td>Row5</td> <td>Row5</td> <td>Row5</td> <td>Row5</td> </tr> </table>"},{"prompt":"Find the GCD (greatest common divisor) of 12 and 18.","completion":"6"},{"prompt":"Write JavaScript code to output a square pattern of 5 stars.","completion":"for (let i = 0; i < 5; i++) { let line = ''; for (let j = 0; j < 5; j++) { line += '*'; } console.log(line); }"},{"prompt":"Write MySQL code to create a table with the following columns","completion":"CREATE TABLE table_name ( id INT NOT NULL, first_name VARCHAR(255) NOT NULL, last_name VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, age INT NOT NULL );"},{"prompt":"Sort this array of numbers from low to high. [21, 8, 18, 32, 56]","completion":"[8, 18, 21, 32, 56]"},{"prompt":"Write Java code to generate random numbers between 0 and 10.","completion":"Random rand = new Random(); // Generate random integers in range 0 to 10 int rand_int1 = rand.nextInt(11);"},{"prompt":"Construct an HTML table with two columns and 4 rows.","completion":"<table> <tr> <th>First Column</th> <th>Second Column</th> </tr> <tr> <td>Row 1</td> <td>Row 1</td> </tr> <tr> <td>Row 2</td> <td>Row 2</td> </tr> <tr> <td>Row 3</td> <td>Row 3</td> </tr> <tr> <td>Row 4</td> <td>Row 4</td> </tr> </table>"},{"prompt":"Write a SQL query to select all the books written by a specific author. author: \\"Robert Louis Stevenso","completion":"SELECT * FROM books WHERE author = \\"Robert Louis Stevenson\\""},{"prompt":"Design a response that matches the following JSON format. { \\"response\\": { \\"data\\": \\"hello\\" } }","completion":"{ \\"response\\": { \\"data\\": \\"hello\\", \\"status\\": \\"ok\\" } }"},{"prompt":"Create a Java class for car objects.","completion":"public class Car { private String make; private String model; private int year; public Car(String make, String model, int year) { this.make = make; this.model = model; this.year = year; } public String getMake() { return make; } public String getModel() { return model; } public int getYear() { return year; } public void setMake(String make) { this.make = make; } public void setModel(String model) { this.model = model; } public void setYear(int year) { this.year = year; } }"},{"prompt":"Write an Android app for creating and playing a quiz competition.","completion":"public class QuizApp extends Activity { private ArrayList<QuizQuestion> questions; public void onCreate(Bundle bundle) { questions = new ArrayList<QuizQuestion>(); // other code // such as setting the layout // and adding questions to the list } public void showQuestion() { // code to show new question // such as setting the text/image // showing the options, etc. } public void selectAnswer(int answerIndex) { // code to check if the selected answer is // correct or wrong // and show correct or wrong message } public void changeQuestion() { // code to show next question } }"},{"prompt":"Write a Recurrent Neural Network (RNN) in Keras for sentence classification.","completion":"import tensorflow as tf from tensorflow.keras.models import Sequential from tensorflow.keras.layers import Embedding, LSTM, Dense model = Sequential() # input layer with embedding model.add(Embedding(input_dim = vocab_size, output_dim = 32, input_length = max_length)) # lstm layer model.add(LSTM(16)) # output layer model.add(Dense(1, activation='sigmoid')) # compile the model model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy']) # train the model model.fit(X_train, y_train, epochs=10, batch_size=128) # evaluate the model score = model.evaluate(X_test, y_test, batch_size=128)"},{"prompt":"Design an algorithm that sorts a given array of integers in ascending order. [5, 4, 2, 6, 1]","completion":"def sort_array(arr): n = len(arr) for i in range(n): for j in range(0, n-i-1): if arr[j] > arr[j+1]: arr[j], arr[j+1] = arr[j+1], arr[j] return arr"},{"prompt":"Create a dynamic web page using HTML and CSS to display a list of books.","completion":"<html> <head> <style> ul { list-style-type: none; padding: 0; margin: 0; } li { font-family: sans-serif; font-size: 20px; padding: 10px; border-bottom: 1px solid #ccc; } </style> </head> <body> <ul> <li> <b>Book 1</b> <br> Author: John Doe <br> Year: 2020 </li> <li> <b>Book 2</b> <br> Author: Jane Doe <br> Year: 2019 </li> <li> <b>Book 3</b> <br> Author: Robert Smith <br> Year: 2021 </li> </ul> </body> </html>"},{"prompt":"Construct an XML document for storing a collection of books and their authors.","completion":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?> <books> <book id=\\"1\\"> <title>Book 1</title> <author>John Doe</author> </book> <book id=\\"2\\"> <title>Book 2</title> <author>Jane Doe</author> </book> <book id=\\"3\\"> <title>Book 3</title> <author>Robert Smith</author> </book> </books>"},{"prompt":"w can we inverse the numerical order of elements stored in an array?","completion":"To invert the order of elements stored in an array, we can use the reverse() function. This function takes in an array and reverses the order of the elements in-place, returning nothing. The syntax is as follows: array.reverse()"},{"prompt":"Compute the mean of a list of integers within the range of 1-5. [1, 2, 4, 3, 5]","completion":"mean = 3.0 # Calculate the sum of the list total = 0 for i in range(len(list)): total += list[i] # Calculate the mean mean = total / len(list)"},{"prompt":"Replace the following if-else statement with a ternary operator. if n > 0: x = n * 10 else: x = n * 5","completion":"x = n * 10 if n > 0 else n * 5"},{"prompt":"Design a function that provides the square root of a number x.","completion":"def square_root(x): return x ** 0.5"},{"prompt":"w can we sort a dictionary by value in Python?","completion":"We can use the sorted() function in combination with the operator.itemgetter() operator to sort the dictionary by value in Python. The syntax is as follows: sorted(dictionary.items(), key=operator.itemgetter(1))"},{"prompt":"Update a given line of code to make a function return 'True' if both values are equal. def compare(val1, val2): if val1 == val2","completion":"def compare(val1, val2): if val1 == val2: return True"},{"prompt":"Generate a unique key using the following string. my_str = \\"Hello World","completion":"import uuid key = uuid.uuid5(uuid.NAMESPACE_DNS, my_str)"},{"prompt":"Determine the maximum of two numbers. num1 = 10 num2 = 15","completion":"max_num = max(num1, num2)"},{"prompt":"Construct an object in JavaScript to model a car with make, model, year, color, and price as attributes.","completion":"let car = { make:'', model:'', year:'', color:'', price:0 };"},{"prompt":"Reverse the words of the sentence \\"The quick brown fox jumps over the lazy dog\\".","completion":"dog lazy the over jumps fox brown quick The"},{"prompt":"Create a type with 4 fields, including \\"name\\", \\"address\\", \\"phone\\", and \\"email\\".","completion":"type ContactInfo { name: string; address: string; phone: string; email: string; }"},{"prompt":"Rework the following code so that it prints the same output with fewer lines of code. int x = 13; if (x == 13) { System.out.println(\\"x is 13\\"); }","completion":"int x = 13; System.out.println(x == 13 ? \\"x is 13\\" : \\"\\");"},{"prompt":"Answer the following question: What is the difference between a keyword and an identifier in Python?","completion":"In Python, a keyword is a reserved word that has a specific pre-defined meaning and purpose in the language, while an identifier is any name that you assign to a variable, function, class, module or any other object. Keywords are words that are reserved for specific functions and operations, while identifiers are used to name user-defined objects."},{"prompt":"Find the runtime complexity of the following algorithm in Big-O notation. def add_array_elements(arr): n = len(arr) sum_elements = 0 for i in range(0, n): sum_elements += arr[i] return sum_eleme","completion":"The runtime complexity of the algorithm in Big-O notation is O(n), where n is the length of the array."},{"prompt":"w would you calculate the sum of all integers between two given integers?","completion":"The sum of all integers between two given integers can be calculated by using the formula: sum = (first integer + last integer) * (last integer - first integer + 1) / 2."},{"prompt":"Write a SQL query to find all the unique (distinct) values in a column named \\"Name\\".","completion":"SELECT DISTINCT Name FROM table_name;"},{"prompt":"Write a CSS code to make the background color of all paragraph elements in a page blue.","completion":"p { background-color: blue; }"},{"prompt":"w would you create a socket connection between two computers in a network?","completion":"Creating a socket connection between two computers in a network involves setting up a Socket Server on one of the computers and a Socket Client on the other computer. The computer with the Socket Server will need to listen for any incoming connection. Then, the computer with the Socket Client will send a connection request to the Socket Server. When the connection is established, data can then be transmitted between the two computers."},{"prompt":"Create an inheritance hierarchy of three classes, \\"Person\\", \\"Student\\" and \\"Professor","completion":"class Person { // properties and methods } class Student extends Person { // properties and methods } class Professor extends Person { // properties and methods }"},{"prompt":"Given the following function that takes in a string and returns true if it is a palindrone. Rewrite the function to make it more optimized. def is_palindrome(s): s = str(s).lower().replace(\\" \\",\\"\\") return s == s[::-1]","completion":"def is_palindrome(s): s = ''.join(char.lower() for char in s if char.isalpha()) return s == s[::-1]"},{"prompt":"Add the \`color\` parameter to this function and make sure it works properly. def printShape(num, shape): for i in range(0,num): print(shape)","completion":"def printShape(num, shape, color): for i in range(0, num): print(color + shape)"},{"prompt":"Fix the following function to make it comply with PEP8 standards. def f(x): k= x+4 return k","completion":"def f(x): k = x + 4 return k"},{"prompt":"Complete the given function to print the Cartesian product of two sets. A = {0, 1, 2} B = {3, 4, 5, 6} def cartesian_product(A, B)","completion":"A = {0, 1, 2} B = {3, 4, 5, 6} def cartesian_product(A, B): C = set() for a in A: for b in B: C.add((a, b)) return C"},{"prompt":"Normalize the given string to lowercase and remove all punctuation marks. Hey! How are you?","completion":"hey how are you"},{"prompt":"Sort the following list of dictionaries by the values of the keys. lst = [ {'a':2}, {'a':3}, {'a':1} ]","completion":"lst = [ {'a':2}, {'a':3}, {'a':1} ] sorted_list = sorted(lst, key=lambda k: k['a'])"},{"prompt":"Given a list of prices, use a comprehension to calculate the average price. prices = [2.50, 3.25, 4.00, 1.75]","completion":"prices = [2.50, 3.25, 4.00, 1.75] avg_price = sum([price for price in prices])/len(prices)"},{"prompt":"Given a list of words, create a reverse lookup dictionary (word as key, indices as values). words = ['apple', 'ball', 'cat', 'ball']","completion":"words = ['apple', 'ball', 'cat', 'ball'] reverse_lookup = {word: [i for i, v in enumerate(words) if v == word] for word in set(words)}"},{"prompt":"Using JavaScript, write an algorithm to print all the Fibonnaci numbers up to a given number n. n = 10","completion":"function printFibonacci(n) { let fibo = [0, 1]; if (n <= 2) { return 1; } for (let i = 2; i <=n; i++ ){ fibo[i] = fibo[i-1]+fibo[i-2]; } return fibo; } console.log(printFibonacci(n));"},{"prompt":"Write a SQL query to find the average age of people living in the UK.","completion":"SELECT AVG(TIMESTAMPDIFF(YEAR, date_of_birth, CURRENT_DATE)) as average_age FROM people WHERE country = 'UK';"},{"prompt":"Using HTML and CSS, design a landing page for a blog website.","completion":"<!DOCTYPE html> <html> <head> <title>My Blog</title> <style> .container{ width:850px; height: 850px; background-color: #F5F5FF; margin:auto; padding: 20px; box-shadow: 0px 0px 7px 1px rgba(0,0,0,0.3); } .header{ background-color: #323B45; font-size: 48px; font-weight: bold; color: #FFF; padding-left: 20px; padding-top: 15p </style> </head> <body> <div class=\\"container\\"> <div class=\\"header\\">Welcome to My Blog</div> </div> </body> </html>"},{"prompt":"Create an array of objects in JavaScript and log them in the console. [ {name: 'John', age: 25}, {name: 'Jack', age: 28} ]","completion":"let people = [ {name: 'John', age: 25}, {name: 'Jack', age: 28} ] console.log(people)"},{"prompt":"Write a MySQL query to find the average salary of employees in an organisation.","completion":"SELECT AVG(salary) as average_salary FROM employees;"},{"prompt":"Create an HTML page that displays an alert when a page is visited.","completion":"<!DOCTYPE html> <html> <head> <title>Alert Message Box</title> <script> window.onload = function() { alert(\\"Welcome to my webpage!\\"); } <\/script> </head> <body> </body> </html>"},{"prompt":"Define a class in Python to represent a rectangle and add a method to calculate its area.","completion":"class Rectangle: def __init__(self, length, width): self.length = length self.width = width def area(self): return self.length * self.width"},{"prompt":"Write a SQL query to get the top 5 scores for a given game.","completion":"SELECT * FROM Scores ORDER BY score DESC LIMIT 5;"},{"prompt":"Design a function in Python that takes two parameters, a list and a number, and returns a list where all elements are multiplied by the number. [1,2,3], 4","completion":"def mul_list(input_list, number): return [x*number for x in input_list]"},{"prompt":"Suggest an API call in Java to generate a random number","completion":"int randomNum = ThreadLocalRandom.current().nextInt(0, MAX_VALUE);"},{"prompt":"Write a function in JavaScript to filter out all the strings from a list. [1, \\"Hi\\", 55, false, \\"Bye\\"]","completion":"const filterStrings = arr => arr.filter(el => typeof el !== \\"string\\");"},{"prompt":"Write the following pseudocode in python \\"for each element in the list, check if the number is eve","completion":"for element in some_list: if element % 2 == 0: # do something"},{"prompt":"Given a list of numbers, create a function in JavaScript to return the sum of all its elements. [1,2,3,4]","completion":"const sumArray = arr => arr.reduce((acc,cur) => acc + cur, 0);"},{"prompt":"Generate a code in Java to loop through an array.","completion":"for (int i = 0; i < array.length; i++) { //do something }"},{"prompt":"Design a function in Python to split a sentence into words","completion":"def split_sentence(sentence): return sentence.split(' ')"},{"prompt":"Create a function in JavaScript to remove all occurrences of a specified value from an array. [1, 2, 3, 2, 4], 2","completion":"function removeElement(arr, val) { return arr.filter(x => x !== val); }"},{"prompt":"Create a JavaScript statement to output the prompt \\"Please enter your name:\\".","completion":"prompt(\\"Please enter your name:\\");"},{"prompt":"Output the following statement in bash: \\"Hello world!","completion":"echo \\"Hello world!\\""},{"prompt":"Create a function to search a list l for the value v. list l = [1, 2, 3, 4, 5, 6] value v = 4","completion":"def search_list(l, v): # Iterate through the list for i in l: # Check if the current item is equal to v if i == v: return True # Return False if we did not find the value return False # Search for the value 4 search_list([1, 2, 3, 4, 5, 6], 4) # Output: True"},{"prompt":"List the combinations of two lists l1 and l2. list l1 = [1, 2] list l2 = [a, b]","completion":"[[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]"},{"prompt":"w would you describe the process of creating a class in Java?","completion":"Creating a class in Java involves declaring its name, adding any essential fields and methods, and implementing any desired constructors. The class will then be available for use with other classes in the program."},{"prompt":"Create a loop to iterate through the elements of an array arr.","completion":"for (int i = 0; i < arr.length; i++) { // code to run for each element }"},{"prompt":"Create an if statement to check if an integer i is between 1 and 10.","completion":"if (i >= 1 && i <= 10) { // code to run if the condition is true }"},{"prompt":"Output the most frequent letter in a given string s. String s = \\"Hello World!","completion":"String s = \\"Hello World!\\" // Create a HashMap to store frequency of each letter Map<Character, Integer> freqMap = new HashMap<>(); // Loop through the string for(char c : s.toCharArray()) { int freq = freqMap.getOrDefault(c, 0); // Update the frequency map freqMap.put(c, freq + 1); } // Find the letter with the highest frequency int maxFreq = 0; char maxLetter = ' '; for(Map.Entry<Character, Integer> entry : freqMap.entrySet()) { int freq = entry.getValue(); if (freq > maxFreq) { maxFreq = freq; maxLetter = entry.getKey(); } } // Output the most frequent letter System.out.println(maxLetter); // Output: l"},{"prompt":"Create a JavaScript constant to define a tax rate.","completion":"const TAX_RATE = 0.2;"},{"prompt":"Create a JavaScript object to store information about an employee.","completion":"const employee = { firstName: \\"John\\", lastName: \\"Doe\\", job: \\"Engineer\\", salary: 5000 };"},{"prompt":"Write a PHP function to compare two strings s1 and s2.","completion":"function compareStrings(s1, s2) { if (strcmp(s1, s2) == 0) { return \\"Strings are equal.\\"; } elseif (strlen(s1) > strlen(s2)) { return \\"String 1 is longer than String 2.\\"; } elseif (strlen(s2) > strlen(s1)) { return \\"String 2 is longer than String 1.\\"; } else { return \\"Strings are not equal.\\"; } }"},{"prompt":"Create a function that takes in a dictionary and returns a new dictionary with the values squared. my_dict = {1:5, 2:6, 3:7}","completion":"def squared_values(my_dict): \\"\\"\\"This function takes in a dictionary as an argument, and returns a new dictionary containing the values of the original dictionary squared. Parameters ---------- my_dict : dict The input dictionary. Returns ------- A new dictionary with the values of the original dictionary squared. \\"\\"\\" return {k : v**2 for k, v in my_dict.items()}"},{"prompt":"Create a code to sort a list of strings based on the length of the strings. my_list = ['apples', 'bananas', 'oranges']","completion":"def sort_strings_by_length(my_list): \\"\\"\\"This function takes in a list of strings and sorts them based on the length of the strings. Parameters ---------- my_list : list The list of strings. Returns ------- The sorted list of strings. \\"\\"\\" return sorted(my_list, key=len)"},{"prompt":"Create a function that takes in two lists of numbers and returns a new list of numbers in which each element is the sum of the corresponding elements in the two input lists. list1 = [1, 2, 3] list2 = [4, 5, 6]","completion":"def add_lists_elementwise(list1, list2): \\"\\"\\"This function takes in two lists of numbers and returns a new list of numbers in which each element is the sum of the corresponding elements in the two input lists. Parameters ---------- list1 : list The first list of numbers. list2 : list The second list of numbers. Returns ------- A new list in which each element is the sum of the corresponding elements in the two input lists. \\"\\"\\" return [x + y for x, y in zip(list1, list2)]"},{"prompt":"Create a code that sums the first n Fibonacci numbers. num = 5","completion":"def sum_n_fibonacci_numbers(num): \\"\\"\\"This function takes in a number, n, and sums the first n Fibonacci numbers. Parameters ---------- num : int The number of Fibonacci numbers to sum. Returns ------- The sum of the first n Fibonacci numbers. \\"\\"\\" fib = [0, 1] if num < 0: return None elif num == 0: return 0 elif num == 1: return 1 else: for i in range(2, num + 1): fib.append(fib[i-2] + fib[i-1]) return sum(fib)"},{"prompt":"Generate a random list of 20 numbers between 1 and 100.","completion":"[86, 19, 2, 8, 12, 37, 43, 48, 63, 68, 21, 4, 39, 55, 87, 23, 69, 61, 44, 91]"},{"prompt":"Sort a given array of numbers [4, 2, 5, 3, 1] in ascending order. [4, 2, 5, 3, 1]","completion":"[1, 2, 3, 4, 5]"},{"prompt":"Compare two sorted lists and return the elements that are present in both lists. list1 = [1, 3, 5, 6, 7] list2 = [2, 3, 4, 5, 6]","completion":"[3, 5, 6]"},{"prompt":"Create a class Animal with two methods: speak(), which prints out the sound the animal makes, and eat() which prints out the food the animal eats.","completion":"class Animal(): def __init__(self): pass def speak(self): print(\\"Animal sound\\") def eat(self): print(\\"Animal food\\")"},{"prompt":"Write a query in SQL to select records with a timestamp between two dates. Start date: 2020-02-10 End date: 2020-02-15","completion":"SELECT * FROM table WHERE timestamp BETWEEN '2020-02-10' AND '2020-02-15';"},{"prompt":"Create an HTML form with five input fields, textbox, dropdown, checkbox, radio buttons and a submit button.","completion":"<form> <input type=\\"text\\" name=\\"name\\" /> <select> <option value=\\"\\">Select an Option</option> </select> <input type=\\"checkbox\\" name=\\"check\\" /> <input type=\\"radio\\" name=\\"group1\\" value=\\"option1\\" /> <input type=\\"submit\\" value=\\"Submit\\" /> </form>"},{"prompt":"Create a jQuery script to make all elements with a class name 'member' togglable.","completion":"(document).ready(function() { (\\".member\\").click(function() { (this).toggle(); }); });"},{"prompt":"What is the syntax to declare a class in JavaScript?","completion":"class MyClassName { constructor(data) { // some code } // other methods }"},{"prompt":"Generate a randomly generated 8 character alphanumeric string.","completion":"mZvx8ecz"},{"prompt":"Compute the modulus of num1 divided by num2 using C++. num1 = 177 num2 = 31","completion":"27"},{"prompt":"Write a lambda function to add two given numbers.","completion":"lambda x,y: x+y"},{"prompt":"Create a SQL query to select all the records from the table ‘fruit_list’ that have an expiry date falling within the next 10 days.","completion":"SELECT * FROM fruit_list WHERE expiry_date >= CURRENT_DATE AND expiry_date < CURRENT_DATE + INTERVAL 10 DAY;"},{"prompt":"Create a HTML page with a fixed header bar and a scrolling content area.","completion":"<html> <head> </head> <body> <div id=\\"header\\"> <!-- header content --> </div> <div id=\\"content\\" style=\\"overflow-y:scroll;\\"> <!-- content here --> </div> </body> </html>"},{"prompt":"Translate the given sentence into Spanish. The cat is sitting on the mat.","completion":"El gato está sentado en la alfombra."},{"prompt":"Write a SQL query to select all customers with a due balance.","completion":"SELECT * FROM customers WHERE balance_due > 0;"},{"prompt":"Divide num1 by num2 using Java. num1 = 100 num2 = 8","completion":"int result = num1 / num2; // result = 12"},{"prompt":"Update the 'name' column in the table 'users' to 'John' where the 'id' is 12.","completion":"UPDATE users SET name = 'John' WHERE id = 12;"},{"prompt":"Write a Python script to generate random passwords with a combinations of 6 letters and numbers.","completion":"import random def generate_password(): chars = 'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ' password = '' for i in range(6): password += random.choice(chars) return password print(generate_password())"},{"prompt":"Create a proper HTML string that presents a table with 3 columns","completion":"<table border = \\"1\\"> <tr> <th>Column1</th> <th>Column2</th> <th>Column3</th> </tr> <tr> <td>Value1</td> <td>Value2</td> <td>Value3</td> </tr> </table>"},{"prompt":"Generate appropriate SQL query that extracts the preferred occupation of people aged between 25 and 35 Noinpu","completion":"SELECT occupation FROM people WHERE age BETWEEN 25 AND 35;"},{"prompt":"Create a code that removes all duplicates from an input array Array = [1,2,3,3,2,1]","completion":"def remove_duplicates(arr): result = [] for i in arr: if i not in result: result.append(i) return result arr = [1,2,3,3,2,1] print(remove_duplicates(arr))"},{"prompt":"Create a program that reverses an array Array = [1,2,3,4,5]","completion":"def reverse(arr): start = 0 end = len(arr)-1 while start < end: arr[start], arr[end] = arr[end], arr[start] start += 1 end -= 1 return arr arr = [1,2,3,4,5] print(reverse(arr))"},{"prompt":"Create a Java program that prints out the Fibonacci series within a given range Range = (5, 15)","completion":"public class FibonacciRange { public static void main(String args[]) { // Set the range int lowerLimit=5, upperLimit=15; // Print the fibonacci series for (int number = lowerLimit; number <= upperLimit; number++) { System.out.print(fibonacciSeries(number) +\\" \\"); } } // Generates the fibonacci series public static int fibonacciSeries(int fibonacciNumber) { if (fibonacciNumber == 1 || fibonacciNumber == 2) { return 1; } return fibonacciSeries(fibonacciNumber - 1) + fibonacciSeries(fibonacciNumber - 2); } }"},{"prompt":"Classify the following programming language as either a general-purpose language or a domain-specific language. MATLAB","completion":"MATLAB is a domain-specific language."},{"prompt":"Figure out the output type of the following instruction: \\"print('Hello World')\\".","completion":"The output type is a string."},{"prompt":"Create a dictionary where the keys are the letters of the alphabet and the values are integers from 1 to 26.","completion":"alphabet_dict = {'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5, 'f': 6, 'g': 7, 'h': 8, 'i': 9, 'j': 10, 'k': 11, 'l': 12, 'm': 13, 'n': 14, 'o': 15, 'p': 16, 'q': 17, 'r': 18, 's': 19, 't': 20, 'u': 21, 'v': 22, 'w': 23, 'x': 24, 'y': 25, 'z': 26}"},{"prompt":"Create a Python class to represent a Person object. The class should contain the person's name, age, and occupation.","completion":"class Person: def __init__(self, name, age, occupation): self.name = name self.age = age self.occupation = occupation"},{"prompt":"Write a function in Python to generate all permutations of the given list of letters. ['a','b','c','d']","completion":"def permutations(letters): permutations = [] for a in letters: for b in letters: for c in letters: for d in letters: permutations.append(''.join(sorted([a, b, c, d]))) return permutations"},{"prompt":"Write a function to remove all duplicates from a given list of numbers and sort the remaining elements in ascending order. [1, 4, 3, 3, 7, 4, 8, 3]","completion":"def remove_duplicates(numbers): unique_numbers = set(numbers) sorted_numbers = sorted(unique_numbers) return sorted_numbers"},{"prompt":"Create a Python Search Algorithm to search for a given number in a given sorted array. data = [1, 7, 11, 14, 16] search_num = 14","completion":"def search(data, search_num): for i in range(len(data)): if data[i] == search_num: return i return -1"},{"prompt":"Write a function in Python to print a diamond pattern of stars.","completion":"def diamond_pattern(): row = 5 for i in range(1, row + 1): print(\\" \\"*(row-i)+\\"*\\"*(2*i-1)) if row > 1: for i in range(row-1, 0, -1): print(\\" \\"*(row-i)+\\"*\\"*(2*i-1))"},{"prompt":"Write a function in Python to implement a linear search algorithm. The algorithm should return the index of the number in the array if found, otherwise -1. data = [7, 13, 11, 9, 12] search_num = 9","completion":"def linear_search(data, search_num): for index, num in enumerate(data): if num == search_num: return index return -1"},{"prompt":"Rewrite the above function in Python to use binary search algorithm instead of linear search. data = [7, 13, 11, 9, 12] search_num = 9","completion":"def binary_search(data, search_num): low = 0 high = len(data) - 1 while low <= high: mid = (low + high)//2 if data[mid] == search_num: return mid elif data[mid] < search_num: low = mid + 1 else: high = mid - 1 return -1"},{"prompt":"Write a Python function to calculate the sum of the series 1^2 + 2^2 + 3^2 + ... + n^2. n = 8","completion":"def sum_series(n): sum = 0 for num in range(1, n + 1): sum += num**2 return sum"},{"prompt":"w can this code be refactored to make it more efficient? x = 100 if (x > 50) y = x + 20 else y = x - 20","completion":"The code can be refactored as follows: y = x+20 if x > 50 else x-"},{"prompt":"Edit the following code to register an account on a website. import requests url = \\"www.example.com/register\\" data = \\"username=myname","completion":"import requests url = \\"www.example.com/register\\" data = { \\"username\\" : \\"myname\\", \\"password\\" : \\"secret_password\\", \\"email\\" : \\"myname@example.com\\" } response = requests.post(url, data=data)"},{"prompt":"Provide a return statement for the following JavaScript function. function getAge(dob) { let age = 2020 - dob.split('-')[2] }","completion":"function getAge(dob) { let age = 2020 - dob.split('-')[2] return age; }"},{"prompt":"Write a class in C++ to represent a person with their name and age.","completion":"class Person { private: string name; int age; public: Person(string n, int a) { name = n; age = a; } string getName() { return name; } int getAge() { return age; } };"},{"prompt":"Create an array in JavaScript to store the coordinates of a rectangle.","completion":"const coordinates = [ {x: 10, y: 10}, {x: 20, y: 20}, {x: 10, y: 20}, {x: 20, y: 10} ];"},{"prompt":"Find the sum of all numbers in the following array of objects in JavaScript. [{ num: 10 }, { num: 10 }, { num: 20 }, { num: 30 }]","completion":"let sum = 0; arr.forEach(function(el){ sum += el.num; }); console.log(sum); // 70"},{"prompt":"Create a looping statement in Python to print the alphabet in lowercase.","completion":"for letter in \\"abcdefghijklmnopqrstuvwxyz\\": print(letter)"},{"prompt":"Write a JavaScript function to convert an object into a list of keys and values.","completion":"function objectToList(obj) { let keys = Object.keys(obj); let values = Object.values(obj); return keys.map((key, index) => [key, values[index]]); }"},{"prompt":"Define a variable in JavaScript to store a user's email address.","completion":"let userEmail = 'user@example.com';"},{"prompt":"Convert the string \\"hello world\\" to a byte array","completion":"b'hello world'"},{"prompt":"Construct a for loop to iterate through a list of numbers and sum them together. numbers = [1, 2, 3, 4, 5]","completion":"total = 0 for number in numbers: total += number print(\\"The sum is: \\", total)"},{"prompt":"Parse the given XML document and print out the text content of the \\"title\\" element. <doc> <title>This is a title</title> </doc>","completion":"import xml.etree.ElementTree as et root = et.fromstring(\\"<doc><title>This is a title</title></doc>\\") title = root.find('title') print(title.text)"},{"prompt":"Create an array of size 128 with values initialized to 0.","completion":"array = [0] * 128"},{"prompt":"Construct a loop to print all the items in the list. items = [\\"apple\\", \\"banana\\", \\"cherry\\"]","completion":"for item in items: print(item)"},{"prompt":"Print each character in the given string string = \\"Hello World","completion":"for char in string: print(char)"},{"prompt":"Rewrite the following function without using the \`\`for\`\` loop. def double_array(array): for i in range(len(array)): array[i] *= 2","completion":"def double_array(array): array[:] = [x * 2 for x in array]"},{"prompt":"Solve this challenge using Java. Given an array of integers, return indices of the two numbers such that they add up to a specific target. You may assume that each input would have exactly one solution, and you may not use the same element twice. Example: Given nums = [2, 7, 11, 15], target = 9, Because nums[0] + nums[1] = 2 + 7 = 9, return [0, 1].","completion":"class Solution { public int[] twoSum(int[] nums, int target) { int [] result = new int[2]; for(int i=0;i<nums.length;i++){ for (int j=i+1;j<nums.length;j++){ if (nums[i]+nums[j]==target){ result[0]=i; result[1]=j; break; } } } return result; } }"},{"prompt":"Edit this HTML code so it uses classes instead of IDs. <div id=\\"main\\"> <h1 id=\\"heading\\">Heading</h1> <p id=\\"body\\">Some text here</p> </div>","completion":"<div class=\\"main\\"> <h1 class=\\"heading\\">Heading</h1> <p class=\\"body\\">Some text here</p> </div>"},{"prompt":"Compile and run the following Java code. public class Main { public static void main(String[] args) { System.out.println(\\"Hello, world!\\"); } }","completion":"<noinput> Output: Hello, world!"},{"prompt":"Create a program that prints the triangle pattern given a number of rows. 5","completion":"* * * * * * * * * * * * * * *"},{"prompt":"Reverse the list without using built-in list functions list = [1, 2, 3, 4, 5]","completion":"list = [5, 4, 3, 2, 1]"},{"prompt":"Edit the following PHP code so it does not print out the error message \\"Notice: Undefined variable\\". <?php name = \\"John\\"; echo \\"Hello, name!\\"; ?>","completion":"<?php name = \\"John\\"; if (isset(name)) { echo \\"Hello, name!\\"; } ?>"},{"prompt":"Write a regex that matches the strings \\"apple\\" and \\"match\\".","completion":"/(apple)|(match)/"},{"prompt":"Write a JavaScript code that creates a new array populated with the elements that exist in both of the given arrays. arr1 = [1, 2, 3, 4, 5]; arr2 = [4, 5, 6, 7, 8];","completion":"let arr1 = [1, 2, 3, 4, 5]; let arr2 = [4, 5, 6, 7, 8]; let newArr = arr1.filter(num => arr2.includes(num)); console.log(newArr);"},{"prompt":"Create a Python class to store attributes of a student","completion":"class Student: def __init__(self, name, grade, age): self.name = name self.grade = grade self.age = age def get_name(self): return self.name def get_grade(self): return self.grade def get_age(self): return self.age"},{"prompt":"Explain the use of semicolon in the following python code. a = 5; b = 6; c = 7;","completion":"The semicolon is used here to separate multiple statements on the same line. In this case, the code is assigning values to variables; by separating these assignments with semicolons, they are all evaluated in a single statement as opposed to writing three separate statements."},{"prompt":"w could we modify the following code to capture user input? num = 5","completion":"We can use the built-in input() function to capture user input in this code: num = input(\\"Please enter a number: \\")"},{"prompt":"w could we modify the following code to add an item to a list? list = [1, 2, 3]","completion":"We can use the list.append() method to add an item to the list: list.append(4) # Adds the item 4 to the list"},{"prompt":"Generate a code segment that prints all the elements of a 2-dimensional array.","completion":"for array in 2d_array: for element in array: print(element)"},{"prompt":"Write a SQL query to list the names of all the customers with credit score greater than 800.","completion":"SELECT name FROM customer WHERE credit_score > 800;"},{"prompt":"Edit the following code to add a try-except block and print an error message on an exception. arr = [1, 2, 3] i = 4 print(arr[i])","completion":"arr = [1, 2, 3] i = 4 try: print(arr[i]) except IndexError: print(\\"Index out of bounds. Please specify a valid index.\\")"},{"prompt":"w could we modify the following code to handle potential errors when computing sum? num1 = input(\\"Enter a number: \\") num2 = input(\\"Enter another number: \\") sum = int(num1) + int(num2)","completion":"num1 = input(\\"Enter a number: \\") num2 = input(\\"Enter another number: \\") try: sum = int(num1) + int(num2) except ValueError: print(\\"Error: Please enter a valid number.\\")"},{"prompt":"Explain the purpose of a static method in a Python class","completion":"A static method is a method that is bound to a class rather than an object. It does not require an instance of the class to be created in order to be called, and it does not have access to the attributes or methods of an instance of that class. Static methods are usually used to provide methods for manipulation of class attributes and/or to provide utility methods for the class."},{"prompt":"Create a function in python to find the minimum value in an array. arr = [3,6,2,7,1]","completion":"def find_min(arr): min = arr[0] for x in arr: if x < min: min = x return min result = find_min(arr) print(result) # prints 1, which is the minimum in the array."},{"prompt":"Remove the duplicates in a list. arr = [1,2,1,2,3]","completion":"arr = [1,2,1,2,3] res = [] for x in arr: if x not in res: res.append(x) print(res) # prints [1,2,3], which is the list without any duplicates."},{"prompt":"Modify the following code to use a for loop to print the numbers 0 to 9","completion":"for i in range(10): print(i) # prints the numbers 0 to 9"},{"prompt":"Write a a code to find all the prime numbers from 0 to 100","completion":"# create a list of all the prime numbers prime_list = [] # iterate through 0 to 100 for i in range(1,101): if i > 1: # loop through 2 to i/2 for j in range(2,i//2): # if i is divisible by j, then it is not a prime number if (i % j) == 0: break else: # add the prime number to the prime list prime_list.append(i) print(prime_list) # prints the list of all prime numbers from 0 to 100."},{"prompt":"mplement a basic calculator that can compute simple math expressions. 9 * 2","completion":"def calculate(expr): return eval(expr)"},{"prompt":"Write a function to tokenize a given sentence into words. I am a programmer","completion":"def tokenize_sentence(sentence): tokens = sentence.split() return tokens"},{"prompt":"Write a code to perform a linear search in a given list. [1, 6, 2, 8, 5], 8","completion":"def linear_search(my_list, x): for i in range(len(my_list)): if my_list[i] == x: return i return -1"},{"prompt":"mplement a function to compute the binomial coefficient.","completion":"def compute_binomial_coefficient(n, k): if k == 0 or k == n: return 1 else: return compute_binomial_coefficient(n-1,k-1) + compute_binomial_coefficient(n-1,k)"},{"prompt":"mplement a function that can convert a given string to an integer. \\"123","completion":"def string_to_int(num): return int(num)"},{"prompt":"Generate a random string of 16 characters containing both alphabetical and numerical characters.","completion":"import random import string def random_string(): characters = string.ascii_letters + string.digits random_string = ''.join(random.choices(characters, k=16)) return random_string if __name__ == '__main__': print(random_string())"},{"prompt":"Given a two-dimensional array of integers, find the maximum sum of numbers you can find by tracing a path from the top-left to bottom-right corner. [[1, 5, 4], [2, 3, 4], [1, 9, 3]]","completion":"def max_sum(arr): result = [[None] * len(arr[0]) for _ in range(len(arr))] result[0][0] = arr[0][0] for i in range(1, len(arr[0])): result[0][i] = arr[0][i] + result[0][i - 1] for i in range(1, len(arr)): result[i][0] = arr[i][0] + result[i - 1][0] for i in range(1, len(arr)): for j in range(1, len(arr[0])): result[i][j] = max(result[i - 1][j], result[i][j - 1]) + arr[i][j] return result[- 1][- 1] if __name__ == '__main__': arr = [[1, 5, 4], [2, 3, 4], [1, 9, 3]] print(max_sum(arr))"},{"prompt":"Create a database table to store user information such as name, phone number, and address.","completion":"CREATE TABLE users ( user_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY, name VARCHAR(25) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(255) NOT NULL );"},{"prompt":"Given a linked list, write a function to find the nth to last node.","completion":"def nth_to_last_node(head, n): left_ptr = head right_ptr = head for _ in range(n-1): if not right_ptr.nextnode: raise LookupError('Error: n is larger than the linked list') right_ptr = right_ptr.nextnode while right_ptr.nextnode: left_ptr = left_ptr.nextnode right_ptr = right_ptr.nextnode return left_ptr if __name__ == '__main__': ll = LinkedList() # Assume LinkedList with nodes is defined head = ll.head result = nth_to_last_node(head, 3) print(result.value)"},{"prompt":"Write an algorithm to find the maximum subarray sum within the provided input array. [-2, 1, -3, 4, -1, 2, 1, -5, 4]","completion":"def max_subarray_sum(arr): max_sum = 0 curr_sum = 0 for x in arr: curr_sum += x if curr_sum < 0: curr_sum = 0 elif curr_sum > max_sum: max_sum = curr_sum return max_sum if __name__ == '__main__': arr = [-2, 1, -3, 4, -1, 2, 1, -5, 4] print(max_subarray_sum(arr))"},{"prompt":"Given a binary tree, write a function to determine whether it is a valid binary search tree.","completion":"def is_valid_bst(root): def helper(node, lower_limit, upper_limit): # base case if not node: return True val = node.val if val <= lower_limit or val >= upper_limit: return False if not helper(node.right, val, upper_limit): return False if not helper(node.left, lower_limit, val): return False return True return helper(root, float('-inf'), float('inf')) if __name__ == '__main__': # Assume a binary tree is defined root = Node().root result = is_valid_bst(root) print(result)"},{"prompt":"Remove all the punctuation from a given string \\"Welcome to the world of computers!","completion":"import string def remove_punctuation(text): punctuations = string.punctuation no_punct = \\"\\" for char in text: if char not in punctuations: no_punct += char return no_punct if __name__ == '__main__': text = 'Welcome to the world of computers!' print(remove_punctuation(text))"},{"prompt":"Construct a SQL query to find the names of all customers that have an order with an order amount higher than 1000. Table: customers Table: order","completion":"SELECT customers.name FROM customers INNER JOIN orders ON customers.customer_id = orders.customer_id WHERE orders.amount > 1000;"},{"prompt":"Create an HTML table containing 3 row and 3 column of text elements. Table with 9 text eleme","completion":"<table> <tr> <td>Text 1</td> <td>Text 2</td> <td>Text 3</td> </tr> <tr> <td>Text 4</td> <td>Text 5</td> <td>Text 6</td> </tr> <tr> <td>Text 7</td> <td>Text 8</td> <td>Text 9</td> </tr> </table>"},{"prompt":"Using Python, make a function that takes a list of strings as an argument and returns a new list of all the strings in uppercase. listOfStrings = [\\"apple\\", \\"banana\\", \\"mango\\"]","completion":"def convertStringsToUppercase(listOfStrings): return [string.upper() for string in listOfStrings]"},{"prompt":"What is the best way to check whether a JavaScript string ends with a given substring?","completion":"The best way to check if a JavaScript string ends with a given substring is to use the endsWith() method. This method will return a boolean value indicating whether the string ends with the given substring or not."},{"prompt":"Write a function in Python which takes a list of integers as an argument and returns a new list which contains the maximum value of each unique number in the input list. intList = [1, 4, 2, 9, 3, 5, 1, 9]","completion":"def maxValuesInList(intList): uniqueValues = set(intList) maxValuesList = [] for value in uniqueValues: maxValue = max([item for item in intList if item == value]) maxValuesList.append(maxValue) return maxValuesList"},{"prompt":"Write a JavaScript function to greet a user, given the user's name. name = 'John'","completion":"function greetUser(name){ return \\"Hello, \\" + name + \\"!\\"; }"},{"prompt":"w do you convert a JSON object to a string?","completion":"The JSON.stringify() method can be used to convert a JSON object to a string. This method takes two arguments: the JSON object to be converted and an optional replacer function that can be used to alter the output."},{"prompt":"Using Python, create a function that takes a string as an argument and returns a updated string where each character is repeated twice. inputValue = \\"Hello","completion":"def repeatCharacters(inputValue): outputValue = \\"\\" for char in inputValue: outputValue += char * 2 return outputValue"},{"prompt":"What is the most efficient way to delete a key from a Python dictionary?","completion":"The most efficient way to delete a key from a Python dictionary is to use the del keyword. This will delete the specified key and its associated value from the dictionary."},{"prompt":"Write an SQL query to select all rows from a table where a given column value is higher than 10. Table: user","completion":"SELECT * FROM users WHERE column_name > 10;"},{"prompt":"Create a HTML form containing 5 input fields - two text boxes, two radio buttons and one dropdown list.","completion":"<form> <input type=\\"text\\" placeholder=\\"Text Input 1\\"> <input type=\\"text\\" placeholder=\\"Text Input 2\\"> <input type=\\"radio\\" name=\\"radio\\" value=\\"option1\\">Option 1 <input type=\\"radio\\" name=\\"radio\\" value=\\"option2\\">Option 2 <select> <option value=\\"Option A\\">Option A</option> <option value=\\"Option B\\">Option B</option> </select> </form>"},{"prompt":"w to select data from a Pandas DataFrame?","completion":"Pandas DataFrames can be queried by selecting specific columns and/or rows. To select a single column from a DataFrame, you can use the following syntax: df['column_name'] To select multiple columns from a DataFrame, you can use the following syntax: df[['column_1', 'column_2', 'column_3']] To select rows from a DataFrame, you can use the following syntax: df[(df['column_name'] == condition) & (df['column_name_2'] > condition)]"},{"prompt":"Create a class in Python called \\"Person\\" and define two methods - one for getting a name, and one for saying hello.","completion":"class Person(object): def __init__(self, name): self.name = name def getName(self): return self.name def say_hello(self): print(\\"Hello, my name is %s\\" % self.name)"},{"prompt":"Given two integers, how to find the GCD of them in Python?","completion":"def gcd(a, b): if(b == 0): return a else: return gcd(b, a % b)"},{"prompt":"w to check if a string contains a specific character in Python?","completion":"You can check if a string contains a specific character in Python by using the in operator. For example: my_string = \\"Hello World!\\" if 'W' in my_string: print(\\"The string contains the character W\\")"},{"prompt":"Write a function in Python to find the sum of all even numbers between 0 and a given number.","completion":"def sum_of_even_numbers(n): result = 0 for i in range(0, n + 1): if i % 2 == 0: result += i return result"},{"prompt":"w to sort a list of tuples in Python?","completion":"You can sort a list of tuples in Python by using the sorted() function. For example: tuple_list = [('John', 18), ('Jane', 20), ('Bob', 16)] sorted_list = sorted(tuple_list, key=lambda tup: tup[1]) print(sorted_list) # Output: [('Bob', 16), ('John', 18), ('Jane', 20)]"},{"prompt":"Create a function that returns a list of Prime numbers between 0-50.","completion":"def prime_numbers(): primes=[] for i in range (1,51): count=0 for j in range (2,i): if i%j==0: count+=1 if count==0: primes.append(i) return primes"},{"prompt":"Create an algorithm that will search for a key-value pair in an object. searchKey='c' object= { \\"a\\": 1, \\"b\\": 2, \\"c\\": 3, \\"d\\": 4, \\"e\\": 5 }","completion":"def search(searchKey, object): if searchKey in object: return object[searchKey] else: return -1"},{"prompt":"w to remove all special characters from a string? string=\\"It@#%^&*( ) is a;?.incredible# time","completion":"def remove_special_characters(string): new_string = \\"\\" for char in string: if char.isalpha() or char.isdigit() or char==\\" \\": new_string += char return new_string"},{"prompt":"w to hide a particular div when a button is clicked?","completion":"document.getElementById(\\"div_id\\").style.display=\\"none\\";"},{"prompt":"Write a Python script to remove duplicates from the list. my_list = [1,2,4,4,1,2]","completion":"def remove_duplicates(my_list): new_list = [] for item in my_list: if item not in new_list: new_list.append(item) return new_list"},{"prompt":"w to delete all elements from a given set?","completion":"Set.clear()"},{"prompt":"w to get the size of a dictionary?","completion":"len(dictionary)"},{"prompt":"Create a function which takes an array of strings as an argument and return the longest string. array =['cake', 'apple', 'orange']","completion":"def largest_string(array): largest_string=array[0] for i in array: if len(i) > len(largest_string): largest_string = i return largest_string"},{"prompt":"w to check if a list contains any None value in it?","completion":"any(x is None for x in my_list)"},{"prompt":"Write an SQL query to select all the students with a GPA greater than 3.5.","completion":"SELECT * FROM Students WHERE GPA > 3.5;"},{"prompt":"Describe a for loop for iteration of a list. my_list = [1, 2, 3, 4, 5]","completion":"for item in my_list: # do something with the item"},{"prompt":"Write a class to define a complex number","completion":"class ComplexNumber{ double real; double imaginary; public ComplexNumber(double real, double imaginary){ this.real = real; this.imaginary = imaginary; } public double getReal(){ return real; } public double getImaginary(){ return imaginary; } }"},{"prompt":"Given a binary tree, print out a post-order traversal of its nodes.","completion":"def postorder_traverse(root): if root == null: return postorder_traverse(root.left) postorder_traverse(root.right) print(root.value)"},{"prompt":"Write a function to delete a node from a linked list given the pointer to the node to be deleted.","completion":"// Given a pointer to a node, delete the node from the linked list // Do not return anything, changes are done in place. void deleteNode(Node *node) { Node* temp = node; Node* next = temp->next; node->data = next->data; node->next = next->next; free(next); }"},{"prompt":"Explain the concept of lazy loading","completion":"Lazy loading is a design pattern which delays the loading of an object until it is needed. This optimization can improve the performance of web applications by decreasing the amount of data and code that needs to be loaded initially, and thereby reducing the application's memory footprint and startup time."},{"prompt":"Write Python code to print the most frequent characters in a given string. String: I love apple","completion":"def most_frequent_char(s): count = [0] * 256 max_count = 0 max_id = 0 for i in range(len(s)): count[ord(s[i])] += 1 if count[ord(s[i])] > max_count: max_count = count[ord(s[i])] max_id = i return s[max_id]"},{"prompt":"Compute the sum of the squares of all the numbers between 1 and 10 (inclusively).","completion":"385"},{"prompt":"Create a dictionary (hash) table with the following key-value pairs: Key1: \\"a\\" Value1: 1 Key2: \\"b\\" Value2: 2","completion":"myDict = {\\"a\\": 1, \\"b\\": 2}"},{"prompt":"Find the index of the first occurrence of the substring “sea” in the following string. String: \\"These are the se","completion":"The index of the first occurrence of “sea” is 8."},{"prompt":"Find the mean of the elements in this array. Array: [2, 3, 5, 4, 9]","completion":"The mean of the elements in this array is 4.8."},{"prompt":"Create a JSON string from the following Javascript object. Object:{ \\"name\\": \\"john\\", \\"age\\": 25, \\"address\\": { \\"city\\": \\"National City\\", \\"state\\": \\"CA\\" } }","completion":"'{\\"name\\": \\"john\\", \\"age\\": 25, \\"address\\": {\\"city\\": \\"National City\\", \\"state\\": \\"CA\\"}}'"},{"prompt":"Write a SQL query to find the titles of movies released between the years 2000 and 2010.","completion":"SELECT title FROM movies WHERE release_year BETWEEN 2000 AND 2010;"},{"prompt":"Compare the two strings and find out which one comes first alphabetically. String1: apple String2: b","completion":"apple comes first alphabetically."},{"prompt":"Extract the 3rd element from a given list [1, 2, 3, 4, 5]","completion":"3"},{"prompt":"Given a factor of two numbers, find the two numbers factor: 12","completion":"The two numbers are 1 and 12."},{"prompt":"Generate a regex pattern for valid emails","completion":"^[w.+-]+@[w-]+.[w-.]+"},{"prompt":"Print all the permutations of a given list [1, 2, 3]","completion":"def permute(lis): if len(lis) == 0: return [] if len(lis) == 1: return [lis] l = [] for i in range(len(lis)): m = lis[i] remLis = lis[:i] + lis[i+1:] for p in permute(remLis): l.append([m] + p) return l list1 = [1, 2, 3] result = permute(list1) for i in result: print(i)"},{"prompt":"Create a Python program to calculate prime numbers between 0 to 50.","completion":"# Program to calculate prime numbers between 0 to 50 # list of prime numbers prime_list = [] for num in range(0,51): # prime numbers are greater than 1 if num > 1: for i in range(2, num): if (num % i) == 0: break else: prime_list.append(num) print(prime_list)"},{"prompt":"Construct a C++ code snippet to create a basic class named 'Person' with 2 fields: 'name' and 'age'.","completion":"class Person { string name; int age; public: Person(string n, int a) { name = n; age = a; } };"},{"prompt":"Using Java, write a program to check whether an integer is even or odd. 7","completion":"public class OddOrEven { public static void main(String[] args) { int num = 7; // if number is divisible by two then it is even if (num % 2 == 0) System.out.println(\\"Even\\"); else System.out.println(\\"Odd\\"); } } # Output: Odd"},{"prompt":"Create a JavaScript program that reverses a given string. Hello","completion":"// function to reverse a given string function reverseString(str) { return str.split('').reverse().join(''); } // Output reverseString('Hello') // Output olleH"},{"prompt":"Using Python, create a function to return the number of days in a particular month. September","completion":"def days_in_month(month): if month == 'January' or month == 'March' or month == 'May' or month == 'July' or month == 'August' or month == 'October' or month == 'December': return 31 elif month == 'February': return 28 else: return 30 # Output days_in_month('September') # Output 30"},{"prompt":"Write a simple Swift program that prompts the user to enter two integers and prints out the maximum value of the two. 7, 20","completion":"import Foundation func maximumValue(num1: Int, num2: Int) { let maxValue = max(num1, num2) print(maxValue) } // Output maximumValue(num1: 7, num2: 20) // Output"},{"prompt":"w would you create a list of 10 elements by calling the range() function?","completion":"my_list = list(range(10))"},{"prompt":"Define a function that returns the string \\"Hello World!","completion":"def hello_world(): return \\"Hello World!\\""},{"prompt":"Fragment the following statement ignoring whitespace and punctuation: \\"Hi, how are you doing?","completion":"word_list = [\\"Hi,\\", \\"how\\", \\"are\\", \\"you\\", \\"doing?\\"]"},{"prompt":"Find the maximum among three integers. widget_1 = 8 widget_2 = 4 widget_3 = 12","completion":"maximum = max(widget_1, widget_2, widget_3)"},{"prompt":"Explain what the following code is doing. import random def generate_random_number(): return random.randint(1, 10)","completion":"The code is defining a function called \\"generate_random_number\\" which will generate a randomly chosen integer between 1 and 10 using the randint() function from the random library."},{"prompt":"What is the value of \`\`a\`\` after the following statement? a = 5 a += 3","completion":"a = 8"},{"prompt":"Correct the following code and generate an output: list_of_ints = [2, 3, 4, 8] for x in list_of_ints print(x)","completion":"list_of_ints = [2, 3, 4, 8] for x in list_of_ints: print(x) # Output: 2 3 4 8"},{"prompt":"Write a function to print the permutations of a given string.","completion":"def print_permutations(string): if len(string) == 1: print(string) else: for permutation in (print_permutations(string[1:])): for i in range(len(string)): print(permutation[:i] + string[0] + permutation[i:]) print_permutations(\\"abc\\")"},{"prompt":"w would you reverse a string in Python?","completion":"my_string = \\"Hello World!\\" my_string = my_string[::-1] # slice the string from start to finish in reverse order"},{"prompt":"Using given HTML code, make the font color of 2nd paragraph blue. <body> <p>This is the first paragraph.</p> <p>This is the second paragraph.</p> </body>","completion":"<body> <p>This is the first paragraph.</p> <p style=\\"color:blue;\\">This is the second paragraph.</p> </body>"},{"prompt":"Create a C++ program to sort an array using selection sort algorithm. [2, 7, 4, 1, 5, 3]","completion":"#include <iostream> using namespace std; void selectionSort(int arr[], int n) { int i, j, min_idx; for (i = 0; i < n-1; i++) { min_idx = i; for (j = i+1; j < n; j++) if (arr[j] < arr[min_idx]) min_idx = j; swap(arr[min_idx], arr[i]); } } int main() { int arr[] = {2, 7, 4, 1, 5, 3}; int n = sizeof(arr)/sizeof(arr[0]); selectionSort(arr, n); cout << \\"Sorted array is n\\"; for (int i = 0; i < n; i++) cout << arr[i] << \\" \\"; return 0; }"},{"prompt":"You need to sort an Unsorted Linked List in ascending order. head -> 10 -> 8 -> 5 -> 12 -> 15","completion":"head -> 5 -> 8 -> 10 -> 12 -> 15"},{"prompt":"Edit a given HTML code to make the font size of 1st paragraph 12px. <body> <p>This is the first paragraph.</p> <p>This is the second paragraph.</p> </body>","completion":"<body> <p style=\\"font-size: 12px;\\">This is the first paragraph.</p> <p>This is the second paragraph.</p> </body>"},{"prompt":"Read an array from stdin and find the maximum element in it. [3, 8, 5, 6, 1]","completion":"#include <iostream> using namespace std; int main() { int arr[] = {3, 8, 5, 6, 1}; int n = sizeof(arr) / sizeof(arr[0]); int max_element = 0; for (int i = 0; i < n; i++) { if (arr[i] > max_element) max_element = arr[i]; } cout << \\"Maximum element in the array is \\" << max_element << endl; return 0; }"},{"prompt":"Name an advantage of using linked list over an array.","completion":"One advantage of a linked list over an array is that it does not require the memory for storing all the elements to be allocated at once. Linked lists allow memory to be allocated as needed and can be easily expanded as new records are added. Also, linked list can easily insert and remove elements at any position in the list. Additionally, they can easily be manipulated or sorted in the same order in which they are stored. Finally, linked lists can store data items of different sizes while arrays require all elements to be the same size."},{"prompt":"Write a script in JavaScript to print the first 20 Fibonacci numbers.","completion":"let n1 = 0; let n2 = 1; let n3; console.log(n1 + \\" \\" + n2); for(let i = 2; i < 20; ++i) { n3 = n1 + n2; console.log(n3); n1 = n2; n2 = n3; }"},{"prompt":"Generate a Hash Table in Python with given length and values. size = 10 values = [20, 12, 45, 89, 78, 90]","completion":"hash_table = [None]*size for value in values: hash_value = value % size hash_table[hash_value] = value print(hash_table)"},{"prompt":"Convert the following SQL query into a Python pandas DataFrame. SELECT product.name, store.location, store.country FROM product INNER JOIN store ON product.store_id = store.store_id","completion":"import pandas as pd df = pd.read_sql_query( 'SELECT product.name, store.location, store.country' 'FROM product' 'INNER JOIN store' 'ON product.store_id = store.store_id', conn )"},{"prompt":"Java, create a method to detect if a number is a palindrome.","completion":"public static boolean isPalindrome(int number) { int num = number; int reverse = 0; while(number > 0) { int remainder = number % 10; reverse = (reverse*10) + remainder; number = number/10; } return num == reverse; }"},{"prompt":"Write a Rust program to convert a string to title case.","completion":"fn to_title_case(s: String) -> String { let words: Vec<&str> = s.split_whitespace().collect(); let mut title_cased = String::new(); for word in words { let mut chars = word.chars(); title_cased.push_str(&chars.next().unwrap().to_uppercase().to_string()); for char in chars { title_cased.push_str(&char.to_lowercase().to_string()); } title_cased.push(' '); } title_cased.trim().to_string() }"},{"prompt":"Write a Swift function to parse a JSON string into a dictionary.","completion":"func parseJsonToDictionary(jsonString: String) -> [String: Any]? { if let data = jsonString.data(using: .utf8) { do { return try JSONSerialization.jsonObject(with: data, options: []) as? [String: Any] } catch { print(error.localizedDescription) } } return nil }"},{"prompt":"Using pandas, create a dataframe with two columns and five rows.","completion":"import pandas as pd df = pd.DataFrame( [[1, 2], [3, 4], [5, 6], [7, 8], [9, 10]], columns=['a', 'b'] )"},{"prompt":"Code a PHP program to detect if a URL is valid or not.","completion":"<?php // This function will check if URL is valid function is_url_valid(url) { url = @parse_url(url); if (!url) return false; url = array_map('trim', url); url['port'] = (!isset(url['port'])) ? 80 : (int)url['port']; path = (isset(url['path'])) ? url['path'] : ''; if (path == '') path = '/'; path .= (isset(url['query'])) ? \\"?url[query]\\" : ''; if (isset(url['host']) AND url['host'] != gethostbyname(url['host'])) { if (PHP_VERSION >= 5) return checkdnsrr(url['host'], 'A'); else return checkdnsrr(url['host'], 'A'); } return false; }"},{"prompt":"Using MongoDB, create a query to find all documents where the status is \\"ACTIVE\\".","completion":"db.collection.find({status: \\"ACTIVE\\"})"},{"prompt":"Python, write a function that takes two integers a, b and returns a*b.","completion":"def multiply(a, b): return a * b"},{"prompt":"Ruby, write a method that takes two strings and prints them in reverse order.","completion":"def print_strings_reverse(string1, string2) puts string2 puts string1 end"},{"prompt":"Explain what a sorting algorithm is and describe one.","completion":"A sorting algorithm is an algorithm that is used to rearrange a sequence of items so that they are in a certain order. One example of a sorting algorithm is the bubble sort. The bubble sort works by comparing two adjacent elements in the list, and swapping them if they are out of order. This process is then repeated until the list is sorted."},{"prompt":"Java, convert an integer array to a string. [1, 2, 3, 4]","completion":"String str = Arrays.toString(arr); // [1, 2, 3, 4]"},{"prompt":"Create an SQL query to return the titles of all books written by a given author. Author: John Doe","completion":"SELECT title FROM books WHERE author = 'John Doe';"},{"prompt":"HTML, write a code to create an unordered list.","completion":"<ul> <li>Item 1</li> <li>Item 2</li> <li>Item 3</li> <li>Item 4</li> </ul>"},{"prompt":"Write a Perl program to generate Fibonacci series.","completion":"#include <stdio.h> int main() { int n, first = 0, second = 1, next; printf(\\"Enter the number of terms n\\"); scanf(\\"%d\\", &n); printf(\\"First %d terms of Fibonacci series are :n\\", n); int i; for (i = 0; i < n; i++) { if (i <= 1) next = i; else { next = first + second; first = second; second = next; } printf(\\"%dn\\", next); } return 0; }"},{"prompt":"Write a shell script that prints out the directory this command was run from.","completion":"#!/bin/bash DIR=(cd (dirname \\"1\\") && pwd -P) echo DIR"},{"prompt":"Given a string, reverse the order of words and then print the string. Hello World","completion":"World Hello #!/bin/bash echo (echo 1 | awk '{for (i=NF; i!=0; i--) {printf (\\"%s \\",i)}; print \\"\\"}')"},{"prompt":"Create a GUI interface for a multiplayer card game using PyQt5.","completion":"import sys import PyQt5 from PyQt5.QtWidgets import QApplication, QWidget class Game(QWidget): def __init__(self): super().__init__() self.title = 'Multiplayer Card Game' self.left = 400 self.top = 400 self.width = 300 self.height = 100 self.initUI() def initUI(self): self.setWindowTitle(self.title) self.setGeometry(self.left, self.top, self.width, self.height) self.show() app = QApplication(sys.argv) screen = Game() sys.exit(app.exec_())"},{"prompt":"Create a python script that connects to a database and outputs the average age of users.","completion":"import pandas as pd import sqlite3 # Connect to database conn = sqlite3.connect(\\"myDB.db\\") # Read Data df = pd.read_sql(\\"SELECT age FROM Users\\", conn) # Calculate average avg_age = df.mean() # Output the average age of users print(\\"Average age of users: \\", avg_age)"},{"prompt":"Given HTML code, write a css selector to select all list items. <html> <body> <ul> <li>item 1</li> <li>item 2</li> <li>item 3</li> </ul> </body> </html>","completion":"li"},{"prompt":"Create an artificial neural network in PyTorch to predict the next word in a sentence.","completion":"import torch import torch.nn as nn class ANN(nn.Module): def __init__(self, vocab_size, embedding_dim, hidden_dim): super().__init__() self.embedding = nn.Embedding(vocab_size, embedding_dim) self.fc1 = nn.Linear(embedding_dim, hidden_dim) self.fc2 = nn.Linear(hidden_dim, vocab_size) def forward(self, x): embedded = self.embedding(x) out = self.fc1(embedded) out = self.fc2(out) return out"},{"prompt":"Write a MongoDB query to find all documents in a collection whose field \\"date\\" has a value of today.","completion":"db.collection.find({ date: new Date().toISOString().split('T')[0] })"},{"prompt":"Compare and contrast the two most popular NoSQL databases - MongoDB and Redis.","completion":"MongoDB and Redis are two of the most popular NoSQL databases. MongoDB is a document-oriented database, while Redis is an open-source in-memory data structure store. MongoDB is known for its scalability and flexible query language whereas Redis is best-suited for caching and real-time applications. MongoDB is best for storing structured, semi-structured and unstructured data, and Redis is used primarily for rapid data manipulation and retrieval of data stored in the key-value store. MongoDB offers an ACID (Atomicity, Consistency, Isolation, and Durability) compliant system with multi-document transactions, while Redis primarily has single-document atomic operations. MongoDB is best for structured or semi-structured data, while Redis is best for caching and real-time applications that require fast data access."},{"prompt":"Use PHP to create an associative array from the following JSON object. {\\"name\\": \\"John\\", \\"age\\": 35, \\"location\\": \\"New York\\"}","completion":"json_object = '{\\"name\\": \\"John\\", \\"age\\": 35, \\"location\\": \\"New York\\"}'; arr = json_decode(json_object, true); print_r(arr); // Output Array ( [name] => John [age] => 35 [location] => New York )"},{"prompt":"Write an SQL query to calculate the sum of the values in \\"quantity\\" field for all entries in the \\"products\\" table.","completion":"SELECT SUM(quantity) FROM products;"},{"prompt":"Construct an HTML page to display a table with 10 rows, 5 columns, and a header row.","completion":"<!DOCTYPE html> <html> <head> <title>Table Example</title> </head> <body> <table> <thead> <tr> <th>Header 1</th> <th>Header 2</th> <th>Header 3</th> <th>Header 4</th> <th>Header 5</th> </tr> </thead> <tbody> <tr> <td>Cell 1</td> <td>Cell 2</td> <td>Cell 3</td> <td>Cell 4</td> <td>Cell 5</td> </tr> <tr> <td>Cell 6</td> <td>Cell 7</td> <td>Cell 8</td> <td>Cell 9</td> <td>Cell 10</td> </tr> </tbody> </table> </body> </html>"},{"prompt":"Write a C++ program to read and print an array of integers. [5, 10, 20, 25]","completion":"#include <iostream> using namespace std; int main() { int arr[] = {5, 10, 20, 25}; int n = sizeof(arr)/sizeof(arr[0]); cout << \\"The array elements are: \\"; for (int i=0; i < n; i++) cout << arr[i] << \\" \\"; return 0; } // Output The array elements are: 5 10 20 25"},{"prompt":"Write a SQL query to delete all entries that has a value of \\"NULL\\" in the field \\"name\\".","completion":"DELETE FROM table_name WHERE name IS NULL;"},{"prompt":"Write a CSS code snippet to give all paragraphs a font size of 16px.","completion":"p { font-size: 16px; }"},{"prompt":"Reverse the following Scala list: \`\`List(1, 2, 3, 4)\`\`","completion":"List(4, 3, 2, 1)"},{"prompt":"Rewrite the following Java loop as a compact list comprehension. int[] array = {1, 2, 3, 4, 5}; int[] array2 = new int[array.length]; for(int i=0; i<array.length; i++) { array2[i] = array[i] + 1; }","completion":"int[] array = {1, 2, 3, 4, 5}; int[] array2 = Arrays.stream(array).map(x -> x + 1).toArray();"},{"prompt":"dentify the variables and operators in the following Java code. int a = 3 + 4; int b = a * 2;","completion":"Variables: a, b Operators: +, *"},{"prompt":"List all properties of a JavaScript object called \`\`person\`\`.","completion":"The properties of the person object include name, age, height, weight, gender, race, and occupation."},{"prompt":"Create a class called Vehicle in Python with attributes for type (car, truck, motorcycle etc.), make, model, year, and speed.","completion":"class Vehicle: def __init__(self, type, make, model, year, speed): self.type = type self.make = make self.model = model self.year = year self.speed = speed"},{"prompt":"w do you create a new list in Python from a given list that contains the square of each element?","completion":"The following code creates a new list from the given list by squaring each element using a list comprehension: new_list = [el**2 for el in original_list]"},{"prompt":"Name four of the main components of a basic HTML page.","completion":"The four main components of a basic HTML page are: the <html> element, the <head> element, the <title> element, and the <body> element."},{"prompt":"Devise a recursive solution to the problem. Find the sum of all numbers from 1 to N","completion":"def sum_recursive(n): if n == 0: return 0 else: return n + sum_recursive(n-1)"},{"prompt":"Replace the placeholder in the sentence below with the appropriate method Use the __________ function to convert the string to lowercase.","completion":"Use the lower() function to convert the string to lowercase."},{"prompt":"Using the comment as a guide, write a nested loop to iterate over all elements of a multi-dimensional array [[1, 2, 3], [4, 5, 6], [7, 8, 9]]","completion":"for i in range(len(array)): for j in range(len(array[i])): print(array[i][j])"},{"prompt":"Write a SQL query to find all students who have a GPA greater than 3.0","completion":"SELECT * FROM students WHERE GPA > 3.0"},{"prompt":"Modify the following code so that it prints the Fibonacci numbers up to the given number x = 10","completion":"def fibonacci(x): a = 0 b = 1 if x < 0: return [] elif x == 0: return 0 elif x == 1: return [0, 1] else: c = a + b res = [a, b, c] while c < x: a = b b = c c = a + b res.append(c) return res"},{"prompt":"Design a program to search a list for a specified item","completion":"def search_list(array, item): for i in range(len(array)): if array[i] == item: return i return -1"},{"prompt":"Create a function to return the count of even numbers in a list list_num = [4, 5, 6, 7, 8]","completion":"def count_even_numbers(list_num): count = 0 for i in list_num: if (i % 2 == 0): count += 1 return count"},{"prompt":"Write a code to convert an input string of numbers to an integer. input_str = '1234'","completion":"def str_to_int(input_str): num = 0 for i in input_str: num = num * 10 + (ord(i) - ord('0')) return num"},{"prompt":"Create a function to find all anagrams of a given word. word = \\"abbac","completion":"def anagrams(word): if len(word) == 1: return [word] else: anagrams_list = [] for i, letter in enumerate(word): for j in anagrams(word[:i]+word[i+1:]): anagrams_list.append(letter+j) return anagrams_list"},{"prompt":"Write a code to find the sum of values present in two dimensional array arr = [[1,2], [3,4], [5,6]]","completion":"def sum_two_dimensional_array(arr): total = 0 for sublist in arr: for i in sublist: total += i return total"},{"prompt":"Generate a list of unique numbers between 10 and 50.","completion":"[10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50]"},{"prompt":"Given a matrix, output the sum of all elements in the matrix. [ [1, 2, 3], [4, 5, 6], [7, 8, 9] ]","completion":"45"},{"prompt":"w many continuous substrings are there in the string \\"Geeks\\"?","completion":"15"},{"prompt":"Design a function to get the user input and print the maximum among them.","completion":"def getMaxNumber(): numbers = [] num = int(input(\\"Enter how many numbers: \\")) for i in range(num): numbers.append(int(input(\\"Enter a number: \\"))) maxNum = max(numbers) print(\\"The maximum number is\\", maxNum)"},{"prompt":"w can you change the given string 'Hello World' to 'World Hello'?","completion":"string = \\"Hello World\\" string = string.split() string = string[1] + ' ' + string[0] print(string) # World Hello"},{"prompt":"w can you find the severity of a given error?","completion":"Error severity can be found by looking at the error code or message provided. The higher the code or the more detailed the message, the more severe the error is. In addition, if the error message indicates the impact of the error on the system or application, it can be used to measure the severity of the error."},{"prompt":"Given a list of numbers, sort them in increasing order. nums = [2, 3, 1, 4, 5]","completion":"def sort_numbers(nums): return sorted(nums)"},{"prompt":"dentify which elements in an array are even numbers. nums = [1, 2, 3, 4, 5]","completion":"def is_even_num(nums): result = [] for num in nums: if num % 2 == 0: result.append(num) return result"},{"prompt":"Create a class in python with three functions, two of which must be called \`add\` and \`subtract\`.","completion":"class MathOperations: def add(self, a, b): return a + b def subtract(self, a, b): return a - b def multiply(self, a, b): return a * b"},{"prompt":"What type of neural network is used for language generation?","completion":"Recurrent Neural Networks (RNNs) are commonly used for language generation. Long Short-Term Memory (LSTM) networks and Gated Recurrent Units (GRUs) are prominent examples of RNNs used for language generation."},{"prompt":"Assign \`\`num = 5\`\` to the \`\`num\`\` variable using the Python assignment operator.","completion":"num = 5"},{"prompt":"Rearrange the given fragments of code in order to build an \`\`if ... else ...\`\` statement in Python. print('Success!') else: if a > b","completion":"if a > b: print('Success!') else:"},{"prompt":"What data structure is adopted to reflect the hierarchical structure of XML documents?","completion":"A tree data structure is typically adopted to represent the hierarchical structure of XML documents. In this structure, each node represents an element of the document and can have any number of children or parents depending on the structure."},{"prompt":"Given two lists \`\`a\`\` and \`\`b\`\`, calculate their difference and store the result in a list \`\`c\`\`. a = [1, 2, 3] b = [2, 3, 4]","completion":"c = list(set(a) - set(b))"},{"prompt":"Describe the differences between a static website and a dynamic website.","completion":"static websites contain fixed content that is served whenever a user requests a page, while dynamic websites store content in a database and generate the page content based on user input or other variables. Static websites are faster to build and are easier to maintain, while dynamic websites can provide users with more interactive experiences."},{"prompt":"Name two database technologies used for data persistence.","completion":"Two commonly used database technologies are relational databases (such as MySQL) and NoSQL databases (such as MongoDB)."},{"prompt":"w would you extract emails from a given string using regex in Python?","completion":"import re s = 'This string contains an email address: email@example.com' emails = re.findall(r'[w.-]+@[w.-]+', s)"},{"prompt":"w do you debug an application in Python?","completion":"Debugging an application in Python can be done using a variety of methods such as using a debugger like pdb, setting breakpoints, using logging, using the assert statement, etc. Additionally, tools like PyCharm and Visual Studio Code come with built-in debugging capabilities."},{"prompt":"Enter the variables from the equation below into Python code. 2x + 5y - 7z = 9","completion":"x = 2 y = 5 z = -7"},{"prompt":"Replace the following loop with a list comprehension. my_list = [] for item in range(20): my_lis.append(item**2)","completion":"my_list = [item**2 for item in range(20)]"},{"prompt":"Copy the following string without the middle word. The quick brown fox","completion":"The quick fox"},{"prompt":"w would you update the following code to iterate over a list of strings? list_of_ints = [1, 2, 3, 4] for n in list_of_ints: print(n)","completion":"The following code can be updated to iterate over a list of strings by replacing \`list_of_ints\` with the list of strings and replacing \`print(n)\` with \`print(str(n))\` to properly format each element of the list. list_of_strings = [\\"one\\", \\"two\\", \\"three\\", \\"four\\"] for n in list_of_strings: print(str(n))"},{"prompt":"Describe the result of running this code. obj = { 'a': 1, 'b': 2, 'c': 3 } for key in obj.keys(): print(key + ': ' + obj[key])","completion":"The result of running this code is that it prints each key-value pair in the object with key and value separated by a colon and a space, e.g, 'a: 1', 'b: 2', 'c: 3'."},{"prompt":"Find the area of a circle with radius 2.","completion":"The area of a circle with radius 2 is 12.566370614359172."},{"prompt":"Suggest a faster way to get a sublist from a given list.","completion":"A faster way to get a sublist from a given list is to use slicing. For example, to get the first 3 elements of a given list, the following code can be used: original_list = [1, 2, 3, 4, 5] sublist = original_list[:3]"},{"prompt":"Write a function to print a given character N times.","completion":"def print_n_times(character, times): for _ in range(times): print(character, end=\\"\\") print_n_times(\\"*\\", 5)"},{"prompt":"Create a python script that takes three required parameters 'x', 'y' and 'z' and prints the result of x * y * z x=4 y=3 z=2","completion":"def multiply(x, y, z): return x * y * z print(multiply(4, 3, 2)) //output 24"},{"prompt":"Suggest a Python code for sorting a list of dictionaries based on ascending order of a given key. original_list = [{'name':'John', 'age': 25}, {'name':'Jim', 'age': 18}, {'name':'Lisa', 'age': 20}]","completion":"def sort_by_age(original_list): Return sorted(original_list, key = lambda i: i['age'])"},{"prompt":"Write a Python function that takes a list of strings as parameter and returns a dictionary with the strings as keys and the length of each string as value. words = ['apple', 'banana', 'cat']","completion":"def string_lengths(words): return {word:len(word) for word in words}"},{"prompt":"Write a Python program to remove duplicates from a list of dictionaries based on their values for a given key. original_list = [{'name':'John', 'age': 25}, {'name':'Jim', 'age': 25}, {'name':'Lisa', 'age': 20}]","completion":"def remove_duplicates(original_list, key): seen = set() new_list = [item for item in original_list if key not in seen and (seen.add(item[key]) if item[key] is not None else True)] return new_list"},{"prompt":"Suggest a Python program to execute a given block of code a specified number of times. execute_n_times(5, print(\\"Hello World!\\"))","completion":"def execute_n_times(n, code): for _ in range(n): exec(code)"},{"prompt":"Write a Python program to create a function that takes two numbers as arguments and returns a list of all odd numbers between them. start_range = 2 end_range = 10","completion":"def get_odds(start_range, end_range): return [num for num in range(start_range, end_range+1) if num % 2 != 0]"},{"prompt":"Write a Python program to convert an integer to a Roman numeral. number = 2019","completion":"def to_roman(num): thousands = [\\"\\", \\"M\\", \\"MM\\", \\"MMM\\"] hundreds = [\\"\\", \\"C\\", \\"CC\\", \\"CCC\\", \\"CD\\", \\"D\\", \\"DC\\", \\"DCC\\", \\"DCCC\\", \\"CM\\"] tens = [\\"\\", \\"X\\", \\"XX\\", \\"XXX\\", \\"XL\\", \\"L\\", \\"LX\\", \\"LXX\\", \\"LXXX\\", \\"XC\\"] ones = [\\"\\", \\"I\\", \\"II\\", \\"III\\", \\"IV\\", \\"V\\", \\"VI\\", \\"VII\\", \\"VIII\\", \\"IX\\"] return thousands[num//1000] + hundreds[(num%1000)//100] + tens[(num%100)//10] + ones[num%10]"},{"prompt":"Write a Python program to compare two given lists and return True if their contents are the same. list1 = [1, 3, 8, 9] list2 = [1, 3, 8, 9]","completion":"def compare_lists(list1, list2): return list1 == list2"},{"prompt":"Suggest a Python code for printing the sum, minimum and maximum of a given list. list_elements = [1, 2, 4, 6, 8, 9]","completion":"def list_calculations(list_elements): print('sum:', sum(list_elements)) print('min:', min(list_elements)) print('max:', max(list_elements))"},{"prompt":"Write a Python program to shuffle the items of a given list in random order. list_elements = [1, 2, 3, 4, 5]","completion":"from random import shuffle def shuffle_list(list_elements): shuffle(list_elements) return list_elements"},{"prompt":"Write a sql statement to retrieve the average salary of all employees","completion":"SELECT AVG(salary) FROM employees"},{"prompt":"Without using any built-in functions, generate a Python code to remove the duplicated elements in a list","completion":"def remove_duplicates(l): res = [] for i in l: if i not in res: res.append(i) return res"},{"prompt":"Edit the given code to delete a node from a linked list void deleteNode(struct node *node) { struct node *temp = node->next; node->data = temp->data; node->next = temp->next; free(temp); }","completion":"void deleteNode(struct node *node) { struct node *temp = node->next; node->data = temp->data; // Store pointer to the next of node struct node *next_next = temp->next; // Unlink node from linked list free(temp); node->next = next_next; }"},{"prompt":"Write a MongoDB query to find which roles have Permission 2","completion":"db.roles.find({permissions: 2})"},{"prompt":"Write a PHP script to compare two strings and return the number of characters and words which are common in both strings The quick brown fox jumps over the lazy dog The brown fox jumps quickly","completion":"<?php string1 = \\"The quick brown fox jumps over the lazy dog\\"; string2 = \\"The brown fox jumps quickly\\"; // Create two arrays from the strings arr1 = explode(\\" \\", string1); arr2 = explode(\\" \\", string2); // Initialize a variable to store the count of common words wordCount = 0; // Initialize a variable to store the count of common character charCount = 0; // Iterate over the two arrays and count the common words for (i=0; i < count(arr1); i++) { // Compare the words at index i of arrays for (j=0; j < count(arr2); j++) { // If the words match if (arr1[i] == arr2[j]) { // Count the words wordCount++; // Iterate over the characters of words for (k=0; k < strlen(arr1[i]); k++) { // Check the characters if (arr1[i][k] == arr2[j][k]) { // Count the characters charCount++; } } } } } echo \\"Common words: \\".wordCount; echo \\"nCommon characters: \\".charCount; ?>"},{"prompt":"Create a function in Ruby to input an array and remove all the elements of the array","completion":"def delete_array(arr) arr.clear end"},{"prompt":"Write a python script to print out a list comprehension that prints out all the integers in a given range 1-10","completion":"my_list = [x for x in range(1, 11)] print(my_list)"},{"prompt":"Create a C# program to implement a search algorithm which returns the index or position of a given key in an array","completion":"public static int LinearSearch(int[] array, int key) { for (int i = 0; i < array.Length; i++) { if (array[i] == key) return i; } return -1; }"},{"prompt":"Write a sql statement to sort a list of employees in descending order based on their salary","completion":"SELECT * FROM employees ORDER BY salary DESC"},{"prompt":"Create a loop to print out all odd number from 0 to 10.","completion":"for i in range(0, 11): if i % 2 != 0: print(i)"},{"prompt":"Compute the cosine similarity of two vectors. Vectors: [2, 3] and [4, -5]","completion":"def cosine_similarity(v1, v2): dot = 0 mag1 = 0 mag2 = 0 for a, b in zip(v1, v2): dot += a*b mag1 += a**2 mag2 += b**2 return dot/(mag1**0.5 * mag2**0.5) v1 = [2, 3] v2 = [4, -5] cosine_sim = cosine_similarity(v1, v2) print(cosine_sim)"},{"prompt":"Create an HTML page with a navigation bar containing a heading and a search field.","completion":"<html> <head> <title>My Page</title> </head> <body> <nav> <h1>My Navigation</h1> <input type=\\"text\\" placeholder=\\"search...\\"> </nav> </body> </html>"},{"prompt":"Write a code for extracting the last n elements of a list. List: [1, 2, 3, 4, 5], n = 3","completion":"# Define a function to extract the required elements def extract_last_elements(list, n): # Get the length of list l = len(list) # Check if n is negative or greater than length if n <= 0 or n > l: return [] # return the last n elements return list[l - n:] # Driver code list = [1, 2, 3, 4, 5] n = 3 print (extract_last_elements(list, n))"},{"prompt":"Default a neural network architecture to classify the handwritten digit from 0 to 9.","completion":"# Define the architecture def model(input_shape): model = tf.keras.Sequential([ tf.keras.layers.Flatten(input_shape=input_shape), tf.keras.layers.Dense(128, activation='relu'), tf.keras.layers.Dense(10, activation='softmax') ]) model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy']) return model"},{"prompt":"egrate the plotting library Matplotlib into this Python script. import pandas as pd data = pd.read_csv('data.csv')","completion":"import pandas as pd import matplotlib.pyplot as plt # Read csv file data = pd.read_csv('data.csv') # Data visualization plt.plot(data) plt.xlabel('x-axis') plt.ylabel('y-axis') plt.title('Plot of data') plt.show()"},{"prompt":"Select all distinct employee names from the given table.","completion":"SELECT DISTINCT name FROM employees;"},{"prompt":"Calculate the Hamming distance of two binary strings. String1: 1001100 String2: 1010101","completion":"def hammingDistance(str1, str2): # Iterate through all possibles index of the strings # and counting the number of different characters and return it. distance = 0 for index in range(len(str1)): if str1[index] != str2[index]: distance += 1 return distance # Driver code str1 = '1001100' str2 = '1010101' print(hammingDistance(str1, str2))"},{"prompt":"Create a function to generate Pythagorean Triples up to a given limit. Limit: 20","completion":"# Create a function to generate pythagorean triples def generator(limit): # Create an empty list to store the result result = [] # Iterate over limit for n in range(1, limit + 1): for m in range(n + 1, limit +1): a = m*m - n*n b = 2*m*n c = m*m + n*n if c > limit: break if a > b: result.append([a, b, c]) if a < b: result.append([b, a, c]) return result # Driver code limit = 20 pythagorean_triples = generator(limit) print(pythagorean_triples)"},{"prompt":"Create a SQL query to list all the customers from the US.","completion":"SELECT * FROM customers WHERE country = 'US';"},{"prompt":"Make a Visual Basic code to find the sum of the integers from 1 to 10","completion":"Sub add_numbers() Dim sum As Integer sum = 0 For i = 1 To 10 sum = sum + i Next MsgBox (\\"Sum of all numbers from 1 to 10 is : \\" & sum) End Sub"},{"prompt":"Manipulate a given array in JavaScript to remove all duplicate items var array = [20, 30, 20, 15, 30, 45]","completion":"var array = [20, 30, 20, 15, 30, 45]; var uniqueArray = array.filter((item, index) => array.indexOf(item) === index); console.log(uniqueArray);"},{"prompt":"Write a R program to print the first 5 rows of a given dataset “data.csv”","completion":"data <- read.csv(\\"data.csv\\") head(data, 5)"},{"prompt":"Write a function to convert inches to centimeters.","completion":"function inchToCm(inches) { return inches * 2.54; }"},{"prompt":"Create a Date object containing tomorrow's date.","completion":"var tomorrow = new Date(); tomorrow.setDate(tomorrow.getDate() + 1);"},{"prompt":"Write a few lines of code that prints out a multiplication table up to 12x12.","completion":"for (let i = 1; i <= 12; i++) { for (let j = 1; j <= 12; j++) console.log(i + \\" * \\" + j + \\" = \\" + i*j); console.log(\\"------------------------------\\"); }"},{"prompt":"Using an array, create a web page that prints out all of the array elements. arr = [1, 2, 3, 4, 5]","completion":"<!DOCTYPE html> <html lang=\\"en\\"> <head> <meta charset=\\"UTF-8\\"> <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1.0\\"> <title>Array values</title> </head> <body> <ul> <% for (let i = 0; i < arr.length; i++) { %> <li><%= arr[i] %></li> <% } %> </ul> </body> </html>"},{"prompt":"Write a queries for finding the second highest salary of an employee in Employee table.","completion":"SELECT MAX(Salary) FROM Employee WHERE Salary < (SELECT MAX(Salary) FROM Employee);"},{"prompt":"Create a for loop for counting from 1 to 10.","completion":"for (let i = 1; i <= 10; i++) { console.log(i); }"},{"prompt":"What is the result of 3 + 4 * 9?","completion":"The result of 3 + 4 * 9 is 39."},{"prompt":"Write a code snippet to check if all characters in a given string are letters or numbers. string = \\"Welcome123","completion":"function checkString(string) { var lettersOnly = /^[0-9a-zA-Z]+/; if (string.match(lettersOnly)) console.log(\\"The string contains only letters and numbers.\\"); else console.log(\\"The string contains other characters too.\\"); }"},{"prompt":"Create a function in C++ that takes an input string and removes all vowels from it. Input string = \\"hello world","completion":"string removeVowels(string input) { string output = \\"\\"; for(char c : input) { if(c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U') output += c; } return output; }"},{"prompt":"Generate a for loop in Java for printing the squares of each number in a given array. int[] array = {4, 2, 6, 8};","completion":"for(int x : array) { System.out.println(\\"Square of \\" + x + \\" is \\" + (x * x)); }"},{"prompt":"Construct a loop in PHP to print the first 5 elements of an array. array = [1, 2, 3, 4, 5, 6];","completion":"for (i = 0; i < 5; i++) { echo array[i] . \\" \\"; }"},{"prompt":"Find the sum of all even numbers in an integer array using Java. int[] array = {8, -7, 4, -3, 19, 22};","completion":"int sum = 0; for (int x : array) { if (x % 2 == 0) sum += x; } System.out.println(\\"Sum of all even numbers = \\" + sum);"},{"prompt":"Generate a boolean statement in Swift to compare two strings for equality. String 1: \\"hello\\" String 2: \\"Hello","completion":"let str1 = \\"hello\\" let str2 = \\"Hello\\" let result = str1.lowercased() == str2.lowercased() print(result)"},{"prompt":"Create a class in C++ that contains two private member variables and a public member function to set both variables. Variables: int age, string name","completion":"class Person { private: int age; string name; public: void setVars(int a, string n) { age = a; name = n; } };"},{"prompt":"Design a function in JavaScript that takes two parameters and performs a multiplication between them. Number 1: 11 Number 2: 10","completion":"function multiply(num1, num2) { return num1 * num2; }"},{"prompt":"Create a function to print an inverted triangle It should display 8 lines with 5 asterisk","completion":"def print_inverted_triangle(): for i in range(8, 0, -1): print(\\"*\\" * i)"},{"prompt":"Create a python program to determine the comprehesive count of words in a given string Given the string s =\\"python programming is fu","completion":"def count_words(s): words = s.split(' ') count = len(words) return count"},{"prompt":"Construct a program to find the difference between two numbers Given values x = 20 and y = 10","completion":"def diff(x, y): return x - y"},{"prompt":"Create a program to print the FizzBuzz series Up to the number 25","completion":"def fizzbuzz(n): for num in range(1, n+1): if num % 3 == 0 and num % 5 == 0: print(\\"FizzBuzz\\") elif num % 3 == 0: print(\\"Fizz\\") elif num % 5 == 0: print(\\"Buzz\\") else: print(num)"},{"prompt":"Write a Python program to find the four letter words from a given list. [\\"tree\\", \\"door\\", \\"apple\\", \\"ball\\", \\"house\\", \\"cat\\", \\"wood\\"].","completion":"\\"\\"\\" A Python program to find the four letter words from a given list \\"\\"\\" # Initializing the list words = [\\"tree\\", \\"door\\", \\"apple\\", \\"ball\\", \\"house\\", \\"cat\\", \\"wood\\"] # Using list comprehension to extract four letter words four_letter_words = [word for word in words if len(word) == 4] # Printing the four letter words print(\\"Four letter words:\\", four_letter_words)"},{"prompt":"Write a SQL query that returns all customers from the USA.","completion":"SELECT * FROM customers WHERE country = 'USA';"},{"prompt":"Create a class Person in Java that stores a person's name, email, gender, and age.","completion":"public class Person { String name; String email; String gender; int age; public Person(String name, String email, String gender, int age) { this.name = name; this.email = email; this.gender = gender; this.age = age; } public String getName() { return name; } public String getEmail() { return email; } public String getGender() { return gender; } public int getAge() { return age; } public void setName(String name) { this.name = name; } public void setEmail(String email) { this.email = email; } public void setGender(String gender) { this.gender = gender; } public void setAge(int age) { this.age = age; } }"},{"prompt":"Create a new database in MySQL, with a table named \\"users\\", and add 3 records.","completion":"CREATE DATABASE myDB; USE myDB; CREATE TABLE users ( id INT NOT NULL AUTO_INCREMENT PRIMARY KEY, name VARCHAR(50) NOT NULL, email VARCHAR(50) NOT NULL ); INSERT INTO users (name, email) VALUES ('John Smith', 'john.smith@example.com'), ('Jane Doe', 'jane.doe@example.com'), ('Bob Jones', 'bob.jones@example.com');"},{"prompt":"Write a regex pattern to match all characters in a string that start with a lowercase letter.","completion":"[a-z][a-zA-Z]*"},{"prompt":"Create a function that takes two strings and finds the longest common substring between them.","completion":"def longest_common_substring(s1, s2): m = [[0] * (1 + len(s2)) for i in range(1 + len(s1))] longest, x_longest = 0, 0 for x in range(1, 1 + len(s1)): for y in range(1, 1 + len(s2)): if s1[x - 1] == s2[y - 1]: m[x][y] = m[x - 1][y - 1] + 1 if m[x][y] > longest: longest = m[x][y] x_longest = x else: m[x][y] = 0 return s1[x_longest - longest: x_longest]"},{"prompt":"Create a program that takes a given string and returns the frequency of each alphabet character.","completion":"def get_character_frequency(str): char_freq = {} for char in str: if char in char_freq: char_freq[char] += 1 else: char_freq[char] = 1 return char_freq get_character_frequency(\\"Hello World!\\") # Output: { 'H': 1, 'e': 1, 'l': 3, 'o': 2, ' ': 1, 'W': 1, 'r': 1, 'd': 1, '!': 1 }"},{"prompt":"Write a code snippet that prints the current date and time in the format YYYY-MM-DD HH:MM:SS.","completion":"import datetime # Get the current datetime now = datetime.datetime.now() # Prints the current datetime in YYYY-MM-DD HH:MM:SS format print(now.strftime(\\"%Y-%m-%d %H:%M:%S\\"))"},{"prompt":"Write a function to compare two lists of numbers and return a new list with the elements which are common to both the lists. list1 = [1, 2, 3, 4, 5] list2 = [3, 5, 6, 7, 8]","completion":"def compare_lists(list1, list2): new_list = [] for element in list1: if element in list2: new_list.append(element) return new_list # Call the compare_lists() list_common = compare_lists(list1, list2) # Print the new_list print(list_common) # [3, 5]"},{"prompt":"Create a MySQL trigger to perform a data validation check when a new row is created.","completion":"CREATE TRIGGER my_data_validation_check BEFORE INSERT ON my_table FOR EACH ROW BEGIN IF EXISTS THEN IF NEW.my_column NOT BETWEEN 0 AND 100 THEN SIGNAL SQLSTATE '45001' SET MESSAGE_TEXT = 'Data validation failed.'; END IF; END IF; END"},{"prompt":"Create a variable to store the text \\"Python is a programming language\\" and then print it.","completion":"text = \\"Python is a programming language\\" print(text)"},{"prompt":"Write an algorithm to find the middle item in a linked list.","completion":"# Finds the middle node in a linked list # Input: head of the linked list # Return: the middle element of the linked list def findMiddleNode(head): # If the linked list is empty if (head is None): return None # Find the length of the linked list length, node = 0, head while (node is not None): length += 1 node = node.next # Jump to the middle of linked list node = head for _ in range(length // 2): node = node.next return mid"},{"prompt":"Use .split() in Python to break the following text into a list of sentences. text = \\"Hello! My name is John. What is your name?","completion":"text = \\"Hello! My name is John. What is your name?\\" sentences = text.split(\\". \\") print(sentences) # ['Hello! My name is John', 'What is your name?']"},{"prompt":"Create an array containing 10 random numbers between 0 and 10.","completion":"import random # Create an array with 10 random numbers array = [] for i in range(10): array.append(random.randint(0,10)) # Print the array print(array)"},{"prompt":"Write a code to edit a given column in an SQL table.","completion":"ALTER TABLE my_table MODIFY my_column TYPE INT;"},{"prompt":"w would you implement a simple object oriented Programming concept in Python?","completion":"In Python, object-oriented programming is supported by classes which contain attributes that represent the characteristics of an object, and methods which represent the actions that an object can take. To implement a simple object-oriented concept in Python, we would first define a class that represents the type of object we wish to create. This class will contain attributes (i.e. data fields) that define the state of the object, as well as methods that define the behaviors of the object. Finally, we can create objects using the class definition, providing an initial state and access to the methods."},{"prompt":"Write a JavaScript function to perform a binary search. let array = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]; let x = 5;","completion":"let binarySearch = (array, x) => { let start = 0; let end = array.length - 1; while (start <= end) { let middle = Math.floor((start + end) / 2); if (array[middle] === x) { return middle; } else if (x < array[middle]) { end = middle - 1; } else { start = middle + 1; } } return -1; }"},{"prompt":"What are the key differences between C and C++?","completion":"The key differences between C and C++ are that C is a procedural programming language while C++ is an object-oriented programming language. C does not support classes, whereas C++ does. C does not support function or operator overloading whereas C++ does. C does not support exception handling, while C++ does. C does not support templates, while C++ does. Additionally, C does not support reference variables, while C++ does."},{"prompt":"Write a function to check whether a number is a prime number in JavaScript. let num = 7;","completion":"function isPrime(num) { // Edge cases: if (num <= 1) return false; if (num === 2) return true; if (num % 2 === 0) return false; for (let i=3; i<=Math.sqrt(num); i+=2) { if (num % i === 0) return false; } return true; }"},{"prompt":"Write a function which takes a C-style string as a parameter and prints it out reversed.","completion":"void reverse_string(char *str) { int len = strlen(str); int i; char *rev_str = (char*)malloc((len+1)*sizeof(char)); for(i = 0; i < len; i++) { rev_str[i] = str[len - i - 1]; } rev_str[len] = '0'; printf(\\"Reversed string: %sn\\", rev_str); free(rev_str); }"},{"prompt":"Assign a value to a variable based on the value of another variable. int x = 0; int y = 1;","completion":"if (x == 0) { int y = 1; } else { int y = 0; }"},{"prompt":"Define an operator which adds two points of a given type.","completion":"struct Point { int x; int y; }; Point operator+(Point p1, Point p2) { Point result; result.x = p1.x + p2.x; result.y = p1.y + p2.y; return result; }"},{"prompt":"Create an event handler for a \\"click\\" that updates a text field.","completion":"// define \\"click\\" parameter (\\"#element\\").on(\\"click\\", function (click) { // update text field document.getElementById(\\"text_field\\").innerHTML = \\"updated\\"; });"},{"prompt":"Create an HTML5 canvas with a width of 500px and height of 300px.","completion":"<canvas id=\\"example\\" width=\\"500\\" height=\\"300\\"></canvas>"},{"prompt":"Put a number into a variable and assign a string to another variable based on it's value. num = 5","completion":"if (num == 5) { String str = \\"five\\"; } else { String str = \\"not five\\"; }"},{"prompt":"Use a loop to print out a list of numbers.","completion":"for (int i = 0; i < 10; i++) { System.out.println(i); }"},{"prompt":"Assert that an array is not empty before adding items.","completion":"if (array != null && array.length > 0) { // add items to array }"},{"prompt":"Write a SQL query to return all data from the \\"customers\\" table where the customer's age is greater than 26.","completion":"SELECT * FROM customers WHERE age > 26;"},{"prompt":"mplement a 3d vector class with a constructor, a dot product method and a normalization method.","completion":"class Vector3d { double x, y, z; //Constructor Vector3d(double x, double y, double z) { this.x = x; this.y = y; this.z = z; } // Dot product double dotProduct(Vector3d vec2) { double result = this.x * vec2.x + this.y * vec2.y + this.z * vec2.z; return result; } // Normalization Vector3d normalize() { double magnitude = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z); Vector3d normalized = new Vector3d(this.x / magnitude, this.y / magnitude, this.z / magnitude); return normalized; } }"},{"prompt":"Count the number of integers in the given 2D array. [ [1, 2, 3], [4, 5, 6], [7, 8] ]","completion":"8"},{"prompt":"Write a Regular Expression pattern to check if the given input is a valid email address.","completion":"/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+/"},{"prompt":"Create a data structure that stores the given data. Name: John Age: 20 Gender: Male Occupation: Developer","completion":"student = { 'name': 'John', 'Age': 20, 'Gender': 'Male', 'Occupation': 'Developer' }"},{"prompt":"Generate the MD5 hash of the given string. Hello World","completion":"a7ad492532f2f806e140722d00453901"},{"prompt":"Using the given Python code, format the number 7.321 to contain two decimal points. n=7.321","completion":"'{:.2f}'.format(n)"},{"prompt":"Remove the character 'o' from the given string. book","completion":"'bks'"},{"prompt":"Compress the given string using the Huffman Coding. aabbccdd","completion":"{ 'a': '0', 'b': '10', 'c': '110', 'd': '111' }"},{"prompt":"Convert the given integer number to a Roman Numeral. 403","completion":"CDIII"},{"prompt":"Use the bisection method to approximate the root of the given equation. x^2 - 2x - 3","completion":"Approximate root: 1.839285"},{"prompt":"Given the different test scores in the list, calculate the GPA. [('DS', 98), ('OS', 95), ('SE', 85), ('ML', 80)]","completion":"GPA: 89.25"},{"prompt":"Using a random seed of 0, generate a 5x4 random matrix of integers up to the given number. 10","completion":"matrix = [ [8, 3, 3, 5], [7, 7, 4, 8], [6, 2, 9, 2], [8, 3, 3, 0], [2, 5, 4, 8] ]"},{"prompt":"Create a function in Python that takes a sentence as an argument and returns the formatted sentence with the first letter of each word capitalized. sentence = \\"this is a sentence","completion":"def capitalize_sentence(sentence): words = sentence.split() capitalized_words = [word.capitalize() for word in words] return \\" \\".join(capitalized_words)"},{"prompt":"Create a script in Python that plots a bar chart showing the count of beers sold in a bar in a particular week. beer_sales = [200, 500, 600, 100, 800]","completion":"import matplotlib.pyplot as plt week = [1, 2, 3, 4, 5] plt.bar(week,beer_sales) plt.xlabel('Week') plt.ylabel('Number of beers sold') plt.show()"},{"prompt":"Create a SQL query that returns the maximum and minimum order amounts from the database.","completion":"SELECT MAX(order_amount) AS max_order, MIN(order_amount) AS min_order FROM orders;"},{"prompt":"What is the purpose of the primary key in a database table?","completion":"The primary key is a special field or set of fields in a database table that uniquely identifies each record. It is used to ensure that no two records have the same value, provide a link between tables, and index data for faster retrieval."},{"prompt":"Rewrite this below sql query into the active record query in Rails. SELECT * FROM customers WHERE age > 20","completion":"Customer.where('age > ?', 20)"},{"prompt":"Write a R script that reads in dataset and prints out the summary statistics of the dataset.","completion":"# Read in the dataset data <- read.csv(\\"data.csv\\") # Print out the summary statistics summary(data)"},{"prompt":"Compare and contrast the advantages and disadvantages of using AJAX for a website.","completion":"AJAX provides several advantages for a website. It allows for asynchronus data transfer between the server and the client, making it possible to update a web page without refreshing the whole page. It also improves the user experience by providing a faster, smoother interface. By minimizing server load, AJAX facilitates better scalability. On the other hand, AJAX can lead to slower response times, especially if a large amount of data is being transferred. It can also be difficult to debug since errors are often not visible to the user or the developer. Additionally, AJAX requires JavaScript to be enabled, which may not be the case for all users."},{"prompt":"Create a function in Ruby to convert a Fahrenheit temperature to Celsius.","completion":"def fahrenheit_to_celsius(fahrenheit) celsius = (fahrenheit - 32) * (5.0/9.0) return celsius end"},{"prompt":"Modify the following python code to calculate the average of a list of numbers. def list_average(numbers): '''This function will calculate the average of a list of numbers.'''","completion":"def list_average(numbers): '''This function will calculate the average of a list of numbers.''' return sum(numbers) / len(numbers)"},{"prompt":"Come up with a Python generator expression to iterate over a given list and return only even elements. [1, 2, 3, 4, 5, 6, 7, 8]","completion":"even_list = (x for x in [1, 2, 3, 4, 5, 6, 7, 8] if x%2 == 0)"},{"prompt":"Come up with a SQL statement to select only the names of customer whose age is higher than 30.","completion":"SELECT name FROM customers WHERE age > 30;"},{"prompt":"Modify the following Java code to reverse a given string. public class SimpleStringReverser { public static String reverse(String str) { String result = \\"\\";","completion":"public class SimpleStringReverser { public static String reverse(String str) { String result = \\"\\"; for(int i = str.length() - 1; i >= 0; i--) { result += str.charAt(i); } return result; } }"},{"prompt":"Come up with a C language function to check if a given number is even or odd.","completion":"bool is_even(int num) { return (num % 2 == 0); }"},{"prompt":"Come up with a Java switch statement which will print a different number for various states of a given boolean.","completion":"public class ConditionPrinter { public static void printNumberForCondition(boolean condition) { switch (condition) { case true: System.out.println(1); break; case false: System.out.println(2); break; } } }"},{"prompt":"Modify the following C code to make it print \\"Hello World #include <stdio.h> int main() { printf(\\"...\\"); return 0; }","completion":"#include <stdio.h> int main() { printf(\\"Hello World\\"); return 0; }"},{"prompt":"Write an R command to sort the data in a data frame based on the values of one column. df <- data.frame(A = c(4, 5, 11, 8), B = c(13, 12, 6, 11), C = c(4, 5, 7, 3))","completion":"df <- df[order(dfA),]"},{"prompt":"Come up with a Matlab expression to generate a random permutation of size 10.","completion":"randperm(10)"},{"prompt":"w would you modify the following Java code to print the first 5 numbers of the Fibonacci sequence? public class FibonacciPrinter { public static void printNumbers() { System.out.println(\\"...\\"); } }","completion":"public class FibonacciPrinter { public static void printNumbers() { int n1=0, n2=1, n3, i, count=5; System.out.print(n1+\\" \\"+n2); for(i=2;i<count;++i) { n3=n1+n2; System.out.print(\\" \\"+n3); n1=n2; n2=n3; } } }"},{"prompt":"Construct an if/else block to convert a given score to a grade. score = 25","completion":"if (score >= 90) { grade = 'A'; } else if (score >= 80) { grade = 'B'; } else if (score >= 70) { grade = 'C'; } else if (score >= 60) { grade = 'D'; } else { grade = 'F'; }"},{"prompt":"Suggest an assembly instruction to move 1 byte of data from one register A to register B.","completion":"movb A, B"},{"prompt":"Create a Java program to validate a credit card number using Luhn's algorithm.","completion":"\\"\\"\\" Validate a credit card number using Luhn's algorithm. \\"\\"\\" import java.util.Arrays; public class Luhn { public static boolean isValidCard(String cardNumber) { if (cardNumber == null) { return false; } char checkDigit = cardNumber.charAt(cardNumber.length() - 1); String digit = calculateCheckDigit(cardNumber.substring(0, cardNumber.length() - 1)); return checkDigit == digit.charAt(0); } public static String calculateCheckDigit(String digit) { if (digit == null) { return null; } String reversDigit = new StringBuilder(digit).reverse().toString(); int[] digits = new int[reversDigit.length()]; for (int i = 0; i < reversDigit.length(); i++) { digits[i] = Character.getNumericValue(reversDigit.charAt(i)); } for (int i = 1; i < digits.length; i = i + 2) { digits[i] = 2 * digits[i]; if (digits[i] > 9) { digits[i] = digits[i] - 9; } } int sum = Arrays.stream(digits).sum(); return new Integer(10 - (sum % 10)).toString(); } }"},{"prompt":"Generate a random password with at least 8 characters and with at least 1 number and 1 letter.","completion":"import string import random def generate_password(n): # n is the length of the password alphabet = string.ascii_letters + string.digits password = ''.join(random.choice(alphabet) for i in range(n)) while not any(c.isdigit() for c in password) or not any(c.isalpha() for c in password): password = ''.join(random.choice(alphabet) for i in range(n)) return password print(generate_password(8))"},{"prompt":"Create a SQL query to retrieve the name corresponding to a given ID.","completion":"SELECT name FROM table WHERE id = <id>"},{"prompt":"Find the most frequent name in a given array of names. [\\"John\\", \\"John\\", \\"Sandra\\", \\"Sandra\\", \\"Sandra\\", \\"Tom\\"]","completion":"function mostFrequent(arr) { let maxCount = 0; let item; let frequencyMap = new Map(); arr.forEach(name => { if (frequencyMap.has(name)) { frequencyMap.set(name, frequencyMap.get(name) + 1); } else { frequencyMap.set(name, 1); } }); for (let [name, count] of frequencyMap.entries()) { if (count > maxCount) { maxCount = count; item = name; } } return item; } console.log(mostFrequent([\\"John\\", \\"John\\", \\"Sandra\\", \\"Sandra\\", \\"Sandra\\", \\"Tom\\"])); // Sandra"},{"prompt":"Create a code that can be used to perform a linear search in an array. [1, 3, 5, 7, 8, 9], 8","completion":"func linearSearch(_ array: [Int], _ x: Int) -> Int { for (index, value) in array.enumerated() { if value == x { return index } } return -1 } print(linearSearch([1, 3, 5, 7, 8, 9], 8))"},{"prompt":"Create a MySQL query to get the name corresponding to the highest id.","completion":"SELECT name FROM table ORDER BY id DESC LIMIT 1"},{"prompt":"Design a function in JavaScript to return the index of the last element in an array. [4, 5, 6, 7]","completion":"function lastIndex(arr) { return arr.length - 1; } console.log(lastIndex([4, 5, 6, 7])); //3"},{"prompt":"w to make an AJAX call using the jQuery library?","completion":".ajax({ url: 'url_to_be_called', type: 'GET', dataType: 'json', success: function(response) { // do something with the response } });"},{"prompt":"For a given array of numbers, find the length of the longest increasing subsequence [1, 5, 4, 3, 8, 10, 6]","completion":"def longest_increasing_subsequence(arr): n = len(arr) lis = [1] * n for i in range (1 , n): for j in range(0 , i): if arr[i] > arr[j] and lis[i]< lis[j] + 1 : lis[i] = lis[j]+1 maximum = 0 for i in range(n): maximum = max(maximum , lis[i]) return maximum"},{"prompt":"What is the logic behind bubble sort?","completion":"Bubble sorting is an algorithm based on iterating through an array of objects or values and comparing each adjacent pair of items. If the first item is greater than the second item, they are swapped, else they remain the same. This process continues until no swaps are needed, which indicates that the elements are sorted increasingly."},{"prompt":"w is the traversal of a binary search tree done?","completion":"Binary Search Tree traversal can be done in three different ways: preorder, inorder, and postorder. In preorder traversal, the root of the tree is first printed, followed by traversing the left subtree, then the right subtree. In inorder traversal, the left subtree is traversed first, followed by the root node and the right subtree. Finally, in postorder traversal, the left subtree is traversed first, followed by the right subtree and the node itself."},{"prompt":"Given an array of integers, sort the array in-place using quick sort. [12, 8, 9, 10, 4]","completion":"def quickSort(arr): if len(arr) <= 1: return arr pivot = arr[len(arr)//2] left = [x for x in arr if x < pivot] middle = [x for x in arr if x == pivot] right = [x for x in arr if x > pivot] return quickSort(left) + middle + quickSort(right)"},{"prompt":"w can you make a dictionary key iterable in Python?","completion":"A dictionary in Python can be made iterable using a for loop. To iterate over the keys of a dictionary, we can use the \`\`dict.keys()\`\` method which returns an iterable object of the keys in the dictionary. This iterable can then be used to iterate over the keys of the dictionary."},{"prompt":"Change the following code from Python to JavaScript def add_numbers(a, b): return a + b","completion":"function addNumbers(a, b) { return a + b; }"},{"prompt":"Create a python program that takes a keyword as an input and prints the top 10 relevant Wikipedia articles for that keyword","completion":"import wikipedia def get_top_ten_results(keyword): results = wikipedia.search(keyword, results=10) for result in results: print(result)"},{"prompt":"w to debug a program in Python?","completion":"In Python, debugging a program can be done by using a debugger to step through code line by line and checking the current state of the values, variables, objects, and functions. Using a debugger is useful for understanding the exact flow of code and finding errors or unexpected behavior. Python also provides a number of built-in debugging tools such as the \`\`pdb\`\` module which can be used to debug a program."},{"prompt":"w would you solve this leetcode problem in Python? Problem: Implement the following function \`\`\`def majorityElement(self, nums: List[int]) -> int:\`\`\` Given an array of size n, find the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times.","completion":"def majorityElement(self, nums: List[int]): majority_count = len(nums)//2 num_count = {} for num in nums: if num in num_count: num_count[num] += 1 else: num_count[num] = 1 for key, value in num_count.items(): if value > majority_count: return key"},{"prompt":"Construct a React component to show an animated loading screen.","completion":"import React from 'react'; import { Animate } from '../animations'; class LoadingScreen extends React.Component { render() { return ( <div> <Animate type=\\"fadeIn\\" delay={0.5}> <div>Loading...</div> </Animate> </div> ); } } export default LoadingScreen;"},{"prompt":"Given an array of integers, sort it using bubble sort in Java.","completion":"public static int[] bubbleSort(int[] array) { int n = array.length; for (int i = 0; i < n-1; i++) { for (int j = 0; j < n-i-1; j++) { if (array[j] > array[j+1]) { int temp = array[j]; array[j] = array[j+1]; array[j+1] = temp; } } } return array; }"},{"prompt":"Create a Node.js script to read from a MongoDB database.","completion":"const MongoClient = require('mongodb').MongoClient; // Connection url const url = 'mongodb://localhost:27017'; // Database Name const dbName = 'myproject'; // Connect using MongoClient MongoClient.connect(url, function(err, client) { // Create a collection we want to drop later const col = client.db(dbName).collection('users'); // Insert a bunch of documents col.find({}).toArray(function(err, docs) { // Print the documents returned console.log(\\"Found the following records\\"); console.log(docs) // Close the DB client.close(); }); });"},{"prompt":"Write an assembly program to subtract two numbers.","completion":"SUB AA, BB ; AA = AA - BB ; ; This program subtracts the contents of BB from AA Move B, A Not B Add B, #1 Add A, B ; A now contains the result"},{"prompt":"Construct a React component to show a blog post.","completion":"import React from 'react'; class BlogPost extends React.Component { render() { return ( <div> <h1>This is a Blog Post</h1> <div> {this.props.content} </div> </div> ); } } export default BlogPost;"},{"prompt":"Construct a GraphQL query to show all blog posts.","completion":"{ allBlogPosts { id title author content createdAt modifiedAt } }"},{"prompt":"Construct a HTML form for user registration.","completion":"<form class=\\"user-registration-form\\" action=\\"/user-registration\\" method=\\"post\\"> <div class=\\"form-group\\"> <label for=\\"name\\">Name</label> <input type=\\"text\\" name=\\"name\\" id=\\"name\\"/> </div> <div class=\\"form-group\\"> <label for=\\"email\\">Email</label> <input type=\\"email\\" name=\\"email\\" id=\\"email\\"/> </div> <div class=\\"form-group\\"> <label for=\\"password\\">Password</label> <input type=\\"password\\" name=\\"password\\" id=\\"password\\"/> </div> <div class=\\"form-group\\"> <label for=\\"password-confirm\\">Confirm Password</label> <input type=\\"password\\" name=\\"password-confirm\\" id=\\"password-confirm\\"/> </div> <div class=\\"form-group\\"> <input type=\\"submit\\" value=\\"Register\\"/> </div> </form>"},{"prompt":"Write a C++ program to print out a multiplication table up to 10x10.","completion":"#include <iostream> using namespace std; int main() { cout << \\"Multiplication Table from 1 to 10:\\" << endl; for (int i = 1; i <= 10; i++) { for (int j = 1; j <= 10; j++) { cout << i << \\"*\\" << j << \\" = \\" << i * j << endl; } cout << endl; } return 0; }"},{"prompt":"Create a relational database schema to store data of products sold in an e-commerce store. Table: Products Columns: productId (primary key), productName, productCategory, price","completion":"CREATE TABLE Products ( productId INT PRIMARY KEY, productName VARCHAR(255), productCategory VARCHAR(255), price DECIMAL );"},{"prompt":"Create Java classes to represent a user and a post.","completion":"public class User { private String name; private String email; //getters and setters ... } public class Post { private int id; private String title; private User author; private String content; //getters and setters ... }"},{"prompt":"Generate a 10x10 multiplication table in Python.","completion":"for i in range(1,11): for j in range(1,11): print(i*j, end = \\"t\\") print()"},{"prompt":"Write a shell script to run a long-running process in the background.","completion":"#!/bin/bash # run-in-background.sh # 1: Program to run # 2: Arguments to pass to the program 1 2 & echo \\"Process running in background with PID: !\\""},{"prompt":"Describe the difference between a multidimensional array and a jagged array in C#.","completion":"A multidimensional array is an array of arrays, in which all subarrays have the same length and all elements are arranged in tabular form. A jagged array is an array of arrays, in which the subarrays can have different lengths and the elements are arranged in irregular form."},{"prompt":"Produce the following output given the list of numbers. [1, 2, 4, 5]","completion":"The list contains 1, 2, 4 and 5."},{"prompt":"Write a function in JavaScript to reorder the given list in ascending order. [3, 1, 2]","completion":"function sortAscending(list) { list.sort(function (a, b) { return a - b; }); return list; }"},{"prompt":"Produce an HTML table given a dictionary containing student information. {'name': 'John', 'age': 23, 'major': 'Computer Science'}","completion":"<table> <tr> <th>Name</th> <th>Age</th> <th>Major</th> </tr> <tr> <td>John</td> <td>23</td> <td>Computer Science</td> </tr> </table>"},{"prompt":"Create a valid input format for the calculation of the average of the given numbers. [3, 8, 10]","completion":"3, 8, 10"},{"prompt":"Write a Python program to divide the numbers in the list by a given number [2, 4, 10], 2","completion":"def divide_list(list, n): return [x/n for x in list]"},{"prompt":"Edit the given HTML code to use a common CSS class for all elements <div class=\\"header\\"> <h1>Title</h1> <h2>Subtitle</h2> </div>","completion":"<div class=\\"common-class\\"> <h1 class=\\"common-class\\">Title</h1> <h2 class=\\"common-class\\">Subtitle</h2> </div>"},{"prompt":"Generate code to create a PDF report from a given dataset. The dataset contains information about customer orders.","completion":"def generate_report(data): doc = PDFDocument() title = doc.add_heading('Customer Report', 0) doc.add_page_break() table = doc.add_table(rows=1, cols=2) table.style = 'TableGrid' header_row = table.rows[0] header_row.cells[0].text = 'Order ID' header_row.cells[1].text = 'Amount' rows = len(data) for row in range(rows): new_row = table.add_row() new_row.cells[0].text = str(data[row][0]) new_row.cells[1].text = '{:.2f}'.format(data[row][1]) doc.add_page_break() doc.save('Customer_Report.pdf')"},{"prompt":"Construct a loop to apply a function to each element of a list [2, 5, 8], function square","completion":"def apply_function(list, f): for i in range(len(list)): list[i] = f(list[i]) return list def square(x): return x*x list = [2, 5, 8] apply_function(list, square)"},{"prompt":"Construct a Django view that outputs the following string Hello World!","completion":"from django.http import HttpResponse def hello_world(request): return HttpResponse(\\"Hello World!\\")"},{"prompt":"Generate code for an interface class in Java Name: Calculator Methods: add(int a, int b) subtract(int a, int b)","completion":"public interface Calculator { int add(int a, int b); int subtract(int a, int b); }"},{"prompt":"Formulate a spark query to delete records having a given value in a field field: age; value: 18; table: people","completion":"DELETE FROM people WHERE age = 18;"},{"prompt":"Write a SQL query to list the product name and its price from the products table.","completion":"SELECT product_name, price FROM products;"},{"prompt":"Create a HTML page which includes two input fields and a button that generates output field that should contain the sum of the two numbers given in the two input fields.","completion":"<!DOCTYPE html> <html> <head> <title>Sum Calculator</title> <script> function calculate() { var num1 = Number(document.getElementById(\\"num1\\").value); var num2 = Number(document.getElementById(\\"num2\\").value); document.getElementById(\\"output\\").innerHTML = num1 + num2; } <\/script> </head> <body> <h3>Sum Calculator</h3> <input type=\\"text\\" id=\\"num1\\"> <input type=\\"text\\" id=\\"num2\\"> <button onclick=\\"calculate()\\"> Calculate </button> <p>Result: <span id=\\"output\\"></span></p> </body> </html>"},{"prompt":"Generate a Delete API endpoint in Python Flask for a user to delete their data from a database.","completion":"@app.route('/delete/<int:user_id>', methods=['DELETE']) def delete(user_id): user = db.query.get(user_id) db.session.delete(user) db.session.commit() return jsonify({'message':'User deleted successfully'})"},{"prompt":"Create a Java program which takes two integers as input and prints their greatest common divisor. 102, 75","completion":"public static int gcd(int a, int b){ // Base Case if (a == 0) return b; if (b == 0) return a; // a is greater if (a > b) return gcd(a-b, b); return gcd(a, b-a); }"},{"prompt":"Generate a logic for a basic regex expression to detect a valid email address.","completion":"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+"},{"prompt":"Create a CSS code that demonstrates a nice hover effect for a button.","completion":".button { background: #3498db; color: #fff; font-size: 1.2em; padding: 10px; transition: 0.2s; } .button:hover { background: #4578ba; box-shadow: 0px 0px 5px #ccc; transform: scale(1.1); }"},{"prompt":"Given an array of integers and an integer k, write a program to find out whether there are two distinct indices i and j in the array such that nums[i] = nums[j] and the absolute difference between i and j is at most k. [1,3,5,7,3,9], k=3","completion":"def solution(arr, target): for i in range(0, len(arr)-1): for j in range(i+1, i + target + 1): if j >= len(arr): break if arr[i] == arr[j]: return True return False"},{"prompt":"Read the following JSON object and print the \\"name\\" corresponding to the \\"id\\" 2. { \\"1\\": { \\"name\\": \\"John\\", \\"age\\": 26 }, \\"2\\": { \\"name\\": \\"Kelly\\", \\"age\\": 23 } }","completion":"json_obj = { \\"1\\": { \\"name\\": \\"John\\", \\"age\\": 26 }, \\"2\\": { \\"name\\": \\"Kelly\\", \\"age\\": 23 } } name = json_obj[\\"2\\"][\\"name\\"] print(name) # prints Kelly"},{"prompt":"Analyze the following list of strings and find the most frequent character. strings = [\\"hello\\", \\"world\\", \\"foo\\", \\"bar\\"]","completion":"strings = [\\"hello\\", \\"world\\", \\"foo\\", \\"bar\\"] char_counts = {} for string in strings: for char in string: if char not in char_counts: char_counts[char] = 0 char_counts[char] += 1 most_frequent = max(char_counts, key=lambda k: char_counts[k]) print(most_frequent) # prints l"},{"prompt":"Write a SQL query to find the employee numbers of all the employees who work in a department with ID 10.","completion":"SELECT emp_no FROM Employees WHERE dept_id = 10;"},{"prompt":"Create a for loop to print all the even numbers between 1 and 10 (including 1 and 10).","completion":"for i in range(1, 11): if i % 2 == 0: print(i)"},{"prompt":"List the keys of the following dictionary. person = { \\"name\\": \\"John\\", \\"age\\": 30 }","completion":"person = { \\"name\\": \\"John\\", \\"age\\": 30 } keys = list(person.keys()) print(keys) # prints ['name', 'age']"},{"prompt":"What is the data structure used to implement a stack?","completion":"The data structure used to implement a stack is a Last-In-First-Out (LIFO) data structure, which is typically implemented using an array or a linked list."},{"prompt":"Change the following line of HTML code so that the font size is 36px. <p style=\\"font-size:18px\\">Hello World</p>","completion":"<p style=\\"font-size:36px\\">Hello World</p>"},{"prompt":"Design a JavaScript class for a bank account with one private variable, account_balance. The class should have one public function, deposit(amount) that adds the given amount to the account_balance variable and prints the balance.","completion":"class BankAccount { constructor() { this.account_balance = 0; } deposit(amount){ this.account_balance += amount; console.log(\\"Account Balance:\\" + this.account_balance); } }"},{"prompt":"Compose a SQL query that returns the names and cities of customers from the Customer table whose last name starts with the letter \\"L\\".","completion":"SELECT first_name, city FROM Customer WHERE last_name LIKE \\"L%\\""},{"prompt":"Describe what is ternary operator and provide an example.","completion":"A ternary operator is an operator that takes three arguments and returns one of two values based on a condition. It is a shorthand way to write a standard if-else statement. For example, the following expression evaluates to either \\"true\\" or \\"false\\" depending on the value of \\"x\\": (x > 0) ? \\"true\\" : \\"false\\"."},{"prompt":"Create a loop in Python that prints the integers between 1 and 10 (including 1 and 10).","completion":"for i in range(1, 11): print(i)"},{"prompt":"Write a bash script to list all subdirectories located in the current working directory.","completion":"#!/bin/bash for directory in * do if [ -d directory ] then echo directory fi done"},{"prompt":"Design a function in Java that takes in two integer arguments, a and b, and returns the result of a*b.","completion":"public static int multiply(int a, int b){ return a*b; }"},{"prompt":"Write a Python snippet to print from 1 to 10 (inclusive) using a for loop","completion":"for i in range(1, 11): print(i)"},{"prompt":"Modify the following SQL query so that it returns all the customers whose first names begin with the letter \\"A\\". SELECT * FROM Customer","completion":"SELECT * FROM Customer WHERE first_name LIKE \\"A%\\""},{"prompt":"Create a while loop in JavaScript that reverses an array and prints each element to the console. [1, 2, 3, 4, 5]","completion":"let arr = [1, 2, 3, 4, 5]; let i = arr.length-1; while(i >= 0){ console.log(arr[i]); i--; }"},{"prompt":"Design a function in Java that takes in a string and returns true if the string contains the letter \\"a\\" and false otherwise.","completion":"public static boolean hasLetterA(String s){ return s.contains(\\"a\\"); }"},{"prompt":"Create a C++ program that takes in two integers, x and y, and prints the result of x divided by y.","completion":"#include <iostream> int main() { int x, y; std::cin >> x >> y std::cout << x/y << std::endl; return 0; }"},{"prompt":"Write a Python snippet to print the same message 10 times.","completion":"for _ in range(10): print(\\"Hello World!\\")"},{"prompt":"Modify the following SQL query so that it only returns the customers from the city \\"New York\\". SELECT * FROM Customer","completion":"SELECT * FROM Customer WHERE city = \\"New York\\""},{"prompt":"Write a JavaScript function that takes an input string and replaces all occurrences of the letter 'e' with an asterisk. input_string = \\"Hello World!","completion":"function replace_with_asterisk(string) { return string.replace(/e/g, '*'); }"},{"prompt":"Edit this HTML snippet such that it displays 'Hello World' in bold. <div>Hello World</div>","completion":"<div><b>Hello World</b></div>"},{"prompt":"Write a function in Python to move the last element of a given list to the beginning of the list.","completion":"def move_last_to_front(list): list[0], list[-1] = list[-1], list[0] return list"},{"prompt":"Write an HTML snippet that contains two input field.","completion":"<form> Name: <input type=\\"text\\" name=\\"name\\"><br> Age: <input type=\\"text\\" name=\\"age\\"><br> </form>"},{"prompt":"Design a function in C that takes two input parameters and swap their values.","completion":"void swap(int* a, int* b) { int temp = *a; *a = *b; *b = temp; }"},{"prompt":"Reverse the order of the values in the input list using Python. list = [1, 4, 5, 6, 7]","completion":"list = [7, 6, 5, 4, 1] def reverse_list(input_list): \\"\\"\\"Reverse the order of the values in the input list.\\"\\"\\" return input_list[::-1] if __name__ == '__main__': list = [1, 4, 5, 6, 7] print(reverse_list(list))"},{"prompt":"Given the input string, remove extra whitespace from the string using Java. String s = \\" This is an example string","completion":"String s = s.replaceAll(\\"s+\\",\\" \\"); System.out.println(s); // This is an example string"},{"prompt":"Create a React component to render a table with data from an API. const data = [ {name: 'Alice', age: 28, job: 'engineer'}, {name: 'Bob', age: 30, job: 'teacher'}, {name: 'Charlie', age: 27, job: 'developer'} ]","completion":"import React from 'react'; const dataTable = props => { const { data } = props; return ( <table> <thead> <tr> <th>Name</th> <th>Age</th> <th>Job</th> </tr> </thead> <tbody> { data.map(item => ( <tr> <td>{item.name}</td> <td>{item.age}</td> <td>{item.job}</td> </tr> )) } </tbody> </table> ); } export default dataTable;"},{"prompt":"Write a function in JavaScript to get the first 10 prime numbers.","completion":"function getFirstTenPrimeNumbers() { let primeNumbers = []; let num = 2; while (primeNumbers.length < 10) { if (isPrime(num)) { primeNumbers.push(num); } num++; } return primeNumbers; } function isPrime(num) { for(let i = 2; i < num; i++) { if (num % i === 0) { return false; } } return true; }"},{"prompt":"Create a function in Python to generate a list of consecutive natural numbers starting from 1 up to a given number. n = 8","completion":"def gen_list_of_consecutive_numbers(n): \\"\\"\\"Generate a list of consecutive natural numbers up to a given number n\\"\\"\\" return list(range(1, n + 1)) if __name__ == '__main__': n = 8 print(gen_list_of_consecutive_numbers(n))"},{"prompt":"Create a web page with a JavaScript function to search for a product in a product inventory using user input. const products = [ {name: \\"iPhone\\", price: 499}, {name: \\"MacBook Pro\\", price: 1499}, {name: \\"iPad Pro\\", price: 799}, ];","completion":"<html> <head> <title>Product Search</title> </head> <body> <h1>Product Search</h1> <div> <input type=\\"text\\" id=\\"search\\" /> <button type=\\"button\\" onclick=\\"searchProducts()\\">Search</button> </div> <ul id=\\"products\\"></ul> <script> const products = [ {name: \\"iPhone\\", price: 499}, {name: \\"MacBook Pro\\", price: 1499}, {name: \\"iPad Pro\\", price: 799}, ]; function searchProducts() { let query = document.getElementById('search').value; let filteredProducts = products.filter( product => product.name.includes(query) ); let productsList = document.getElementById('products'); productsList.innerHTML = ''; for (let product of filteredProducts) { let newElement = document.createElement('li'); newElement.innerHTML = \`{product.name} - {product.price}\`; productsList.appendChild(newElement); } } <\/script> </body> </html>"},{"prompt":"Create a Python script to combine two lists into a dictionary list1 = [1, 2, 3] list2 = [\\"a\\", \\"b\\", \\"c\\"]","completion":"list1 = [1, 2, 3] list2 = [\\"a\\", \\"b\\", \\"c\\"] def combine_lists(list1, list2): \\"\\"\\"Combine two lists into a dictionary\\"\\"\\" return {key: value for key, value in zip(list1, list2)} if __name__ == '__main__': list1 = [1, 2, 3] list2 = [\\"a\\", \\"b\\", \\"c\\"] print(combine_lists(list1, list2))"},{"prompt":"Add a new key-value pair (\\"year\\": 2020) to the given dictionary using Python. dictionary = {\\"name\\": \\"John\\", \\"age\\": 30}","completion":"dictionary = {\\"name\\": \\"John\\", \\"age\\": 30} def add_year(dictionary): \\"\\"\\"Add a new key-value pair (\\"year\\": 2020) to the dictionary\\"\\"\\" dictionary[\\"year\\"] = 2020 return dictionary if __name__ == '__main__': dictionary = {\\"name\\": \\"John\\", \\"age\\": 30} print(add_year(dictionary))"},{"prompt":"Create a function to calculate the sum of the first n natural numbers using JavaScript.","completion":"function sumOfFirstNNaturalNumbers(n) { let sum = 0; for (let i = 0; i <= n; i++) { sum += i; } return sum; } const n = 5; console.log(sumOfFirstNNaturalNumbers(n)); // 15"},{"prompt":"Query all values from the table \\"users\\" in a MySQL database and sort them by descending order of the column \\"age\\".","completion":"SELECT * FROM users ORDER BY age DESC;"},{"prompt":"Using the function you wrote in 4. Write a Python program to convert a binary list to an integer binary_list = [1, 0, 1, 0]","completion":"def binary_list_to_int(binary_list): return int(''.join(str(x) for x in binary_list), 2)"},{"prompt":"Construct the code which will generate addition equations with randomized numbers ranging from 0 to 5.","completion":"import random def generate_addition_equation(): a = random.randrange(0, 6) b = random.randrange(0, 6) equation = str(a) + \\" + \\" + str(b) + \\" = \\" return equation"},{"prompt":"Edit the following code to make the output more reusable. def get_name(names): print(\\"Here's my name:\\") for name in names: print(name) retur","completion":"def get_name(names): result = [] for name in names: result.append(name) return result"},{"prompt":"Create a Python program that takes two lists as arguments, and returns a list that contains the elements present in both lists. list1 = [2, 3, 4, 5] list2 = [1, 4, 6]","completion":"def common_elements_of_two_lists(list1, list2): result = [] for element in list1: if element in list2: result.append(element) return result"},{"prompt":"Construct a regular expression to search the data. Search for all words starting with 'Foo'.","completion":"^Foow*"},{"prompt":"Construct a PHP function to log the user out of the system.","completion":"function logout() { session_destroy(); header('Location:index.php'); exit; }"},{"prompt":"Write a Java program to read the following text and count the number of words in the given sentence. This is a sample sentence.","completion":"import java.util.*; public class CountWords { public static void main(String[] args) { String str = \\"This is a sample sentence.\\"; int wordCount = 0; for (int i = 0; i < str.length(); i++) { if ((str.charAt(i) == ' ') || (str.charAt(i) == '.')) { wordCount++; } } System.out.println(\\"The number of words in the given sentence is \\" + (wordCount + 1)); } }"},{"prompt":"Construct an if-else conditional statement for this situation. If the number is greater than 0, print \\"Positive\\", otherwise print \\"Negative\\".","completion":"if (number > 0) { System.out.println(\\"Positive\\"); } else { System.out.println(\\"Negative\\"); }"},{"prompt":"What data structure should we use to solve this problem? We want to store a list of names and their associated addresses, and then look up names quickly.","completion":"A HashMap is the best data structure for this use case because it provides the ability to quickly look up values when given the associated key (name in this case)."},{"prompt":"Create a JS object property with a string value.","completion":"let obj = { name:\\"John Smith\\" };"},{"prompt":"w could you write a PHP statement to make a string uppercase?","completion":"string = strtoupper(string);"},{"prompt":"Create a CSS property for displaying text in bold font.","completion":"font-weight: bold;"},{"prompt":"Generate a SQL query to list the name of all tables in a database.","completion":"SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = 'database_name';"},{"prompt":"Construct an array in Python of size 10 and fill it with random integers from 0 to 5.","completion":"import random array = [] for i in range(10): array.append(random.randint(0,5)) print(array)"},{"prompt":"Create a class in C++ to store the rolling average of a stream of numbers.","completion":"class RollingAverage { private: int windowSize; int currentIndex; double total; std::vector<double> data; public: RollingAverage(int windowSize) : windowSize(windowSize) , currentIndex(0) , total(0.0) , data(windowSize) { for (int i = 0; i < windowSize; ++i) { data.push_back(0.0); } } void add(double value) { int prevIndex = (currentIndex - 1 + windowSize) % windowSize; total -= data[prevIndex]; total += value; data[currentIndex] = value; currentIndex = (currentIndex + 1) % windowSize; } double getAverage() { return total / windowSize; } };"},{"prompt":"Generate a Ruby program to print out the fibonacci sequence up to the 10th term.","completion":"def fibonacci(n) if n < 2 n else fibonacci(n-1) + fibonacci(n-2) end end 1.upto(10) {|x| puts fibonacci(x)}"},{"prompt":"w would you create a CSS style for alternating the background color of table rows?","completion":"table tr:nth-child(odd) { background-color: #f2f2f2; } table tr:nth-child(even) { background-color: #e6e6e6; }"},{"prompt":"Create a JavaScript object with a number and a string property.","completion":"let obj = { num: 10, str: \\"hello\\" };"},{"prompt":"Write a SQL query to display a table with the number of records in each month of a year.","completion":"SELECT month, COUNT(*) AS record_count FROM table_name GROUP BY month ORDER BY month;"},{"prompt":"Write a SQL query that selects the first name, last name, and the full name (concatenation of first and last name) of all users in a customer table.","completion":"SELECT first_name, last_name, CONCAT(first_name, ' ', last_name) AS full_name FROM customers;"},{"prompt":"Design a data structure that can efficiently store unique user IDs and what type of data structure is this?","completion":"A hash table can be used to store unique user IDs as it provides efficient lookups, inserts and deletes of data."},{"prompt":"Add comments to the following JavaScript code that explains what it does. let result = 0; for (let i = 0; i < 10; i++) { result += i; }","completion":"// This code loop through the numbers from 0 to 9 and add them to the variable result. let result = 0; for (let i = 0; i < 10; i++) { // Add the current number to the value of result result += i; }"},{"prompt":"Given a binary search tree and a target value, write a python function to search for the closest node value to the target.","completion":"def closestInBST(root, target): res = root.val while root: if root.val == target: return root.val if abs(root.val-target) < abs(res-target): res = root.val if target < root.val: root = root.left else: root = root.right return res"},{"prompt":"Write a JavaScript function that takes in an array and a number as arguments and returns the array sorted in ascending order with the number inserted in the right position. [1, 5, 6], 4","completion":"function insertSort(arr, num) { arr.push(num); arr.sort((a, b) => a - b); return arr; } // Output: [1, 4, 5, 6]"},{"prompt":"Create a new JavaScript object using the given constructor. Person Constructor: function Person(name, age){ this.name = name; this.age = age; }","completion":"const newPerson = new Person('John', 23);"},{"prompt":"Write a SQL query to output the most common first names among all male customers in the customer table","completion":"SELECT first_name, COUNT(*) as count FROM customers WHERE gender='male' GROUP BY first_name ORDER BY count DESC;"},{"prompt":"Write a Python code to find all the prime numbers below a given number.","completion":"def get_primes(n): primes = [] for num in range(2, n+1): is_prime = True for div in range(2, n): if (num % div == 0): is_prime = False if is_prime: primes.append(num) return primes"},{"prompt":"Write a Python code that reverses the order of words in a sentence. \\"This is a sentence","completion":"def reverseWords(sentence): return ' '.join(sentence.split()[::-1]) # Output: \\"sentence a is This\\""},{"prompt":"Write a JavaScript code that takes in an array and returns an array of objects containing the original array elements and their frequency. [3, 4, 3, 4, 5, 3]","completion":"function toObject(arr) { let counts = {}; let res = []; for (let i = 0; i < arr.length; i++) { let num = arr[i]; counts[num] = (counts[num] || 0) + 1; } for (let num in counts) { res.push({ num: parseInt(num), count: counts[num] }); } return res; } // Output: [{ num: 3, count: 3 }, { num: 4, count: 2 }, { num: 5, count: 1 }]"},{"prompt":"Remove the extra spaces from a given string and make the spaces between letters and words consistent. \\" The quick brown fox jumps over the lazy dog","completion":"def remove_extra_spaces(s): s = s.strip() words = s.split(\\" \\") result = \\"\\" for word in words: if word: result += word + \\" \\" return result.strip()"},{"prompt":"Write a code that prints all the possible outcomes of rolling two dice.","completion":"def roll_two_dices(): for i in range(1, 7): for j in range(1, 7): print(f\\"({i}, {j})\\")"},{"prompt":"Explain what the following python code prints out. for i in range(10): print(i**2)","completion":"The code prints out the squares of the numbers 0 to 9, i.e., 0, 1, 4, 9, 16, 25, 36, 49, 64 and 81."},{"prompt":"w would you improve the efficiency of the following code snippet? def get_total(list): total = 0 for item in list: total += item return total","completion":"One way to improve the efficiency of this code snippet is to use the built-in sum() function. This avoids having to manually iterate over the list and keep a running total. So the code can be rewritten as: def get_total(list): return sum(list)"},{"prompt":"Generate some sample input that can be used to test the edge cases of the following code snippet. def multiply_two_numbers(a, b): if a == 0 or b == 0: return 0 else: return a * b","completion":"Sample inputs for testing the edge cases: - Input: a = 0, b = 5 - Input: a = 5, b = 0 - Input: a = 0, b = 0"},{"prompt":"Rewrite this code snippet from a functional programming perspective. def is_even_sum(nums): return sum([1 for x in nums if x % 2 == 0]) > 0","completion":"This code snippet can be rewritten using a functional programming approach by using the built-in any() function. def is_even_sum(nums): return any(x % 2 == 0 for x in nums)"},{"prompt":"Rewrite the following code snippet from an object-oriented programming perspective. def find_greeting(name): if name == \\"Alice\\": return \\"Hi Alice!\\" else: return \\"Hello!","completion":"This code snippet can be rewritten using an object-oriented programming approach by creating two classes - Greeting and Person. class Person: def __init__(self, name): self.name = name class Greeting: def __init__(self): self.greetings = {\\"Alice\\": \\"Hi Alice!\\", \\"default\\": \\"Hello!\\"} def find_greeting(self, person): if person.name in self.greetings: return self.greetings[person.name] else: return self.greetings[\\"default\\"]"},{"prompt":"w would you print the sum of all elements in a 2-dimensional array? array=[[1,2], [3,4], [5,6]]","completion":"sum=0 for i in range(len(array)): for j in range(len(array[i])): sum+= array[i][j] print(sum)"},{"prompt":"Write a function to reverse the contents of a stack.","completion":"def reverseStack(stack): revStack = [] while len(stack) > 0: top = stack.pop() revStack.append(top) return revStack"},{"prompt":"Change the For loop statement below to a While loop statement: for i in range(0, 5)","completion":"i = 0 while i < 5: i += 1"},{"prompt":"Write a C++ code to generate a random number in the range 0 - 1000.","completion":"#include <cstdlib> #include <time.h> //Generating random number int random_number = rand() % 1001; // Print the random number cout << random_number;"},{"prompt":"Convert the given for loop code to a functional programming approach. list = [1,2,3,4] for i in list: new_list.append(i * 2)","completion":"new_list = list(map(lambda x: x * 2, list))"},{"prompt":"Construct an HTML page including a heading, button, and paragraph.","completion":"<html> <head> <title>My Webpage</title> </head> <body> <h1>My Webpage</h1> <button>Click Here!</button> <p>This is some sample text.</p> </body> </html>"},{"prompt":"Write a JavaScript program to display the current day and time","completion":"var d = new Date(); document.getElementById(\\"demo\\").innerHTML = d.toString();"},{"prompt":"w would you construct a for loop to print out the contents of an array? arr=[1,3,5,7,9]","completion":"for i in range(len(arr)): print(arr[i])"},{"prompt":"Write a Python program to sort the dictionary by key. myDict = {'a': 1, 'c': 3, 'b': 2}","completion":"sortedDict = sorted(myDict) for key in sortedDict: print(key, ':', myDict[key])"},{"prompt":"Design an algorithm for sorting data in ascending order using selection sort.","completion":"def selection_sort(arr): for i in range(len(arr)): min_index = i for j in range(i+1, len(arr)): if arr[min_index] > arr[j]: min_index = j arr[i], arr[min_index] = arr[min_index], arr[i] return arr"},{"prompt":"Write a JavaScript expression to check whether the string \\"Hello World\\" is present in another string. var test_str = \\"Hello World is a popular phrase\\";","completion":"test_str.includes(\\"Hello World\\");"},{"prompt":"Write a Java program to display a message \\"Hello World\\" on the console.","completion":"class HelloWorld { public static void main(String[] args) { System.out.println(\\"Hello World\\"); } }"},{"prompt":"Explain a scenario to use mySQL COUNT function.","completion":"The MySQL COUNT function can be used in scenarios where we need to find the number of records in a table that satisfy certain criteria. For example, to find the total number of employees in a given department we can use a query like \\"SELECT COUNT(*) FROM employees WHERE department = 'sales'\\"."},{"prompt":"Create a Bash script to print the argument provided.","completion":"echo \\"This is the argument: 1\\""},{"prompt":"Create a Python dictionary with key-values pairs (fruit-quantity) as listed below. apple = 5, banana = 10, orange = 15","completion":"fruit_dict = { \\"apple\\":5, \\"banana\\":10, \\"orange\\":15 }"},{"prompt":"Write a Java statement to add two integers and print the result.","completion":"int a = 1; int b = 2; System.out.println(a+b);"},{"prompt":"C++, write a code snippet to print \\"Welcome to GeeksforGeeks\\" 10 times using a for loop.","completion":"for (int i = 0; i < 10; i++) { cout << \\"Welcome to GeeksforGeeks\\" << endl; }"},{"prompt":"Edit the given code snippet to generate a table in HTML with four columns and three rows. <table></table>","completion":"<table> <tr> <td></td> <td></td> <td></td> <td></td> </tr> <tr> <td></td> <td></td> <td></td> <td></td> </tr> <tr> <td></td> <td></td> <td></td> <td></td> </tr> </table>"},{"prompt":"Write a SQL statement to query the names of all employees from the Employees table whose salary is less than 3000.","completion":"SELECT name FROM Employees WHERE salary < 3000;"},{"prompt":"Create a loop in Python to find the sum of all integers from 1 to 100.","completion":"total = 0 for num in range(1, 101): total+= num print(\\"Sum of all integers from 1 to 100 is\\", total)"},{"prompt":"Create an array of four different colors in JavaScript.","completion":"let colors = [\\"red\\", \\"green\\", \\"blue\\", \\"yellow\\"];"},{"prompt":"Design a SQL query to find all records from the table \\"Users\\" where the user's name is \\"John\\".","completion":"SELECT * FROM Users WHERE name = 'John';"},{"prompt":"Write a regular expression to match the email address \\"test@example.com\\".","completion":"^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+.[A-Za-z]{2,4}"},{"prompt":"Create a function in JavaScript that takes in two arrays and returns an object. The object should contain elements where the two arrays have coinciding elements. [1,3,5], [2,4,1]","completion":"function findCommon(arr1, arr2) { let result = {}; for (let i = 0; i < arr1.length; i++) { for (let j = 0; j< arr2.length; j++) { if(arr1[i] === arr2[j]) { result[arr1[i]] = arr2[j]; } } } return result; } console.log(findCommon([1,3,5], [2,4,1])); // Output: {1: 1}"},{"prompt":"Using the HTML provided, add an ID attribute to the div tag to specify the unique identifier \\"box1 <div>Hello World!</div>","completion":"<div id=\\"box1\\">Hello World!</div>"},{"prompt":"Write a SQL query to find the customer id, name, and salary of the customers whose salary is in the range 2000-6000.","completion":"SELECT customer_id, customer_name, customer_salary FROM customers WHERE customer_salary >= 2000 AND customer_salary <= 6000;"},{"prompt":"Visualize the following dataset using a bar chart in matplotlib. labels = ['A', 'B', 'C', 'D', 'E', 'F'] values = [8, 5, 7, 12, 4, 10]","completion":"import matplotlib.pyplot as plt labels = ['A', 'B', 'C', 'D', 'E', 'F'] values = [8, 5, 7, 12, 4, 10] plt.bar(labels, values) plt.title('Dataset') plt.xlabel('Category') plt.ylabel('Value') plt.show()"},{"prompt":"Develop a function in Java that prints out the squares of all numbers between 1 and 10.","completion":"public void printSquares(){ for(int i=1; i<=10; i++){ System.out.println(i*i); } }"},{"prompt":"What is the difference between a software engineer and a software developer?","completion":"Software engineers focus on developing and building software. They design software, maintenance and testing. They may also be involved in the development of applications, the creation of databases, and hardware integration. Software developers focus on coding, debugging, testing and maintenance of existing software. Developers may also be involved in the development of new applications. They are generally experts in one or more programming languages."},{"prompt":"Write a query in SQLite to select the records which have a price lower than 50.","completion":"SELECT * FROM Products WHERE Price < 50;"},{"prompt":"Create a function in Javascript that validates a user input as a valid email address.","completion":"function validateEmail(email) { const re = /^(([^<>()[].,;:s@\\"]+(.[^<>()[].,;:s@\\"]+)*)|(\\".+\\"))@(([[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}])|(([a-zA-Z-0-9]+.)+[a-zA-Z]{2,}))/; return re.test(email); }"},{"prompt":"Develop a function in Java to print the fibonacci series up to 10 numbers.","completion":"public class FibonacciSeries { static void printFibonacci(int n) { int f1 = 0, f2 = 1; if (n < 1) return; for (int i = 1; i <= n; i++) { System.out.print(f2 + \\" \\"); int next = f1 + f2; f1 = f2; f2 = next; } } public static void main(String[] args) { int n = 10; printFibonacci(n); } }"},{"prompt":"What is the most popular software development language?","completion":"The most popular software development language is currently JavaScript, according to Stack Overflow's 2020 Developer Survey. JavaScript is used by 69.8% of software developers, followed by HTML/CSS at 63.1% and SQL at 54.2%."},{"prompt":"Write a query in MongoDB to find all documents which have a count greater than 10.","completion":"db.collection.find( { count: { gt: 10 } } )"},{"prompt":"Write a code in C# to create a ranking system for 5 players based on their scores. Player1 : 23 Player2 : 20 Player3 : 15 Player4 : 33 Player5 : 5","completion":"Console.WriteLine(\\"Leaderboard\\"); // create a sorted dictionary of players and scores var leaderboard = new SortedDictionary<string, int>(); leaderboard.Add(\\"Player1\\", 23); leaderboard.Add(\\"Player2\\", 20); leaderboard.Add(\\"Player3\\", 15); leaderboard.Add(\\"Player4\\", 33); leaderboard.Add(\\"Player5\\", 5); // iterate through sorted dictionary and print rankings int rank = 1; foreach(KeyValuePair<string, int> pair in leaderboard) { Console.WriteLine(rank + \\". \\" + pair.Key + \\" : \\" + pair.Value); rank++; }"},{"prompt":"Develop a program in Java that prints out the following star pattern.","completion":"public class Stars { public static void main(String[] args) { for (int i = 1; i <= 5; i++) { for (int j = 0; j < i; j++) { System.out.print(\\"*\\"); } System.out.println(); } } }"},{"prompt":"Create a form in HTML that asks a user to enter their name, age and address.","completion":"<form action=\\"form_process.php\\" method=\\"post\\"> <label for=\\"name\\">Name:</label><br> <input type=\\"text\\" id=\\"name\\" name=\\"name\\"><br><br> <label for=\\"age\\">Age:</label><br> <input type=\\"text\\" id=\\"age\\" name=\\"age\\"><br><br> <label for=\\"address\\">Address:</label><br> <textarea id=\\"address\\" name=\\"address\\" rows=\\"5\\" cols=\\"30\\"></textarea><br><br> <input type=\\"submit\\" value=\\"Submit\\"> </form>"},{"prompt":"Alter the following python code such that it prints \\"Hello, world! for x in range(1,10): print(x)","completion":"for x in range(1,10): if x == 5: print('Hello, world!') else: print(x)"},{"prompt":"Construct a switch-case statement in JavaScript to print the day of the week. var day_index = 5;","completion":"switch (day_index) { case 0: console.log('Monday'); break; case 1: console.log('Tuesday'); break; case 2: console.log('Wednesday'); break; case 3: console.log('Thursday'); break; case 4: console.log('Friday'); break; case 5: console.log('Saturday'); break; case 6: console.log('Sunday'); break; }"},{"prompt":"Create a boolean expression in JavaScript, which returns false if a variable named \\"result\\" is an empty string. var result = '';","completion":"if (result === '') { var result = false; }"},{"prompt":"Generate a properly formatted JSON object in Python to represent the following details: name = John, age = 34","completion":"{ \\"name\\": \\"John\\", \\"age\\": 34 }"},{"prompt":"Create a function in Python to take two numbers as input and return their sum.","completion":"def add_nums(num1, num2): return num1 + num2"},{"prompt":"Compose an SQL statement to select the column \\"name\\" from the table \\"students\\" only where the student's age is greater than 25.","completion":"SELECT name FROM students WHERE age > 25;"},{"prompt":"Construct a \\"try catch\\" statement in JavaScript which prints \\"Value must be an integer\\" if a variable x is not an integer. let x = \\"string\\";","completion":"try { if (typeof( x ) !== 'number') { throw \\"Value must be an integer\\"; } } catch(err) { console.log(err); }"},{"prompt":"Create an array in JavaScript to store the elements \\"apple\\", \\"orange\\", \\"banana\\", \\"mango\\".","completion":"var fruits = [\\"apple\\", \\"orange\\", \\"banana\\", \\"mango\\"];"},{"prompt":"Construct a class in Python named \\"Person\\" which stores first name and last name in instance variables","completion":"class Person: def __init__(self, first_name, last_name): self.first_name = first_name self.last_name = last_name"},{"prompt":"Generate an \\"if else\\" statement in JavaScript to check if a variable x is greater than 10. var x = 20;","completion":"if (x > 10) { console.log('x is greater than 10'); } else { console.log('x is not greater than 10'); }"},{"prompt":"Explain why the following code prints \\"false\\": print(True is False)","completion":"The code prints \\"false\\" because when you use the 'is' operator on boolean values, it checks whether the two values are the same object or not. True and False are two different objects in Python and they are not the same, so the expression evaluates to False."},{"prompt":"Calculate the total cost of an order including shipping and taxes, given the following input: shipping cost = 10 tax rate = 0.1 base price = 100","completion":"total_cost = 110 + (100 * 0.1) = 120"},{"prompt":"Find the first prime number larger than 100.","completion":"The first prime number larger than 100 is 101."},{"prompt":"Create a dictionary to store the marks of students in a class. Johnny: 85 Jane: 95 Tom: 75","completion":"marks = { 'Johnny': 85, 'Jane': 95, 'Tom': 75 }"},{"prompt":"Estimate the value of pi to four decimal places.","completion":"The estimated value of pi is 3.1416."},{"prompt":"Calculate the sales tax given a price and a tax rate. price = 30 tax rate = 0.075","completion":"total_tax = 30 * 0.075 = 2.25"},{"prompt":"Create a Java class to represent a point in 2D space using two fields, x and y.","completion":"public class Point { private double x; private double y; public Point(double x, double y){ this.x = x; this.y = y; } public double getX() { return x; } public double getY() { return y; } public void setX(double x) { this.x = x; } public void setY(double y) { this.y = y; } }"},{"prompt":"Write a filter function in JavaScript to return elements from an array of strings which start with the letter \\"a\\". var words = [\\"apple\\", \\"ball\\", \\"cat\\", \\"almond\\"]","completion":"function filterByLetter(arr, letter) { return arr.filter(word => word.startsWith(letter)); } console.log(filterByLetter(words, 'a')); // [\\"apple\\", \\"almond\\"]"},{"prompt":"Given a 2-d array, write a method to flatten the array. [[1, 2, 3], [4, 5, 6], [7, 8, 9]]","completion":"def flatten(arr): flat_list = [] for sublist in arr: for item in sublist: flat_list.append(item) return flat_list"},{"prompt":"Create a RNN model to predict the next character in a given string.","completion":"model = Sequential() model.add(LSTM(128, input_shape=(sequence_length, n_unique_characters))) model.add(Dense(n_unique_characters, activation='softmax'))"},{"prompt":"Construct an HTML page using semantic elements to display a heading with \\"Hello World!\\".","completion":"<!DOCTYPE html> <html> <head> <title>Hello World!</title> </head> <body> <h1>Hello World!</h1> </body> </html>"},{"prompt":"Construct the loop in the code to find the maximum element in a non-empty array. int maxNum = array[0];","completion":"for(int i = 0; i < array.length; i++) { int currentNum = array[i]; if (currentNum > maxNum) { maxNum = currentNum; } }"},{"prompt":"Create a SQL query to get the top 10 salaries from a given table.","completion":"SELECT TOP 10 salary FROM TableName ORDER BY salary DESC;"},{"prompt":"Use the given array to construct the appropriate loop structure to replace the \\"TODO\\" comment in the code. const array = [1, 2, 3, 4, 5];","completion":"for (let i = 0; i < array.length; i++) { // TODO }"},{"prompt":"Write a bash script to find the sum of two integers.","completion":"#!/bin/bash a=1 b=2 sum=((a + b)) echo sum"},{"prompt":"Write a Python program to convert a string to a list. The string is \\"This is a test\\". \\"This is a te","completion":"\\"\\"\\" Write a Python program to convert a string to a list. \\"\\"\\" def string_to_list(str): return str.split() if __name__ == '__main__': str = \\"This is a test\\" print(string_to_list(str))"},{"prompt":"Sort all strings in a list alphabetically, using Python. [\\"apple\\", \\"dog\\", \\"cat\\", \\"banana\\"]","completion":"\\"\\"\\" Sort all strings in a list alphabetically, using Python. \\"\\"\\" # Initialize the list of strings list_of_strings = [\\"apple\\", \\"dog\\", \\"cat\\", \\"banana\\"] # Sort the list alphabetically list_of_strings.sort() # Print the sorted list print(list_of_strings)"},{"prompt":"Write a MySQL query to select all customers who have a birthday in the month of May.","completion":"SELECT * FROM customers WHERE MONTH(birth_date) = 5;"},{"prompt":"Using Java, create a program to compute the area of a circle given the radius.","completion":"\\"\\"\\" Using Java, create a program to compute the area of a circle given the radius. \\"\\"\\" public class AreaCircle { public static void main(String[] args) { double radius = 7.5; double area; area = Math.PI * Math.pow(radius, 2); System.out.println(\\"Area of the circle is: \\" + area); } }"},{"prompt":"From a list of numbers, find the smallest number using Python. [21, 9, 67, 34]","completion":"\\"\\"\\" From a list of numbers, find the smallest number using Python. \\"\\"\\" # Initialize the list of numbers list_of_nums = [21, 9, 67, 34] # Sort the list in order list_of_nums.sort() # Print the first element of the sorted list print(list_of_nums[0])"},{"prompt":"Construct a MySQL query to select all customers from the database whose last name starts with 'S'.","completion":"SELECT * FROM customers WHERE last_name LIKE 'S%';"},{"prompt":"Using C++, create a program to calculate the volume of a rectangular prism given the length, width and height.","completion":"\\"\\"\\" Using C++, create a program to calculate the volume of a rectangular prism given the length, width and height. \\"\\"\\" #include <iostream> int main() { double length, width, height; // Prompt for the dimensions std::cout << \\"Enter the length, width and height: \\"; std::cin >> length >> width >> height; // Calculate the volume double volume = length * width * height; // Print the volume std::cout << \\"The volume of the rectangular prism is: \\" << volume << std::endl; return 0; }"},{"prompt":"Write an SQL query to display all columns from the table 'products', sorted in descending order by price.","completion":"SELECT * FROM products ORDER BY price DESC;"},{"prompt":"Write a JavaScript code snippet to highlight the text 'Welcome' in the following string. const string = \\"Welcome to my website!","completion":"const string = \\"Welcome to my website!\\"; const highlightString = (str, highlight) => { const startStringIndex = str.indexOf(highlight); return ( str.slice(0, startStringIndex) + \\"<span class='highlight'>\\" + str.slice(startStringIndex, startStringIndex + highlight.length) + \\"</span>\\" + str.slice(startStringIndex + highlight.length) ); }; document.body.innerHTML = highlightString(string, \\"Welcome\\");"},{"prompt":"Write a query in Redis to get all the keys starting with 'user:'.","completion":"KEYS user:*"},{"prompt":"Write an Angular component to display a list of books. bookList = [ {name: ‘The Aeneid’, author: ‘Virgil’}, {name: ‘The Odyssey’, author: ‘Homer’}, {name: ‘The Divine Comedy’, author: ‘Dante’} ]","completion":"import { Component, OnInit } from '@angular/core'; @Component({ selector: 'app-book-list', templateUrl: './book-list.component.html', styleUrls: ['./book-list.component.css'] }) export class BookListComponent implements OnInit { bookList = [ {name: 'The Aeneid', author: ‘Virgil’}, {name: ‘The Odyssey’, author: 'Homer’}, {name: ‘The Divine Comedy’, author: ‘Dante’} ]; constructor() { } ngOnInit(): void { } } <ul> <li *ngFor=\\"let book of bookList\\">{{book.name}} - {{book.author}}</li> </ul>"},{"prompt":"Write a function in Java to convert hours to minutes.","completion":"public static int hoursToMinutes(int hours) { return hours * 60; }"},{"prompt":"Calculate the total surface area of a rectangular prism with length 10 cm, width 8 cm, and height 5 cm.","completion":"Total surface area of a rectangular prism = 2(lw + lh + wh) = 2(10 x 8 + 10 x 5 + 8 x 5) = 2(80 + 50 + 40) = 220 cm2"},{"prompt":"What is the value of Dirac's constant?","completion":"The value of Dirac's constant, also known as the reduced Planck constant, is 6.62607015 × 10-34 J⋅s."},{"prompt":"Write a function in C++ to print the even numbers between 1 to 10.","completion":"void printEven(int n){ for(int i=1;i<=n;++i){ if (i % 2 == 0) cout<< i <<\\" \\"; } }"},{"prompt":"Write a JavaScript code for the following action: When the user types \\"I'm hungry!\\" in the text box, the system will show an alert saying \\"Go make some food then!\\".","completion":"document.getElementById(\\"textbox\\").addEventListener(\\"input\\", function(){ if (this.value == \\"I'm hungry!\\") { alert(\\"Go make some food then!\\"); } });"},{"prompt":"Convert the following time from Central Daylight time to Eastern Standard time: 15:00.","completion":"15:00 Central Daylight Time is equivalent to 16:00 Eastern Standard Time."},{"prompt":"Write CSS code to make the background of the page purple with a font style of italicized.","completion":"body { background-color: purple; font-style: italic; }"},{"prompt":"Design an algorithm in C to find all substrings of a given string.","completion":"void findAllSubstrings(char * str) { int n = strlen(str); /* Pick starting point in outer loop and lengths of different strings for a given starting point*/ for (int len = 1; len <= n; len++) for (int i = 0; i <= n - len; i++) printSubStr(str, i, i + len - 1); } /* Print the substring between beg and end */ void printSubStr(char *str, int beg, int end) { for (int i = beg; i <= end; i++) printf(\\"%c\\", str[i]); printf(\\"n\\"); }"},{"prompt":"Construct a SQL statement to fetch records from the Sales table where the status is \\"active\\". Table Name: Sales Column Name: Statu","completion":"SELECT * FROM Sales WHERE Status = 'active';"},{"prompt":"Write a class in Java to submit a form.","completion":"public class Form { public void submitForm(){ // code to submit the form } }"},{"prompt":"Create a relational database with the following table structure:","completion":"CREATE DATABASE My_Database; USE My_Database; CREATE TABLE Employees ( Employee_ID INT PRIMARY KEY, Name VARCHAR(255), Age INT );"},{"prompt":"Create a function that returns a substring of a given string. string = 'This is a sample string'","completion":"def get_substring(string, start, end): return string[start:end]"},{"prompt":"Generate a list containing all positive integers between 1 and 10.","completion":"positive_integers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]"},{"prompt":"Given a list of strings, write a Python program to print each individual string in uppercase. string_list = [\\"apple\\",\\"banana\\",\\"oranges\\"]","completion":"def print_uppercase(string_list): for string in string_list: print(string.upper())"},{"prompt":"Write code to check if the word 'python' is present in a given string. string = 'I love the programming language Python'","completion":"def string_has_python(string): return 'python' in string"},{"prompt":"Parse a given string and reverse the order of words. string = 'My name is John'","completion":"def reverse_words(string): words = string.split(' ') reversed_words = ' '.join(words[::-1]) return reversed_words"},{"prompt":"Create an array with 10 elements and populate it with zeros.","completion":"a = [0] * 10"},{"prompt":"Print the 3rd to 5th characters in a given string. string = \\"Hello World","completion":"def print_chars(string): print(string[2:5])"},{"prompt":"Change the following variable declaration into Python. int num = 10;","completion":"num = 10"},{"prompt":"Create an object that returns the value of the given array. [1,2,3,4]","completion":"obj = {1:1, 2:2, 3:3, 4:4}"},{"prompt":"Write a code that sorts an array in descending order. [7,4,1,2]","completion":"arr = [7,4,1,2] arr.sort(reverse=True)"},{"prompt":"Using a for loop and an if statement, count how many even numbers are in the given array. [1,2,3,4]","completion":"count = 0 for num in [1,2,3,4]: if num % 2 == 0: count += 1"},{"prompt":"Create an array that contains the square of every number between 1 and 10, excluding 5.","completion":"arr = [1,4,9,16,36,49,64,81, 100]"},{"prompt":"Find the maximum of following array. [4,1,7,9,3]","completion":"max = 9"},{"prompt":"Print all the elements of the given 2D array in row-wise order. arr = [[1,2], [3,4]]","completion":"for row in arr: for ele in row: print(ele)"},{"prompt":"Use JavaScript to check if a number is an odd number.","completion":"function isOdd(num){ return num % 2 != 0; }"},{"prompt":"w to generate all permutations of a given list of items?","completion":"def permutation(lst): if len(lst) == 0: return [] if len(lst) == 1: return [lst] l = [] for i in range(len(lst)): m = lst[i] remLst = lst[:i] + lst[i+1:] for p in permutation(remLst): l.append([m] + p) return l"},{"prompt":"Transform a given text into a valid JSON format with indentation and proper spacing hello world","completion":"{ \\"hello\\": \\"world\\" }"},{"prompt":"Write an HTML table row to display the following information. Name: Joe, Age: 30","completion":"<tr> <td>Joe</td> <td>30</td> </tr>"},{"prompt":"Construct a CSS rule to either hide or show the paragraph element with the id \\"description\\".","completion":"#description{ display: block; }"},{"prompt":"Utilizing the regular expression [a-zA-Z0-9]+ construct a javascript script to find all matching patterns from the given string. exampleString","completion":"let regex = /[a-zA-Z0-9]+/; let matches = exampleString.match(regex); console.log(matches);"},{"prompt":"Syntax to declare an array in JavaScript.","completion":"const arrayName = [];"},{"prompt":"Write a JavaScript statement to create a Timer set to 2 minutes.","completion":"let timer = setInterval(function(){}, 120000);"},{"prompt":"Construct a while loop statement to print only even numbers between 0 to 10 in Python.","completion":"i = 0 while i <= 10: if i % 2 == 0: print(i) i = i + 1"},{"prompt":"Write a Python script to convert the given list of strings into a comma separated string. [ 'John', 'Julia', 'JeY', 'Jill' ]","completion":"list = [ 'John', 'Julia', 'JeY', 'Jill' ] print( ', '.join(list) )"},{"prompt":"Create an HTML form with a submit button that will trigger an alert message on clicking the button.","completion":"<form action=\\"\\" method=\\"post\\"> <input type=\\"submit\\" value=\\"Submit\\" onclick=\\"alert('Form submitted!')\\"/> </form>"},{"prompt":"Generate a Ruby statement to iterate through given array and print elements. [ 'John', 'Julia', 'JeY', 'Jill' ]","completion":"array = ['John', 'Julia', 'JeY', 'Jill'] array.each { |element| puts(element) }"},{"prompt":"Construct a While Loop in JavaScript.","completion":"let i = 0; while (i < 10) { console.log(i); i++; }"},{"prompt":"Produce a Regex statement to find a six-letter word that starts with an \\"a\\" and ends with an \\"s\\".","completion":"/^aw{4}s/"},{"prompt":"Write a python program to extract the substring from a string after a specific character string = \\"Hello,World!\\" character = \\",","completion":"string = \\"Hello,World!\\" character = \\",\\" result = string[string.find(character)+1:] print(result) # World!"},{"prompt":"Write a C program to check whether a number is positive or negative int num = -3;","completion":"#include<stdio.h> int main() { int num = -3; if (num < 0) printf(\\"Number is negative.\\"); else printf(\\"Number is positive.\\"); return 0; }"},{"prompt":"Edit the following Java code snippet to increase efficiency public class MyClass { public static void main(String[] args) { int i = 0; while (i < 10) { i++; System.out.println(i); } } }","completion":"public class MyClass { public static void main(String[] args) { //Set the counter to 1 int i = 1; //Use less than or equal comparison to include 10 while (i <= 10) { //short-hand increment i++; System.out.println(i); } } }"},{"prompt":"Generate a JavaScript code snippet to check if a certain element exists in an array arr = [1,2,3,4,5] element = 3","completion":"let arr = [1,2,3,4,5]; let element = 3; let result = arr.indexOf(element) !== -1; console.log(result); //true"},{"prompt":"Create a C program to print the given matrix in the following elements int arr[3][3] = {1,2,3,4,5,6,7,8,9};","completion":"#include<stdio.h> int main() { int arr[3][3] = {1,2,3,4,5,6,7,8,9}; int i,j; for(i=0;i<3;i++) { for(j=0;j<3;j++) printf(\\"%d \\",arr[i][j]); printf(\\"n\\"); } return 0; }"},{"prompt":"Create a python program to implement a Binary Search in an array arr = [2, 3, 4, 10, 40] x = 10","completion":"def binarySearch(arr, x): low = 0 high = len(arr)-1 while low <= high: mid = int((low + high)/2) if arr[mid] < x: low = mid + 1 elif arr[mid] > x: high = mid - 1 else: return mid return -1 arr = [2, 3, 4, 10, 40] x = 10 result = binarySearch(arr, x) if result != -1: print(\\"Element is present at index\\",result) else: print(\\"Element is not present in array\\")"},{"prompt":"Create a JavaScript function to find the second smallest number in an array [5, 10, 15, 20]","completion":"const array = [5, 10, 15, 20]; const secondSmallest = Math.min(...array.filter(x => x > Math.min(...array))) // Will return 10"},{"prompt":"Write a Python script to merge two given dictionaries into one dict1 = {'a': 1, 'c': 3, 'd': 4} dict2 = {'a': 6, 'b': 2, 'c': 4}","completion":"dict1 = {'a': 1, 'c': 3, 'd': 4} dict2 = {'a': 6, 'b': 2, 'c': 4} dict3 = {**dict1, **dict2} print(dict3) # {'a': 6, 'c': 4, 'd': 4, 'b': 2}"},{"prompt":"Rewrite the following Java code using different functions. String[] courses = {\\"Math\\",\\"Science\\",\\"English\\", \\"History\\"}; for(int i = 0; i < courses.length; i++){ System.out.println(courses[i]); }","completion":"import java.util.Arrays; public class Main { public static void main(String[] args) { String[] courses = {\\"Math\\",\\"Science\\",\\"English\\", \\"History\\"}; printCourses(courses); } public static void printCourses(String[] courses){ Arrays.stream(courses).forEach(System.out::println); } }"},{"prompt":"Get the sum of the first 100 even numbers.","completion":"The sum of the first 100 even numbers is 10,200."},{"prompt":"Write a JavaScript program to create an array of the first 100 Fibonacci numbers.","completion":"let fibonacci_array = [0, 1]; for (let i = 2; i <= 100; i++) { let next_number = fibonacci_array[i-1] + fibonacci_array[i-2]; fibonacci_array.push(next_number); } console.log(fibonacci_array);"},{"prompt":"dentify the input validation code that would be most appropriate for a form receiving a user's age.","completion":"// Validate Age if (!(age >= 0 && age < 100)) { alert(\\"Please enter a valid age!\\"); return false; }"},{"prompt":"Suggest a way of preserving the order of elements in a JavaScript array using a set data structure.","completion":"A Set data structure can be used for preserving the order of elements in a JavaScript array. To achieve this, the Set can be initialized with an array which contains the elements in the desired order. When adding elements to the Set, they will be added in the same order as they appear in the original array. This ensures the order of elements is preserved."},{"prompt":"Describe the process of indexing documents in an Elasticsearch cluster using the REST API.","completion":"Indexing documents in an Elasticsearch cluster using the REST API involves the following steps: 1. Install the Elasticsearch cluster and the Elasticsearch transport client. 2. Create an index in the Elasticsearch cluster. 3. Create the documents to be indexed by the cluster. 4. Use the Elasticsearch transport client to submit the documents to be indexed. 5. Query the Elasticsearch cluster for the indexed documents."},{"prompt":"Write a JavaScript code snippet that prints the content of a cookie.","completion":"let cookieName = \\"cookie\\"; console.log(document.cookie.split(';').filter(item => item.trim().startsWith(\`{cookieName}=\`))[0].split('=')[1]);"},{"prompt":"Rearrange the given jQuery snippet to use chaining. var arr = [1,2,3]; .each(arr,function(i,val){ console.log(val*3); });","completion":"(arr).each(function(i,val){ console.log(val*3); });"},{"prompt":"Describe an algorithm for sorting an array of n integers in O(n log n) time.","completion":"A sorting algorithm applicable to an array of n integers in O(n log n) time is Merge Sort. Its procedure first divides the input array into two halves until there are no more divisions are possible. This is the \\"divide and conquer\\" step of the algorithm. Then, each pair of divided arrays is sorted and merged into a single, sorted array. This is the \\"combine\\" step of the sorting algorithm. Finally, the sorted sub-arrays are combined in an organized manner to obtain the final sorted array. This algorithm is considered to be efficient, as it runs in O(n log n) time, where n is the number of elements in the array."},{"prompt":"What is the correct syntax for converting a C# string to an integer?","completion":"The correct syntax for converting a C# string to an integer is int.Parse(string). This method parses the string as a signed integer and returns the result."},{"prompt":"Describe a method for adding two numbers that uses a stack data structure","completion":"A method for adding two numbers using a stack data structure involves the following steps: 1. Push the two numbers onto the stack. 2. Pop the two numbers off the stack and add them together. 3. Push the result onto the stack. 4. Pop the result off the stack and return it as the final answer."},{"prompt":"Write code to store an input string in a hashmap with the count of its occurrence as the value The input string is \\"apple\\".","completion":"string = \\"apple\\" count_map = dict() for char in string: if char in count_map: count_map[char] += 1 else: count_map[char] = 1 print(count_map)"},{"prompt":"Create a HTML page to display a given list of items","completion":"<html> <head> <title>List of Items</title> </head> <body> <h1>List of Items</h1> <ul> <li>Item 1</li> <li>Item 2</li> <li>Item 3</li> <li>Item 4</li> <li>Item 5</li> </ul> </body> </html>"},{"prompt":"Design a function in C# which takes integer parameter and returns the first digit of the integer. 12345","completion":"public int GetFirstDigit(int number) { int firstDigit = 0; while (number > 0) { firstDigit = number % 10; number /= 10; } return firstDigit; }"},{"prompt":"Write a Java program to read input from the console.","completion":"import java.util.Scanner; class UserInput { public static void main(String[] args) { Scanner read = new Scanner(System.in); System.out.print(\\"Enter some string: \\"); String inputString = read.nextLine(); System.out.println(\\"You have entered: \\" + inputString); } }"},{"prompt":"Change the list elements to binary numbers. mylist=[3, 8, 9]","completion":"mylist = [bin(i) for i in mylist]"},{"prompt":"Normalize a given vector. vector = [2, 5, 6]","completion":"# Calculate sum of vector elements vector_sum = 0 for x in vector: vector_sum += x # Normalize vector normalized_vector = [x/vector_sum for x in vector] # Print the normalized vector print(normalized_vector)"},{"prompt":"Read in a 2D array with three columns. [[1, 2, 3], [4, 5, 6], [7, 8, 9]]","completion":"# Create an empty list array = [] # Iterate over the 2D array for row in array_input: # Create a temporary list temp_list = [] # Iterate over each column for col in row: temp_list.append(col) # Append the temporary list to the array array.append(temp_list)"},{"prompt":"Add up the elements of a given matrix. matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]","completion":"# Initialize the sum sum = 0 # Iterate over the matrix for row in matrix: # Iterate over the elements of each row for elem in row: # Add up the elements sum += elem # Print the sum print(sum)"},{"prompt":"Create a list of numbers in the range [0, 10) that are divisible by 3.","completion":"# Initialize an empty list list_by_3 = [] # Iterate over the range for i in range(0, 10): # Check if the number is divisible by 3 if i % 3 == 0: # Append it to the list list_by_3.append(i) # Print the list print(list_by_3)"},{"prompt":"Generate a dictionary with keys being the list elements and values being the list indexes. mylist = ['a','b','c','d']","completion":"# Initialize an empty dictionary dict_list = {} # Iterate over the list for i, item in enumerate(mylist): # Add the elements of the list as keys with the index as their value dict_list[item] = i # Print the dictionary print(dict_list)"},{"prompt":"Calculate the maximum of an input array. mylist = [1, 4, 5, 6, 8, -3]","completion":"# Initialize the max max = mylist[0] # Iterate over the list for i in mylist: # Check for bigger value if i > max: # Update the max max = i # Print the max print(max)"},{"prompt":"Create a function that takes a list of numbers and removes all elements that occur more than once. [1, 2, 3, 1, 2, 5]","completion":"def remove_duplicates(numbers): new_list = [] for num in numbers: if num not in new_list: new_list.append(num) return new_list print (remove_duplicates([1, 2, 3, 1, 2, 5]))"},{"prompt":"Write a recursive function to calculate the Fibonacci sequence.","completion":"def fibo(n): if n <= 1: return n else: return(fibo(n-1) + fibo(n-2)) # take input from the user nterms = 10 # check if the number of terms is valid if nterms <= 0: print(\\"Please enter a positive integer\\") else: print(\\"Fibonacci sequence:\\") for i in range(nterms): print(fibo(i))"},{"prompt":"Find the index of the first character in a string that is not a space. string: \\" Hello world!","completion":"def find_index(string): for i in range(len(string)): if string[i] != ' ': return i return -1 string = \\" Hello world!\\" print(find_index(string))"},{"prompt":"Write a class to represent a point in a 2-D plane.","completion":"class Point: def __init__(self, x_coordinate, y_coordinate): self.x = x_coordinate self.y = y_coordinate def get_x(self): return self.x def get_y(self): return self.y def set_x(self, x_coordinate): self.x = x_coordinate def set_y(self, y_coordinate): self.y = y_coordinate def distance(self, other_point): x_diff_sq = (self.x - other_point.x) * (self.x - other_point.x) y_diff_sq = (self.y - other_point.y) * (self.y - other_point.y) return (x_diff_sq + y_diff_sq) ** 0.5 p1 = Point(1, 2) p2 = Point(3, 4) print(p1.distance(p2))"},{"prompt":"Use a programming language to generate this sequence of numbers:","completion":"[1, 2, 3, 4, 7, 11, 18, 29, 47, 76, 123, 199]"},{"prompt":"Write a function to extract all URLs from a given HTML document.","completion":"def extract_urls(html): res = [] soup = BeautifulSoup(html, 'html.parser') for link in soup.find_all('a'): res.append(link.get('href')) return res"},{"prompt":"Write an algorithm to calculate the nth Fibonacci number.","completion":"def Fibonacci(n): if n<0: print(\\"Incorrect input\\") elif n==1: return 0 elif n==2: return 1 else: return Fibonacci(n-1)+Fibonacci(n-2)"},{"prompt":"Given a list of integers, how can you find the second smallest number in the list? my_list = [4, 8, 19, 6, 17, 11]","completion":"def find_second_smallest_number(lst): sorted_list = sorted(lst) return sorted_list[1] second_smallest_number = find_second_smallest_number(my_list)"},{"prompt":"w can you concatenate two strings in Python?","completion":"# Using the + operator str1 = \\"Hi\\" str2 = \\" there!\\" str3 = str1 + str2 print(str3) # Output: Hi there! # Using the join() method str1 = \\"Hi\\" str2 = \\" there!\\" str3 = \\"\\".join([str1, str2]) print(str3) # Output: Hi there!"},{"prompt":"Can you detect if a given number is even or odd?","completion":"def is_even(n): return n % 2 == 0"},{"prompt":"Edit the following while loop to fix the error. i = 0 while i <= 5: print(i) i = i + 1","completion":"i = 0 while i < 5: print(i) i = i + 1"},{"prompt":"Create a class with two methods which will print out strings \\"Hello\\" and \\"Goodbye\\".","completion":"class MyClass: def hello_method(self): print(\\"Hello\\") def goodbye_method(self): print(\\"Goodbye\\")"},{"prompt":"w can you sort a list in decending order in Python?","completion":"my_list = [4, 8, 19, 6, 17, 11] sorted_list = sorted(my_list, reverse=True)"},{"prompt":"Construct a class Student which will take in attributes name, age, and city upon initialization.","completion":"class Student: def __init__(self, name, age, city): self.name = name self.age = age self.city = city"},{"prompt":"Output code for a function that accepts one argument and returns the square of the argument.","completion":"def square(x): return x * x"},{"prompt":"Output code for a function that prints the multiplication table of a given number.","completion":"def multiplication_table(num): for i in range(1, 11): print(num, 'x', i, '=', num*i)"},{"prompt":"Output the code for a function to generate the Fibonacci sequence up to the given number n.","completion":"def generate_fibonacci(n): fibonacci_list = [0, 1] i = 1 while i < n: fibonacci_list.append(fibonacci_list[i] + fibonacci_list[i-1]) i = i + 1 return fibonacci_list"},{"prompt":"Write a function to sum up all the elements in a given list and output the result. my_list = [2, 4, 9, 16]","completion":"def sum_list_elements(lst): result = 0 for num in lst: result += num return result"},{"prompt":"Construct a set containing numbers from 1 to 5.","completion":"my_set = set(range(1, 6))"},{"prompt":"Output code for a function that will remove all instances of an element from a given list. my_list = [1, 3, 5, 3, 7, 9, 3]","completion":"def remove_element(lst, element): return [x for x in lst if x != element]"},{"prompt":"Write code to find the longest word in the given list and output it. words_list = [\\"apple\\", \\"mango\\", \\"banana\\", \\"blueberry\\"]","completion":"def find_longest_word(lst): longest_word = \\"\\" for word in lst: if len(word) > len(longest_word): longest_word = word return longest_word"},{"prompt":"Summarize the following article in less than 100 words. Machine Learning is an advanced course that is currently trending in the tech world. With the help of machine learning, many complex patterns and functions can be solved using algorithms and mathematical models. The ever-increasing advancements in technology also mean that the applications of machine learning are also widening every day.","completion":"Machine Learning is a powerful tool utilized in the tech industry to unlock complex patterns and functions. Advances in hardware and software technologies are allowing machine learning to be used in wider applications than ever before, making it a growing trend in the industry. It involves algorithms and mathematical models to complete tasks, resulting in improved efficiency and practical solutions to existing problems."},{"prompt":"Which language is most suitable for creating a web page?","completion":"HTML is the language most suitable for creating a web page. It allows you to create the structure and content of the web page and can be combined with other languages such as CSS and JavaScript to improve the look and feel of the web page."},{"prompt":"Provide an example of a valid JSON object.","completion":"{ \\"name\\": \\"John Doe\\", \\"age\\": 25, \\"address\\": { \\"street\\": \\"123 Main Street\\", \\"city\\": \\"New York\\", \\"state\\": \\"NY\\" }, \\"hobbies\\": [\\"sports\\", \\"reading\\", \\"writing\\"] }"},{"prompt":"w does a recursive function work?","completion":"A recursive function is a function that calls itself in order to complete its task. When a recursive function is called, it will break the problem into smaller sub-problems, and call itself with the smaller sub-problems. This process will repeat until the smallest sub-problem is solved, at which point the recursive function will return the result of all the sub-problems it encountered."},{"prompt":"Provide an example of a memoization technique in programming.","completion":"An example of a memoization technique in programming is to store the result of a function call in a lookup table. When the function is called for the same input in the future, the stored result can be accessed quickly from the lookup table instead of needing to calculate it again, resulting in improved performance."},{"prompt":"Differentiate between a stack and a queue.","completion":"A stack is a data structure that operates on a Last-In-First-Out (LIFO) principle, meaning the element that was added last will be removed first. A queue is a data structure that works on a First-In-First-Out (FIFO) principle, meaning the element that was added first will be removed first. Stacks are often used to reverse the order of elements or to store data temporarily, while queues are used for processing queues of data such as tasks and messages."},{"prompt":"Explain how a hash table works.","completion":"A hash table is a data structure that stores key-value pairs where the key is used to generate a unique index, or \\"hash\\". The hash is then used to access the value associated with the key. This allows for quick lookups of the data as the index is calculated from the key, resulting in an efficient way to store and retrieve the data."},{"prompt":"What is the difference between a programming language and a scripting language?","completion":"The main difference between a programming language and a scripting language is that a programming language generally requires compiling or interpreting the source code before it can be used, while a scripting language is interpreted on the fly without pre-compilation. Another difference is that programming languages are generally thought of as being more powerful, but scripting languages offer quick development times and are generally easier to learn."},{"prompt":"Compute the minimum of three numbers. 50, 133, 4","completion":"4"},{"prompt":"Classify the following elements into a list. Banana, Apple, Mango","completion":"[\\"Banana\\", \\"Apple\\", \\"Mango\\"]"},{"prompt":"Use JavaScript to generate a random number between 1-100.","completion":"Math.floor(Math.random() * (100 - 1 + 1)) + 1"},{"prompt":"List the primitive data types of the language Python.","completion":"Python data types include integers, floating-point numbers, strings, Booleans, lists, sets, dictionaries, tuples, and None."},{"prompt":"Find the ASCII code for the character H","completion":"72"},{"prompt":"Edit this program to print the output as \\"Hello World print (\\"Bye World","completion":"print(\\"Hello World\\")"},{"prompt":"Write a regular expression that matches words with an \\"r\\" followed by any number of letters.","completion":"br[a-zA-Z]*"},{"prompt":"Convert the following code snippet from Python 2 code to Python 3 code. x = raw_input(\\"What is your name? \\")","completion":"x = input(\\"What is your name? \\")"},{"prompt":"Write a C++ program that calculates the sum of consecutive numbers from 1 to 10.","completion":"#include <iostream> int main() { int sum = 0; for (int i = 1; i <= 10; i++) { sum += i; } std::cout << \\"Sum of consecutive number from 1 to 10 is \\" << sum << std::endl; return 0; }"},{"prompt":"Using JavaScript, create a function to find the longest word in a string.","completion":"function longestWord(str) { let words = str.split(\\" \\"); let longestWordLength = 0; let longestWord = \\"\\"; for (let i=0; i < words.length; i++) { if (words[i].length > longestWordLength) { longestWordLength = words[i].length; longestWord = words[i]; } } return longestWord; }"},{"prompt":"Create a CSS class that colors any text within its scope with blue.","completion":".blue { color: blue; }"},{"prompt":"Write a JavaScript function that takes an array and returns its first item.","completion":"function getFirst(arr) { return arr[0]; }"},{"prompt":"Create a Ruby method that takes two strings and concatenates them.","completion":"def concat(str1, str2) return str1 + str2 end"},{"prompt":"Write a SQL query to get the names of all the employees in the \\"sales\\" department who have a salary higher than 55,000.","completion":"SELECT name FROM employees WHERE department='sales' AND salary > 55000;"},{"prompt":"Create a constructor for a class called \\"Student\\".","completion":"class Student: def __init__(self, name, age, grades): self.name = name self.age = age self.grades = grades"},{"prompt":"Add a method to a given class to check if an element is present in it.","completion":"class MyClass: def __init__(self, elements): self.elements = elements def contains(self, element): return element in self.elements"},{"prompt":"Using Java, create a class that implements sorting of an array of integers.","completion":"public class Sorting { public void sort(int[] array) { for (int i = 0; i < array.length - 1; i++) { int index = i; for (int j = i + 1; j < array.length; j++) { if (array[j] < array[index]) { index = j; // index of lower number } } int smallerNumber = array[index]; array[index] = array[i]; array[i] = smallerNumber; } } }"},{"prompt":"Utilizing the Java syntax, write a code snippet to find the maximum value in the given array. [4, 15, 11, 26, 2]","completion":"int max = arr[0]; for (int i = 1; i < arr.length; i++) { if (arr[i] > max) { max = arr[i]; } } System.out.println(\\"Maximum value is: \\" + max);"},{"prompt":"Generate a pseudo code for calculating the Fibonacci sequence.","completion":"// This function starts from 0 function fibonacci(n) { if (n <= 1) { return n; } else { return fibonacci(n - 1) + fibonacci(n - 2); } }"},{"prompt":"Using Python, write a code snippet to identify the capital of a given country. Country: Ind","completion":"if country == 'India': capital = 'New Delhi' print(capital)"},{"prompt":"Using CSS, write a code snippet to provide a 10px grey border to a <div> element.","completion":"<div style=\\"border: 10px solid #808080;\\"> ... </div>"},{"prompt":"Write a Tensorflow code for building a neural network with two input layers, two hidden layers and one output layer.","completion":"model = tf.keras.models.Sequential([ tf.keras.layers.Dense(64, activation='relu', input_shape=[2]), tf.keras.layers.Dense(64, activation='relu'), tf.keras.layers.Dense(64, activation='relu'), tf.keras.layers.Dense(1) ])"},{"prompt":"Utilizing the C language, write pseudo code for performing a binary search in an array.","completion":"int binary_search(int arr[], int left, int right, int x) { if (right >= left) { int mid = left + (right - left) / 2; // If the element is present at the middle if (arr[mid] == x) return mid; // If element is smaller than mid, then it can only // be present in left subarray if (arr[mid] > x) return binary_search(arr, left, mid - 1, x); // Else the element can only be present in right // subarray return binary_search(arr, mid + 1, right, x); } // We reach here when element is not present // in array return -1; }"},{"prompt":"Write a CSS code for creating a hover effect for an element.","completion":"element:hover { background-color: #808080; }"},{"prompt":"Compose a Python code for computing the factorial of a given number.","completion":"def factorial(n): if n <= 1 : return 1 else : return n * factorial(n-1)"},{"prompt":"Utilizing the SQL language, write a query to select the longest word from the given table. Table: words Column Names: id, name","completion":"SELECT name FROM words ORDER BY LENGTH(name) DESC LIMIT 1;"},{"prompt":"Construct a SQL query to select all people who are 25 or older. Table name: people","completion":"SELECT * FROM people WHERE age >= 25;"},{"prompt":"Write code to evaluate the following expression in C++. 5 * 4 * 3 * 2 * 1","completion":"int result = 5 * 4 * 3 * 2 * 1; std::cout << \\"Result: \\" << result << std::endl; Result: 120"},{"prompt":"Write a ternary operation that checks if a number is negative and prints \\"negative\\" or positive and prints \\"positive\\". Number: -5","completion":"(Number < 0) ? \\"negative\\" : \\"positive\\" Result: negative"},{"prompt":"Develop a function that converts an array of real numbers to its nearest integer values. Array: [3.5, 4.7, 7.9]","completion":"def to_nearest_int(real_num_list): return [round(x) for x in real_num_list] to_nearest_int([3.5,4.7,7.9]) Result: [4, 5, 8]"},{"prompt":"Create a function that takes a 2D array as the argument and returns an array that contains the sums of each row. [[0, 2, 3], [1, 2, 3], [2, 2, 3] ]","completion":"def row_sum(A): result = [] for row in A: sum = 0 for element in row: sum = sum + element result.append(sum) return result"},{"prompt":"Write an algorithm to calculate the median of a given array. Array=[7, 4, 5, 2, 6]","completion":"Step 1: Start Step 2: Set an empty array, called median_arr. Step 3: Sort the given array. Step 4: Check if the length of the array is even or odd. Step 5: If even, calculate the average of the middle two elements and store it in median_arr. Step 6: If odd, store the middle element in the median_arr. Step 7: Return the array median_arr containing the median. Step 8: End."},{"prompt":"Write an SQL query to fetch the rows with the top 3 highest salary from the table. Table: Employees id |name |salary 1 |John |100 2 |Bob |90 3 |Adam |80 4 |Alice |120","completion":"SELECT * FROM Employees ORDER BY salary DESC LIMIT 3;"},{"prompt":"Prepend a given list with the number 0. list = [3, 4, 5, 6]","completion":"[0] + list"},{"prompt":"Generate a number in range between 1 to 10 randomly.","completion":"import random def random_num(): return random.randint(1, 10) if __name__ == '__main__': print(random_num())"},{"prompt":"Compute the edits between two strings. str1 = \\"I am eating\\" str2 = \\"I am eating a sandwich","completion":"def edit_distance(str1, str2): \\"\\"\\" Compute the edit distance between two strings \\"\\"\\" m = len(str1) n = len(str2) distance = [[0 for i in range(n+1)] for j in range(m+1)] for i in range(m+1): for j in range(n+1): # If first string is empty, only option is to insert all characters of second string if i == 0: distance[i][j] = j # If second string is empty, only option is to remove all characters of first string elif j == 0: distance[i][j] = i # If last characters are same, ignore last char and recur for remaining string elif str1[i-1] == str2[j-1]: distance[i][j] = distance[i-1][j-1] # If last characters are not same, consider all possibilities and find minimum else: replace_cost = distance[i-1][j-1] + 1 remove_cost = distance[i-1][j] + 1 insert_cost = distance[i][j-1] + 1 distance[i][j] = min(replace_cost, remove_cost, insert_cost) return distance[m][n] if __name__ == '__main__': str1 = \\"I am eating\\" str2 = \\"I am eating a sandwich\\" print(edit_distance(str1, str2))"},{"prompt":"Join two dictionaries by adding the values with the same key. d1 = {\\"a\\": 1, \\"b\\": 2, \\"c\\": 3} d2 = {\\"a\\": 10, \\"d\\": 20, \\"e\\": 30}","completion":"def join_dictionaries(d1, d2): ''' This function joins two dictionaries by adding their values with the same key ''' result = {} for k1, v1 in d1.items(): result[k1] = v1 for k2, v2 in d2.items(): if k2 in result.keys(): result[k2] += v2 else: result[k2] = v2 return result if __name__ == '__main__': d1 = {\\"a\\": 1, \\"b\\": 2, \\"c\\": 3} d2 = {\\"a\\": 10, \\"d\\": 20, \\"e\\": 30} print(join_dictionaries(d1, d2))"},{"prompt":"Write a function to generate valid random passwords. passwordlen = 8","completion":"import string import random def generate_password(passwordlen): ''' This function generates a random password of the given length ''' code_str = string.ascii_letters + string.digits password = ''.join(random.choice(code_str) for i in range(passwordlen)) return password if __name__ == '__main__': passwordlen = 8 print(generate_password(passwordlen))"},{"prompt":"Find the subarray with the largest sum in an integer array of length n. [3, -2, 1, 5, 6, -1, 4]","completion":"int[] a = [3, -2, 1, 5, 6, -1, 4]; int max_so_far = Integer.MIN_VALUE; int max_ending_here = 0; int start = 0; int end = 0; int s = 0; for (int i = 0; i < a.length; i++) { max_ending_here += a[i]; if (max_so_far < max_ending_here) { max_so_far = max_ending_here; start = s; end = i; } if (max_ending_here < 0) { max_ending_here = 0; s = i + 1; } } System.out.println(\\"Maximum contiguous subarray is from \\" + start + \\" to \\" + end);"},{"prompt":"Write an algorithm to flatten a deeply nested array [1, [2], 3, [4, [5, 6], 7]]","completion":"public static List<Object> flattenArray(List<Object> arr) { List<Object> result = new ArrayList<>(); for (int i = 0; i < arr.size(); i++) { if (arr.get(i) instanceof List<?>) { List<Object> flat = flattenArray((List<Object>) arr.get(i)); result.addAll(flat); } else { result.add(arr.get(i)); } } return result; }"},{"prompt":"ert a node at the beginning of a linked list. [10 -> 15 -> 20 -> 25]","completion":"// Java program to insert a node // at the beginning of a Singly Linked List public static void push(Node head_ref, int new_data) { // allocate node Node new_node = new Node(new_data); // put in the data new_node.data = new_data; // link the old list off the new node new_node.next = head_ref; // move the head to point to the new node head_ref = new_node; }"},{"prompt":"dentify the longest consecutive sequence of zeros in a binary string. 110010001","completion":"public static int longestSequenceOfZeros(String s) { int max_len = 0; int count = 0; for (int i = 0; i < s.length(); i++) { if (s.charAt(i) == '0') { count++; max_len = Math.max(max_len, count); } else { count = 0; } } return max_len; }"},{"prompt":"Create a script in Python to search a given string for a substring string = \\"Hello World!\\" substring = \\"llo","completion":"def searchSubstring(string, substring): results = [] n = len(string) m = len(substring) for i in range(n - m + 1): j = 0 while(j < m): if(string[i + j] != substring[j]): break j += 1 if j == m: results.append(i) print(results) string = \\"Hello World!\\" substring = \\"llo\\" searchSubstring(string, substring)"},{"prompt":"Create a function to print the elements of a linked list in reverse","completion":"public static void printReversedLinkedList(Node head) { if(head == null) return; printReversedLinkedList(head.next); System.out.print(head.data + \\" \\"); }"},{"prompt":"Write a JavaScript to create a new array containing the squared values of all odd numbers in the range (1, 10)?","completion":"let newArray = []; for (let i=1; i<=10; i++) { if (i % 2 !== 0) { newArray.push(i * i); } }"},{"prompt":"Write a Python code snippet to display the multiplication table of 5.","completion":"for i in range(1, 11): print(f\\"5 * {i} = {5 * i}\\")"},{"prompt":"Write an HTML code snippet to create an unordered list with three list items.","completion":"<ul> <li>List item 1</li> <li>List item 2</li> <li>List item 3</li> </ul>"},{"prompt":"Write a Java program to print all the Fibonacci series between 0 to 50.","completion":"public class Fibonacci { public static void main(String args[]) { int n1=0,n2=1; System.out.print(\\"Fibonacci Series: \\" + n1 + \\" \\" + n2); for(int i=2;i<50;i++) { int n3 = n1 + n2; System.out.print(\\" \\" + n3); n1=n2; n2=n3; } } }"},{"prompt":"Write a MySQL query to find all records with the last name \\"Smith\\".","completion":"SELECT * FROM people WHERE last_name='Smith';"},{"prompt":"Formulate a loop in Python that prints 7 to 18.","completion":"for i in range(7, 19): print(i)"},{"prompt":"Debug the following Java code to return the number of elements in the list. ArrayList<String> valueList = new ArrayList<String>(); valueList.add(\\"Apple\\"); valueList.add(\\"Banana\\"); valueList.add(\\"Orange\\"); System.out.println(\\"Number of elements: \\" + valueList.length);","completion":"ArrayList<String> valueList = new ArrayList<String>(); valueList.add(\\"Apple\\"); valueList.add(\\"Banana\\"); valueList.add(\\"Orange\\"); System.out.println(\\"Number of elements: \\" + valueList.size();"},{"prompt":"Write a SQL query that joins two tables. Table1: Id Name Age 1 John 30 2 Alice 20 Table2: Id Country 1 USA 2 England","completion":"SELECT Table1.Id, Table1.Name, Table1.Age, Table2.Country FROM Table1 JOIN Table2 ON Table1.Id = Table2.Id"},{"prompt":"Using a while loop in Python, print numbers from 5 to 19.","completion":"i = 5 while i < 20: print(i) i += 1"},{"prompt":"Construct an if-else statement in Python that swaps the values of two variables. a = 2 b = 5","completion":"if a > b: temp = a a = b b = temp else: temp = a a = b b = temp"},{"prompt":"Form a while loop using PHP that prints the numbers from 6 to 14.","completion":"num = 6; while (num <= 14) { echo num; num++; }"},{"prompt":"Write a SQL query to find records where the name starts with ‘Jo’.","completion":"SELECT * FROM tableName WHERE name LIKE 'Jo%'"},{"prompt":"Compose an if-else block in Python for checking if a string is empty. str1 = \\"My String\\" str2 = \\"","completion":"if len(str1) > 0: print(\\"Not empty\\") else: print(\\"Empty\\")"},{"prompt":"Generate a correct C++ program that computes the square root of a given number. float number = 3.14","completion":"float square_root(float number){ float low = 0; float high = number; float mid; while (low <= high){ mid = (low + high) / 2; if (mid * mid == number){ return mid; } else if (mid * mid > number){ high = mid; } else { low = mid; } } return -1; }"},{"prompt":"Using for loop in Java, print even numbers from 20 to 30.","completion":"for (int i=20; i<=30; i++) { if (i % 2 == 0) { System.out.println(i); } }"},{"prompt":"Take the following array and write a program to remove any duplicates from it arr = [3, 5, 2, 4, 5, 3, 2, 6]","completion":"let arr = [3, 5, 2, 4, 5, 3, 2, 6]; let set = new Set(arr); let new_arr = [...set]; console.log(new_arr); // [3, 5, 2, 4, 6]"},{"prompt":"Generate a random hexadecimal string of length 16.","completion":"8b5f5d45ab80fa9e"},{"prompt":"Compute median of a given set of integers [1, 6, 5, 8, 14, 9]","completion":"8"},{"prompt":"Write a shell script to find the most used command.","completion":"#!/bin/bash #Store the output of command history into an array historyArray=((history)) #Declare a Map declare -A wordCount #Loops through the history commands for word in \\"{historyArray[@]}\\"; do wordCount[\\"word\\"]=((wordCount[\\"word\\"] + 1 )) done #Counter for tracking the most used command maxCount=0 #Loop through the Map for key in \\"{!wordCount[@]}\\" do #Keeps track of the most used command if [ {wordCount[key]} -gt maxCount ] then maxCount=\\"{wordCount[key]}\\" mostUsed=\\"key\\" fi done echo The Most Used Command is mostUsed"},{"prompt":"Modify this HTML to add a paragraph element. <div class=\\"example\\"> <h2>Example</h2> </div>","completion":"<div class=\\"example\\"> <h2>Example</h2> <p>This is a paragraph element</p> </div>"},{"prompt":"Evaluate the polynomial f(x) = 4x^2 + 7x + 1 at x = -3.","completion":"f(-3) = 4(-3)^2 + 7(-3) + 1 = -36 + 21 + 1 = -14"},{"prompt":"Create a CSS class to override page text style.","completion":".my-style { font-weight: bold; font-size: 16px; font-family: Arial, sans-serif; color: #333; line-height: normal; }"},{"prompt":"Edit this HTML form to make sure that the input data is validated. <form action=\\"/submit\\"> <input type=\\"text\\" name=\\"name\\" /> <input type=\\"submit\\" value=\\"Submit\\" /> </form>","completion":"<form action=\\"/submit\\" onsubmit=\\"return validateForm()\\" > <input type=\\"text\\" name=\\"name\\" required/> <input type=\\"submit\\" value=\\"Submit\\"/> </form> <script> function validateForm() { let name = document.forms[\\"myForm\\"][\\"name\\"].value; if (name == \\"\\") { alert(\\"Name is required\\"); return false; } } <\/script>"},{"prompt":"Use Python to print a multiplication table for the numbers from 1 to 10.","completion":"# Print multiplication table for i in range(1, 11): for j in range(1, 11): print('{0} x {1} = {2}'.format(i, j, i*j)) print('n')"},{"prompt":"Create a CSS rule to make all elements in the page have a font size of 15px and color of #555.","completion":"* { font-size: 15px; color: #555; }"},{"prompt":"Write SQL query that create a table that contains three columns: an integer, a string and a boolean. tablename = my_table","completion":"CREATE TABLE my_table ( int SERIAL PRIMARY KEY, str VARCHAR(255) NOT NULL, boolean BOOLEAN );"},{"prompt":"Modify the code below to make it a one-liner # Initialize a variable sum = 0 # Iterate over numbers from 1 to 10 for i in range(1, 11): # Add number to sum sum = sum + i # Print sum print(sum)","completion":"print(sum([i for i in range(1, 11)]))"},{"prompt":"Using the given JavaScript object, access the property oldest_child. family = { mother: 'Sabina', father: 'Nasir', children: [ { name: 'Ben', age: 12 }, { name: 'Amy', age: 14 } ] }","completion":"family.children[1].name;"},{"prompt":"Write a function to convert a string of digits to the corresponding integer value. string = \\"12345","completion":"def toInt(string): number = 0 for char in string: number = (number * 10) + int(char) return number # Test print(toInt(string)) #12345"},{"prompt":"Design a class that can be used to represent books. Each book should have the following properties: title, author, and publisher.","completion":"class Book: def __init__(self, title, author, publisher): self.title = title self.author = author self.publisher = publisher"},{"prompt":"Turn the following pseudocode into a Java method. for n = 2 to 10 print (n * 2)","completion":"public void printMultiples(int start, int end) { for (int n=start; n <= end; n++) { System.out.println(n*2); } }"},{"prompt":"Create a dictionary of key-value pairs containing the names of five fruits and their corresponding colors.","completion":"fruitsColors = { 'apple': 'red', 'banana': 'yellow', 'orange': 'orange', 'grape': 'purple', 'strawberry': 'red' }"},{"prompt":"Write a Python script to display the numbers from 1 to 10 in ascending order.","completion":"for num in range(1, 11): print(num)"},{"prompt":"Evaluate the given algebraic expression by substituting 4 for x. expression = 2x + 6","completion":"expression = 2 * 4 + 6 = 14"},{"prompt":"Given the following array, write a JavaScript code to filter out the elements which are greater than 10. arr = [2, 3, 5, 8, 10, 12, 15, 18];","completion":"var filteredArray = arr.filter(function(num) { return num > 10; }); console.log(filteredArray); // [12, 15, 18]"},{"prompt":"Create a list comprehension that returns the even numbers in a given list. my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","completion":"even_nums = [num for num in my_list if num % 2 == 0]"},{"prompt":"Given the HTML structure below, add a red background to the <h1> tag. <h1>This is a heading</h1>","completion":"<h1 style=\\"background-color: red;\\">This is a heading</h1>"},{"prompt":"Write a function that takes a list and an item as parameters and appends the item to the list.","completion":"def append_item(my_list, item): return my_list.append(item)"},{"prompt":"Write an Ansible playbook to install an Apache webserver.","completion":"--- - hosts: localhost become: true tasks: - name: Install Apache Webserver apt: name: apache2 state: present"},{"prompt":"Build a React component to add a text field and a submit button.","completion":"import React, { useState } from 'react'; const Form = () => { const [input, setInput] = useState(''); const handleSubmit = (e) => { e.preventDefault(); // Do something with input } return ( <form onSubmit={handleSubmit}> <input type=\\"text\\" value={input} onChange={e => setInput(e.target.value)} /> <button type=\\"submit\\">Submit</button> </form> ) }; export default Form;"},{"prompt":"Create an object in JavaScript that simulates a bank account.","completion":"class BankAccount { constructor(name, balance) { this.name = name; this.balance = balance; } deposit(amount) { this.balance += amount; } withdraw(amount) { if(amount > this.balance) { console.log('Insufficient funds'); } else { this.balance -= amount; } } }"},{"prompt":"Create an Angular component that consists of a dropdown menu filled with a list of countries.","completion":"import { Component } from '@angular/core'; @Component({ selector: 'app-dropdown', template: \` <select> <option>USA</option> <option>Canada</option> <option>France</option> <option>Japan</option> <option>China</option> </select> \` }) export class DropdownComponent { }"},{"prompt":"Write a CSS code to apply padding to the left side of an element with class name \\"element\\".","completion":".element { padding-left: 20px; }"},{"prompt":"Using SQLite3, how can one create a table in an existing database?","completion":"CREATE TABLE table_name (column_name data_type PRIMARY KEY, ...);"},{"prompt":"Create a bash script to print a hello message to the terminal.","completion":"#!/bin/bash echo \\"Hello!\\""},{"prompt":"Which library should be used to process data in Scala?","completion":"The Apache Spark library is the most common library used to process data in Scala. Apache Spark provides an easy-to-use, distributed environment for analytics and data processing applications. It offers APIs in Java, Python, and Scala, allowing users to neatly integrate data processing with high-level programming languages."},{"prompt":"Rewrite the following HTML code in valid XML syntax. <html> <head> <title>My Page</title> </head>","completion":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?> <page> <title>My Page</title> </page>"},{"prompt":"Create a Javascript function that will loop through an array and push each item into a new array.","completion":"function loopThroughArray(arr) { let newArr = []; for(let i = 0; i < arr.length; i++) { newArr.push(arr[i]); } return newArr; }"},{"prompt":"w can one parse a JSON string in JavaScript?","completion":"The JSON.parse() method can be used to parse a JSON string in JavaScript. The JSON.parse() method takes a JSON string and parses it into an object. For example, the following code parses the string “{ “name”: “John” }” into an object: let jsonString = '{ \\"name\\": \\"John\\" }'; let parsedObject = JSON.parse(jsonString); console.log(parsedObject.name); // outputs \\"John\\""},{"prompt":"What is principle of DRY (Don’t Repeat Yourself) in coding?","completion":"The principle of DRY (Don’t Repeat Yourself) states that code should not be written twice, and instead should be reused. This means that code should be organized such that similar functionalities are grouped together so as to avoid duplication, making the code more efficient, robust, and maintainable. It also allows for code to be more easily refactored in order to correct errors or to add new features."},{"prompt":"Construct an algorithm to apply merge sort to an array of integers. [1, 10, 2, 5, 8, 7]","completion":"# Python program for Merge Sort # Merges two subarrays of arr[]. # First subarray is arr[l..m] # Second subarray is arr[m+1..r] def merge(arr, l, m, r): n1 = m - l + 1 n2 = r- m # create temp arrays L = [0] * (n1) R = [0] * (n2) # Copy data to temp arrays L[] and R[] for i in range(0 , n1): L[i] = arr[l + i] for j in range(0 , n2): R[j] = arr[m + 1 + j] # Merge the temp arrays back into arr[l..r] i = 0 # Initial index of first subarray j = 0 # Initial index of second subarray k = l # Initial index of merged subarray while i < n1 and j < n2 : if L[i] <= R[j]: arr[k] = L[i] i += 1 else: arr[k] = R[j] j += 1 k += 1 # Copy the remaining elements of L[], if there # are any while i < n1: arr[k] = L[i] i += 1 k += 1 # Copy the remaining elements of R[], if there # are any while j < n2: arr[k] = R[j] j += 1 k += 1 # l is for left index and r is right index of the # sub-array of arr to be sorted def mergeSort(arr,l,r): if l < r: # Same as (l+r)//2, but avoids overflow for # large l and h m = (l+(r-1))//2 # Sort first and second halves mergeSort(arr, l, m) mergeSort(arr, m+1, r) merge(arr, l, m, r) # Driver code to test above arr = [1, 10, 2, 5, 8, 7] n = len(arr) print (\\"Given array is\\") for i in range(n): print (\\"%d\\" %arr[i]), mergeSort(arr,0,n-1) print (\\"nnSorted array is\\") for i in range(n): print (\\"%d\\" %arr[i]), # This code is contributed by Shreyanshi Arun"},{"prompt":"Write a script in JavaScript to perform a bank transaction.","completion":"function performTransaction(accountNum, amount) { // Perform validation if (amount < 0) { console.log('Invalid amount'); return; } // Retrieve account information let accountInfo = getAccountInfo(accountNum); if (!accountInfo) { console.log('Account not found'); return; } // Perform transaction let newBalance = accountInfo.balance + amount; if (newBalance < 0) { console.log('Insufficient funds'); return; } // Update account accountInfo.balance = newBalance; updateAccountInfo(accountNum, accountInfo); console.log('Transaction successful'); }"},{"prompt":"Design a web page with HTML and CSS so that it displays four boxes of different colors.","completion":"<html> <head> <style> div { width:200px; height:200px; box-sizing:border-box; border-radius: 10px; } .box-1 { background: #F78181; } .box-2 { background: #FBB117; } .box-3 { background: #99E1D9; } .box-4 { background: #CDC5C2; } </style> </head> <body> <div class=\\"box-1\\"></div> <div class=\\"box-2\\"></div> <div class=\\"box-3\\"></div> <div class=\\"box-4\\"></div> </body> </html>"},{"prompt":"Create an array of appripriate data to store the following information: {name: John, age: 17, weight: 75}.","completion":"[‘John’, 17, 75]"},{"prompt":"Write a function in Java to find the matching pair in an array of integers. [4, 8, 2, 4, 1]","completion":"// Function to find matching pair in an array public static void findPair(int[] arr) { int pairIndex = -1; // Loop through the array for (int i = 0; i < arr.length; i++) { int current = arr[i]; // Check if it's a matching pair for (int j = i + 1; j < arr.length; j++) { if (current == arr[j]) { pairIndex = j; break; } } } // Print the result if (pairIndex != -1) System.out.println(\\"Pair found at index: \\" + pairIndex); else System.out.println(\\"Pair not found!\\"); }"},{"prompt":"Create an SQL query to retrieve the list of customers and total accounts in the customer table?","completion":"SELECT c.*, COUNT(a.account_id) AS total_accounts FROM customer c LEFT JOIN account a ON c.customer_id = a.customer_id GROUP BY c.customer_id;"},{"prompt":"Create a machine learning algorithm to classify emails as spam or not spam.","completion":"import numpy as np from sklearn.naive_bayes import MultinomialNB from sklearn.feature_extraction.text import CountVectorizer # Create feature vectors vectorizer = CountVectorizer() # Train the model classifier = MultinomialNB() # training data training_data = [ (\\"cheap replica watches\\", \\"spam\\"), (\\"click here to win money\\", \\"spam\\"), (\\"I like your offer\\", \\"not spam\\")] # Extract feature vectors train_features = vectorizer.fit_transform([data[0] for data in training_data]) # Train classifier classifier.fit(train_features, [data[1] for data in training_data]) # Test email test_email = \\"Click here to get special offers\\" test_features = vectorizer.transform([test_email]) prediction = classifier.predict(test_features) if prediction[0] == \\"spam\\": print(\\"Test email is marked as spam\\") elif prediction[0] == \\"not spam\\": print(\\"Test email is marked as not spam\\")"},{"prompt":"Create an SQL query to find the total cost of the items purchased by a customer with the id 1","completion":"SELECT SUM(i.price * c.quantity) AS total_cost FROM items i INNER JOIN customers c ON c.item_id = i.id WHERE c.customer_id = 1;"},{"prompt":"Create a function in Python that takes two list of strings as parameters and returns a third list of strings which are the elements common in both lists. list1 = [\\"apple\\", \\"orange\\", \\"banana\\", \\"cherry\\"] list2 = [\\"apple\\", \\"grapes\\", \\"banana\\", \\"watermelon\\"]","completion":"def common(list1, list2): ans_list = [] for i in list1: for j in list2: if i == j: ans_list.append(i) return ans_list if __name__ == \\"__main__\\": list1 = [\\"apple\\", \\"orange\\", \\"banana\\", \\"cherry\\"] list2 = [\\"apple\\", \\"grapes\\", \\"banana\\", \\"watermelon\\"] print(common(list1, list2)) # ['apple', 'banana']"},{"prompt":"Select the appropriate language to implement a linked list data structure.","completion":"C++ is the best language to implement a linked list data structure as it provides features like dynamic memory allocation, pointers and templates which make it easier to create a linked list."},{"prompt":"mplement a function to check whether a given array contains an odd number or not. array = [2, 3, 5, 9, 22, 13]","completion":"def check_odd(array): for i in array: if (i % 2 != 0): return True return False array = [2, 3, 5, 9, 22, 13] if (check_odd(array)): print(\\"Array contains an odd number\\") else: print(\\"Array does not contain an odd number\\")"},{"prompt":"Sort an array of strings alphabetically. array = [\\"cat\\", \\"dog\\", \\"horse\\", \\"apple\\", \\"zebra\\"]","completion":"def sort_alphabetically(array): sorted_array = sorted(array, key = str.lower) return sorted_array array = [\\"cat\\", \\"dog\\", \\"horse\\", \\"apple\\", \\"zebra\\"] print(sort_alphabetically(array))"},{"prompt":"Create a C++ class to simulate a stack data structure.","completion":"#include <iostream> using namespace std; class Stack { private: int top = -1; int size; int *arr; public: Stack(int n) { size = n; arr = new int[size]; } void push(int x) { if (top < size - 1) { ++top; arr[top] = x; } else { cout << \\"Stack overflow!\\" << endl; } } int pop() { if (top < 0) { cout << \\"Stack underflow!\\" << endl; return -1; } else { return arr[top--]; } } int topElement() { if (top < 0) { cout << \\"Stack underflow!\\" << endl; return -1; } else { return arr[top]; } } int isEmpty() { return top < 0; } };"},{"prompt":"Write a Java program to print binary numbers from 0 to 15.","completion":"public class Binary { public static void main(String[] args) { for (int i = 0; i <= 15; i++) { System.out.println(Integer.toBinaryString(i)); } } }"},{"prompt":"Create a class in C# to calculate compound interest.","completion":"public class CompoundInterest { private double principal; private double rate; private int periods; public CompoundInterest(double principal, double rate, int periods) { this.principal = principal; this.rate = rate; this.periods = periods; } public double CalculateCompoundInterest() { return principal * Math.Pow(1 + (rate / periods), periods); } }"},{"prompt":"Find and delete duplicate elements from a given array in Java. array = [1, 2, 3, 2, 4]","completion":"public static int[] deleteDuplicates(int[] array) { ArrayList<Integer> list = new ArrayList<>(); for (int i = 0; i < array.length; i++) { if (!list.contains(array[i])) { list.add(array[i]); } } int[] output = list.stream().mapToInt(Integer::intValue).toArray(); return output; } int[] array = [1, 2, 3, 2, 4] int[] output = deleteDuplicates(array); System.out.println(Arrays.toString(output));"},{"prompt":"Create a Bash function that takes an integer as input and prints out the corresponding ASCII character. 97","completion":"function print_ascii(){ echo \\"(printf 'x%x' \\"1\\")\\" } print_ascii \\"1\\""},{"prompt":"Write a Python program that takes two numbers as input and outputs the greatest common divisor (GCD) between them. 18 9","completion":"def gcd(a, b): while b != 0: a, b = b, a % b return a x = int(input(\\"Enter the first number: \\")) y = int(input(\\"Enter the second number: \\")) print(\\"The GCD of {} and {} is {}\\".format(x, y, gcd(x, y)))"},{"prompt":"Write an HTML web page that displays a list of three job titles and their corresponding descriptions. Developer Designer Project Manager Developer: Responsible for developing applications based on customer requirements Designer: Designs and implements user interfaces for applications Project Manager: Manages the project's resources and timelines to ensure successful completio","completion":"<!DOCTYPE html> <html> <head> <title>Job Titles and Descriptions</title> </head> <body> <p> <ul> <li>Developer: Responsible for developing applications based on customer requirements</li> <li>Designer: Designs and implements user interfaces for applications</li> <li>Project Manager: Manages the project's resources and timelines to ensure successful completion</li> </ul> </p> </body> </html>"},{"prompt":"Write a JavaScript function to check if all elements of an array of numbers are distinct. [1,2,3,4,5]","completion":"function areDistinct(arr){ for(let i=0; i<arr.length-1; i++){ for(let j=i+1; j<arr.length; j++){ if(arr[i]===arr[j]) return false; } } return true; }"},{"prompt":"Write an HTML page that takes an email address as input and displays a \\"Thank you\\" message after the submission.","completion":"<!DOCTYPE html> <html> <head> <title>Thank You</title> </head> <body> <form method=\\"POST\\" action=\\"\\"> <label> Email: <input type=\\"email\\" name=\\"email\\"> </label> <input type=\\"submit\\" value=\\"Submit\\"> </form> <?php if (_POST) { echo 'Thank you for signing up!'; } ?> </body> </html>"},{"prompt":"Create a Bash script that takes two words as arguments and outputs unique words present in both the words. Write Code","completion":"#!/bin/bash for i in \\"@\\" do echo -n (echo i | sed 's/(w)/1n/g' | sort -u) done echo"},{"prompt":"Create a Java program to find the area and circumference of a circle with a given radius.","completion":"public class Circle { public static void main(String[] args) { double radius = 6.2; double area = Math.PI * radius * radius; double circumference = 2 * Math.PI * radius; System.out.println(\\"Area = \\" + area); System.out.println(\\"Circumference = \\" + circumference); } }"},{"prompt":"Create a C program that prints the number of times a character is present in a given string. String: Antman Character:","completion":"#include <stdio.h> #include <string.h> int main() { char str[] = \\"Antman\\"; char c = 'n'; int count = 0; for (int i=0; i<strlen(str); i++) { // checking character in str if (str[i] == c) count++; } printf(\\"Number of %c in %s is %d\\", c, str, count); return 0; }"},{"prompt":"Write a Java code snippet that takes a URL as input and prints the content of the page.","completion":"import java.net.URL; import java.util.Scanner; public class UrlReader { public static void main(String[] args) throws Exception { String urlString = args[0]; URL url = new URL(urlString); Scanner s = new Scanner(url.openStream()); while (s.hasNextLine()) { System.out.println(s.nextLine()); } s.close(); } }"},{"prompt":"Change the following code so that it will still print the same output but with a better runtime complexity. def find_duplicates(list): duplicates = [] for i in range(len(list)): current = list[i] for j in range(len(list)): if i != j and list[j] == current: duplicates.append(current) return duplicate","completion":"def find_duplicates(list): duplicates = [] seen = set() for i in range(len(list)): current = list[i] if current in seen: duplicates.append(current) else: seen.add(current) return duplicates"},{"prompt":"Write a recursive version of the following code. def factorial(n): result = 1 for i in range(1, n + 1): result *= i return resul","completion":"def factorial(n): if n == 0: return 1 else: return n * factorial(n - 1)"},{"prompt":"Write a SQL query to select the 10th highest salary from an employees table.","completion":"SELECT salary FROM ( SELECT salary,rank() OVER (ORDER BY salary DESC) FROM employees ) sub WHERE rank = 10;"},{"prompt":"Create a Java program to find the max number within a list.","completion":"public static int findMax(int[] array) { int max = array[0]; for (int i = 0; i < array.length; i++) { if (array[i] > max) { max = array[i]; } } return max; }"},{"prompt":"Create a JavaScript function to format a date object into day, month, and year.","completion":"function formatDate(dateObj) { const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'] const monthName = ['January','February','March','April','May','June','July','August','September','October','November','December'] const day = days[dateObj.getDay()] const date = dateObj.getDate() const month = monthName[dateObj.getMonth()] const year = dateObj.getFullYear() return \`{day}, {date} {month} {year}\` }"},{"prompt":"Create a JavaScript program that formats currency values.","completion":"function formatCurrency(value) { return '' + value.toFixed(2).replace(/(d)(?=(d{3})+(?!d))/g, '1,'); }"},{"prompt":"Create a C++ program that multiplies two numbers.","completion":"int multiply(int a, int b) { return a * b; }"},{"prompt":"Create a SQL query to find the name, job title and salary for the top 3 highest-paid employees.","completion":"SELECT name, job_title, salary FROM employees ORDER BY salary DESC LIMIT 3;"},{"prompt":"mplement a Python function to check if an integer is even or odd.","completion":"def is_even(num): return num % 2 == 0"},{"prompt":"Create a JavaScript program that takes two numbers and returns the sum of their squares.","completion":"function sumOfSquares(a, b) { return a*a + b*b; }"},{"prompt":"Create a CSS3 animation to move an element from left to right.","completion":"@keyframes move-element { 0% { left: 0; } 100% { left: 100%; } }"},{"prompt":"what is the shortest code to print multiple strings on the same line?","completion":"print(*[\\"String1\\", \\"String2\\", \\"String3\\"])"},{"prompt":"Use numpy to create a 3x3 matrix full of zeros.","completion":"import numpy as np # create a 3x3 matrix full of zeros using numpy matrix_zeros = np.zeros( (3,3) ) print(matrix_zeros)"},{"prompt":"Write an SQL query that includes a join clause to join two tables named “clients” and “orders”.","completion":"SELECT * FROM clients INNER JOIN orders ON clients.client_id = orders.client_id;"},{"prompt":"Write a Java code to create an arraylist.","completion":"// Code to create an ArrayList in Java import java.util.ArrayList; public class Demo { public static void main(String[] args) { // create an arraylist ArrayList<String> list = new ArrayList<>(); list.add(\\"Java\\"); list.add(\\"C++\\"); list.add(\\"Python\\"); System.out.println(list); // print the size of the list System.out.println(\\"The size of the list is: \\"+list.size()); } }"},{"prompt":"Formulate a query in SQL to return the name and address of all customers who have placed an order in the last month.","completion":"SELECT name, address FROM customers JOIN orders ON customers.id = orders.customer_id WHERE orders.date > DATE_SUB(NOW(), INTERVAL 1 MONTH);"},{"prompt":"mplement a function in Python that takes two parameters, an array and a number, and sorts the array in ascending order by the number. [5, 29, 4, 7, 28], 3","completion":"def sort_array_by_nth_parameter(arr, n): return sorted(arr, key=lambda x: x[n]) numbers = [5, 29, 4, 7, 28] sorted_numbers = sort_array_by_nth_parameter(numbers, 3) print(sorted_numbers)"},{"prompt":"Define a class in C++ to represent a movie theater.","completion":"class MovieTheater { private: string name; int capacity; float ticketPrice; public: MovieTheater(string name, int capacity, float ticketPrice); string getName(); int getCapacity(); float getTicketPrice(); void setName(string name); void setCapacity(int capacity); void setTicketPrice(float ticketPrice); int calculateSales(); };"},{"prompt":"Transform the below SQL query into MongoDB. SELECT user_id, COUNT(*) FROM orders WHERE status = 'completed' GROUP BY user_id ORDER BY COUNT(*) DESC;","completion":"db.orders.aggregate([ {match: {status: 'completed'}}, {group: {user_id: 'user_id', count: {sum: 1}}}, {sort: {count: -1 }} ])"},{"prompt":"Rewrite the following function in JavaScript. def sum_of_two_numbers(a, b): return a + b","completion":"function sumOfTwoNumbers(a, b) { return a + b; }"},{"prompt":"Convert the below JSON data into an equivalent XML format. { \\"name\\": \\"John\\", \\"age\\": 30, \\"address\\": { \\"street\\": \\"1 Main Street\\", \\"city\\": \\"London\\", \\"country\\": \\"UK\\" } }","completion":"<?xml version=\\"1.0\\"?> <data> <name>John</name> <age>30</age> <address> <street>1 Main Street</street> <city>London</city> <country>UK</country> </address> </data>"},{"prompt":"Write a function in jQuery that adds a table row to a HTML table.","completion":"function addTableRow(tableId) { var tableRef = document.getElementById(tableId); var newRow = tableRef.insertRow(); var newCell = newRow.insertCell(0); var newText = document.createTextNode('New cell'); newCell.appendChild(newText); }"},{"prompt":"Create a class in Python which contains three attributes and a method.","completion":"class MyClass: def __init__(self, x, y, z): self.x = x self.y = y self.z = z def get_values(self): return self.x, self.y, self.z"},{"prompt":"Create a machine learning model to classify the following dataset. x1 x2 x3 y 2 4 2 0 -1 -2 1 1 -1 1 0 1 -2 2 1 0","completion":"model = SVC(kernel='linear') model.fit([[2,4,2],[-1,-2,1],[-1,1,0],[-2,2,1]], [0,1,1,0]) # Output: SVC(kernel='linear')"},{"prompt":"Create an array with the following elements in the given order. 2, 3, 7, 8","completion":"my_list = [2, 3, 7, 8]"},{"prompt":"Define a tuple in Python.","completion":"my_tuple = (1, 2, 3) # Output: (1, 2, 3)"},{"prompt":"Create a program to check if two binary trees are identical.","completion":"def is_identical(root1, root2): #Check if root1 and root2 are both none if root1 == None and root2 == None: return True #Check if root1 and root2 are none if root1 == None or root2 == None: return False #Check if their data is same if root1.data == root2.data: #Check if their left subtrees are same left_identical = is_identical(root1.left, root2.left) #Check if their right subtrees are same right_identical = is_identical(root1.right, root2.right) if left_identical and right_identical: return True return False"},{"prompt":"Create a program to find the maximum depth in a binary tree.","completion":"def max_depth(root): if root == None: return 0; else : #Compute the depth of each subtree l_depth = max_depth(root.left) r_depth = max_depth(root.right) #Use the larger one if (l_depth > r_depth): return l_depth+1 else: return r_depth+1"},{"prompt":"Create a machine learning model to classify an email into spam and non-spam classes.","completion":"The model can be built using any machine learning algorithm. The model should be trained with data points labeled as spam or non-spam emails. After training the model with the data, it should be able to predict whether an email is spam or not based on the input."},{"prompt":"Write a CSS selector to select all <h1> tags with a 'main' id.","completion":"The CSS selector is #main h1."},{"prompt":"Create a Django view to render an HTML page with message \\"Hello world!\\".","completion":"In the views.py file, add the following Django view: def hello_world(request): return render(request, 'hello_world.html', {'message': 'Hello world!'}) And in the hello_world.html file: <html> <head> <title>Hello world!</title> </head> <body> <h1>{{message}}</h1> </body> </html>"},{"prompt":"Find the size of a given byte array. byte_array = bytearray([1, 2, 3, 4, 5])","completion":"The size of the given byte array is 5."},{"prompt":"Suggest a JavaScript code to show all the console logs from line 8 to 16.","completion":"for (var i = 8; i <= 16; i++) { console.log(i); }"},{"prompt":"Design a web page to display the first ten elements of a given 2D array. A 2D array [[1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11, 12]]","completion":"<table> <tr> <td>1</td> <td>2</td> <td>3</td> </tr> <tr> <td>4</td> <td>5</td> <td>6</td> </tr> <tr> <td>7</td> <td>8</td> <td>9</td> </tr> <tr> <td>10</td> <td>11</td> <td>12</td> </tr> </table>"},{"prompt":"dentify the data structure used to represent a given tree. A Tree with 8 nodes, A as the root node, and B, C, D, E, F, G and H as its children.","completion":"A tree is a hierarchical data structure, so it can be best represented using a linked list."},{"prompt":"Create a HTML page to display the top 5 scores from a given array. An array with 10 elements [7, 8, 10, 3, 2, 9, 5, 1, 6, 4]","completion":"<html> <head> <title>Top 5 scores</title> </head> <body> <h1>Top 5 scores</h1> <ul> <li>10</li> <li>9</li> <li>8</li> <li>7</li> <li>6</li> </ul> </body> </html>"},{"prompt":"mplement a C language program to swap two numbers without using a temporary variable. Two integers, 5 and 10","completion":"#include <stdio.h> int main() { int a = 5, b = 10; printf(\\"Before Swapping a = %d, b=%dn\\",a,b); a = a + b; // sum of a and b b = a - b; // b is now equal to a a = a - b; // a is now equal to b printf(\\"After Swapping a = %d, b=%d\\",a,b); return 0; } Output: Before Swapping a = 5, b=10 After Swapping a = 10, b=5"},{"prompt":"Assign values to a given linked list A linked list with 4 node","completion":"class Node: def __init__(self,data): self.data = data self.next = None class LinkedList: def __init__(self): self.head = None def assignValues(self, dataList): node1 = Node(dataList[0]) node2 = Node(dataList[1]) node3 = Node(dataList[2]) node4 = Node(dataList[3]) self.head = node1 node1.next = node2 node2.next = node3 node3.next = node4 dataList = [1, 2, 3, 4] llist = LinkedList() llist.assignValues(dataList)"},{"prompt":"Design a JavaScript class to perform a specific operation on a given matrix. A matrix [[1, 2, 3], [4, 5, 6], [7, 8, 9]]","completion":"class MatrixOperation { constructor(matrix) { this.matrix = matrix; } // Implement the operation here // e.g. Matrix multiplication } const matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]; const mOp = new MatrixOperation(matrix);"},{"prompt":"Develop an algorithm to traverse a two-dimensional array. A two-dimensional array with 3 rows and 4 columns.","completion":"One possible algorithm to traverse a two-dimensional array is an in-place spiral traversal. Start at the top left corner of the array and traverse in a clockwise direction while updating the location at each step. Each time move one step in the direction you are currently going, then turn right and continue in the new direction. When you reach the end of a row or column, turn right and continue in the new direction until you have traversed the entire array. For example, for an array of 3 rows and 4 columns: Step 1: [0, 0] Step 2: [0, 1] Step 3: [0, 2] Step 4: [0, 3] Step 5: [1, 3] Step 6: [2, 3] Step 7: [2, 2] Step 8: [2, 1] Step 9: [2, 0] Step 10: [1, 0] Step 11: [1, 1] Step 12: [1, 2]"},{"prompt":"Compose a regular expression to extract the first digit from a given string. String: \\"abc123 456xyz","completion":"re.findall('^D*(d)', 'abc123 456xyz')"},{"prompt":"Construct an array which contains the count of each character present in the given string. String: “Hello world”","completion":"def characterCount(str): # create a dictionary and store count # of every character freq = {} for i in str: if i in freq: freq[i] += 1 else: freq[i] = 1 # return the dictionary return freq # Driver code str = \\"Hello world\\" print(characterCount(str))"},{"prompt":"mplement a sorting algorithm in C++ to sort an array of integers in an ascending order Array: [4, 9, 2, 6, 1, 3]","completion":"#include <iostream> using namespace std; void sortArray(int arr[], int n) { int i, j, temp; for (i = 0; i < n; i++) { for (j = i + 1; j < n; j++) { if (arr[i] > arr[j]) { temp = arr[i]; arr[i] = arr[j]; arr[j] = temp; } } } cout << \\"Sorted Array in Ascending Order:\\" << endl; for (i = 0; i < n; i++) { cout << arr[i] << \\" \\"; } cout << endl; } int main() { int n; int arr[50]; cout << \\"Enter the size of array: \\"; cin >> n; cout << \\"Enter the elements of array: \\" << endl; for (int i = 0; i < n; i++) { cin >> arr[i]; } sortArray(arr, n); return 0; }"},{"prompt":"Suppose you are given an array of active processes, write an algorithm in C++ that returns the process with the highest execution time Array of process objects with the following properties {name, id, priority, executionTime}","completion":"#include <iostream> #include <vector> using namespace std; struct Process { string name; int id; int priority; int executionTime; }; Process maxTimeProcess(vector<Process> processes) { Process maxExecProcess = processes[0]; for (int i = 1; i < processes.size(); i++) { if (maxExecProcess.executionTime < processes[i].executionTime) maxExecProcess = processes[i]; } return maxExecProcess; } int main(){ vector<Process> processes = {{\\"P1\\", 123, 0, 50}, {\\"P2\\", 124, 1, 60}, {\\"P3\\", 125, 0, 75}}; cout << \\"Process with Highest Execution Time: \\" << maxTimeProcess(processes).name << endl; return 0; }"},{"prompt":"Design a data structure in C++ to store a large set of customer data","completion":"#include <iostream> #include <unordered_map> using namespace std; // Data structure to store Customer data struct Customer { int id; string name; string address; }; // Function to store customer data using HashMap void store(unordered_map<int, Customer>& map, Customer& customer) { map[customer.id] = customer; } int main() { unordered_map<int, Customer> map; Customer customer1{ 1, \\"John\\", \\"B214, Road 11, US\\" }; Customer customer2{ 2, \\"Jacob\\", \\"C231, Road 53, UK\\" }; Customer customer3{ 3, \\"James\\", \\"D215, Road 43, Canada\\" }; store(map, customer1); store(map, customer2); store(map, customer3); return 0; }"},{"prompt":"Design a data structure in Java to store students' marks in an examination","completion":"import java.util.HashMap; // Data structure to store Marks class Marks { int physicsMarks; int chemistryMarks; int mathsMarks; }; // HashMap to store Student's Marks HashMap<String, Marks> marksHashMap = new HashMap<>(); // Function to store Student's marks void storeMarks(String studentId, int physicsMarks, int chemistryMarks, int mathsMarks) { // Object of Marks Marks marks = new Marks(); marks.physicsMarks = physicsMarks; marks.chemistryMarks = chemistryMarks; marks.mathsMarks = mathsMarks; String studentId marksHashMap.put(studentId, marks); }"},{"prompt":"Generate code in C++ to determine the number of palindromic substrings in a given string.","completion":"int countPalindromeSubstrings(string s) { // To store the length of palindromic substrings int count = 0; // Iterate over all possible centres for(int i = 0; i < s.length(); ++i) { // Expand from possible centres for(int j = 0; i - j >= 0 && i + j < s.length(); ++j) { // Check if the current substrings is a palindrome if(s[i - j] == s[i + j]) { count++; } else { break; } } // Expand from possible centres for (int j = 1; i - j + 1 >= 0 && i + j < s.length(); ++j) { // Check if the current substrings is a palindrome if (s[i - j + 1] == s[i + j]) { count++; } else { break; } } } return count; }"},{"prompt":"Compute the most frequent character from the following string. Codepe","completion":"'e' is the most frequent character in the given string."},{"prompt":"Create a script in Python to sort a given array. [1, 5, 4, 3, 6, 2]","completion":"sorted_array = [1, 2, 3, 4, 5, 6]"},{"prompt":"Design a program to remove punctuations from a given string.","completion":"def remove_punctuations(s): punctuations = '''!()-[]{};:'\\",<>./?@#%^&*_~''' s_without_punc = \\"\\" for char in s: if char not in punctuations: s_without_punc = s_without_punc + char return s_without_punc"},{"prompt":"Write code to split a given string into words.","completion":"def split_string_into_words(s): words = s.split(' ') return words"},{"prompt":"Design an algorithm in Java for solving a linear search problem.","completion":"// Returns index of x if it is present in arr[], // else return -1 int search(int arr[], int n, int x) { int i; for (i = 0; i < n; i++) if (arr[i] == x) return i; return -1; }"},{"prompt":"Write JavaScript code to print the Fibonacci sequence.","completion":"function printFibonacci(num) { let a = 0; let b = 1; console.log(a); console.log(b); for (let i = 3; i <= num; i++) { const c = a + b; a = b; b = c; console.log(c); } } printFibonacci(10);"},{"prompt":"Write a code to create Fibonacci sequence in Python","completion":"def Fibonacci(n): if n < 0: print(\\"Incorrect input\\") elif n == 1: return 0 elif n == 2: return 1 else: return Fibonacci(n-1) + Fibonacci(n-2)"},{"prompt":"What method is used to add an element to a stack in Java?","completion":"In Java, the method used to add an element to a stack is push(). This method adds an element to the top of the stack and increases the stack size by one."},{"prompt":"Write HTML code for a text input field with the placeholder \\"Enter name\\".","completion":"<input type=\\"text\\" placeholder=\\"Enter name\\">"},{"prompt":"w can a class be extended in Java?","completion":"In Java, a class can be extended using the keyword \\"extends\\". This allows a new class to inherit all the variables, methods and constructors of another class. Additionally, the new class will have all the properties of its parent class as well as any new code defined in the new class."},{"prompt":"dentify the type of the given input data. [\\"A\\", \\"B\\", \\"C\\"]","completion":"The given input data is an array of strings."},{"prompt":"Convert the following Java code into JavaScript. public static int max(int[] array){ int max = array[0]; for(int i=1; i<array.length; i++){ if(array[i] > max){ max = array[i]; } } return max; }","completion":"function max(arr) { let max = arr[0]; for (let i = 1; i < arr.length; i++) { if (arr[i] > max) { max = arr[i]; } } return max; }"},{"prompt":"Construct a Pandas dataframe that contains the average monthly temperatures of a given location over the year.","completion":"import pandas as pd # define the year year = 2020 # define the list of months months = [\\"January\\", \\"February\\", \\"March\\", \\"April\\", \\"May\\", \\"June\\", \\"July\\", \\"August\\", \\"September\\", \\"October\\", \\"November\\", \\"December\\"] # define the list of temperatures temperatures =[32.2, 37.3, 43.3, 51.4, 63.4, 70.4, 72.7, 73.4, 68.7, 56.4, 43.7, 34.2] # construct the dataframe df = pd.DataFrame({ 'month': months, 'temperature': temperatures }) # set the index to the month column df.set_index('month', inplace=True)"},{"prompt":"Create a SQL query that finds the third highest salary of all employees.","completion":"SELECT TOP 1 Salary FROM ( SELECT DISTINCT TOP 3 Salary FROM Employees ORDER BY Salary DESC ) AS Param ORDER BY Salary ASC"},{"prompt":"Formulate a query in MongoDB to find records with a specific field having an array containing a certain value.","completion":"db.collection.find({\\"field.arrayName\\": \\"value\\"})"},{"prompt":"Create an R script that takes the summation of given numbers.","completion":"add_numbers <- function(a, b, c){ return(a + b + c) }"},{"prompt":"Develop a Python program to calculate the area of a triangle given its three sides.","completion":"# Function to calculate area of triangle def calculateArea(a, b, c): # Calculating the semi-perimeter of triangle s = (a + b + c) / 2 # Calculate the area area = (s*(s - a)*(s - b)*(s - c)) ** 0.5 return area # Driver code a = 5 b = 6 c = 7 print(\\"Area of triangle is %0.2f\\" %calculateArea(a, b, c))"},{"prompt":"Develop JavaScript code to find the nth Fibonacci number.","completion":"function fibonacci(n) { if (n <= 1) return n; return fibonacci(n - 1) + fibonacci(n - 2); } let result = fibonacci(10); console.log(result);"},{"prompt":"Write an objective-C program to print the number of ones in an integer.","completion":"int countOnesInInteger(int number) { int count = 0; while(number) { count += number & 1; number >>= 1; } return count; }"},{"prompt":"Create a MySQL query to list the names of employees working in the company who are under the age of 25. Table: employees Columns: name, age","completion":"SELECT name FROM employees WHERE age < 25;"},{"prompt":"Write a Lambda function in Python to generate random numbers in the range of 10 to 50.","completion":"import random def random_num(): return random.randint(10,50)"},{"prompt":"Create a query in MySQL to list the number of male and female employees in a given department. Table: employees Columns: name, gender, departme","completion":"SELECT department, COUNT(*) AS count, gender FROM employees GROUP BY department, gender;"},{"prompt":"Write a compare() function in Java that takes two values and returns -1, 0, or 1 if the first value is less than, equal to, or greater than the second value.","completion":"public static int compare(Object o1, Object o2) { if (o1 < o2) { return -1; } else if (o1 == o2) { return 0; } else { return 1; } }"},{"prompt":"Write a script in JavaScript to calculate the average temperature from a given array of temperatures.","completion":"function calculateAverage(temps) { let total = 0; temps.forEach(temp => { total += temp; }); return total / temps.length; }"},{"prompt":"Train a logistic regression model on the housing prices dataset with 5 features.","completion":"import pandas as pd import numpy as np import matplotlib.pyplot as plt import seaborn as sns from sklearn.linear_model import LinearRegression from sklearn.model_selection import train_test_split from sklearn.linear_model import LogisticRegression #read in the dataset data = pd.read_csv('housing_prices.csv') #inspect the data data.info() data.describe() #split the data into train & test X = data[['Bedrooms','Bathrooms','Square_Feet','Parking','Yard']] y = data['Price'] X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42) #train the logistic regression model logreg = LogisticRegression().fit(X_train, y_train) #evaluate model performance print(\\"Training set score: {:.3f}\\".format(logreg.score(X_train, y_train))) print(\\"Test set score: {:.3f}\\".format(logreg.score(X_test, y_test)))"},{"prompt":"Rewrite the following code to use more efficient loops. for (int i = 0; i < 10; i++) { for (int j = 0; j < 10; j++) { System.out.println(\\"hi\\"); } }","completion":"for (int i = 0; i < 100; i++) { System.out.println(\\"hi\\"); }"},{"prompt":"Write a SQL query to select all rows from a table where the value of a column is between two ranges.","completion":"SELECT * FROM table_name WHERE column_name BETWEEN start_value AND end_value;"},{"prompt":"Create a React component to render a table with 10 rows and 3 columns.","completion":"import React, { Component } from 'react'; class Table extends Component { render() { return ( <table> <thead> <tr> <th>Column 1</th> <th>Column 2</th> <th>Column 3</th> </tr> </thead> <tbody> {Array.from(Array(10).keys()).map((x) => { return ( <tr> <td>Data 1</td> <td>Data 2</td> <td>Data 3</td> </tr> ); })} </tbody> </table> ); } } export default Table;"},{"prompt":"Calculate the mean, median and mode for the given set of numbers. 130, 160, 140, 160, 160","completion":"The mean is: 149.4 The median is: 160 The mode is: 160"},{"prompt":"Train a neural network using TensorFlow to predict housing prices.","completion":"import tensorflow as tf import numpy as np from tensorflow import keras # Load the dataset (x_train, y_train), (x_test, y_test) = tf.keras.datasets.housing_prices.load_data() # Normalize the input data x_train = x_train / 255.0 x_test = x_test / 255.0 # Build the model model = tf.keras.models.Sequential([ tf.keras.layers.Flatten(input_shape=(x_train.shape[1], x_train.shape[2])), tf.keras.layers.Dense(128, activation='relu'), tf.keras.layers.Dense(1) ]) # Compile and fit the model model.compile(optimizer='adam', loss='mean_squared_error', metrics=['accuracy']) model.fit(x_train, y_train, epochs=10) # Evaluate the model test_loss, test_accuracy = model.evaluate(x_test, y_test) print('Test accuracy {:.2f}%'.format(test_accuracy*100))"},{"prompt":"Create a web page with a navigation bar at the top.","completion":"<!DOCTYPE html> <html> <head> <title>Navigation Bar Demo</title> </head> <body> <nav> <ul> <li><a href=\\"#\\">Home</a></li> <li><a href=\\"#\\">About</a></li> <li><a href=\\"#\\">Contact</a></li> </ul> </nav> <h1>Welcome!</h1> <p>This is a demo page with a navigation bar at the top.</p> </body> </html>"},{"prompt":"Create an array with elements 'Red', 'Green', 'Blue'.","completion":"var colors = ['Red', 'Green', 'Blue'];"},{"prompt":"Use the string \`'Hello world!'\` and print it reversed.","completion":"!dlrow olleH"},{"prompt":"Find the length of a string \`The quick brown fox\`.","completion":"19"},{"prompt":"Construct an object in JavaScript to hold employee data with the fields \`name\` and \`position\`. John, Manager","completion":"var employee = { name: 'John', position: 'Manager' };"},{"prompt":"Write a function using CSS to make the font size of a tag with the id \`title\` larger. #title { font-size: 12px; }","completion":"#title { font-size: 16px; }"},{"prompt":"Create a low-level PyTorch implementation of the following neural network structure, using the class PyTorch provides. Input shape: (300, 100) Output shape: (2, 5)","completion":"import torch class MyNetwork(torch.nn.Module): def __init__(self): super().__init__() self.fc1 = torch.nn.Linear(300, 150) self.fc2 = torch.nn.Linear(150, 100) self.fc3 = torch.nn.Linear(100, 50) self.fc4 = torch.nn.Linear(50, 5) self.softmax = torch.nn.Softmax(dim=1) def forward(self, x): x = self.fc1(x) x = self.fc2(x) x = self.fc3(x) x = self.fc4(x) return self.softmax(x)"},{"prompt":"w would you fill in the blanks in the following code to make it print \\"Hello, World\\" n times in a row? n = 5 for _ in range(n): ________","completion":"n = 5 for _ in range(n): print(\\"Hello, World!\\")"},{"prompt":"Create a React component to display HTML elements in a scrolling page.","completion":"import React from 'react'; const ScrollingPage = () => { return ( <div style={{ overflow: 'auto' }}> {/* HTML elements you want to display go here */} </div> ); }; export default ScrollingPage;"},{"prompt":"Make the following C++ program print \\"Hello, World\\" 10 times consecutively. #include<iostream> int main() { ________ return 0; }","completion":"#include<iostream> int main() { for(int i = 0; i < 10; i++) std::cout << \\"Hello, World!\\" << std::endl; return 0; }"},{"prompt":"Use a machine learning model to predict the next number in a given sequence. Sequence: [1, 4, 9, 16, 25]","completion":"The next number in the given sequence is 36. To use a machine learning model, the dataset should be split into features and labels. The features could be the numbers in the sequence, and the label could be the next number. The model can be trained on this dataset to accurately predict the next number in a sequence."},{"prompt":"Create a Python program to generate a random 8-character alphanumeric string. The string should contain at least one lowercase letter, one uppercase letter, one digit and one special character.","completion":"import string import random def generate_random_string(): chars = string.ascii_letters + string.digits + string.punctuation string_length = 8 random_string = ''.join(random.choice(chars) for _ in range(string_length)) return random_string"},{"prompt":"Given a list of strings, write a Python program to remove all duplicates from the list. [“cat”, “dog”, “cat”, “parrot”, “goat”, “dog”]","completion":"def remove_duplicates(list): res = [] for str in list: if str not in res: res.append(str) return res"},{"prompt":"Write a Python program to create a list containing the squares of numbers between 1 and 50.","completion":"def squares_list(): squares = [] for i in range(1, 51): squares.append(i**2) return squares"},{"prompt":"Given an array of numbers, write a Python program to find the second highest element in the array. [1, 3, 5, 4, 7, 9]","completion":"def second_highest(arr): arr.sort() return arr[-2]"},{"prompt":"Create a Python program to convert an input string to Morse code.","completion":"def string_to_morse(user_string): morse_code = \\"\\" for ch in user_string: if ch.lower() in Morse.alpha: morse_code += Morse.alpha[ch.lower()] + \\" \\" return morse_code"},{"prompt":"Change the line in the following code that contains a syntax error. x = 10 if x == 10 print('x is 10')","completion":"x = 10 if x == 10: print('x is 10')"},{"prompt":"Write a JSON object that contains five key-value pairs.","completion":"{ \\"name\\": \\"John Smith\\", \\"age\\": 35, \\"email\\": \\"john.smith@example.com\\", \\"phone\\": \\"+1 123 456 7890\\", \\"address\\": \\"123 Main Street, Anytown, US\\" }"},{"prompt":"Write an HTML table with two columns for 'name' and 'age'.","completion":"<table> <tr> <th>Name</th> <th>Age</th> </tr> </table>"},{"prompt":"Sort the following array in ascending order: [135, 781, 79, 6, 903, 5]. [135, 781, 79, 6, 903, 5]","completion":"[5, 6, 79, 135, 781, 903]"},{"prompt":"Create a variable 'total' that stores the sum of integers 5 and 10.","completion":"total = 5 + 10;"},{"prompt":"Write a loop that prints the numbers from 0 to 9 on the console.","completion":"for (let i = 0; i < 10; i++) { console.log(i); }"},{"prompt":"Create a regex to extract the first name from a string \\"John Doe is a programmer\\". \\"John Doe is a programmer","completion":"/John(s[A-Za-z]+)*/"},{"prompt":"Describe what a closure is in programming.","completion":"A closure is a special type of function that allows a program to access variables and functions from an outer (or parent) scope, even after that outer scope has been closed or finished executing. The closure essentially \\"closes\\" the variables and functions from the outer scope, making them available for use in the inner scope of the function."},{"prompt":"Convert the following string into an array using the JS split() function: \\"apples oranges bananas grapes\\". \\"apples oranges bananas grape","completion":"str.split(\\" \\"); // returns [\\"apples\\", \\"oranges\\", \\"bananas\\", \\"grapes\\"]"},{"prompt":"Create an array with 5 elements in Python.","completion":"arr = [1, 2, 3, 4, 5]"},{"prompt":"Create a method to multiply two numbers.","completion":"public static int multiply(int num1, int num2) { return num1 * num2; }"},{"prompt":"Construct a SQL query to retrieve the top 10 most viewed articles from the database. Table \\"articles\\": - id (integer) - title (string) - content (string) - views (integer)","completion":"SELECT title, views FROM articles ORDER BY views DESC LIMIT 10;"},{"prompt":"Write a function to generate a random password that is 10 characters long.","completion":"import random import string def generate_password(length): chars = string.ascii_letters + string.digits return ''.join(random.choice(chars) for _ in range(length)) print(generate_password(10))"},{"prompt":"Create an HTML page that prints the current date.","completion":"<!DOCTYPE html> <html> <head> <title>Current Date</title> </head> <body> <p>Today's date is <script> document.write(new Date().toDateString()); <\/script></p> </body> </html>"},{"prompt":"Construct correctly a for-loop in Python that iterates 6 times from 0 to 5","completion":"for i in range(6): print(i)"},{"prompt":"Write a Python expression to compute the GCD (Greatest Common Divisor) of two numbers. a = 10, b = 15","completion":"def compute_gcd(a, b): while b: a, b = b, a % b return a"},{"prompt":"Write a Python expression to generate a list containing numbers from 0 to 12 (not including 12).","completion":"[x for x in range(0, 12)]"},{"prompt":"Write a Python expression to compute the exponential of a given number. x = 3","completion":"import math math.exp(x)"},{"prompt":"Write a Python program to truncate a string after a given number of characters. string = \\"Hello World!\\", limit = 6","completion":"def truncate_string(string, limit): return string[:limit]"},{"prompt":"Read the input values and sort them in ascending order. 9, 4, 2, 10, 15","completion":"list = [9, 4, 2, 10, 15] list.sort() print(list)"},{"prompt":"Write a Python program to compute the summation of a list of numbers. list = [1, 2, 3, 4, 5]","completion":"def compute_summation(list): result = 0 for i in list: result += i return result"},{"prompt":"Create an algorithm that prints the common elements of two arrays. arr1 = [3, 10, 15, 7] arr2 = [7, 8, 5, 10]","completion":"def common_elements(arr1, arr2): result = [] for numbers in arr1: if numbers in arr2: result.append(numbers) return result print(common_elements(arr1, arr2)) # Output: [7, 10]"},{"prompt":"mplement the quicksort algorithm. [12, -6, 47, 18, 0, -3]","completion":"def quicksort(alist): quicksort_helper(alist, 0, len(alist)-1) def quicksort_helper(alist, first, last): if first < last: splitpoint = partition(alist, first, last) quicksort_helper(alist, first, splitpoint-1) quicksort_helper(alist, splitpoint+1, last) def partition(alist, first, last): pivot = alist[first] leftmark = first+1 rightmark = last done = False while not done: while leftmark <= rightmark and alist[leftmark] <= pivot: leftmark = leftmark + 1 while alist[rightmark] >= pivot and rightmark >= leftmark: rightmark = rightmark - 1 if rightmark < leftmark: done = True else: temp = alist[leftmark] alist[leftmark] = alist[rightmark] alist[rightmark] = temp temp = alist[first] alist[first] = alist[rightmark] alist[rightmark] = temp return rightmark"},{"prompt":"the following statement valid in C++? a = (b + c)","completion":"Yes, the statement is valid in C++."},{"prompt":"Give an example of inheritance in Python","completion":"class Animal: def __init__(self, name): self.name = name def eat(self): print(f\\"{self.name} is eating\\") class Dog(Animal): def bark(self): print(f\\"{self.name} is barking\\") dog = Dog(\\"Fido\\") dog.eat() dog.bark() # Output: # Fido is eating # Fido is barking"},{"prompt":"Describe the difference between an abstract class and an interface in Java","completion":"The main difference between an abstract class and an interface in Java is that abstract classes can contain concrete (implemented) methods, while interfaces cannot. An abstract class is a class that cannot be instantiated, used as a base class that provides basic functionality and shared code to its derived classes. An interface is a purely abstract class and specifies what its derived classes must implement. Interfaces can also contain constants. A class can implement multiple interfaces but can only extend one abstract class."},{"prompt":"Construct a Python dictionary with the countries and their total population. countries = [\\"USA\\", \\"Canada\\", \\"India\\", \\"China\\", \\"Japan\\"]","completion":"population = {\\"USA\\": 331, \\"Canada\\": 37, \\"India\\": 1351, \\"China\\": 1414, \\"Japan\\": 126}"},{"prompt":"Modify the code below to print the 10th and 11th element of the array arr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]","completion":"arr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] print(arr[9], arr[10])"},{"prompt":"Write a Python program to collect the data from the form below. Name: John Email: john@email.com Phone: (999)-999-9999","completion":"name = input(\\"Name: \\") email = input(\\"Email: \\") phone = input(\\"Phone: \\") data = { \\"name\\": name, \\"email\\": email, \\"phone\\": phone }"},{"prompt":"Write a piece of code in Python that prints a multiplication table","completion":"def multiplication_table(n): for i in range(1, n+1): for j in range(1, n+1): print(\\"{}x{}={}\\".format(i, j, i*j)) print(\\"\\")"},{"prompt":"Write a code to encrypt a text using a Ceasar cipher","completion":"def ceasar_cipher(plaintext, shift): ciphertext = \\"\\" for i in range(len(plaintext)): char = plaintext[i] if (char.isupper()): ciphertext += chr((ord(char) + shift - 65) % 26 + 65) else: ciphertext += chr((ord(char) + shift - 97) % 26 + 97) return ciphertext"},{"prompt":"Create a JavaScript array and add the following items: \\"dog\\", \\"cat\\", \\"mouse\\", \\"bird\\".","completion":"let animals = [\\"dog\\", \\"cat\\", \\"mouse\\", \\"bird\\"];"},{"prompt":"Create a HTML page that contains the following text: \\"Welcome to my website!\\".","completion":"<html> <head> <title>Website</title> </head> <body> <h1>Welcome to my website!</h1> </body> </html>"},{"prompt":"Read the following string in PHP and print it in the browser. String: \\"PHP scripting language","completion":"<?php str = \\"PHP scripting language\\"; echo str; ?>"},{"prompt":"Design a GUI using JavaScript for a calculator application.","completion":"<div class=\\"calculator\\"> <input type=\\"text\\" placeholder=\\"0\\" readonly> <div class=\\"buttons\\"> <button>1</button> <button>2</button> <button>3</button> <button>4</button> <button>5</button> <button>6</button> <button>7</button> <button>8</button> <button>9</button> <button>0</button> <button>+</button> <button>-</button> <button>*</button> <button>/</button> <button>C</button> <button>=</button> </div> </div>"},{"prompt":"Parses the following JSON object and create an object from it. { \\"name\\": \\"John\\", \\"age\\": 25, \\"address\\": \\"123 Main Street\\" }","completion":"import json data = { \\"name\\": \\"John\\", \\"age\\": 25, \\"address\\": \\"123 Main Street\\" } userObject = json.loads(data) print(userObject)"},{"prompt":"w can you detect the version of Python installed?","completion":"You can detect the version of Python installed by running \`python -V\` in the command line. This will print the version of Python installed. Alternatively, you can execute \`import sys; print(sys.version)\` in the Python shell."},{"prompt":"Create a program to convert a string of ASCII characters to its equivalent decimal value String : hello","completion":"def ascii_to_decimal(string): decimal_value = 0 for c in string: decimal_value += ord(c) return decimal_value print(ascii_to_decimal('hello')) # Output -> 104 101 108 108 111"},{"prompt":"Determine whether a given string contains a valid number String : abc123","completion":"def is_valid_number(string): for c in string: if not c.isdigit(): return False return True print(is_valid_number('abc123')) # Output -> False"},{"prompt":"w can you delete an element from a tuple in Python?","completion":"You cannot delete an element from a tuple in Python because tuples are immutable. However, you can create a new tuple with all elements except the one you want to delete. For example, if you want to delete the element at index 3, you can create a new tuple by slicing the tuple from 0 to 3 and then adding the remaining elements after index 3. For example: tup = (1, 2, 3, 4, 5) tup = tup[:3] + tup[3+1:] # Output -> (1, 2, 3, 5)"},{"prompt":"Using classes, create an object that can describe a geometric shape","completion":"class Shape: def __init__(self, length, width, colour): self.length = length self.width = width self.colour = colour shape = Shape(10, 20, \\"red\\")"},{"prompt":"w can you replace a character in a string in Ruby?","completion":"In Ruby you can use the gsub method to replace a character in a string. For example, to replace the character 'z' with 'x' in a string str: str.gsub('z', 'x')"},{"prompt":"Sum the integers from 0 to 10","completion":"def sum(start, end): sum = 0 for i in range(start, end+1): sum += i return sum print(sum(0, 10)) # Output -> 55"},{"prompt":"Which sorting algorithm should you use for a nearly sorted array?","completion":"For a nearly sorted array, insertion sort is the best sorting algorithm because it only shifts elements up to one position and has a best-case time complexity of O(n) which makes it suitable for nearly sorted arrays."},{"prompt":"w can you find all the subsets of a set in Python?","completion":"In Python, you can use the itertools.combinations module to find all the subsets of a set. The syntax is as follows: import itertools list(itertools.combinations(<list or set>, <length of subset>)) For example, to find all the subsets of a set [1,2,3] of length 2, you can run: list(itertools.combinations([1,2,3], 2)) // Output -> [(1,2), (1,3), (2,3)]"},{"prompt":"Create a program to generate the Pascal's triangle","completion":"def pascal_triangle(n): # Create an empty list pascal=[] for line in range(1, n+1): l=[1] for i in range(1,line): l.append(pascal[line-2][i-1]+pascal[line-2][i]) l.append(1) pascal.append(l) return pascal print(pascal_triangle(6)) # Output -> [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1], [1, 5, 10, 10, 5, 1]]"},{"prompt":"Modify the given code to multiply each element in the list by 5. lista = [3, 4, 6, 7]","completion":"lista = [x * 5 for x in [3, 4, 6, 7]]"},{"prompt":"Construct a loop that prints out all elements in the list, one at a time. myList = [\\"egg\\", \\"milk\\", \\"bread\\", \\"sugar\\"]","completion":"for element in myList: print(element)"},{"prompt":"Swap the two variables without using a temporary variable a = 3 b = 7","completion":"a = a + b b = a - b a = a - b"},{"prompt":"Write a Python function to remove the whitespace from the beginning and end of a string myStr = \\" hello","completion":"def trim_whitespace(myStr): myStr = myStr.strip() return myStr print(trim_whitespace(myStr))"},{"prompt":"Given a dictionary with keys as strings and values as numbers, calculate the sum of the values myDict = {'x': 12, 'y': 23, 'z': 8}","completion":"def sum_of_dict(myDict): result = 0 for key in myDict: result += myDict[key] return result print(sum_of_dict(myDict))"},{"prompt":"Write a function to rearrange a given string in alphabetical order myString = ‘ Hello World’","completion":"def rearrange_string(myString): myString = myString.lower().strip() words = myString.split(' ') words.sort() return ' '.join(words) print(rearrange_string(myString))"},{"prompt":"Copy the given array and add 5 to each element myList = [2, 3, 11, 5, 10]","completion":"newList = [x + 5 for x in myList ]"},{"prompt":"Create an algorithm to detect whether an array is sorted in a given order. array = [1, 2, 4, 7, 10, 11]","completion":"def is_sorted(arr, order = \\"asc\\"): #check if array is sorted in ascending or descending order if order == \\"asc\\": for i in range(0, len(arr)-1): if arr[i] > arr[i+1]: return False elif order == \\"desc\\": for i in range(0, len(arr)-1): if arr[i] < arr[i+1]: return False else: print(\\"Error: Invalid sort order!\\") return True"},{"prompt":"Generate an array of length n that contains the square of the numbers from 1 to n. n = 10","completion":"def generate_square_numbers(n): arr = [] for i in range(1, n+1): arr.append(i*i) return arr"},{"prompt":"Generate an array that contains the first n Fibonacci numbers n = 10","completion":"def generate_fibonacci_numbers(n): arr =[0, 1] for i in range (2, n): arr.append(arr[i-1] + arr[i-2]) return arr"},{"prompt":"Write code to return the kth element in the Fibonacci sequence.","completion":"def return_fibonacci(k): a = 0 b = 1 if k < 0: return \\"Incorrect input\\" elif k == 0: return a elif k == 1: return b else: for i in range(2, k+1): c = a + b a = b b = c return b"},{"prompt":"Find all the factors of N (greater than 0), add them together and return the result. N = 30","completion":"def sum_factors_of_N(N): sum = 0 for i in range(1, N+1): if N % i == 0: sum += i return sum"},{"prompt":"Using the sample data, extract the substring between two words. sample_data = \\"This is a sample sentence.","completion":"def extract_substring(sample_data): start_word = \\"This\\" end_word = \\"sentence\\" start_index = sample_data.index(start_word) + len(start_word) end_index = sample_data.index(end_word) return sample_data[start_index:end_index]"},{"prompt":"Convert a given binary number to a hexadecimal number. binary_num = 1011","completion":"def binary_to_hex(binary_num): return hex(int(binary_num, 2))"},{"prompt":"Using the given lists, concatenate the two lists and return the result. list1 = [1, 4, 5] list2 = [2, 3, 6]","completion":"def concatenate_lists(list1, list2): return list1 + list2"},{"prompt":"Calculate the hypotenuse of a right angled triangle. x = 3 y = 4","completion":"def hypotenuse(x, y): return (x**2 + y**2)**0.5"},{"prompt":"Compute the maximum sum of m consecutive values in a given array. arr = [2, 6, 1, 3, 7, 4, 9] m = 3","completion":"def max_m_consecutive_sum(arr, m): max_sum = 0 for i in range(len(arr) - m + 1): curr_sum = 0 for j in range(i, i + m): curr_sum += arr[j] if curr_sum > max_sum: max_sum = curr_sum return max_sum"},{"prompt":"Write a code to generate random words from a given text. text = \\"Hello World!","completion":"import random def generate_random_word_from_text(text): words = text.split() return random.choice(words) if __name__ == '__main__': text = \\"Hello World!\\" print(generate_random_word_from_text(text))"},{"prompt":"Write a code to check if one given string is a substring of another. string1=\\"programming\\" string2=\\"gram","completion":"def is_substring(string1, string2): return string2 in string1 if __name__ == '__main__': string1=\\"programming\\" string2=\\"gram\\" print(is_substring(string1, string2))"},{"prompt":"You need to read a code and count the number of lines of code. def function(a, b): c = a + b d = a * b return c + d","completion":"def count_lines_of_code(code): lines = code.splitlines() return len(lines) if __name__ == '__main__': code=\\"\\"\\" def function(a, b): c = a + b d = a * b return c + d \\"\\"\\" print(count_lines_of_code(code))"},{"prompt":"Find the lowest common multiple of two numbers a and b. a = 12, b = 15","completion":"def lcm(a, b): lcm_num = (a * b) // math.gcd(a, b) return lcm_num lcm(12, 15) # 60"},{"prompt":"Explain why object-oriented programming is useful?","completion":"Object-oriented programming (OOP) is a programming paradigm that uses objects and their interactions to design applications and computer programs. OOP allows for efficient development and maintenance of large scale software systems by allowing developers to create objects which have their own independent properties and methods. OOP programming also provides for abstraction, which allows for complex software systems to be broken down into simpler, more manageable components. OOP also provides for better code reuse, which allows developers to easily reuse code that has been written before, instead of having to rewrite it from scratch. Finally, OOP allows for better data security, as all data related to an object can be stored in one place and accessed only by that object, which makes it more difficult for malicious actors to access or tamper with a system's data."},{"prompt":"Write a SQL query that retrieves the owner's id, name, and address of a specific car. Table: cars Columns: id, car_name, owner_id, owner_name, owner_address Car Name: \\"Toyota Coroll","completion":"SELECT owner_id, owner_name, owner_address FROM cars WHERE car_name = \\"Toyota Corolla\\";"},{"prompt":"What is the purpose of the for-each loop in Java?","completion":"The for-each loop in Java is a type of loop that is used to iterate over a collection, such as an array or a list. The for-each loop simplifies the process of writing loops and makes them more readable. It also allows the loop to run faster, since the loop variable does not need to be updated or declared each time through the loop. This makes the loop more efficient, since the operations are performed on all elements of the collection, not just on some of them."},{"prompt":"Edit the following HTML to have a green background color. <div>This is a div element</div>","completion":"<div style=\\"background-color: green;\\">This is a div element</div>"},{"prompt":"Write a Ruby function that takes two strings, s and t, as arguments and returns true if s is a substring of t, and false otherwise.","completion":"def is_substring(s, t) return t.include?(s) end"},{"prompt":"Name three techniques used to debug a program.","completion":"Three techniques used to debug a program are: 1) Printing debugging messages to track the state of the variables; 2) Stepping through code execution to find the source of the bug; and 3) Testing the code through a series of test cases to uncover any issues."},{"prompt":"Explain what a stack is and its uses.","completion":"A stack is an abstract data structure which follows the Last In First Out (LIFO) principle, meaning that the last element that was added to the stack is the first element that will be removed from the stack. Stacks are used to implement functions such as undo/redo, back/forward, and recursion. They are also used to efficiently evaluate arithmetic expressions, store temporary data, and to perform traversal and searching algorithms."},{"prompt":"Write a Haskell code snippet to find the length of a given list.","completion":"length :: [a] -> Int length [] = 0 length (_:xs) = 1 + (length xs)"},{"prompt":"Write a C program that prints the even numbers between 1 and 10.","completion":"#include <stdio.h> int main() { for (int i = 1; i <= 10; i++) { if (i % 2 == 0) printf(\\"%dn\\", i); } return 0; }"},{"prompt":"Create a SQL query to join two tables \\"invoice\\" and \\"customer\\" on the matching customer_id. Table \\"invoice\\": invoice_id | customer_id | date | description | amount 1 | 25 | 2020-08-01 | XYZ | 75 Table \\"customer\\": customer_id | customer_name | customer_address 25 | John Doe | 123 Main Stree","completion":"SELECT i.invoice_id, i.customer_id, i.date, i.description, i.amount, c.customer_name, c.customer_address FROM invoice i JOIN customer c ON i.customer_id = c.customer_id;"},{"prompt":"Create an HTML form with an input field for the user to enter their name.","completion":"<form> <label for=\\"name\\">Name</label> <input type=\\"text\\" name=\\"name\\" id=\\"name\\"> <input type=\\"submit\\" value=\\"Submit\\"> </form>"},{"prompt":"Write a function in C++ which takes a string as an argument and prints it to the console.","completion":"void print_string(string str) { cout << str; }"},{"prompt":"Create a Java function to calculate the area of a triangle from its three vertices. A=(2,3), B=(3,4), C=(4,5).","completion":"public static double getTriangleArea(Point A, Point B, Point C) { double area = 0.5 * (A.x * B.y + B.x * C.y + C.x * A.y - B.x * A.y - C.x * B.y - A.x * C.y); return area; }"},{"prompt":"Write a HTML form which will take the user's first and last name as input and then submit the data to a server.","completion":"<form action=\\"server.php\\" method=\\"post\\"> <legend>Name:</legend> <input type=\\"text\\" name=\\"fname\\" placeholder=\\"First Name\\"> <input type=\\"text\\" name=\\"lname\\" placeholder=\\"Last Name\\"> <input type=\\"submit\\" value=\\"Submit\\"> </form>"},{"prompt":"Design a program in C to produce the Fibonacci sequence.","completion":"#include <stdio.h> // Function to print the first n // Fibonacci numbers void printFibo(int n) { int f1 = 0, f2 = 1, i; if (n < 1) return; for (i = 1; i <= n; i++) { printf(\\"%d \\", f1); int next = f1 + f2; f1 = f2; f2 = next; } } // driver code int main() { int n = 10; printFibo(n); return 0; }"},{"prompt":"Design a sorting algorithm to order a list of integers in descending order. [4,7,2,8,9,1]","completion":"def descend_sort(nums): for i in range(len(nums)-1): for j in range(i+1,len(nums)): if nums[i]<nums[j]: nums[i],nums[j]=nums[j],nums[i] return nums"},{"prompt":"Write a Python program to make a dictionary that contains a number as a key, and its cube as the corresponding value.","completion":"def cube_dictionary(n): d = {} for i in range(1, n+1): d[i] = i**3 return d"},{"prompt":"Design a function in JavaScript to find the sum of the first n numbers.","completion":"function sum(n) { s = 0; // Iterate though natural // numbers using loop for (i = 1; i <= n; i++) s += i; return s; }"},{"prompt":"Using the given array, create a JavaScript function that returns the sum of all element in the array. [3, 5, 2, 6, 4, 4]","completion":"// Function to find the sum of all elements in an array function sumElements(arr){ let sum = 0; arr.forEach(element => { sum += element; }); return sum; } let arr = [3, 5, 2, 6, 4, 4]; console.log(sumElements(arr)); // Output: 24"},{"prompt":"Write a piece of code to return 'hello world' in lower case.","completion":"console.log('Hello World'.toLowerCase());"},{"prompt":"Rewrite the given code so that it prints the value of \`a\` 5 times. a = 10 print (a)","completion":"a = 10 for i in range(5): print (a)"},{"prompt":"Create a function in JavaScript that takes in two numbers and returns the difference between them.","completion":"function diff(a, b) { return Math.abs(a - b); }"},{"prompt":"Create a bash script to find the sum of two numbers and print the output to the console.","completion":"#!/bin/bash # Ask user to enter two numbers read -p \\"Enter two numbers to add: \\" num1 num2 # Calculate the sum of two numbers sum=((num1 + num2)) # Print the result echo \\"The sum of num1 and num2 is sum\\""},{"prompt":"Write a Python code that prints the longest continuous increasing sequence of integers within a given list. [1, 2, 3, 4, 5, 6, 7, 8, 4, 5, 6, 7, 8, 9]","completion":"def longest_continuous_increasing(arr): \\"\\"\\"Function to return the length of the longest continuous increasing sequence of integers within a given list Args: arr (list): a list of integers Returns: int: the length of the longest continuous increasing sequence \\"\\"\\" n = len(arr) max_len = 0 curr_len = 1 for i in range(1, n): if arr[i] > arr[i-1]: curr_len += 1 else: # update current length of the increasing sequence max_len = max(curr_len, max_len) curr_len = 1 return max(max_len, curr_len) # Driver code arr = [1, 2, 3, 4, 5, 6, 7, 8, 4, 5, 6, 7, 8, 9] print(longest_continuous_increasing(arr)) # Output: 9"},{"prompt":"Create a MySQL query to calculate the average age of all employees.","completion":"SELECT AVG(DATEDIFF(CURDATE(), birth_date)) AS average_age FROM employees;"},{"prompt":"Create a validation function in Python 3 that checks if the value is an integer","completion":"def validate_integer(val): if isinstance(val, int): return True else: return False"},{"prompt":"Write a function in Java that takes in a string and shifts all the characters one place to the right, wrapping around the end. x = \\"Hello!","completion":"public static String shiftCharacters(String str){ String shifted = \\"\\"; for(int i = 0; i < str.length(); i++) { int charNum = str.charAt(i) - 1; // Wrapping around the end if (charNum < 65) { charNum = charNum + 26; } shifted += (char)charNum; } return shifted; }"},{"prompt":"Using the Python 3 language, access the second character of the string. string = \\"Hello!","completion":"print(string[1])"},{"prompt":"Write a function in Java to delete an item from an ArrayList. list = [1,2,3,4,5]","completion":"public static void deleteItem(ArrayList<Integer> list, int item){ int index = list.indexOf(item); if(index >= 0){ list.remove(index); } }"},{"prompt":"Using the Python language, sort the following list in ascending order. mylist = [5, 2, 3, 1, 4]","completion":"mylist.sort() # mylist is now [1, 2, 3, 4, 5]"},{"prompt":"Using Java, access the value of the second dictionary key in \\"myDict\\". myDict = {\\"key1\\": \\"value1\\", \\"key2\\": \\"value2\\", \\"key3\\": \\"value3\\"}","completion":"String value2 = myDict.get(\\"key2\\");"},{"prompt":"Create a program using any scripting language to print the multiplication table of 5.","completion":"print(\\"Multiplication Table of 5\\") for i in range(1, 11): print(5, 'x', i, '=' ,5*i)"},{"prompt":"mplement a method to generate a random password with 8 characters, which at least contain one capital letter, one small letter, and one digit.","completion":"import string import random def passwordGenerator(length): str = string.ascii_uppercase + string.ascii_lowercase + string.digits passwd = \\"\\".join(random.choice(str) for x in range(length)) if (any(x.isupper() for x in passwd) and any(x.islower() for x in passwd) and any(x.isdigit() for x in passwd)): return passwd else: return passwordGenerator(length) print(passwordGenerator(8))"},{"prompt":"Write SQL query to list the names of all products whose stock is more than 50","completion":"SELECT name FROM products WHERE stock > 50;"},{"prompt":"Write an SQL query to return the total number of student enrollments in courses from the courses table. Table: courses Columns: course_id, course_name, enrollme","completion":"SELECT SUM(enrollments) FROM courses;"},{"prompt":"Write code in Java to generate a random number between 12 and 23.","completion":"// Create an instance of Random class Random rand = new Random(); // Generate a random number between 12 and 23 int rand_num = rand.nextInt(11) + 12; // Print the random number System.out.println(\\"Random number: \\" + rand_num);"},{"prompt":"mplement a function that returns the total number of vowels in a string in C++. string str = \\"Hello World!","completion":"#include <iostream> #include <string> int countVowels(std::string str) { int count = 0; for (int i = 0; i < str.length(); i++) { if (str[i] == 'a' || str[i] == 'e' || str[i] == 'i' || str[i] == 'o' || str[i] == 'u') count++; } return count; } int main() { std::string str = \\"Hello World!\\"; std::cout << \\"Number of vowels : \\" << countVowels(str); return 0; }"},{"prompt":"Write a method in Java that returns an array of the first N prime numbers. n=10","completion":"public static int[] getFirstNPrimes(int n) { int[] primes = new int[n]; int count = 0; int num = 2; while (count < n) { if (isPrime(num)) { primes[count] = num; count++; } num++; } return primes; } // Utility functon to check whether a numbmer is prime or not boolean isPrime(int n) { for (int i = 2; i <= n / 2; i++) { if (n % i == 0) return false; } return true; }"},{"prompt":"Using list comprehension, write a Python code to get a list of all possible subsets of the list [1, 2, 3] [1, 2, 3]","completion":"subsets = [[x for x in [1, 2, 3]] for y in range(0, 2**len([1, 2, 3]))]"},{"prompt":"Write a regular expression to find a substring in a string that matches the pattern ‘an example’ string = \\"This is an example of a string.","completion":"pattern = /an example/;"},{"prompt":"Java, write code to remove all empty elements from an array. arr = [1, 2, 3, \\"\\", 4, 5, \\"\\", 6]","completion":"List<String> nonEmpty = Arrays.stream(arr) .filter(x -> !x.equals(\\"\\")) .collect(Collectors.toList());"},{"prompt":"Filter the following list of integer using python, so that only the numbers divisible by 2 are left [1, 2, 3, 4, 5, 6, 7, 8]","completion":"def filter_list(list): new_list = [] for item in list: if item % 2 == 0: new_list.append(item) return new_list list = [1, 2, 3, 4, 5, 6, 7, 8] print(filter_list(list)) # Output: [2, 4, 6, 8]"},{"prompt":"Write a code that converts degrees Celsius to degrees Fahrenheit","completion":"def celsius_to_fahrenheit(celsius): fahrenheit = celsius * 9/5 + 32 return fahrenheit"},{"prompt":"Write a code that finds the largest palindromic number in a given array [73, 111, 109]","completion":"def largest_palindromic_number(arr): largest = 0 for i in arr: s = str(i) if s == s[::-1]: largest = max(i, largest) return largest largest = largest_palindromic_number([73, 111, 109]) print(\\"The largest palindromic number is:\\", largest)"},{"prompt":"Demonstrate how to create a SQL query to get a list of all employees from the employees table.","completion":"SELECT * FROM employees;"},{"prompt":"Compute the sum of each separate element in an array. [1,2,3,4]","completion":"def sum_of_elements(arr): total = 0 for num in arr: total += num return total"},{"prompt":"Print out all even elements in an array. [1,2,3,4,5]","completion":"def print_even(arr): even = [] for num in arr: if num % 2 == 0: even.append(num) return even"},{"prompt":"Determine the number of ints in a list. [2, 5, 7, 3, 8]","completion":"def count_int(arr): count = 0 for n in arr: if type(n) == int: count +=1 return count"},{"prompt":"Write a function to print an array without duplicate elements. [4,3,6,5,4,7]","completion":"def remove_duplicates(arr): seen = set() for x in arr: if x not in seen: seen.add(x) print(x)"},{"prompt":"Determine if all the elements in a list are unique. [3,4,5,5,6]","completion":"def has_unique_elements(arr): unique_elements = set(arr) if len(unique_elements) == len(arr): return True return False"},{"prompt":"Create a function to detect if a given string contains all letters of the English alphabet.","completion":"def has_all_alphabet(string): letters = \\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\\" return set(letters).issubset(string.upper())"},{"prompt":"Create a JavaScript function that takes two strings as parameters and checks if the first one contains the second one. \\"this string has many letters\\", \\"many","completion":"function containsSubstring(str1, str2) { if (str1.indexOf(str2) !== -1) { return true; } return false; }"},{"prompt":"Write a SQL query to select all records from a table named 'customers' where the city is either 'London' or 'Paris'.","completion":"SELECT * FROM customers WHERE city IN ('London', 'Paris');"},{"prompt":"Create an HTML button that opens an alert message with the words \\"Welcome\\".","completion":"<button onclick=\\"alert('Welcome')\\">Click Me</button>"},{"prompt":"What is a web server?","completion":"A web server is a computer system that hosts web applications and responds to requests from users over the internet. The web server processes the requests and sends a response back to the users, usually in the form of an HTML web page."},{"prompt":"Write a JavaScript code to read the content of a given URL.","completion":"function readURL(url) { var xhttp = new XMLHttpRequest(); xhttp.onreadystatechange = function() { if (this.readyState == 4 && this.status == 200) { document.getElementById(\\"urlcontent\\").innerHTML = this.responseText; } }; xhttp.open(\\"GET\\", url, true); xhttp.send(); }"},{"prompt":"Write an SQL query to select all the records from a table named 'products' where the price is between 5 and 10.","completion":"SELECT * FROM products WHERE price BETWEEN 5 AND 10;"},{"prompt":"Write a function to tokenize a string into its characters. sentence = \\"Hello world!","completion":"def tokenize(sentence): tokens = [] # loop through the characters in the sentence for letter in sentence: # append each character to the tokens list tokens.append(letter) return tokens"},{"prompt":"Write a SQL query to group a table of cities by country. Table: cities +------------+--------------+ | city_name | country_name | +------------+--------------+ | London | United Kingdom | | Los Angeles | United States | | Venice | Italy | +------------+--------------+","completion":"SELECT country_name, COUNT(*) AS Num_cities FROM cities GROUP BY country_name;"},{"prompt":"Train a logistic regression model using Scikit-Learn. import numpy as np from sklearn.linear_model import LogisticRegression X = np.array([[-1, -1], [-2, -1], [1, 1], [2, 1]]) Y = np.array([0, 0, 1, 1])","completion":"model = LogisticRegression(solver='lbfgs') model.fit(X, Y)"},{"prompt":"For the following array of integers, find the number of instances of 6: [1,2,3,4,5,6,7,8,9,10,6,6]","completion":"count = 0 for i in [1,2,3,4,5,6,7,8,9,10,6,6]: if i == 6: count += 1 print (\\"Number of instances of 6:\\",count)"},{"prompt":"Create a list comprehension to extract unique characters from a string. string = \\"Hello World","completion":"unique_characters = [char for char in string if string.count(char) == 1] print(unique_characters)"},{"prompt":"Create a dictionary in Python to store the frequency of characters in a string. string = \\"Hello World!","completion":"# Empty dictionary frequencies = {} # Iterate over each character in the string for char in string: # Check if the character exists as a key in the dictionary if char in frequencies: # Increase the count by 1 if it exists frequencies[char] += 1 else: # Set the count to 1 for a new character frequencies[char] = 1"},{"prompt":"Create a NumPy array to store the values of a given function. import numpy as np def f(x): return x**2","completion":"xs = np.linspace(0,10,100) ys = np.array([f(x) for x in xs])"},{"prompt":"Write a JavaScript program to sort an array of strings according to the length of each string. words = ['Quick', 'Brown', 'Fox', 'Jumps']","completion":"words.sort((a,b) => a.length - b.length); console.log(words);"},{"prompt":"dentify and correct the error in this C++ code. #include<iostream> using namespace std; void main() { int a=2; if(a=1) cout<<\\"1\\"; else cout<<\\"2\\"; }","completion":"#include<iostream> using namespace std; void main() { int a=2; if(a==1) cout<<\\"1\\"; else cout<<\\"2\\"; }"},{"prompt":"Rewrite the Java code to a more efficient version. public class Sum { public static void main(String[] args) { int sum = 0; for (int i = 0; i < 10; i++) { sum = sum + i; } System.out.println(sum); } }","completion":"public class Sum { public static void main(String[] args) { int sum = 0; int n = 10; sum = (n * (n + 1)) / 2; System.out.println(sum); } }"},{"prompt":"Write a CSS style for a h3 heading to always have a purple background and white text color.","completion":"h3 { background-color: purple; color: white; }"},{"prompt":"Generate a correct SQL query to select the three highest-priced products in a product table.","completion":"SELECT * FROM product ORDER BY price DESC LIMIT 3;"},{"prompt":"Create a HTML form to collect the user's email address.","completion":"<form> <label for=\\"email\\">Email:</label><br> <input type=\\"email\\" id=\\"email\\" name=\\"email\\"><br> <input type=\\"submit\\" value=\\"Submit\\"> </form>"},{"prompt":"Develop a logistic regression model using Python to predict the outcome of a binary classification dataset.","completion":"import pandas as pd from sklearn.model_selection import train_test_split from sklearn.linear_model import LogisticRegression # Load the dataset df = pd.read_csv(\\"data.csv\\") # Split the data into features (X) and targets (y) X= df.drop(\\"target\\",axis=1) y = df[\\"target\\"] # Split the data into training and test sets X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.2) # Initialize and fit the logistic regression model clf = LogisticRegression().fit(X_train, y_train) # Make predictions on the test set predictions = clf.predict(X_test)"},{"prompt":"Build a graphical user interface using Java.","completion":"import java.awt.*; import javax.swing.*; public class GUIExample { public static void main(String[] args) { JFrame frame = new JFrame(\\"GUI Example\\"); frame.setSize(400, 600); JPanel panel = new JPanel(); JLabel label = new JLabel(\\"This is a simple GUI.\\"); JButton button = new JButton(\\"Click Me!\\"); panel.add(label); panel.add(button); frame.add(panel); frame.setVisible(true); } }"},{"prompt":"Write a Flask web application to display a message.","completion":"from flask import Flask app = Flask(__name__) @app.route('/') def hello_world(): return 'Hello, World!' if __name__ == '__main__': app.run()"},{"prompt":"Given an array of numbers, write a Python function to remove even numbers from the array. [1, 2, 3, 4, 5, 6, 7, 8, 9]","completion":"def remove_even_numbers(arr): return [x for x in arr if x % 2 != 0]"},{"prompt":"Write a JavaScript statement to create a new object, Person, with the fields \\"name\\", \\"age\\" and \\"city\\".","completion":"let Person = { name: '', age: 0, city: '' };"},{"prompt":"Create a basic HTML structure to show a blog post with the title, \\"My First Blog Post.","completion":"<!DOCTYPE html> <html lang=\\"en\\"> <head> <meta charset=\\"UTF-8\\"> <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1.0\\"> <title>My First Blog Post</title> </head> <body> <h1>My First Blog Post</h1> <p>Insert blog post content here.</p> </body> </html>"},{"prompt":"Write a Python function to create an empty dictionary.","completion":"def create_empty_dict(): return {}"},{"prompt":"Write a SQL query to find all customers living in the city of Boston.","completion":"SELECT * FROM Customers WHERE City = 'Boston';"},{"prompt":"Write a CSS selector to select the second paragraph of a document.","completion":"p:nth-of-type(2) { // CSS code }"},{"prompt":"Write a SQL statement to create a table called \\"Employees\\" with three columns for ID number, name, and salary.","completion":"CREATE TABLE Employees ( id INT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, salary DECIMAL(10,2) NOT NULL, PRIMARY KEY (id) );"},{"prompt":"Create a basic HTML structure with a table to display a list of cities and their population.","completion":"<!DOCTYPE html> <html lang=\\"en\\"> <head> <meta charset=\\"UTF-8\\"> <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1.0\\"> <title>Cities and Population</title> </head> <body> <h1>Cities and Population</h1> <table> <thead> <tr> <th>City</th> <th>Population</th> </tr> </thead> <tbody> <tr> <td>Insert City Name</td> <td>Insert Population</td> </tr> </tbody> </table> </body> </html>"},{"prompt":"Create a dictionary that contains the countries and their total populations according to the given list of country-population pairs [('India', 1237696000),('Nigeria', 142429000),('China', 1139517000)]","completion":"population_dict = { 'India': 1237696000, 'Nigeria': 142429000, 'China': 1139517000 }"},{"prompt":"Generate a regular expression which matches the following strings: “Run”, “Rune”, “Runner”","completion":"Regex: r'Run(e?)r?'"},{"prompt":"Write a function that takes a 2D array as input and returns the transposed array [[1, 2], [3, 4], [5, 6]]","completion":"def transpose(arr): new_arr = [] for i in range(len(arr[0])): new_arr.append([row[i] for row in arr]) return new_arr"},{"prompt":"Write an algorithm that sorts the following list of integers in ascending order [15, 5, 8, 0, 42]","completion":"def sort_list(lst): for i in range(len(lst)): for j in range(i+1, len(lst)): if lst[i] > lst[j]: lst[i], lst[j] = lst[j], lst[i] return lst"},{"prompt":"Write a function that checks whether an array contains an element [1, 5, 10]","completion":"def exists(arr, target): for i in arr: if i == target: return True return False"},{"prompt":"Create a class for a BankAccount with the following details:","completion":"class BankAccount { constructor(accountNumber, balance) { this.accountNumber = accountNumber; this.balance = balance; } deposit(amount) { this.balance += amount; } withdraw(amount) { this.balance -= amount; } getBalance() { return this.balance; } }"},{"prompt":"Write a function to delete an element from a given array [1, 2, 3, 4], 3","completion":"def delete_element(arr, x): new_arr = [] for i in arr: if i != x: new_arr.append(i) return new_arr"},{"prompt":"Create an SQL query to select the names and salaries of employees who have salaries greater than 50000.","completion":"SELECT name, salary FROM employees WHERE salary > 50000;"},{"prompt":"Create an HTML form with 3 input boxes to get user name, email, and phone number.","completion":"<form action=\\"\\" method=\\"post\\"> <div> <label>Name:</label> <input type=\\"text\\" name=\\"name\\" /> </div> <div> <label>Email:</label> <input type=\\"email\\" name=\\"email\\" /> </div> <div> <label>Phone Number:</label> <input type=\\"text\\" name=\\"phone\\" /> </div> <div> <button type=\\"submit\\">Submit</button> </div> </form>"},{"prompt":"You need to implement a function that finds the longest string inside an array. array = [\\"cherry\\", \\"apple\\", \\"applepie\\", \\"strawberry\\", \\"raspberry\\"]","completion":"def find_longest_str(arr): longest_str = \\"\\" for s in arr: if len(s) > len(longest_str): longest_str = s return longest_str result = find_longest_str(array) print(result) # prints \\"applepie\\""},{"prompt":"Create a web page that shows your favorite color, name, and age.","completion":"<html> <head> <title>Favorite Things</title> </head> <body> <h1>My Favorite Things</h1> <ul> <li>My favorite color is blue.</li> <li>My name is John.</li> <li>I am 24 years old.</li> </ul> </body> </html>"},{"prompt":"Create a simple calculator that takes two float numbers as input and outputs the sum of the two numbers.","completion":"def calculator(num1, num2): return num1 + num2 print(calculator(2.0, 3.0)) # Prints 5.0"},{"prompt":"Ask the user to input a positive integer and find the sum of all positive integers up to that number.","completion":"n = int(input(\\"Please enter a positive integer: \\")) # Initialize sum sum = 0 # Find sum of all numbers for i in range(1,n+1): sum = sum + i # Print the sum print(sum)"},{"prompt":"Write a script to filter out strings with more than five characters from a list of strings. arr = [\\"code\\",\\"programming\\",\\"language\\",\\"Python\\",\\"Loops\\",\\"Conditions\\"]","completion":"def filter_strings(arr): filtered_arr = [s for s in arr if len(s) <= 5] return filtered_arr print(filter_strings(arr)) # Prints [\\"code\\", \\"Loops\\"]"},{"prompt":"Write a simple formatter to wrap the text at a given number of characters.","completion":"def wrap_text(text, columns): wrapped_text = \\"\\" for i in range(0, len(text), columns): wrapped_text += text[i:i+columns] + \\"n\\" return wrapped_text text = \\"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.\\" print(wrap_text(text, 30)) # Prints # It is a long established # fact that a reader will # be distracted by the rea # dable content of a page # when looking at its layo # ut."},{"prompt":"Create a function to add two numbers without using the + operator.","completion":"def add_numbers(a, b): while b != 0: carry = a & b a = a ^ b b = carry << 1 return a print(add_numbers(3,4)) #Prints 7"},{"prompt":"Suggest a method in Python to remove any whitespaces from a given string.","completion":"The easiest way to remove whitespaces from a string in Python is to use the replace() method. This method takes two arguments, the string to be replaced and the string to replace it with. To remove all existing whitespace, use the string ' ' as the replace argument. For example, given the string \\"This is my string\\", the following code would remove all whitespace from the string: string = \\"This is my string\\" string = string.replace(' ', '')"},{"prompt":"Develop a program to determine if a given year is a leap year. year = 2024","completion":"# Determining if a year is a leap year # Assigning the current year year = 2024 # Checking if the year is a leap year if (year % 4 == 0 and year % 100 != 0) or (year % 400 == 0): print(year, \\"is a leap year\\") else: print(year, \\"is not a leap year\\")"},{"prompt":"Explain the basic syntax for a for loop in JavaScript.","completion":"The basic syntax for a for loop in JavaScript is as follows: for (initialization; condition; iteration). The initialization statement is run once at the beginning of the loop, and typically initializes one or more loop variables, which are used to track the progress of the loop. The condition statement is used to check the result of the initialization statement; if the result is true, the loop will execute. The iteration statement is run each time the loop runs; it modifies the loop variable(s) so that the loop can terminate when the specified condition is met. Once the loop has finished executing, program execution continues after the for loop statement."},{"prompt":"Develop an algorithm for a breadth-first search.","completion":"Breadth-first search (BFS) is an algorithm used to traverse a graph or tree data structure. The algorithm works by starting at the root node and exploring each of its adjacent nodes before exploring any of its children. The adjacent nodes are explored in the order with which they were discovered in the graph or tree. The algorithm moves from node to node by visiting the nearest neighbors first, as opposed to a depth-first search, which moves from node to node by exploring the furthest nodes first. The basic algorithm for a breadth-first search is as follows: 1. Create an empty queue 2. Enqueue the root 3. While the queue is not empty: a. Dequeue the next node b. If it is the desired node, return success c. Else, add all of its children to the queue 4. Return failure"},{"prompt":"w can we remove duplicates from an array in JavaScript?","completion":"One of the ways to remove duplicates from an array in JavaScript is to use the Set object. The Set object stores only unique values, so by converting the array to a Set and then back to an array, any duplicates will have been removed. We can use the built-in Array.from() method to convert the Set back to an array. For example, given the array [1, 2, 3, 2], the following code will create a new array with all duplicates removed: arr = [1, 2, 3, 2] arr = Array.from(new Set(arr)) // [1, 2, 3]"},{"prompt":"Suggest a method in Java to compare two strings.","completion":"The easiest way to compare two strings in Java is to use the built-in String class's equals() method. This method compares all characters in the strings, and returns true if the strings are equal or false otherwise. For example, given the strings \\"Hello\\" and \\"Goodbye\\", the following code would evaluate to false: String s1 = \\"Hello\\"; String s2 = \\"Goodbye\\"; boolean equal = s1.equals(s2); // false"},{"prompt":"Create a function that returns the number of prime numbers between the numbers provided in the input. start_num = 10 end_num = 30","completion":"def count_primes(start_num, end_num): primes_count = 0 for num in range(start_num, end_num + 1): if num > 1: for i in range(2, num): if (num % i) == 0: break else: primes_count += 1 return primes_count"},{"prompt":"Print out the elements of the list in reverse order without using the reverse() method. list_of_words = [\\"Hello\\", \\"World\\", \\"How\\", \\"Are\\", \\"You\\"]","completion":"for word in list_of_words[::-1]: print(word)"},{"prompt":"Write a script to sort an array of numbers from largest to smallest using quick sort.","completion":"def partition(array, begin, end): pivot = begin for i in range(begin+1, end+1): if array[i] <= array[begin]: pivot += 1 array[i], array[pivot] = array[pivot], array[i] array[pivot], array[begin] = array[begin], array[pivot] return pivot def quick_sort(array, begin=0, end=None): if end is None: end = len(array) - 1 def _quick_sort(array, begin, end): if begin >= end: return pivot = partition(array, begin, end) _quick_sort(array, begin, pivot-1) _quick_sort(array, pivot+1, end) return _quick_sort(array, begin, end)"},{"prompt":"Create a function to create a simple calculator for addition, subtraction, multiplication and division.","completion":"def simple_calculator(action, a, b): if action == \\"add\\": return a + b elif action == \\"subtract\\": return a - b elif action == \\"multiply\\": return a * b elif action == \\"divide\\": return a / b else: return 0"},{"prompt":"Using the provided text, remove all punctuation and store the resulting output in a new variable. text = \\"This is a text string with punctuation!","completion":"import re new_text = re.sub('[^ws]','', text)"},{"prompt":"Print out the names of even numbered elements from the given list. list_of_names = [\\"John\\", \\"Jacob\\", \\"Michael\\", \\"Peter\\", \\"Paul\\"]","completion":"for i in range(0, len(list_of_names), 2): print(list_of_names[i])"},{"prompt":"Create a function that returns the longest word in a sentence. sentence = \\"This is a sentence with lots of words.","completion":"def get_longest_word(sentence): words = sentence.split() longest_word = \\"\\" for word in words: if len(word) > len(longest_word): longest_word = word return longest_word"},{"prompt":"Create a function that recursively flattens an array of arbitrarily nested arrays. array = [[1, [2, [3, [[4, 5], 6]]]], 7]","completion":"def flatten_list(l): for el in l: if isinstance(el, list): yield from flatten_list(el) else: yield el"},{"prompt":"Edit the code below so that the condition outcome is true. if 3 > 5: outcome = True","completion":"if 5 > 3: outcome = True"},{"prompt":"Check if two strings are an anagram of each other. string1 = \\"elbon\\" string2 = \\"noble","completion":"def is_anagram(string1, string2): # Make sure strings are the same length if len(string1) != len(string2): return False # Create dictionary of letter frequency for each string char_freq1 = {} char_freq2 = {} # Iterate through each character in the strings for char in string1: char_freq1[char] = char_freq1.get(char, 0) + 1 for char in string2: char_freq2[char] = char_freq2.get(char, 0) + 1 # Compare the two dictionaries if char_freq1 == char_freq2: return True else: return False if __name__ == '__main__': string1 = \\"elbon\\" string2 = \\"noble\\" print(is_anagram(string1, string2))"},{"prompt":"Compress the following string using a Huffman algorithm. \\"aaaaaaaaabccddddee","completion":"import heapq def huffman_encode(string): freq = {} for c in string: freq[c] = freq.get(c, 0) + 1 heap = [[weight, [char, \\"\\"]] for char, weight in freq.items()] heapq.heapify(heap) while len(heap) > 1: low = heapq.heappop(heap) high = heapq.heappop(heap) for pair in low[1:]: pair[1] = '0' + pair[1] for pair in high[1:]: pair[1] = '1' + pair[1] heapq.heappush(heap, [low[0] + high[0]] + low[1:] + high[1:]) encoded = \\"\\" codes = dict() for char, code in heap[0][1:]: codes[char] = code encoded += code return codes, encoded if __name__ == '__main__': string = \\"aaaaaaaaabccddddee\\" codes, encoded = huffman_encode(string) print(encoded)"},{"prompt":"Find the maximum product of three numbers in an array. [1, -5, -6, 10, 20, 15]","completion":"def max_product_of_three(arr): \\"\\"\\"Find the maximum product of three numbers in an array.\\"\\"\\" # Sort the array in descending order arr.sort(reverse=True) # Return max product of the first three numbers return arr[0] * arr[1] * arr[2] if __name__ == '__main__': print(max_product_of_three([1, -5, -6, 10, 20, 15]))"},{"prompt":"Construct a function to check whether a string is a valid IPv4 address or not.","completion":"def is_valid_ipv4(string): # Split the string at the '.'s parts = string.split(\\".\\") # Check if the length of the parts is valid if len(parts) != 4: return False # Iterate over each part and check if it is a valid number for part in parts: if not part.isdigit() or int(part) > 255 or int(part) < 0: return False return True if __name__ == '__main__': string = \\"192.168.1.1\\" print(is_valid_ipv4(string))"},{"prompt":"Print the sum of the first ten natural numbers.","completion":"def sum_of_first_ten(): \\"\\"\\"Print the sum of the first ten natural numbers.\\"\\"\\" total = 0 for i in range(1, 11): total += i return total if __name__ == '__main__': print(sum_of_first_ten())"},{"prompt":"Given an array with n numbers, write a function to find if there exists three elements in the array whose sum is equal to a given number. array = [5, 3, 1, 8], number = 14","completion":"def sum_three_elements(array, number): \\"\\"\\"Given an array with n numbers, find if there exists three elements in the array whose sum is equal to a given number.\\"\\"\\" array.sort() for i in range(len(array) - 2): left = i + 1 right = len(array) - 1 while left < right: temp = array[i] + array[left] + array[right] if temp == number: return True elif temp < number: left += 1 else: right -= 1 return False if __name__ == '__main__': a = [5, 3, 1, 8] number = 14 print(sum_three_elements(a, number))"},{"prompt":"Compute the bulk density of a polyhedron using the formula frac{mass}{volume}. mass = 3.5 g, volume = 2.6 cm^3","completion":"def compute_bulk_density(mass, volume): \\"\\"\\"Compute the bulk density of a polyhedron using the formula frac{mass}{volume}.\\"\\"\\" return mass / volume if __name__ == '__main__': mass = 3.5 # g volume = 2.6 # cm^3 print(compute_bulk_density(mass, volume))"},{"prompt":"Write a function that converts a number to its corresponding month name. 4","completion":"def numToMonth(num): months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'] return months[num-1] numToMonth(4) # output: April"},{"prompt":"Write a function to select the second max value in an array. a = [1, 3, 6, 8, 7, 0]","completion":"def selectSecondMax(arr): max_1 = 0 max_2 = 0 for value in arr: if (value > max_1): max_2 = max_1 max_1 = value elif (value > max_2 and value != max_1): max_2 = value return max_2 a = [1, 3, 6, 8, 7, 0] print(selectSecondMax(a)) # output: 6"},{"prompt":"Write a function that computes the factorial of a positive integer. 8","completion":"def factorial(n): if n == 0: return 1 else: return n * factorial(n-1) print(factorial(8)) # output: 40320"},{"prompt":"Convert a binary string to a decimal integer. binString=\\"11101","completion":"def binaryToDecimal(binString): num = 0 for i in range(len(binString)): num += int(binString[i]) * pow(2, len(binString)-1-i) return num binString=\\"11101\\" binaryToDecimal(binString) # output: 29"},{"prompt":"Compress a given string to shorter characters by replacing substrings of length 3. string = \\"aaabbcc","completion":"def compress(string): compressed = \\"\\" count = 1 for i in range(len(string)): if (i+1 < len(string) and string[i] == string[i+1]): count += 1 else: if count > 3: compressed += string[i] + str(count) else: compressed += string[i]*count count = 1 return compressed string = \\"aaabbcc\\" print(compress(string)) # output: a3b2c2"},{"prompt":"Write a function to retrieve and reverse the order of all words in a sentence. sentence = \\"This is a sentence.","completion":"def reverseSentence(sentence): words = sentence.split() rev_words = [word[::-1] for word in words] return \\" \\".join(rev_words) sentence = \\"This is a sentence.\\" print(reverseSentence(sentence)) # output: sihT si a ecnetnes."},{"prompt":"Perform insertion sort on a given array. arr = [5, 1, 6, 2, 4, 3]","completion":"def insertionSort(arr): for i in range(1, len(arr)): key = arr[i] j = i-1 while j >= 0 and key < arr[j]: arr[j+1] = arr[j] j -= 1 arr[j+1] = key return arr arr = [5, 1, 6, 2, 4, 3] print(insertionSort(arr)) # output: [1, 2, 3, 4, 5, 6]"},{"prompt":"Create a function to convert a string of words into a dictionary with the words as keys. string = \\"Hello World Bye World","completion":"def string_to_dict(string): data = string.split(' ') answer = dict() for element in data: if element in answer: answer[element] += 1 else: answer[element] = 1 return answer"},{"prompt":"You are given a string. Remove duplicated characters from the string and return the output. string = \\"Mississipp","completion":"def remove_duplicates(string): new_string = [] for i in string: if i not in new_string: new_string.append(i) return ''.join(new_string)"},{"prompt":"You must refactor a code to reduce the complexity and improve its readability. def is_even(num): if num == 0: return True else: return is_odd(num - 1) def is_odd(num): if num == 0: return False else: return is_even(num - 1)","completion":"def is_even(num): return num % 2 == 0 def is_odd(num): return num % 2 != 0"},{"prompt":"You need to write a code to solve this logic puzzle. Five people meet at a party. Each of them has a different favorite type of music. The host is hip-hop fan. Beth loves Jazz. Ethan's favorite is rock. Fiona prefers country. The last person, Gia, listens only to R&B. Given these facts, use the known information to determine: Who listens to R&B?","completion":"Gia listens to R&B."},{"prompt":"Create a SQL query to select customers who have spent more than 1000 in the last month.","completion":"SELECT customerId FROM orders WHERE orderDate > DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND total > 1000"},{"prompt":"Create a function to remove all duplicated words from an input sentence. sentence = \\"Hello World Bye World","completion":"def remove_duplicates_from_sentence(sentence): split_words = sentence.split(' ') no_duplicates = list(set(split_words)) return ' '.join(no_duplicates)"},{"prompt":"Rewrite this piece of HTML using Semantic Elements. <div id=\\"header\\"> <h1>Welcome</h1> </div>","completion":"<header> <h1>Welcome</h1> </header>"},{"prompt":"You mustreverse a given array of numbers in-place. arr = [1, 2, 3, 4, 5]","completion":"def reverse_array(arr): low = 0 high = len(arr)-1 while low<high: arr[low], arr[high] = arr[high], arr[low] low += 1 high -= 1 return arr"},{"prompt":"Use JavaScript to find the area of a circle with a radius of 7.","completion":"const r = 7; const area = Math.PI * r ^ 2; console.log(area); // 153.93804002589985"},{"prompt":"w do you extract all the unique words from a string in Python?","completion":"def get_unique_words(input_string): words = input_string.split() unique_words = set(words) return list(unique_words) # Retruns a list of all unique words present in the string."},{"prompt":"Create a function that deletes all non-alphanumeric characters from an input string.","completion":"def clean_string(input_string): alphaNumericString = [ch for ch in input_string if ch.isalnum()] return ''.join(alphaNumericString)"},{"prompt":"What is a lambda expression in Python?","completion":"A lambda expression is an anonymous function in Python, which can take any number of arguments and return any type of expression or value. Lambda functions are mainly used for functional programming and can be used wherever normal functions can be used, such as in the filter, map, and reduce functions."},{"prompt":"w do you implement depth-first search in Python?","completion":"def depth_first_search(graph, start): explored = [] # List of already explored nodes stack = [start] # Stack of nodes to explore while stack: node = stack.pop() # Pop the next node from stack if node not in explored: explored.append(node) # Add the node to explored neighbors = graph[node] # List of neighbors of node for neighbor in neighbors: stack.append(neighbor) # Add neighbors to stack return explored"},{"prompt":"Write a sliding window algorithm in JavaScript to collect all the subarrays with size k from an array of size n. let input =[1, 2, 3, 4, 5, 6, 7, 8]; let K=3","completion":"function slideWindow(input, k){ let subArrays=[]; let start=0, end=k-1; while(end<input.length){ // Slice an array of size k from input let subArr=input.slice(start, end+1); subArrays.push(subArr); start++; end++; } return subArrays; } let res = slideWindow(input, k); console.log(res); // Output: [ [ 1, 2, 3 ], [ 2, 3, 4 ], [ 3, 4, 5 ], [ 4, 5, 6 ], [ 5, 6, 7 ], [ 6, 7, 8 ] ]"},{"prompt":"There is an array of integer numbers. You need to replace all the odd numbers with 0. arr = [1, 2, 3, 4, 5, 6, 7, 8, 9]","completion":"def replace_odds_with_zero(arr): for i in range(len(arr)): if arr[i] % 2 == 1: arr[i] = 0 return arr"},{"prompt":"Write a line of code in C# to find the index of an element in a given array. array = {1, 2, 3, 4, 5}; element = 3","completion":"int index = Array.IndexOf(array, element);"},{"prompt":"You need to parse a JSON string and access a value from it. jsonString = { \\"name\\": \\"John Smith\\", \\"age\\": 25 }","completion":"import json jsonObject = json.loads(jsonString) name = jsonObject[\\"name\\"]"},{"prompt":"You need to find the total length of all words in a given array of strings. arr = [\\"abc\\", \\"def\\", \\"ghi\\"]","completion":"total_length = sum([len(word) for word in arr])"},{"prompt":"Given a list of string objects, write an SQL query to concatenate all the strings into a single string ['Hello', 'World', '!']","completion":"SELECT CONCAT('Hello', 'World', '!') AS concat_string;"},{"prompt":"Write a Python program to create a dictionary with values being doubled for every key. {'a':4, 'b':7}","completion":"my_dict = {'a': 4, 'b': 7} double_dict = {k : 2*v for (k,v) in my_dict.items()} print(double_dict)"},{"prompt":"Write an AngularJS controller to set the \\"page\\" variable to be the same as the page parameter passed in the URL.","completion":"app.controller('pageCtrl', function (scope, location) { scope.page = location.search().page; });"},{"prompt":"Write an HTML form with a select drop-down that displays a range of numbers from 1 to 10.","completion":"<select> <option value=\\"1\\">1</option> <option value=\\"2\\">2</option> <option value=\\"3\\">3</option> <option value=\\"4\\">4</option> <option value=\\"5\\">5</option> <option value=\\"6\\">6</option> <option value=\\"7\\">7</option> <option value=\\"8\\">8</option> <option value=\\"9\\">9</option> <option value=\\"10\\">10</option> </select>"},{"prompt":"Write a Java program to find the largest number among three numbers entered by the user.","completion":"import java.util.Scanner; public class Main { public static void main(String[] args) { Scanner input = new Scanner(System.in); System.out.println(\\"Enter three numbers:\\"); int n1 = input.nextInt(); int n2 = input.nextInt(); int n3 = input.nextInt(); int result = Math.max(n1, Math.max(n2, n3)); System.out.println(\\"Largest number: \\" + result); } }"},{"prompt":"Write a C++ program to apply a Caesar cipher to a given string. ROT13","completion":"#include <iostream> #include <string> using namespace std; string rot13(string s) { for (int i=0; i<s.length(); i++) { // If uppercase letter if (s[i] >= 'A' && s[i] <= 'Z') s[i] = (s[i] - 'A' + 13) % 26 + 'A'; // if lowercase letter else if (s[i] >= 'a' && s[i] <= 'z') s[i] = (s[i] - 'a' + 13) % 26 + 'a'; } return s; } int main() { string s = \\"ROT13\\"; string cipher = rot13(s); cout << cipher; return 0; }"},{"prompt":"Given an array of numbers, write a prototype JavaScript function to find the average value of all numbers in the array [6, 5, 8, 10]","completion":"function findAverage(numbers) { let sum = 0; for (number of numbers) { sum += number; } return sum / numbers.length; }"},{"prompt":"Write a JavaScript function to modify given list and convert all elements to lowercase. ['Hello', 'WoRld', '!']","completion":"function toLowerCase(list) { return list.map(el => el.toLowerCase()); } toLowerCase(['Hello', 'WoRld', '!']); // => [\\"hello\\", \\"world\\", \\"!\\"]"},{"prompt":"Write a CSS page to center align a given paragraph element.","completion":"p { text-align: center; }"},{"prompt":"Sort the given array of numbers from least to greatest. [11, 5, 9, 3, 6]","completion":"[3, 5, 6, 9, 11]"},{"prompt":"Create a HTML page that displays the given text in a headline. This is a headline!","completion":"<!DOCTYPE html> <html> <head> <title>Headline</title> </head> <body> <h1>This is a headline!</h1> </body> </html>"},{"prompt":"Write a SQL query to select all employees who have salary higher than 50,000.","completion":"SELECT * FROM Employees WHERE salary>50000;"},{"prompt":"Optimize the following code by using the C++ vector container. int a[20]; for (int i=0;i<20;i++){ a[i]=i; }","completion":"#include <vector> #include <iostream> int main() { std::vector<int> a(20); for (int i = 0; i < a.size(); i++) { a[i] = i; } return 0; }"},{"prompt":"Parse the given HTML string into a readable JSON object. <html> <body> <h1>Hello World!</h1> </body> </html>","completion":"{ \\"type\\": \\"html\\", \\"h1\\": \\"Hello World!\\" }"},{"prompt":"Create a bash script that prints a given string ten times. Hello","completion":"#!/bin/bash for i in {1..10} do echo \\"Hello\\" done"},{"prompt":"Sum the numbers from 1 to 10 using a for loop in Python.","completion":"total = 0 for i in range(1, 11): total += i print(total)"},{"prompt":"Print the following string in HTML. \\"Welcome to my website!","completion":"<html> <head> <title>Welcome to my website!</title> </head> <body>Welcome to my website!</body> </html>"},{"prompt":"Write a function in Python that accepts a list of numbers and returns a list of the squares of the numbers.","completion":"def power_list(numbers): return [num**2 for num in numbers]"},{"prompt":"Write an SQL query to select all records from a table named \\"users\\" where the email address field contains \\"@gmail.com\\".","completion":"SELECT * FROM users WHERE email LIKE '%@gmail.com';"},{"prompt":"Calculate the number of minutes in 3 hours using Python.","completion":"minutes = 3 * 60 print(minutes)"},{"prompt":"Explain serverside rendering in web development.","completion":"Server-side rendering is a process of generating HTML for a website or web application on the server side before it is sent to the client side. It allows for rendering pages on the server instead of the client, which provides faster loading times and reduces the load on the client's browser, computer, or device. It also provides improved search engine optimization, as the search engine can now crawl the content from the server and generate better results."},{"prompt":"Find the area of a rectangle given its width and height. Width: 3 Height: 8","completion":"Area of the rectangle is 24."},{"prompt":"Using lambda expressions, write a function to convert a given temperature value in celsius to fahrenheit.","completion":"convert_c_to_F = lambda x: x*9/5 + 32"},{"prompt":"Create a program that searches a given string for a word and prints out its position. String: I am a programmer Word: programmer","completion":"The word 'programmer' is at position 9 in the given string."},{"prompt":"Divide a given list of numbers by a given number. List: [15, 20, 25, 30] Number: 5","completion":"[3, 4, 5, 6]"},{"prompt":"ert a given value in the middle of a linked list. Linked list: [1, 2, 3] Value: 4","completion":"[1, 2, 4, 3]"},{"prompt":"Write a code to search for an element in a given array of numbers. Array: [30, 2, 10, 15, 33] Element: 10","completion":"The element 10 is found at index 2 in the given array."},{"prompt":"Create a function that sorts a given list of strings alphabetically.","completion":"def sort_list(strings): return sorted(strings)"},{"prompt":"Create a list comprehension expression to generate a list of the squares of all even numbers from 1 to 10.","completion":"[x**2 for x in range(1, 11) if x % 2 == 0]"},{"prompt":"Find the product of all values in a given dictionary. Dictionary: {'a': 10, 'b': 20, 'c': 30}","completion":"The product of all values in the given dictionary is 6000."},{"prompt":"Compile the following PHP code and explain the output. <?php a = 5; b = ‘5’; var_dump(a == b); ?>","completion":"bool(true) The output will be \\"bool(true)\\" because the == operator performs type conversion and compare the values of a only. Therefore, the comparison of 5 (integer) with \\"5\\" (string) will result in true."},{"prompt":"Rewrite the following Bash program to print only even numbers between 0 and 100. #!/bin/sh for i in (seq 0 100) do echo i done","completion":"#!/bin/sh # loop from 0 to 100 for i in (seq 0 2 100) do echo i done"},{"prompt":"Create a C++ function to search for a given item in the given array. myArray = [10, 11, 12, 15, 17], x = 12","completion":"#include <iostream> using namespace std; // Function to search an element in the array // arr[] = array to search // x = element to search // n = size of array bool search(int arr[], int n, int x) { int i; for (i = 0; i < n; i++) if (arr[i] == x) return true; return false; } int main() { int arr[] = {10, 11, 12, 15, 17}; int x = 12; int n = sizeof(arr) / sizeof(arr[0]); // Calling the search function if (search(arr, n, x) == true) cout << \\"Element foundn\\"; else cout << \\"Element not foundn\\"; return 0; }"},{"prompt":"Create an assembly language program to find the sum of two numbers.","completion":".MODEL SMALL .STACK 100H .DATA NUM1 DB 12H NUM2 DB 17H RES DB ? .CODE MAIN PROC MOV AX, @DATA MOV DS, AX MOV AL, NUM1 ; Move value of num1 in AL MOV AH, 0 ; Clear AH ADD AL, NUM2 ; Add num2 to AL MOV RES, AL MOV AH, 4CH ; return to operating system INT 21H MAIN ENDP END MAIN"},{"prompt":"Create a PHP program to find the maximum of two numbers without using if...else or a comparison operator.","completion":"<?php // Function to return the maximum of two numbers without using if...else or a comparison operator function maximum(x, y) { // Calculate the sum of two numbers sum = x + y; // Calculate the difference between two numbers diff = x - y; // Set sign of the difference s = diff >> 31 & 0x1; // Return maximum of two numbers return (x * s + y * (1-s)); } // Driver code echo \\"Maximum of 45 and 68 is \\", maximum(45, 68); ?>"},{"prompt":"Using the given data point, train a linear regression model. [4, 7], [2, 5], [3, 6]","completion":"import numpy as np X = np.array([[4,7], [2,5], [3,6]]) y = np.array([7, 5, 6]) from sklearn.linear_model import LinearRegression model = LinearRegression() model.fit(X, y)"},{"prompt":"Generate a string which has \\"Hello\\" plus the length of the input string. \\"H","completion":"\\"Hello3\\""},{"prompt":"Write a routine to print the elements in a linked list.","completion":"class Node: def __init__(self, data): self.data = data self.next = None def printList(head): temp = head while(temp): print (temp.data, end=\\" \\") temp = temp.next"},{"prompt":"Edit the following code so that it prints the sum of all elements of given array arr = [1,5,8,4,2] def sumArray(arr): for i in len(arr): print(arr[i])","completion":"arr = [1,5,8,4,2] def sumArray(arr): total = 0 for i in arr: total += i print(total)"},{"prompt":"Find the closest match in a given string using the Levenshtein edit distance. String: helpful Closest match: healthful","completion":"editDistance(helpful, healthful) = 2"},{"prompt":"Calculate the probability of an event that occurs 3 out of 10 times.","completion":"probability = 0.3"},{"prompt":"Design a physics experiment to measure the acceleration due to gravity,","completion":"A classic experiment to measure the acceleration due to gravity involves timing the free fall of an object. Measure the time it takes for the object to reach the ground from a fixed height, and then calculate the acceleration due to gravity with the formula: a = 2*h/t^2, where h is the height, and t is the measured time."},{"prompt":"mplement a search algorithm to find an element in an array. Array: [2, 4, 6, 8, 10] Element to find: 8","completion":"def search(arr, elem): for i in range(len(arr)): if arr[i] == elem: return i return -1"},{"prompt":"Rewrite the given code in a different language. // code written in C++ #include<iostream> using namespace std; int main(){ cout << \\"Hello World!\\"; return 0; }","completion":"// code written in Java public class Main { public static void main(String[] args) { System.out.println(\\"Hello World!\\"); } }"},{"prompt":"Convert the given numerical value from base 10 to base 2. Number: 50","completion":"base2 = 110010"},{"prompt":"Output the top 5 most common strings in a given list of strings. [\\"apple\\", \\"orange\\", \\"apple\\", \\"banana\\", \\"apple\\", \\"cherry\\", \\"banana\\"]","completion":"from collections import Counter word_freq = Counter([\\"apple\\", \\"orange\\", \\"apple\\", \\"banana\\", \\"apple\\", \\"cherry\\", \\"banana\\"]) words = word_freq.most_common(5) for word, freq in words: print(word, freq) Output: apple 3 banana 2 orange 1 cherry 1"},{"prompt":"Create a copy of an existing array. my_arr = [1, 2, 3]","completion":"import copy my_arr_copy = copy.deepcopy(my_arr)"},{"prompt":"Print the elements of an array in reverse order. my_arr = [1, 2, 3]","completion":"for element in my_arr[::-1]: print(element)"},{"prompt":"Write a function to determine if two rectangles intersect. rect1 = (x1, y1, w1, h1) rect2 = (x2, y2, w2, h2)","completion":"def is_intersect(rect1, rect2): if rect1[0] > rect2[0] + rect2[2] or rect1[0] + rect1[2] < rect2[0] or rect1[1] > rect2[1] + rect2[3] or rect1[1] + rect1[3] < rect2[1]: return False else: return True"},{"prompt":"Calculate the area of a triangle given three side lengths.","completion":"def calculate_area_triangle(a, b, c): s = (a + b + c) / 2 return (s*(s-a)*(s-b)*(s-c)) ** 0.5"},{"prompt":"Create a function to generate random English sentences. <noinputn>","completion":"import random import nltk def generate_sentences(num_sentences): sentences = [] for _ in range(num_sentences): sentence = [] while True: word = random.choice(nltk.corpus.words.words()) sentence.append(word) if word[-1] == '.': break sentences.append(' '.join(sentence)) return sentences"},{"prompt":"Write an algorithm to print out the numbers between 0 and 10 in an increasing order.","completion":"for i in range(0,10): print(i)"},{"prompt":"Create a function that adds two inputs of type integers and returns the sum. a = 8 b = 3","completion":"def add(a, b): return a + b"},{"prompt":"Use Numpy or Pandas to calculate the mean of the following array. array = [3, 4, 8, 10, 14]","completion":"import numpy as np mean = np.mean(array) print(mean)"},{"prompt":"Create a program which takes an integer input n and prints its factorial. n = 5","completion":"def factorial(n): fact = 1 for i in range(1, n+1): fact = fact * i return fact print(factorial(n))"},{"prompt":"Create a range between 10 and 20 with a step of 2.","completion":"range(10,20,2)"},{"prompt":"Aggregate and calculate the mean of the following array by grouping them by the key 'region'. array = [ {'name': 'John', 'region': 'West', 'score': 4}, {'name': 'Jane', 'region': 'West', 'score': 10}, {'name': 'Bob', 'region': 'East', 'score': 5}, {'name': 'Alice', 'region': 'East', 'score': 20} ]","completion":"import pandas as pd df = pd.DataFrame(array) mean_by_region = df.groupby('region')['score'].mean() print(mean_by_region)"},{"prompt":"Using a for loop, print out a countdown from 10 to 1.","completion":"for i in range(10, 0, -1): print(i)"},{"prompt":"Create a function that takes two strings as an input and concatenate the two strings. string1 = \\"Hello\\" string2 = \\"World","completion":"def concat(string1, string2): return string1 + string2"},{"prompt":"Find the latitude and longitude of an input address. address = \\"1600 Amphitheatre Parkway, Mountain View, C","completion":"import geocoder g = geocoder.google(address) print(\\"Latitude: \\" + str(g.latlng[0])) print(\\"Longitude: \\" + str(g.latlng[1]))"},{"prompt":"Calculate the square root of a number without using any built-in function. num = 25","completion":"def calculate_sqrt(num): # Babylonian method x = num y = 1 while x > y: x = (x + y) / 2 y = num / x return x calculate_sqrt(num)"},{"prompt":"Define a function that takes an array of strings and combines the strings into a single string. array = [\\"Hello\\", \\"World\\"]","completion":"def combine_strings(strings_array): output_string = \\"\\" for string in strings_array: output_string += string return output_string combine_strings(array)"},{"prompt":"erpret the following regular expression. d{2}s[A-Z]{3}","completion":"The regular expression d{2}s[A-Z]{3} matches a two-digit number (d{2}) followed by a space (s) followed by three upper-case letters (A-Z]{3}). For example, 12 ABC would be a valid match."},{"prompt":"Calculate the inverse of this matrix. [[1, 0, 0], [2, 1, 0], [4, 4, 4]]","completion":"[[1.0, 0.0, 0.0], [-2.0, 1.0, 0.0], [-3.5, -2.0, 0.25]]"},{"prompt":"Given a list of words, sort them using a bubble sort algorithm. ['apple', 'banana', 'cherry', 'date']","completion":"['apple', 'banana', 'cherry', 'date'] def bubble_sort(words): n = len(words) for i in range(n): # Last i elements are already in place for j in range(0, n-i-1): if words[j] > words[j+1]: words[j], words[j+1] = words[j+1], words[j] return words"},{"prompt":"Using random module, generate a random sequence of 8 numbers from range 1 to 8.","completion":"import random random_sequence = random.sample(range(1, 9), 8) print(random_sequence)"},{"prompt":"Compose a function that takes in two strings and produces an array of characters that are only in the first string. stringA = \\"abcdefg\\" stringB = \\"hijklm","completion":"def to_array(strA, strB): output = [] for char in strA: if char not in strB: output.append(char) return output result = to_array(stringA, stringB) print(result)"},{"prompt":"Create a class for a Counter object that will keep track of a total count, and increase and decrease the count when functions are called.","completion":"class Counter: def __init__(self): self.count = 0 def increase_count(self): self.count += 1 def decrease_count(self): self.count -= 1"},{"prompt":"Create a function that takes two numerical parameters and checks if they are equal.","completion":"def is_equal(num1, num2): if num1 == num2: return True else: return False"},{"prompt":"Generate a random string of length n containing only lowercase letters.","completion":"import random import string def random_string_generator(n): return ''.join(random.choices(string.ascii_lowercase, k=n)) random_string = random_string_generator(n)"},{"prompt":"Create a basic program to demonstrate a conditional statement","completion":"num = int(input(\\"Please enter a number: \\")) if (num % 2) == 0: print(\\"The number is even\\") else: print(\\"The number is odd\\")"},{"prompt":"Develop a program to count the number of items of a given list list = [43, 87, 21, 65]","completion":"list = [43, 87, 21, 65] def count_list_items(list): count = 0 for item in list: count += 1 return count print(count_list_items(list))"},{"prompt":"Generate a program to filter a list of numbers, passing only the greater than a given number list = [12, 24, 36, 45], 36","completion":"list = [12, 24, 36, 45] given_number = 36 def filter_list(list, given_number): filtered_list = [] for number in list: if number > given_number: filtered_list.append(number) return filtered_list print(filter_list(list, given_number))"},{"prompt":"Write a function to extract the substring between two given indices of a string string = \\"Hello World\\", start_index = 2, end_index = 5","completion":"def extract_substring(string, start_index, end_index): return string[start_index:end_index] string = \\"Hello World\\" start_index = 2 end_index = 5 print(extract_substring(string, start_index, end_index))"},{"prompt":"Create an algorithm to compute the sum of all the numbers in a list list = [14, 37, 54, 20]","completion":"list = [14, 37, 54, 20] def compute_sum(list): total_sum = 0 for number in list: total_sum += number return total_sum print(compute_sum(list))"},{"prompt":"Develop a program to find the smallest number in a list list = [25, 67, 12, 8]","completion":"list = [25, 67, 12, 8] def find_smallest(list): smallest = list[0] for number in list: if number < smallest: smallest = number return smallest print(find_smallest(list))"},{"prompt":"Create a JavaScript object called 'person' that contains the following properties: name, age, gender, and address.","completion":"let person = { name: \\"John Doe\\", age: 32, gender: \\"Male\\", address: \\"123 Street Street, City, State\\" };"},{"prompt":"Using the Java programming language, print out the direct children of a given element in an HTML document. <div id=\\"container\\"> <p>This is a paragraph.</p> <ul> <li>This is a list item.</li> <li>This is a second list item.</li> </ul> </div>","completion":"Element containerElement = document.getElementById(\\"container\\"); NodeList children = containerElement.getChildNodes(); for (int i=0; i<children.getLength(); i++) { Node child = children.item(i); System.out.println(child.getNodeName()); }"},{"prompt":"Write a PHP function that takes in a two strings and returns true if the strings are anagrams, and false if they are not.","completion":"function isAnagram(str1, str2) { arr1 = str_split(str1); sort(arr1); arr2 = str_split(str2); sort(arr2); return arr1 == arr2; }"},{"prompt":"Using the SQL language, write a query to sum up the total population of a list of cities. City Population New York 8,398,748 Los Angeles 3,976,322 Chicago 2,705,994","completion":"SELECT SUM(population) FROM ( SELECT population FROM cities WHERE city IN ('New York', 'Los Angeles', 'Chicago') ) total;"},{"prompt":"Write a function in Python to print out the most common words in a given text. This is a test text. It can be used to test a function for the most common words.","completion":"def most_common(text): text_list = text.lower().split() results = {} for word in text_list: if word not in results: results[word] = 1 else: results[word] += 1 sorted_words = sorted(results.items(), key=lambda kv: kv[1], reverse=True) for word, count in sorted_words[:10]: print(word, count)"},{"prompt":"Write a SQL query to get the products with the lowest price in each category.","completion":"SELECT p1.* FROM products p1 INNER JOIN (SELECT category, MIN(price) AS min_price FROM products GROUP BY category) p2 ON p1.category = p2.category AND p1.price = p2.min_price;"},{"prompt":"Write a function in Java to calculate the number of days in a given month and year.","completion":"public static int daysInMonth(int month, int year) { int days[] = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}; if (month == 2 && isLeapYear(year)) return 29; else return days[month - 1]; }"},{"prompt":"Create an HTML page with two input fields, one for the first name, one for the last name, and a button. When the button is clicked, the input fields should be validated and an alert should be presented if the fields are empty.","completion":"<html> <head> <title>Input Validation</title> </head> <body> <form action=\\"\\"> <input type=\\"text\\" name=\\"firstName\\" placeholder=\\"First Name\\"> <input type=\\"text\\" name=\\"lastName\\" placeholder=\\"Last Name\\"> <input type=\\"button\\" value=\\"Submit\\" onclick=\\"validateData()\\"> </form> <script> function validateData() { let firstName = document.querySelector('[name=\\"firstName\\"]').value; let lastName = document.querySelector('[name=\\"lastName\\"]').value; if (firstName.trim() === '' || lastName.trim() === '') { alert('First and last name are required.'); } } <\/script> </body> </html>"},{"prompt":"Using the PHP programming language, write a function to check if a string contains all vowels.","completion":"function hasVowels(string) { vowels = array('a', 'e', 'i', 'o', 'u'); foreach (vowels as vowel) { if (strpos(string, vowel) === false) { return false; } } return true; }"},{"prompt":"Choose a suitable data structure for finding the minimum and maximum element from a collection of numbers.","completion":"Heap is an appropriate data structure for finding the minimum and maximum elements from a collection of numbers as it allows for efficient access to the minimum and maximum values using the min-heap and max-heap properties."},{"prompt":"Write an algorithm to find the common elements in two arrays.","completion":"A possible algorithm to find the common elements in two arrays is as follows: 1. Initialize an empty array to store the common elements. 2. Iterate through the first array and for each element, check if it exists in the second array. 3. If the element does exist in the second array, add it to the common elements array. 4. Return the common elements array."},{"prompt":"Convert the given JavaScript object to an array. { \\"name\\": \\"John\\", \\"age\\": 30, \\"city\\": \\"New York\\" }","completion":"let obj = { \\"name\\": \\"John\\", \\"age\\": 30, \\"city\\": \\"New York\\" }; let arr = Object.entries(obj); // [ ['name','John'], ['age',30], ['city','New York'] ]"},{"prompt":"Find the difference between the objects in the following JavaScript code.","completion":"The difference between the objects in the JavaScript code is that the first object is created using the object literal syntax where key-value pairs are declared directly, while the second object is created using the new keyword which calls a constructor to create an object and assign key-value pairs to it."},{"prompt":"What is the default access modifier for members of a class in Java?","completion":"The default access modifier for members of a class in Java is \`private\`."},{"prompt":"Convert the given string to an all lowercase string. \\"This Is A String","completion":"let s = \\"This Is A String\\"; let lowercaseString = s.toLowerCase(); // returns \\"this is a string\\""},{"prompt":"Create an object to store name and age.","completion":"An object to store name and age can be created as follows: let person = { name: 'John Doe', age: 45 };"},{"prompt":"Create an algorithm for sorting a list of numbers using bubble sort. [3,1,5,4,2]","completion":"def bubble_sort(arr): n = len(arr) for i in range(n): for j in range(0, n-i-1): if arr[j] > arr[j+1] : arr[j], arr[j+1] = arr[j+1], arr[j] return arr bubble_sort([3,1,5,4,2])"},{"prompt":"Compute the factorial of a given number using a recursive algorithm.","completion":"def factorial(n): if n == 0: return 1 else: return n * factorial(n-1)"},{"prompt":"Create an array of 10 integers initialized to zero and print their values.","completion":"import numpy as np arr = np.zeros(10, dtype=int) print(arr)"},{"prompt":"Convert the following array to a numpy array and print it: [2, 4, 6, 8]","completion":"import numpy as np arr = np.array([2,4,6,8]) print(arr)"},{"prompt":"Calculate the average of the numbers 1, 2, and 3. <noinpu","completion":"The average of 1, 2 and 3 is 2.0."},{"prompt":"Reverse the following array using slicing: [1, 2, 3, 4, 5]","completion":"[5, 4, 3, 2, 1] arr = [1, 2, 3, 4, 5] arr = arr[::-1] print(arr)"},{"prompt":"Given an array of strings and a string, write a program to find the first index of the string in the array. arr = [\\"Hello\\", \\"World\\", \\"World\\"] string = \\"World","completion":"def find_index(arr, string): for i in range(len(arr)): if arr[i] == string: return i return -1 index = find_index(arr, string) print(index)"},{"prompt":"Explain what a trisection algorithm is.","completion":"A trisection algorithm is a method used to divide an interval into three equal parts. It involves dividing a closed interval into three parts using only two points that lie in the original interval. It is useful for quickly finding roots of equations as the points at each division become closer and closer to the root. The method can be applied in a number of applications such as numerical analysis and optimization."},{"prompt":"w does a hash table work?","completion":"A hash table is a data structure that stores data items in an associative array where the key is used to quickly search for the data item. It is based on the concept of hashing which converts a key into an address in the array. Each address points to the data item associated with that key. The hash table offers fast lookup times by using hashing functions which are designed to spread data evenly over the table."},{"prompt":"Read the code below and edit it to make the output for the given input. def sum_two(a, b): return a + b Input: a = 5, b = 10","completion":"def sum_two(a, b): return a + b Input: a = 5, b = 10 Output: 15"},{"prompt":"Write a function to convert a given list of strings into a dictionary where the key is a string in the list, and the value is the frequency of the string in the list. [\\"hello\\", \\"hello\\", \\"world\\", \\"welcome\\", \\"hello\\"]","completion":"def list_to_dict(lst): my_dict = {} for i in lst: if i in my_dict: my_dict[i] += 1 else: my_dict[i] = 1 return my_dict list_to_dict([\\"hello\\", \\"hello\\", \\"world\\", \\"welcome\\", \\"hello\\"]) # output: {'hello': 3, 'world': 1, 'welcome': 1}"},{"prompt":"Write a code that takes a list of strings and a string, and returns a list containing all strings from the given list that have the given string as a substring. ['Hello', 'Hello, world', 'Bonjour', 'My name is John'] String: 'lo'","completion":"def find_substring(lst, query): result = [] for el in lst: if query in el: result.append(el) return result find_substring(['Hello', 'Hello, world', 'Bonjour', 'My name is John'], 'lo') # output: ['Hello', 'Hello, world']"},{"prompt":"Create a program in python that takes a number as input and checks if it is a prime number 5","completion":"def is_prime(num): if num == 1: return False elif num == 2: return True else: for i in range(2, num): if (num % i == 0): return False return True is_prime(5) # output: True"},{"prompt":"Use the regex module in python to remove all punctuation in a given string. \\"Hello, world!","completion":"import re def remove_punc(string): punc_pattern = re.compile('[^ws]') return punc_pattern.sub('', string) remove_punc(\\"Hello, world!\\") # output: 'Hello world'"},{"prompt":"Use the collections module in python to return the most common phrase from a list of strings. [ \\"hello world\\", \\"hello\\", \\"hello world again\\" ]","completion":"from collections import Counter def most_common_phrase(string_list): c = Counter(string_list) return c.most_common(1)[0][0] most_common_phrase([\\"hello world\\", \\"hello\\", \\"hello world again\\"]) # output: 'hello world'"},{"prompt":"The following code is broken, please rewrite it so that it prints out all the primes within a range of 1-100. for i in range(2,100): if i % 2 == 0: print (i, \\" is prime\\")","completion":"for i in range(2,100): is_prime = True for j in range(2,i): if i % j == 0: is_prime = False break if is_prime: print(i, \\"is prime\\")"},{"prompt":"Write a code that takes an array and returns an array of all elements in the original except for the duplicates. [1, 2, 2, 3, 4, 4, 5]","completion":"def remove_duplicates(arr): new_arr = [] seen = set() for i in arr: if i not in seen: seen.add(i) new_arr.append(i) return new_arr remove_duplicates([1,2,2,3,4,4,5]) # output: [1,2,3,4,5]"},{"prompt":"Create a program in python to simulate a game of rock, paper, scissors.","completion":"from random import randint def rock_paper_scissors(): print(\\"rock, paper, scissors!\\") player = input(\\"Your input: \\") rand_num = randint(0,2) if rand_num == 0: computer = \\"rock\\" elif rand_num == 1: computer = \\"paper\\" else: computer = \\"scissors\\" print(\\"The computer plays: \\" + computer) if player == computer: print(\\"It's a tie!\\") elif player == \\"rock\\": if computer == \\"paper\\": print(\\"Computer wins!\\") else: print(\\"Player wins!\\") elif player == \\"paper\\": if computer == \\"scissors\\": print(\\"Computer wins!\\") else: print(\\"Player wins!\\") elif player == \\"scissors\\": if computer == \\"rock\\": print(\\"Computer wins!\\") else: print(\\"Player wins!\\") else: print(\\"Invalid input! You have to choose between rock, paper or scissors\\") rock_paper_scissors()"},{"prompt":"Edit the existing JavaScript code to make it pass Eslint. var foo = \\"foo\\" if (foo) { console.log(\\"foo is true\\") }","completion":"var foo = \\"foo\\"; if (foo) { console.log(\\"foo is true\\"); }"},{"prompt":"Generate a random password with 8 characters, including upper and lower case letters, numbers, and special characters.","completion":"import string import random def generate_password(): # create a string of all possible characters chars = string.ascii_letters + string.digits + string.punctuation # generate a random password with 8 characters password = ''.join(random.choice(chars) for i in range(8)) return password # Generate a random password password = generate_password() print(password)"},{"prompt":"Write a SQL query to get the sum of sales for each country.","completion":"SELECT country, SUM(sales) FROM orders GROUP BY country;"},{"prompt":"Create a 3D scatterplot in Python to visualize 3 different datasets.","completion":"import matplotlib.pyplot as plt from mpl_toolkits.mplot3d import Axes3D x1 = np.array([1,2,3,4,5]) y1 = np.array([2,3,4,5,6]) z1 = np.array([3,4,5,6,7]) x2 = np.array([10,11,12,13,14]) y2 = np.array([20,21,22,23,24]) z2 = np.array([40,41,42,43,44]) x3 = np.array([100,200,300,400,500]) y3 = np.array([200,400,600,800,1000]) z3 = np.array([1,2,3,4,5]) fig = plt.figure() ax = fig.add_subplot(111, projection='3d') ax.scatter(x1, y1, z1, c='r', marker='o', label='dataset1') ax.scatter(x2, y2, z2, c='y', marker='^', label='dataset2') ax.scatter(x3, y3, z3, c='g', marker='d', label='dataset3') ax.legend() plt.show()"},{"prompt":"Train a sentiment analysis model using a corpus of movie reviews.","completion":"import pandas as pd import numpy as np from keras.preprocessing.text import Tokenizer from keras.preprocessing.sequence import pad_sequences from keras.layers import Dense, Embedding, LSTM, Dropout from keras.models import Sequential # Load corpus of movie reviews data = pd.read_csv('movie_reviews.csv') sentences = data['review'].values y = data['sentiment'].values # Create tokenizer tokenizer = Tokenizer(num_words=2000) tokenizer.fit_on_texts(sentences) X = tokenizer.texts_to_sequences(sentences) vocab_size = len(tokenizer.word_index)+1 X = pad_sequences(X) # Build and train a model model = Sequential() model.add(Embedding(vocab_size, 128, input_length=X.shape[1])) model.add(LSTM(64, dropout=0.2, recurrent_dropout=0.2)) model.add(Dense(1, activation='sigmoid')) model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy']) # fit the model with epochs model.fit(X,y, batch_size=64, epochs=15) # Evaluate the model scores = model.evaluate(X, y, verbose=0) print(\\"Accuracy: %.2f%%\\" % (scores[1]*100))"},{"prompt":"Create generic functions for a for-each loop in JavaScript.","completion":"// Declare a function that accepts 2 arguments function forEach(arr,func) { // Check to see if input is valid if(!Array.isArray(arr)) return console.log('Not a valid array') // Iterate through array and apply callback func for(let i =0; i < arr.length; i++) { func.call(null,arr[i],i,arr) } } // Call the function to check let arr = [1,2,3,4,5] forEach(arr, (val, index, array) => { console.log(val) console.log(index) console.log(array) })"},{"prompt":"Construct a loop in Python to invert the order of a string. string = \\"Hello World!","completion":"string = \\"Hello World!\\" inverted_string = \\"\\" for char in string: inverted_string = char + inverted_string print(inverted_string) # Output: \\"!dlroW olleH\\""},{"prompt":"Find the volume of a 3D cube in JavaScript. length = 10","completion":"let length = 10; let volume = length * length * length; console.log(volume); // Output: 1000"},{"prompt":"Write a function in Python to generate a list containing the sum of corresponding elements given two lists. list1 = [9, 4, 8] list2 = [1, 8, 5]","completion":"list1 = [9, 4, 8] list2 = [1, 8, 5] def add_corresponding_elements(list1, list2): result = [] for i in range(len(list1)): result.append(list1[i] + list2[i]) return result print(add_corresponding_elements(list1, list2)) # Output: [10, 12, 13]"},{"prompt":"Create a function in Python that shuffles the elements of an input list. arr = [1, 4, 5, 8, 9, 2]","completion":"import random arr = [1, 4, 5, 8, 9, 2] def randomize_list(arr): random.shuffle(arr) return arr print(randomize_list(arr)) # Output: [9, 1, 2, 4, 5, 8]"},{"prompt":"Construct a regular expression in JavaScript to check if a given string starts with A and ends with Z.","completion":"let regex = /^A.*Z/; console.log(regex.test(\\"ABDZ\\")); // Output: true"},{"prompt":"Design a function in Python to find all the elements in an array that are divisible by 3. arr = [3, 8, 15, 20, 7]","completion":"arr = [3, 8, 15, 20, 7] def divisible_by_3(arr): result = [] for element in arr: if element % 3 == 0: result.append(element) return result print(divisible_by_3(arr)) # Output: [3, 15, 20]"},{"prompt":"Generate a regular expression in JavaScript to check if a string contains only alphabets.","completion":"let regex = /^[a-zA-Z]+/; console.log(regex.test(\\"hello\\")); // Output: true"},{"prompt":"Write Python code to replace all the vowels with underscore. string = \\"Hello World!","completion":"string = \\"Hello World!\\" vowels = [\\"a\\", \\"e\\", \\"i\\", \\"o\\", \\"u\\"] def replace_vowels_with_underscore(string): result = \\"\\" for char in string: if char in vowels: result += \\"_\\" else: result += char return result print(replace_vowels_with_underscore(string)) # Output: \\"H_ll_ W_rld!\\""},{"prompt":"Write a function to receive a list of numbers and return the sum of the list.","completion":"def list_sum(list): sum = 0 for num in list: sum += num return sum if __name__ == '__main__': print(list_sum([1, 2, 3, 4]))"},{"prompt":"Calculate the area of a rectangle given height and width. height = 2 width = 5","completion":"def area_rectangle(height, width): return height*width if __name__ == '__main__': print(area_rectangle(2, 5))"},{"prompt":"Convert a string to all uppercase. text = \\"Hello World","completion":"def to_uppercase(text): return text.upper() if __name__ == '__main__': text = \\"Hello World\\" print(to_uppercase(text))"},{"prompt":"Check if an element is present in a list. lst = [1, 2, 3, 4] element = 5","completion":"def is_element_in_list(lst, element): return element in lst if __name__ == '__main__': lst = [1, 2, 3, 4] element = 5 print(is_element_in_list(lst, element))"},{"prompt":"Write a function to generate a random 5 letter string.","completion":"import random def generate_random_5_letter_string(): res = \\"\\" for i in range(5): res += chr(random.randint(97, 122)) return res if __name__ == '__main__': print(generate_random_5_letter_string())"},{"prompt":"Create a new list by changing all the strings in a given list to uppercase. lst = [\\"apple\\", \\"orange\\", \\"banana\\"]","completion":"def to_upper_case_list(lst): res = [] for s in lst: res.append(s.upper()) return res if __name__ == '__main__': lst = [\\"apple\\", \\"orange\\", \\"banana\\"] print(to_upper_case_list(lst))"},{"prompt":"You need to read a series of intergers and output the smallest and largest number in the series. [-9, 12, -7, 4, 3, -2]","completion":"Smallest number: -9 Largest number: 12"},{"prompt":"dentify if a given array is a palindrome. [1, 2, 3, 3, 2, 1]","completion":"true"},{"prompt":"Construct a query to find a specific record in a database. Table: Users Name: Joh","completion":"SELECT * FROM Users WHERE Name = 'John'"},{"prompt":"Modify the provided code to swap two variables. a = 1 b = 2","completion":"a, b = b, a"},{"prompt":"Validate a credit card number. 378734493671000","completion":"true"},{"prompt":"Create a JSON representation of a Person object. { name: \\"John\\", age: 25, address: \\"123 Main Street\\" }","completion":"{ \\"name\\": \\"John\\", \\"age\\": 25, \\"address\\": { \\"street\\": \\"123 Main Street\\" } }"},{"prompt":"llustrate the usage of a while loop in Java.","completion":"int number = 5; while (number > 0) { System.out.println(\\"Number: \\" + number); number--; }"},{"prompt":"Given a class definition, write a method to count the number of objects created in the class. class Student: def __init__(self, name, age): self.name = name self.age = age","completion":"class Student: _count = 0 def __init__(self, name, age): self._count += 1 self.name = name self.age = age @classmethod def get_count(cls): return cls._count"},{"prompt":"Write a function in JavaScript that takes a string as a parameter and reverses it.","completion":"function reverseString(str) { let reversedStr = \\"\\"; for (let i = str.length - 1; i >= 0; i--) { reversedStr += str.charAt(i); } return reversedStr; }"},{"prompt":"Create a Java class that contains two methods which take two integers as parameters and returns their sum as the result.","completion":"public class Sum { public static int sumInts(int a, int b) { return a + b; } public static double sumDoubles(double a, double b) { return a + b; } }"},{"prompt":"Given a list of numbers, write a Python code to replace negative numbers with 0 in the list. data = [-4, -2, 5, 8, -1, 0]","completion":"data = [0, 0, 5, 8, 0, 0] result = [0 if ele < 0 else ele for ele in data] # List comprehension"},{"prompt":"Create a Haskell function that takes a list of tuples and prints out the first element of each tuple.","completion":"firstElems :: [(a, b)] -> [a] firstElems [] = [] firstElems ((x, _):xs) = x : firstElems xs"},{"prompt":"MongoDB, what does the command 'db.collection.aggregate()' do?","completion":"The aggregate command in MongoDB is used to group values from multiple documents together and perform a variety of aggregate operations such as computing averages, sums of values, finding distinct values, etc. It takes an array of aggregation pipeline stages as its first argument and outputs an array of computed results."},{"prompt":"What is the command to create a new branch in the Git repository?","completion":"The command to create a new branch in a Git repository is: git branch <new-branch-name>."},{"prompt":"Create a function that checks if a string contains all the vowels.","completion":"def check_if_string_contains_all_vowels(string): vowels = ['a', 'e', 'i', 'o', 'u'] str_vowels = [ltr for ltr in string.lower() if ltr in vowels] return len(str_vowels) == len(vowels)"},{"prompt":"elp the user enter two numbers and print the sum of them.","completion":"def print_sum_of_two_numbers(): num1 = int(input(\\"Enter a number: \\")) num2 = int(input(\\"Enter another number: \\")) print(\\"The sum of the two numbers is: \\" + str(num1 + num2))"},{"prompt":"Write a code snippet to print the minutes between two timestamps. t1 = datetime.datetime(2020, 1, 1, 12, 0) t2 = datetime.datetime(2020, 1, 1, 15, 30)","completion":"from datetime import datetime, timedelta t1 = datetime(2020, 1, 1, 12, 0) t2 = datetime(2020, 1, 1, 15, 30) minutes_difference = int((t2-t1).total_seconds()/60) print(\\"The difference in minutes between the two timestamps is: \\" + str(minutes_difference) + \\" minutes.\\")"},{"prompt":"Classify the following code snippet: name = input(\\"What is your name? \\") print(\\"Hello, \\" + name)","completion":"This code snippet is a classification task as it is asking for user input and displaying the result based on the input provided."},{"prompt":"Create a function that converts seconds to minutes.","completion":"def convert_seconds_to_minutes(seconds): minutes = seconds // 60 return minutes"},{"prompt":"elp the user enter a number and print the square of it.","completion":"def print_square_of_a_number(): num = int(input(\\"Enter a number: \\")) print(\\"The square of the number is: \\" + str(num**2))"},{"prompt":"Modify the original list, so that it contains the numbers from 1 to 10. original_list = [3, 4, 6, 8]","completion":"original_list[0] = 1 original_list[1] = 2 original_list.append(5) original_list.append(7) original_list.append(9) original_list.append(10)"},{"prompt":"Create a generator expression to return the squared values of a given list. list_of_nums = [1, 2, 3, 4, 5]","completion":"squared_values = (num**2 for num in list_of_nums)"},{"prompt":"Create a simple Python program that prints the characters of a string in reverse order. String to be printed: \\"Hello","completion":"string = \\"Hello\\" revString = \\"\\" for i in range(len(string)-1,-1,-1): revString = revString + string[i] print(revString)"},{"prompt":"Write a regular expression in Ruby that prints all the words beginning with 'a' in a string. String: \\"The quick brown fox jumps over the lazy dog","completion":"pattern = /baS+b/ string.scan(pattern).each { |word| puts word }"},{"prompt":"Write a C program for reversing a linked list. Input list: 1 -> 2 -> 3 -> 4 -> 5","completion":"#include <stdio.h> #include <stdlib.h> struct Node { int data; struct Node* next; }; struct Node* reverseList(struct Node* head) { struct Node* prev = NULL; struct Node* current = head; struct Node* next; while (current != NULL) { next = current->next; current->next = prev; prev = current; current = next; } head = prev; return head; }"},{"prompt":"Write a Perl script for extracting the first three words from a given string. String: \\"I love apple","completion":"@words = split(\\" \\", string); first_three_words = join(\\" \\", @words[0 .. 2]); print \\"first_three_wordsn\\";"},{"prompt":"Create a Bash script that changes all the filenames in a directory to lowercase. Directory: ./TestCase","completion":"for f in (ls ./TestCases); do mv f (echo f | tr [A-Z] [a-z]); done"},{"prompt":"Write a code to get the top 5 Twitter trends in the US.","completion":"\\"\\"\\" Get the top 5 Twitter trends in the US \\"\\"\\" import tweepy def get_top_trends(): # Setup authorization auth = tweepy.OAuthHandler('','') auth.set_access_token('','') api = tweepy.API(auth) # Get trends trends_result = api.trends_place(23424977) trends = trends_result[0]['trends'] # Get top 5 trends top_trends = [] for trend in trends: if trend['tweet_volume'] is not None and len(top_trends) < 5: top_trends.append(trend['name']) return top_trends if __name__ == '__main__': print(get_top_trends())"},{"prompt":"Write a script that generates a random integer within a given range. Minimum value: 0, Maximum value: 20","completion":"import random min_val = 0 max_val = 20 print(random.randint(min_val, max_val))"},{"prompt":"w would you create a debug statement to help identify an error in code","completion":"print(f\\"Error at line {lineno}: {error}\\")"},{"prompt":"Create an array of 10 people in Python.","completion":"people = [\\"John\\", \\"Mia\\", \\"Nick\\", \\"Sarah\\", \\"Emma\\", \\"Alex\\", \\"Jayden\\", \\"Olivia\\", \\"Lucas\\", \\"Ava\\"]"},{"prompt":"Write an R function that computes the mean of two numbers.","completion":"compute_mean <- function(x, y) { mean = (x + y) / 2 return(mean) }"},{"prompt":"Write a CSS code to style all links (a element) with a red color.","completion":"a { color: red; }"},{"prompt":"Write a SQL query to extract employees with salary greater than 100,000 from the Employees table. Table Name: Employees Columns of this table: employee_id (integer), employee_name (varchar(255)), salary (numeric)","completion":"SELECT employee_id, employee_name, salary FROM Employees WHERE salary > 100000;"},{"prompt":"Rewrite the following code snippet to an equivalent code in Python. int i = 0; while (i < 10) { System.out.println(i); i++; }","completion":"i = 0 while i < 10: print(i) i += 1"},{"prompt":"Write an R program to find the unique values in a vector. data = c(10, 20, 30, 20, 40, 30, 50)","completion":"data = c(10, 20, 30, 20, 40, 30, 50) uniq_data = unique(data) print(uniq_data) # Outputs: 10, 20, 30, 40, 50"},{"prompt":"Create a JSON object in JavaScript.","completion":"const myObject = { \\"name\\": \\"John Doe\\", \\"age\\": 25, \\"languages\\": [\\"English\\",\\"Spanish\\"] }"},{"prompt":"Create a function that takes in two parameters \`\`str_1\`\`and \`\`str_2\`\`and returns a boolean indicating whether or not \`\`str_1\`\` is contained in \`\`str_2\`\`. str_1 = \\"hello\\", str_2 = \\"hello world","completion":"def is_string_contained(str_1, str_2): return str_1 in str_2"},{"prompt":"Write a MySQL query for computing the average age of individuals in a table.","completion":"SELECT AVG(age) FROM table_name;"},{"prompt":"Construct a simple web page with two fields, a login input and a password input.","completion":"<html> <body> <form> <div> <label>Login:</label> <input type=\\"text\\" id=\\"login\\" name=\\"login\\"> </div> <div> <label>Password:</label> <input type=\\"password\\" id=\\"password\\" name=\\"password\\"> </div> </form> </body> </html>"},{"prompt":"Develop a program to generate a random integer from 1 to 100.","completion":"import random random_int = random.randint(1,100) print(random_int)"},{"prompt":"Determine the sum of the numbers in a given list using for loops. list_of_numbers = [1, 2, 3, 4, 5]","completion":"list_of_numbers = [1, 2, 3, 4, 5] sum = 0 for num in list_of_numbers: sum += num print(sum)"},{"prompt":"Write a JavaScript code snippet to calculate percentage of an input number. number = 50","completion":"number = 50 percentage = (number/100)*100; console.log(percentage + '%');"},{"prompt":"Create a function to check if a given string contains valid JSON data and returns true if it does. string_to_check = \\"{'name': 'John', 'age': 30}","completion":"def check_valid_json(string_to_check): try: json.loads(string_to_check) return True except Exception as e: return False"},{"prompt":"Format the following list of strings according to the desired output. input_strings = [\\"Hello\\", \\"world\\", \\"in\\", \\"Python\\"]","completion":"input_strings = [\\"Hello\\", \\"world\\", \\"in\\", \\"Python\\"] output_string = ' '.join(input_strings) output_string = output_string.capitalize() + '!' print(output_string) # Output: Hello world in python!"},{"prompt":"Create an SQL query for finding the total number of customers with the name \\"John\\".","completion":"SELECT COUNT(*) FROM customers WHERE firstname = 'John';"},{"prompt":"Convert the following hexadecimal value to its decimal equivalent. hex_value = \\"0xFF","completion":"hex_value = \\"0xFF\\" dec_value = int(hex_value, 16) print(dec_value) # output: 255"},{"prompt":"Write a regular expression to validate a domain name.","completion":"regex = r\\"^(([a-zA-Z]{1})|([a-zA-Z]{1}[a-zA-Z]{1})|([a-zA-Z]{1}[0-9]{1})|([0-9]{1}[a-zA-Z]{1})|([a-zA-Z0-9][a-zA-Z0-9-_]{1,61}[a-zA-Z0-9])).([a-zA-Z]{2,6}|[a-zA-Z0-9-]{2,30}.[a-zA-Z]{2,3})\\""},{"prompt":"Find the frequency of each letter in the given string. string = \\"b","completion":"freq = {} for i in string: if i in freq: freq[i] += 1 else: freq[i] = 1 # freq is {'b': 1, 'a': 3, 'n': 2}"},{"prompt":"Fetch the latest version of the package \\"abcd\\" and save it to your local environment.","completion":"pip install --upgrade abcd"},{"prompt":"Convert the given JSON object to XML format. { \\"name\\" : \\"John\\", \\"age\\" : 25, \\"profession\\" : \\"Developer\\" }","completion":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?> <root> <name>John</name> <age>25</age> <profession>Developer</profession> </root>"},{"prompt":"Calculate the edit distance between the two strings. str1 = \\"SUPER\\" str2 = \\"SPHERE","completion":"edit_distance = 2"},{"prompt":"Write a regex to match the email address format.","completion":"regex = r'^[_a-z0-9-]+(.[_a-z0-9-]+)*@[a-z0-9-]+(.[a-z0-9-]+)*(.[a-z]{2,4})'"},{"prompt":"Write a Python for loop to produces the following output:","completion":"for i in range(1, 11): print(f\\"{i}x{i} = {i*i}\\") // Output: 1x1 = 1 2x2 = 4 3x3 = 9 4x4 = 16 5x5 = 25 6x6 = 36 7x7 = 49 8x8 = 64 9x9 = 81 10x10 = 100"},{"prompt":"Describe what the 'Error 404 Not Found' page means.","completion":"Error 404 Not Found is an HTTP status code that is sent when the server is unable to find the requested page. It indicates that the page you are looking for could not be found on the server. This page may have been deleted, moved, or temporarily unavailable."},{"prompt":"Create a new class 'Dog' with a private attribute 'name' and two public methods 'bark' and 'setName'.","completion":"class Dog: __name = \\"\\" def __init__(self, name): self.__name = name def bark(self): print(\\"Woof!\\") def setName(self, name): self.__name = name"},{"prompt":"Create a data frame that for a given set of students contains their name, age, and grade level. John (age 18, grade 12), Jane (age 17, grade 11), Tom (age 19, grade 13), Emily (age 17, grade 11).","completion":"import pandas as pd df = pd.DataFrame({ \\"Name\\": [\\"John\\",\\"Jane\\",\\"Tom\\",\\"Emily\\"], \\"Age\\": [18,17,19,17], \\"Grade Level\\": [12,11,13,11] }) print(df)"},{"prompt":"Write a Python program to find the number of days in a month specified by the user. Month: February","completion":"days = 28 if month == 'February': print(days) else: print('Invalid Month')"},{"prompt":"Find the min and max of the given array of numbers. Array: [5, 3, 10]","completion":"min = 3 max = 10"},{"prompt":"Explain the purpose of a for-loop in C++.","completion":"A for-loop in C++ is a statement that allows you to loop through a range of values and execute a set of statements for each value in the range. It is used to repeat a set of instructions for a specific amount of times or until a certain condition is reached."},{"prompt":"Create a template for a new React Component. Component Name: Header","completion":"import React, { Component } from 'react'; class Header extends Component { render() { return ( <div> </div> ) } } export default Header;"},{"prompt":"Write a Python script to return the index of a specific value from a given list. List: [1,2,3,4,5] Value: 4","completion":"list = [1,2,3,4,5] value = 4 index_value = list.index(value) print(index_value) # 3"},{"prompt":"Create a vector in R with the following entries: 3, 5, 7.","completion":"v1 <- c(3, 5, 7)"},{"prompt":"Suggest a way to render the background colour of a div element to blue.","completion":"<div style=\\"background-color: blue;\\"> ... </div>"},{"prompt":"To make the displayed text in a webpage left aligned, add the appropriate HTML tags as a comment.","completion":"<!-- <p align=\\"left\\">...text...</p> -->"},{"prompt":"Suggest a code to select all rows from the table \\"users\\" where the user type is \\"VIP\\".","completion":"SELECT * FROM users WHERE user_type = 'VIP';"},{"prompt":"Suggest a code to sort the list of tuples below in the descending order of scores. my_list = [('John', 70), ('Jane', 80), ('Dave', 65)]","completion":"my_list.sort(key=lambda tup: tup[1], reverse=True)"},{"prompt":"Write a SQL query to calculate the total average score.","completion":"SELECT AVG(score) FROM scores;"},{"prompt":"Write a SQL query to select the top 5 books with the highest book sales. Table name: book_sales Columns: book_name, book_sale","completion":"SELECT book_name, book_sales FROM book_sales ORDER BY book_sales DESC LIMIT 5;"},{"prompt":"Create a webpage with a button to allow the user to log in. [noinput]","completion":"<!DOCTYPE html> <html lang=\\"en\\"> <head> <meta charset=\\"UTF-8\\"> <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1.0\\"> <title>Login Page</title> </head> <body> <form action=\\"login.php\\" method=\\"post\\"> <input type=\\"submit\\" value=\\"Login\\" /> </form> </body> </html>"},{"prompt":"Write a list comprehension to generate a list of all prime numbers less than 100. [noinput]","completion":"# An efficient list comprehension to generate a list of prime numbers # less than 100 prime_numbers = [num for num in range(2, 100) if all(num % i != 0 for i in range(2, int(pow(num, 0.5) + 1)))]"},{"prompt":"Write a function to generate a random password based on the given parameters. Parameters: Length of password must be 8 characters, must contain at least one uppercase letter, contain at least one lowercase letter and must include at least one number","completion":"import random import string def generate_password(min_length, max_length, upper_case, lower_case, number): password = [] for _ in range(min_length, max_length + 1): password.append(random.choice(string.ascii_lowercase if lower_case else '') + random.choice(string.ascii_uppercase if upper_case else '') + random.choice(string.digits if number else '')) random.shuffle(password) return ''.join(password) # Driver code print(generate_password(8, 8, True, True, True))"},{"prompt":"Write a function that returns the largest number in a list. List: [1,2,3,4,5,6]","completion":"def get_largest(lst): largest = 0 for i in range (0,len(lst)): if lst[i] > largest: largest = lst[i] return largest # Driver code myList = [1,2,3,4,5,6] print(get_largest(myList)) # Output: 6"},{"prompt":"Create a regex that matches any five-digit zip code. [noinput]","completion":"^[0-9]{5}"},{"prompt":"Create a for-loop in Python that iterates through a list of numbers and prints out only the numbers in the list that are divisible by 5. myList = [10,11,20,21,30,31,40]","completion":"for i in myList: if i % 5 == 0: print(i)"},{"prompt":"Write a SQL query to find all the customers in the 'customers' table who are from the United States.","completion":"SELECT * FROM customers WHERE country = 'United States';"},{"prompt":"Write a C++ function that generates a Fibonacci series of numbers up to an integer n. n = 8","completion":"#include <iostream> using namespace std; int Fibonacci (int n){ if (n<=0) return 0; if (n==1) return 1; else return Fibonacci(n-1)+Fibonacci(n-2); } int main() { int n; cin >> n; for (int i=0;i <n; i++){ cout << Fibonacci(i) << \\" \\"; } return 0; }"},{"prompt":"Write a PHP program to generate a multiplication table for the number 8.","completion":"<?php for(i=1; i<=10; i++){ product = 8 * i; echo \\"8 x i = product n\\"; } ?>"},{"prompt":"Generate a XML structure to store the following information. Name: John Smith Age: 28 Gender: Male","completion":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?> <person> <name>John Smith</name> <age>28</age> <gender>Male</gender> </person>"},{"prompt":"Design a CSS template for a website.","completion":"* { margin: 0; padding: 0; box-sizing: border-box; } body { font-family: Arial, sans-serif; font-size: 14px; line-height: 1.5; background-color: #f5f5f5; } h1 { font-size: 2em; margin-bottom: 10px; } h2 { font-size: 1.5em; margin-bottom: 5px; } a { color: #2016B6; text-decoration: none; transition: all .3s ease; }"},{"prompt":"Create a HTML form with two input fields, one for passwords and one for confirm passwords. Validate that the passwords should match to let the user submit the form.","completion":"<form onsubmit=\\"return validatePassword()\\"> <label for=\\"password\\">Password</label> <input type=\\"password\\" id=\\"password\\" name=\\"password\\"> <label for=\\"passwordconfirm\\">Confirm Password</label> <input type=\\"password\\" id=\\"passwordconfirm\\" name=\\"passwordconfirm\\"> <button type=\\"submit\\">Submit</button> </form> <script> function validatePassword() { if (document.getElementById('password').value == document.getElementById('passwordconfirm').value) { return true; } else { alert(\\"Passwords do not match!\\"); return false; } } <\/script>"},{"prompt":"Create a MySQL query to join two tables, 'customers' and 'orders', and select all the fields from 'orders' table except the field 'order_date'.","completion":"SELECT orders.* FROM orders JOIN customers ON orders.customer_id = customers.customer_id WHERE orders.order_date IS NOT NULL;"},{"prompt":"Parse the following JSON string and extract all the keys into a list. jsonString = '{\\"name\\": \\"John\\", \\"age\\": 20, \\"location\\": \\"New York\\"}'","completion":"import json jsonString = '{\\"name\\": \\"John\\", \\"age\\": 20, \\"location\\": \\"New York\\"}' # Use json.loads to parse the string data = json.loads(jsonString) # initializing a list list = [] # extract the keys for key in data: list.append(key) print(list) # Output: ['name', 'age', 'location']"},{"prompt":"Convert a list of strings to a list of integers. list_of_strings = [\\"1\\", \\"2\\", \\"3\\"]","completion":"list_of_ints = [1, 2, 3]"},{"prompt":"Write a while loop that adds 1 to the value of ‘var’ each time it is iterated until it reaches 5. var = 0","completion":"while var < 5: var += 1"},{"prompt":"Create a new string from the given string by replacing any character with its opposite. string = \\"Hello","completion":"opposite_string = \\"Sllfs\\""},{"prompt":"Reorder the lines of the code to make the program run correctly. def example(): print(\\"Line \\" + str(a)) a = 6 print(\\"Line \\" + str(a))","completion":"def example(): a = 6 print(\\"Line \\" + str(a)) print(\\"Line \\" + str(a))"},{"prompt":"Complete the function below to make a list of n numbers and return the result. n = 5","completion":"def create_list(n): result = [] for i in range(0,n): result.append(i) return result"},{"prompt":"Extract the text from a given HTML document. <html> <head><title>My title</title></head> <body> <h1>Hello, world!</h1> <p>This is a sample HTML document.</p> </body> </html>","completion":"from bs4 import BeautifulSoup html_doc = \\"\\" <html> <head><title>My title</title></head> <body> <h1>Hello, world!</h1> <p>This is a sample HTML document.</p> </body> </html> \\"\\" soup = BeautifulSoup(html_doc, 'html.parser') print(soup.get_text()) #Output Hello, world! This is a sample HTML document."},{"prompt":"Write an HTML page that displays a Javascript alert when a button is clicked.","completion":"<html> <head> <!-- Include the script --> <script src=\\"alert.js\\"><\/script> </head> <body> <button id=\\"btnAlert\\" onclick=\\"alertFunction()\\">Alert</button> </body> </html> // alert.js function alertFunction() { alert(\\"This is an alert!\\"); }"},{"prompt":"Make the following sentence in a statement instantiable. The quick brown fox","completion":"The quick brown fox jumped over the lazy dog."},{"prompt":"Classify the following classes into Group A and Group B. apple, banana, pineapple, strawberry","completion":"Group A: apple, banana Group B: pineapple, strawberry"},{"prompt":"Suggest a better data structure for the following situation: You have to maintain a record of employees with the property name and telephone number.","completion":"A better data structure for this situation would be to use a hash table, where the name is the key and the phone number is the value. This data structure would provide quick lookups and make updating records efficient."},{"prompt":"Define an application programming interface (API) for a given program.","completion":"An application programming interface (API) for a program can be defined as a set of routines, protocols, and tools that provide access services for a software component. An API can expose some aspects of a program's functionality, such as creating a user or managing database records, so that other programs can interact with it and access its data."},{"prompt":"Suggest a suitable language to build a web application.","completion":"A suitable language to build a web application could be JavaScript, Python, or PHP. All of these languages are popular for web development and provide good support for web development activities such as database operations, user authentication, and server-side programming."},{"prompt":"Suggest a machine learning algorithm to solve a binary classification problem.","completion":"A machine learning algorithm suitable to solve a binary classification problem could be Logistic Regression, Support Vector Machines, or Naive Bayes. These algorithms are capable of solving binary classification problems and have proven to produce good results in a variety of applications."},{"prompt":"Construct a custom data type that is capable of representing the information of a student in a college.","completion":"A custom data type that is capable of representing the information of a student in a college could be a dictionary where the keys represent different student details, such as name, student ID, GPA, and course load. The values for each key would be the respective information for a particular student."},{"prompt":"Suggest a suitable data structure for storing employee information.","completion":"A suitable data structure for storing employee information could be a hash table, where the keys are the employee IDs, and the values are the employee details such as name, role, and contact details. This data structure would provide efficient lookups, while being easy to maintain and update."},{"prompt":"Suggest a data structure for storing real-time stock prices of different companies.","completion":"A suitable data structure for storing real-time stock prices of different companies could be a heap, because it provides efficient access to the lowest values. Since a heap will always store the lowest values, it can be used to keep track of the latest stock prices of each company."},{"prompt":"Suggest a suitable algorithm for sorting an array of numbers in increasing order.","completion":"A suitable algorithm for sorting an array of numbers in increasing order could be the Quick Sort algorithm. This algorithm has an average time complexity of O(nlog(n)), making it an efficient sorting algorithm for large datasets."},{"prompt":"Suggest a suitable language for developing iOS mobile applications.","completion":"A suitable language for developing iOS mobile applications is Swift. Swift is an Apple-developed language which is optimized for performance, and is capable of providing a great user experience on iOS devices."},{"prompt":"What is a dynamic programming algorithm?","completion":"Dynamic programming is an algorithm design technique that is used to solve optimization problems by breaking them down into smaller subproblems. It enables you to solve a problem by combining solutions to similar subproblems, saving time and often being more efficient than standard methods. It is widely used in operations research, artificial intelligence, bioinformatics, linguistics, and other fields."},{"prompt":"Debug the following code to print the correct output. num = [2, 5, 12, 8] output = [] for n in num: output.apend(n**2) print(output)","completion":"num = [2, 5, 12, 8] output = [] for n in num: output.append(n**2) print(output)"},{"prompt":"Modify the following code to handle large numbers correctly. def factorial(n): fact = 1 for i in range(1, n+1): fact *= i return fac","completion":"def factorial(n): fact = 1 for i in range(1, n+1): fact = fact*i % 10**10 return fact % 10**10"},{"prompt":"What is the data type returned by the following code snippet? value = 2**8","completion":"The data type returned by the following code snippet is an integer."},{"prompt":"Write a Python program to display even numbers between two intervals.","completion":"def print_even_numbers_in_range(start, end): for i in range(start, end+1): if i % 2 == 0: print(i) print_even_numbers_in_range(2, 10)"},{"prompt":"Given a list of words, write a Python program to find all pairs of distinct indices (i, j) in the given list, so that the concatenation of the two words, i.e. words[i] + words[j] is a palindrome. words = [\\"abcd\\", \\"dcba\\", \\"lls\\", \\"s\\", \\"sssll\\"]","completion":"def find_palindrome_pairs(words): res = [] for i in range(len(words)): for j in range(len(words)): if i != j: word = words[i] + words[j] if word == word[::-1]: res.append((i, j)) return res print(find_palindrome_pairs(words))"},{"prompt":"Write a function to fill an array of size n with random integers in the range 0...k-1.","completion":"def random_fill_array(n, k): arr = [] for _ in range(n): arr.append(random.randint(0, k-1)) return arr"},{"prompt":"Categorize the following algorithm as either a depth-first search or a breadth-first search.","completion":"The algorithm is a breadth-first search (BFS) since it starts at a root node and visits nodes in order of increasing depth."},{"prompt":"Using binary search, find the index of a given number in an array of length n.","completion":"def binary_search(arr, x): low = 0 high = len(arr)-1 while low<=high: mid = (low+high)//2 if arr[mid] == x: return mid elif arr[mid] < x: low = mid + 1 else: high = mid - 1 return -1"},{"prompt":"Write a JavaScript function to test if two given arrays are equal.","completion":"function equalArrays(arr1, arr2) { if (arr1.length !== arr2.length) { return false; } for (let i = 0; i < arr1.length; i++) { if (arr1[i] !== arr2[i]) { return false; } } return true; }"},{"prompt":"Create an SQL table with the following specifications Table name: countries Columns: country_name (varchar(255)), population (int), continent (varchar(50))","completion":"CREATE TABLE countries ( country_name VARCHAR(255), population INT, continent VARCHAR(50) );"},{"prompt":"Change the font size of the text in a webpage from 12px to 24px.","completion":"style=\\"font-size:24px;\\""},{"prompt":"Sort a given matrix such that the elements in each row are in increasing order. [[9, 2, 7], [5, 1, 6], [3, 8, 4]]","completion":"[[2, 7, 9], [1, 5, 6], [3, 4, 8]]"},{"prompt":"w do you check if a given string is in a list?","completion":"You can check if a given string is in a list by using the \\"in\\" keyword. For example, if you have a list of strings [\\"apple\\", \\"banana\\", \\"orange\\"] and you want to check if the string \\"banana\\" is in the list, you can use the following syntax: if \\"banana\\" in lst: print(\\"String is in list\\")"},{"prompt":"Build a neural network with one input layer, two hidden layers and one output layer, using Keras.","completion":"import keras from keras.models import Sequential from keras.layers import Dense # create model model = Sequential() model.add(Dense(64, input_dim=1, activation='relu')) model.add(Dense(32, activation='relu')) model.add(Dense(1, activation='sigmoid')) # compile model model.compile(loss='binary_crossentropy', optimizer='RMSprop', metrics=['accuracy'])"},{"prompt":"Write a regular expression to match numbers that start with 8","completion":"The regular expression to match numbers that start with 8 is: ^8d+"},{"prompt":"What is the most efficient way to search for a specific item in an array?","completion":"The most efficient way to search for a specific item in an array is to use a binary search algorithm. Binary search works by repeatedly dividing the array in half until the desired item is found. This method has a time complexity of O(log n)."},{"prompt":"Develop a function to compute the cost of a route. distance_matrix=[ [ 0, 10, 15, 20 ], [ 10, 0, 35, 25 ], [ 15, 35, 0, 30 ], [ 20, 25, 30, 0 ] ] route = [0, 2, 3, 1]","completion":"def get_route_cost(distance_matrix,route): cost = 0 for i in range(len(route)-1): cost += distance_matrix[route[i]][route[i+1]] return cost route_cost = get_route_cost(distance_matrix, route) print (route_cost) # Output: 90"},{"prompt":"Create a conditional statement using the given variables. x = 5 y = 10","completion":"if x < y: print(\\"x is less than y\\")"},{"prompt":"Output a list that contains all the non-repeating characters from a given string. string = “thequickbrownfoxjumpsoverthelazydog”","completion":"def non_repeating_characters(string): character_set = set() for c in string: if c not in character_set: character_set.add(c) return list(character_set) output = non_repeating_characters(string) # Output: ['h', 'd', 'g', 'u', 'e', 'm', 'o', 'p', 'q', 't', 'v', 'i', 'c', 'b', 'k', 'x', 'f', 'z', 'a', 'y', 'r', 'w', 'l', 'n', 's', 'j']"},{"prompt":"Develop a function that is able to compute the number of days between two dates. date1 = \\"27 April, 2020\\" date2 = \\"8 May, 2020","completion":"from datetime import datetime def days_between_dates(date1, date2): date1 = datetime.strptime(date1, \\"%d %B, %Y\\") date2 = datetime.strptime(date2, \\"%d %B, %Y\\") return (date2 - date1).days output = days_between_dates(date1, date2) print (output) # Output: 11"},{"prompt":"Write a SQL query to find the average price of products that cost more than 10. Table: orders Columns: product_name , product_price","completion":"SELECT AVG(product_price) FROM orders WHERE product_price > 10;"},{"prompt":"Develop a function that is able to print a list of consecutive numbers between 1 and N, given an integer N as argument. N = 5","completion":"def print_n_numbers(N): for x in range(1,N+1): print (x) print_n_numbers(N) # Output: 1 2 3 4 5"},{"prompt":"mplement a function that is able to sum two integers, without using the '+' operator. x = 10 y = 20","completion":"def sum_without_plus(x,y): while y != 0: carry = x & y x = x ^ y y = carry << 1 return x result = sum_without_plus(x, y) print (result) # Output: 30"},{"prompt":"Write a for loop in python for printing the square of numbers from 0 to 4.","completion":"for num in range(5): print(num**2)"},{"prompt":"Compute the result of the following equation: 5*3 + 1/2","completion":"16.5"},{"prompt":"Create a request handler for a POST request in Python Flask.","completion":"# Import the necessary libraries from flask import Flask, request # Initialize the app app = Flask(__name__) @app.route('/post_request_handler', methods = ['POST']) def post_request_handler(): # Extract the data from POST request data = request.get_json() # Do something with the data # Return a response return \\"Post request handled\\", 200"},{"prompt":"Write an SQL query to update the data of a specific row. Table name: employee_table Fields: id, name, age Update name to:\\"John\\" and Age to 25 where id = 4","completion":"UPDATE employee_table SET name = \\"John\\", age = 25 WHERE id = 4;"},{"prompt":"Write a function in Java to find the intersection of 2 arrays.","completion":"static int[] intersect(int[] array1, int[] array2){ int[] result = new int[array1.length]; int k = 0; for (int i = 0; i < array1.length; i++) { for (int j = 0; j < array2.length; j++) { if(array1[i] == array2[j]){ result[k] = array1[i]; k++; } } } // Return the result array return result; }"},{"prompt":"Create a block of code which sorts the given list in increasing order. List = [10, 4, 5, 7, 2]","completion":"# Create a new list to store the sorted elements sortedList = [] # Loop through the given list and add the sorted elements to the new list while List: minimum = List[0] for x in List: if x < minimum: minimum = x sortedList.append(minimum) List.remove(minimum) # Print the sorted list print(sortedList) # Output: [2, 4, 5, 7, 10]"},{"prompt":"Add an element to the beginning of an array. Array = [3, 4, 6, 9]","completion":"# Create a new array with one element at the beginning new_array = [1] + Array # Print the new array print(new_array) # Output: [1, 3, 4, 6, 9]"},{"prompt":"Create a SQL query to delete a record from a table. Table Name: Users Record ID: 5","completion":"DELETE FROM Users WHERE id = 5;"},{"prompt":"Create a function to calculate the total discount when given items to purchase and their corresponding discounts. item_list = [\\"shirt\\", \\"trees\\", \\"shoes\\"] discount_list = [0.25, 0.3, 0.2]","completion":"def calculate_total_discount(items, discounts): total_discount = 0 for i in range(len(items)): total_discount += discounts[i] return total_discount"},{"prompt":"Create a function to convert miles per hour to kilometers per hour.","completion":"def convert_mph_to_kph(mph): return mph * 1.609"},{"prompt":"Create a for loop for iterating over the elements of an array in JavaScript. Array: [1, 2, 3, 4]","completion":"for(let i=0; i < [1,2,3,4].length; i++){ console.log([1,2,3,4][i]); }"},{"prompt":"Find the area of a square with a given side. Side: 6","completion":"36"},{"prompt":"Compare the value of the two integers and return True if the first is greater than the second. Number_1: 5 Number_2: 10","completion":"public static boolean compare(int num1, int num2){ return num1 > num2; } // Calling the method boolean result = compare(5, 10); // Output // false"},{"prompt":"Write a Java program for encrypting the text \\"Hello World!\\" using the Caesar Cipher.","completion":"public class CaesarCipher { // Encrypts text using a shift od \\"s\\" public static StringBuffer encrypt(String text, int s) { StringBuffer result= new StringBuffer(); for (int i=0; i<text.length(); i++) { if (Character.isUpperCase(text.charAt(i))) { char ch = (char)(((int)text.charAt(i) + s - 65) % 26 + 65); result.append(ch); } else { char ch = (char)(((int)text.charAt(i) + s - 97) % 26 + 97); result.append(ch); } } return result; } // Driver code public static void main(String[] args) { String text = \\"Hello World!\\"; int s = 4; System.out.println(\\"Text : \\" + text); System.out.println(\\"Shift : \\" + s); System.out.println(\\"Cipher: \\" + encrypt(text, s)); } } # Output: Cipher: Lipps Asvph!"},{"prompt":"Write a PHP function for formatting a date and time according to the given format. date: '12-20-2020' time: '17:30' format: 'l, dS F Y h:i A'","completion":"function dateFormat(date, time, format) { dateTime = date_create_from_format('m-d-Y h:i', date . \\" \\" . time); return date_format(dateTime, format); } # Output: Thursday, 20th December 2020 05:30 PM"},{"prompt":"Write a SQL query to find the titles of all movies directed by Steven Spielberg.","completion":"SELECT title FROM movies WHERE director = 'Steven Spielberg';"},{"prompt":"Write an HTML code for creating a table with two rows and two columns","completion":"<table> <tr> <td>Row 1, Column 1</td> <td>Row 1, Column 2</td> </tr> <tr> <td>Row 2, Column 1</td> <td>Row 2, Column 2</td> </tr> </table>"},{"prompt":"Write a JavaScript snippet to show a prompt with the text \\"Please enter your name\\".","completion":"const name = prompt(\\"Please enter your name\\");"},{"prompt":"Write a Python function for transforming all characters of a string to upper case. string: 'Hello World!'","completion":"def toUpperCase(string): return string.upper() # Output: HELLO WORLD!"},{"prompt":"Write a HTML code for creating a dropdown list with 3 list items.","completion":"<select> <option>Item 1</option> <option>Item 2</option> <option>Item 3</option> </select>"},{"prompt":"Write a CSS code for making all <h1> headings red and bold.","completion":"h1 { color: red; font-weight: bold; }"},{"prompt":"Write a PHP code for sending an email to the current logged in user. user email: 'xyz@example.com'","completion":"to = 'xyz@example.com'; subject = 'Subject of email'; message = 'Message body of email'; headers = 'From: sender@example.com' . \\"rn\\" . 'Reply-To: sender@example.com' . \\"rn\\" . 'X-Mailer: PHP/' . phpversion(); mail(to, subject, message, headers);"},{"prompt":"Write a JavaScript snippet to make all the <div> elements in a webpage pink in color.","completion":"const divs = document.querySelectorAll('div'); divs.forEach(div => { div.style.backgroundColor = 'pink'; })"},{"prompt":"Explain the differences between the sorting algorithms Insertion Sort and Bubble Sort","completion":"Insertion sort and bubble sort are two of the most common sorting algorithms. Insertion sort is based on iterating and swapping through a list to find the right location for each element. Each element is compared to the previous element and swapped if it is out of order. Bubble sort is based on comparing each pair of adjacent elements and swapping them if they are out of order. Insertion sort has a time complexity of O(n^2) in average and worst-case scenarios, while bubble sort has a time complexity of O(n^2) in both. Bubble sort requires fewer comparison compared to insertion sort, however insertion sort requires fewer swaps. Therefore, insertion sort is usually more efficient when sorting a partially sorted list."},{"prompt":"Describe the difference between static and dynamic programming","completion":"Static programming is when all of the instructions to perform a task are written out before the program is executed. In static programming, the order of instructions and the number of instructions does not change during execution. Dynamic programming is when the instructions and number or order of instructions can change at runtime. The instructions and order of instructions may also depend on inputs or external conditions. Dynamic programming is mainly used in optimization problems to reduce the number of calculations needed for a solution."},{"prompt":"Generate a SQL query to select the name, age and salary of the employees in the table","completion":"SELECT name, age, salary FROM Employees;"},{"prompt":"Write a code to list out the unique numbers in an array arr = [1, 2, 1, 1, 3, 4, 4]","completion":"let arr = [1, 2, 1, 1, 3, 4, 4]; let unique_nums = []; for (let i = 0; i < arr.length; i++) { if (!unique_nums.includes(arr[i])) { unique_nums.push(arr[i]); } } console.log(unique_nums);"},{"prompt":"Consider the following code and identify the bug array = [1, 2, 3, 4] i = 0 while i < array.length: print(array[i] i++","completion":"array = [1, 2, 3, 4] i = 0 while i < array.length: print(array[i]) i++ // The bug is that the parenthesis after print(array[i] is missing. It should be print(array[i]) instead."},{"prompt":"Please debug the following Java code to calculate the average grade of 4 students. public class Main { public static void main (String[] args) { int student1 = 77; int student2 = 85; int student3 = 90; int student4 = 96; int totalScore = 0; totalScore += student1; totalScore += student2; totalScore += student3; totalScore += student4; double averageScore = totalScore / 4; System.out.println(\\"The average score is: \\" + averageScore); } }","completion":"public class Main { public static void main (String[] args) { int student1 = 77; int student2 = 85; int student3 = 90; int student4 = 96; int totalScore = 0; totalScore += student1; totalScore += student2; totalScore += student3; totalScore += student4; double averageScore = totalScore / 4.0; System.out.println(\\"The average score is: \\" + averageScore); } }"},{"prompt":"ert correction in the following HTML code <html> <body> <h1> This is a heading <h2> </body> </html>","completion":"<html> <body> <h1> This is a heading </h1> </body> </html>"},{"prompt":"Rewrite the following code snippet in Python to multiply an array of two numbers with each element in the array. var numbers = [3, 5]; for (var i = 0; i < numbers.length; i++) { numbers[i] = numbers[i] * 2; }","completion":"numbers = [3, 5] for i in range(len(numbers)): numbers[i] *= 2"},{"prompt":"Modify the following JavaScript code to make it return the absolute value of a given number. function myFunc(n) { return n; }","completion":"function myFunc(n) { return Math.abs(n); }"},{"prompt":"Write a SQL query to show all the students from the database 'students' with a first name starting with 'A'.","completion":"SELECT * FROM students WHERE first_name LIKE 'A%'"},{"prompt":"Write a Python program to check if a string starts with a letter 'A'. str = \\"I love apple","completion":"if str.startswith(\\"A\\"): print(\\"The string starts with 'A'.\\") else: print(\\"The string does not start with 'A'.\\")"},{"prompt":"Construct an array of 10 random numbers using JavaScript.","completion":"let randomArray = []; for (let i = 0; i < 10; i++) { randomArray.push(Math.floor(Math.random() * 100)); }"},{"prompt":"Explain the following piece of JavaScript code. let arr1 = [1,2,3,4]; let arr2 = [...arr1];","completion":"This code creates a new array, arr2, which contains the same elements as the original array, arr1. The spread operator (...) is used to unpack the elements of arr1, and copy them into the newly created arr2."},{"prompt":"Format the following JSON string. {\\"name\\":\\"John\\", \\"age\\":30, \\"city\\":\\"New York\\"}","completion":"{ \\"name\\": \\"John\\", \\"age\\": 30, \\"city\\": \\"New York\\" }"},{"prompt":"Use CSS to design a button for a website.","completion":".button { background-color: #4CAF50; border: none; color: white; padding: 15px 32px; text-align: center; text-decoration: none; font-size: 16px; border-radius: 5px; float: right; display: inline-block; }"},{"prompt":"Write an SQL query to select the departments with their corresponding average salary.","completion":"SELECT department, AVG(salary) FROM employees GROUP BY department;"},{"prompt":"Design a HTML form to accept user details (Name, age, address, etc).","completion":"<form action=\\"register.php\\" id=\\"form\\" method=\\"post\\"> <label for=\\"name\\">Name:</label><br> <input type=\\"text\\" name=\\"name\\"><br> <label for=\\"age\\">Age:</label><br> <input type=\\"number\\" name=\\"age\\"><br> <label for=\\"address\\">Address:</label><br> <input type=\\"text\\" name=\\"address\\"><br> <input type=\\"submit\\" value=\\"Submit\\"> </form>"},{"prompt":"Use Python to design a function that concatenates two given strings. \\"Hello\\" and \\"World","completion":"def concatStrings(a, b): return a + \\" \\" + b string1 = \\"Hello\\" string2 = \\"World\\" print(concatStrings(string1, string2)) # Output: Hello World"},{"prompt":"mplement the function compute_sum() that takes an array of integers and return their sum. arr = [1, 5, 7, -2, 3]","completion":"def compute_sum(arr): result = 0 for num in arr: result += num return result"},{"prompt":"it possible to create a copy of a multi-dimensional array in Python?","completion":"Yes, it is possible to create a copy of a multi-dimensional array in Python using the copy or deepcopy methods from the copy module. These methods return a new object that is a shallow or deep copy of an array respectively."},{"prompt":"Create a function which adds two strings together.","completion":"def add_strings(s1, s2): return s1 + s2"},{"prompt":"What kind of data structure is most suitable for storing a dictionary?","completion":"In most cases, a hash table is the most suitable data structure for storing a dictionary. It is a data structure that maps key/value pairs, allowing for fast access to the data."},{"prompt":"Write a code that finds the most frequent element in a list. data = [1, 2, 3, 2, 3, 2, 1, 2, 3]","completion":"def find_most_frequent(data): counts = {} for item in data: if item in counts: counts[item] += 1 else: counts[item] = 1 most_frequent_item = max(counts, key=counts.get) return most_frequent_item"},{"prompt":"w do you sort an array of integers in ascending and descending order?","completion":"The easiest way to sort an array of integers in ascending order is to use the built-in sorting function in the programming language of your choice. For example, in Python, the sorted() function can be used. Similarly, to sort an array of integers in descending order, you can use the sorted() function with the reverse argument set to True."},{"prompt":"mplement a method that verifies whether an array of numbers is in increasing order. arr = [2, 3, 5, 10, 15]","completion":"def is_increasing_order(arr): for i in range(len(arr)-1): if arr[i+1] <= arr[i]: return False return True"},{"prompt":"Write a function which checks if a number is a prime number.","completion":"def is_prime(n): if n <= 1: return False for i in range(2, n): if n % i == 0: return False return True"},{"prompt":"Write a function to convert an RGB color to HEX.","completion":"def rgb_to_hex(red, green, blue): return '#%02x%02x%02x' % (red, green, blue)"},{"prompt":"With given input string, create a program that returns a new string with the first character capitalized. hello world","completion":"def capitalize(text): return text[0].upper() + text[1:]"},{"prompt":"Create an SQL query to list all the employees' names and departments where the department is \\"Sales\\".","completion":"SELECT name, department FROM employees WHERE department='Sales';"},{"prompt":"Use an SQL query to count the number of different job roles in the employee table.","completion":"SELECT COUNT(DISTINCT job_role) FROM employee;"},{"prompt":"w can you add a comment in your JavaScript code that only displays when debug mode is on?","completion":"// Add this comment for debug mode if (debugMode === true) { console.log('This comment will only display in debug mode.'); }"},{"prompt":"w can you print the current memory address of a pointer in C?","completion":"printf(\\"The current memory address of the pointer is %p\\", pointer);"},{"prompt":"Construct a function to check whether given numbers are prime or not in Java.","completion":"public static boolean isPrime(int num) { if (num < 2) { return false; } for (int i = 2; i * i <= num; i++) { if (num % i == 0) { return false; } } return true; }"},{"prompt":"Write an algorithm to find the maximum substring in the given string. abcadefgh","completion":"def findMaxSubstring(string): max_len = 0 max_substring = \\"\\" for i in range(len(string)): current_substring = [] for j in range(i, len(string)): if string[j] not in current_substring: current_substring.append(string[j]) else: break if len(current_substring) > max_len: max_len = len(current_substring) max_substring = ''.join(current_substring) return max_substring"},{"prompt":"Construct a SQL query to retrieve all records in a table whose salary is greater than 50,000.","completion":"SELECT * FROM Employees WHERE salary > 50000;"},{"prompt":"Develop a python program to search for a substring in a string. String = \\"This is a sample string\\" Substring = \\"sample","completion":"def search_substring(string, substring): start = 0 index = -1 while start < len(string): i = string.find(substring, start) if i == -1: break else: index = i start = i + 1 return index"},{"prompt":"Write a SQL query to list the names and salaries of the employees who work in the finance department","completion":"SELECT name, salary FROM employee WHERE department = 'finance';"},{"prompt":"List the features of a matrix A","completion":"The features of a matrix A include the number of rows and columns, the rank, the determinant, the trace, the eigenvalues, the eigenvectors, and the transpose."},{"prompt":"Create a function to calculate the sum of squares x^2 + y^2","completion":"def sum_squares(x, y): return x**2 + y**2"},{"prompt":"Suggest a valid select statement to display the name and age of the youngest employee","completion":"SELECT name, age FROM employee ORDER BY age ASC LIMIT 1;"},{"prompt":"Name the Java abstract class used for user-defined exceptions","completion":"The Java abstract class used for user-defined exceptions is called \\"Throwable\\"."},{"prompt":"Write a while loop in Java to print all even numbers between 0 and 20","completion":"int number = 0; while(number <= 20){ if(number % 2 == 0){ System.out.println(number); } number++; }"},{"prompt":"Provide an example of a valid linked list in Java","completion":"class LinkedList { Node head; class Node { int data; Node next; Node(int d) { data = d; next = null; } } public void push(int new_data) { Node new_node = new Node(new_data); new_node.next = head; head = new_node; } }"},{"prompt":"Edit the following line of code from C++ to include the use of the precedence operator a + b * c;","completion":"a + (b * c);"},{"prompt":"Develop a regular expression to detect a valid e-mail address","completion":"^w+@[a-zA-Z_]+?.[a-zA-Z]{2,3}"},{"prompt":"Offer a solution to the following programming problem Given a list of strings, return the longest string","completion":"def longest_string(string_list): longest_string = \\"\\" for s in string_list: if len(s) > len(longest_string): longest_string = s return longest_string"},{"prompt":"What is a switch statement?","completion":"A switch statement is a control flow statement used to execute different blocks of code depending on the value of a given expression. It provides an alternative to using multiple if-else statements."},{"prompt":"Split the given string by hyphen. String: This-is-an-example","completion":"words = input_string.split(\\"-\\") # words is ['This', 'is', 'an', 'example']"},{"prompt":"Write a CSS rule to hide the first two rows of a table.","completion":"tr:nth-child(-n+2) { display: none; }"},{"prompt":"Design a distributed system to store and retrieve large amounts of data.","completion":"Design a distributed system utilizing multiple nodes. The system should include a shared storage system with data partitioned across nodes, a distributed hash table to store information about data locations and a replication system to provide fault tolerance."},{"prompt":"Describe the function of a web server.","completion":"A web server is a computer program or a device that provides functionality for clients such as web browsers in responding to requests for web resources, such as web pages and other content that are hosted on that server. It processes incoming HTTP requests and returns web resources in response to the clients."},{"prompt":"Convert the given text into its HTML equivalent. Text: This is important.","completion":"<p>This is important.</p>"},{"prompt":"Debug the following code to correct a logical error. def sort_list(nums): sorted_nums = [] for i in range(len(nums)): print(max(nums)) sorted_nums.append(max(nums)) nums.remove(max(nums)) return sorted_num","completion":"def sort_list(nums): sorted_nums = [] for i in range(len(nums)): max_num = max(nums) sorted_nums.append(max_num) nums.remove(max_num) return sorted_nums"},{"prompt":"Enhance the given code to add a search function. def display_list(list): for item in list: print(item)","completion":"def display_list(list, search_term=None): for item in list: if search_term is None or search_term in item: print(item)"},{"prompt":"Explain the use of regular expressions.","completion":"Regular expressions (also known as regex or regexp) are a powerful tool for matching patterns of text. They are commonly used for validating and extracting information from data, as well as for transforming and manipulating text. Regular expression can also be used to efficiently search, edit, and manipulate text."},{"prompt":"Design a web application that allows users to enter a text query and get results in an arranged format.","completion":"Design a web application with a search bar and a structured view to display search results. The application should accept a text query from the user and use a search engine to retrieve relevant results. The application should also display the results in an organized format such as a table or a list."},{"prompt":"Design a solution for the Towers of Hanoi problem using Java.","completion":"public class TowersOfHanoi { public static void towersOfHanoi(int n, char from_rod, char to_rod, char aux_rod) { if (n == 1) { System.out.println(\\"Move disk 1 from rod \\" + from_rod + \\" to rod \\" + to_rod); return; } towersOfHanoi(n - 1, from_rod, aux_rod, to_rod); System.out.println(\\"Move disk \\" + n + \\" from rod \\" + from_rod + \\" to rod \\" + to_rod); towersOfHanoi(n - 1, aux_rod, to_rod, from_rod); } // Driver method public static void main(String args[]) { // Number of disks int n = 4; // A, B and C are names of rods towersOfHanoi(n, 'A', 'C', 'B'); } }"},{"prompt":"Design an algorithm that can be used to identify if a given binary tree is a valid BST.","completion":"def isValidBST(root): # Base Case if root is None: return True # Check recursive if left is valid if not isValidBST(root.left): return False # If root's value is smaller than left subtree, not valid if root.left is not None and root.data < root.left.data: return False # Check recursive if right is valid if not isValidBST(root.right): return False # If root's value is greater than right subtree, not valid if root.right is not None and root.data > root.right.data: return False return True"},{"prompt":"Construct a function in C that prints all positive numbers present in an array.","completion":"void printPositiveNumbers(int arr[], int n) { for (int i = 0; i < n; i++) if (arr[i] >= 0) printf(\\"%d \\", arr[i]); }"},{"prompt":"Generate a program in JavaScript to find the longest common substring of two strings. str1 = \\"abcd\\" str2 = \\"cdefg","completion":"function longestCommonSubstring(str1, str2) { let max = 0; let curr = 0; let start = -1; let ans = null; let m = str1.length; let n = str2.length; /* Build an array to search */ let arr = new Array(m); for(let i = 0; i < m; i++) { arr[i] = new Array(n); arr[i].fill(0); } /* Traverse the array and check if the two chars match */ for(let i = 0; i < m; i++) { for(let j = 0; j < n; j++) { if(str1[i] === str2[j]) { arr[i][j] = (i === 0 || j === 0) ? 1 : (arr[i-1][j-1] + 1); curr = arr[i][j]; if(curr > max) { max = curr; start = i - max + 1; } } } } return str1.substring(start, start + max); } ans = longestCommonSubstring(str1, str2); console.log(ans); // ans will be \\"cd\\""},{"prompt":"Create a dictionary of student records, where each key is an integer and each value is a set containing the student’s name and age. {1: ('John', 24), 2: ('Tom', 26), 3: ('Harry', 20)}","completion":"student_dict = {1: {'name': 'John', 'age': 24}, 2: {'name': 'Tom', 'age': 26}, 3: {'name': 'Harry', 'age': 20}}"},{"prompt":"Write a R code to shuffle the elements of a given vector","completion":"shuffle <- function(x) sample(x)"},{"prompt":"Write a C program to find the root of a quadratic equation","completion":"#include <stdio.h> #include <math.h> // A utility function to calculate the discriminant float discriminant(float a, float b, float c) { return (b*b - 4*a*c); } // Function to calculate the roots of Quadratic Equations void findRoots(float a, float b, float c) { float discriminant = discriminant(a, b, c); if (discriminant > 0) { float x1 = (-b + sqrt(discriminant)) / (2*a); float x2 = (-b - sqrt(discriminant)) / (2*a); printf(\\"Roots are real and distinct.nx1 = %f, x2 = %f\\", x1, x2); } else if (discriminant == 0) { float x = -b / (2*a); printf(\\"Roots are real and same.nx1 = x2 = %f\\", x); } else { printf(\\"Roots are complex.n\\"); } } // Driver program int main() { float a = 3, b = 2, c = 1; findRoots(a, b, c); return 0; }"},{"prompt":"Write an Objective-C program to check if two strings are anagrams","completion":"- (BOOL) isAnagram:(NSString *)string1 with:(NSString *)string2 { NSUInteger length1 = [string1 length]; NSUInteger length2 = [string2 length]; if (length1 != length2) return NO; NSUInteger count[256] = { 0 }; unichar char1, char2; for(int i=0; i<length1; i++) { char1 = [string1 characterAtIndex:i]; char2 = [string2 characterAtIndex:i]; count[char1]++; count[char2]--; } for (int i=0; i<256; i++) { if (count[i] != 0) return NO; } return YES; }"},{"prompt":"Write a Python script that takes in a string and prints out the frequency distribution of the letters in the string. apple","completion":"def frequency_distribution(string): # create a dictionary of frequencies freq_dict = {} for i in string: if i in freq_dict: freq_dict[i] += 1 else: freq_dict[i] = 1 # print the result for key, value in freq_dict.items(): print (key + ': ' + str(value))"},{"prompt":"Create a dictionary where the keys are the integers up to 10, and the values are the cubes of those same integers.","completion":"def create_dict(): cube_dict = {} for i in range(1,11): cube_dict[i] = i**3 return cube_dict"},{"prompt":"Create a function that produces input strings for a calculator.","completion":"def create_input_string(nums, ops): input_str = \\"\\" for i in range(len(nums)): if i == 0: input_str += str(nums[i]) else: input_str += ops[i - 1] + str(nums[i]) return input_str"},{"prompt":"Create a function that takes an array as input and returns true if all elements in the array are similarly oriented (i.e. either all positive or all negative). [-2, -4, -7, -9]","completion":"def is_all_same_sign(arr): is_same_sign = True for i in range(len(arr)): if i == 0: sign = (arr[i] >= 0) else: if (arr[i] < 0) != sign: is_same_sign = False return is_same_sign"},{"prompt":"Write a function that produces an array of Fibonacci numbers with n numbers.","completion":"def fibonacci(n): if n == 0: return [] elif n == 1: return [0] elif n == 2: return [0, 1] elif n > 2: fib_nums = [0, 1] for i in range(2, n): fib_nums.append(fib_nums[i-1] + fib_nums[i-2]) return fib_nums"},{"prompt":"You need to provide an efficient way to implement a stack.","completion":"class Stack: def __init__(self): self.items = [] def push(self,item): self.items.append(item) def pop(self): return self.items.pop() def isEmpty(self): return (self.items == [])"},{"prompt":"Create an array with the following elements: 1, 2, 3, 2, 1.","completion":"[1, 2, 3, 2, 1]"},{"prompt":"Create a class for a bank account and include the following functions: deposit() and withdraw().","completion":"class BankAccount: def __init__(self, balance): self.balance = balance def deposit(self, amount): self.balance += amount def withdraw(self, amount): self.balance -= amount"},{"prompt":"Suggest an appropriate value for the following variable. number","completion":"8"},{"prompt":"Output all the elements in an array where the last character of the element is 's'. ['apple', 'cat', 'dog', 'elephants']","completion":"['elephants']"},{"prompt":"Write a SQL query that calculates the total number of orders made in the month of February.","completion":"SELECT COUNT(*) as Total_Orders from Orders WHERE MONTH(Order_Date) = 2;"},{"prompt":"Write CSS code to style a web page with a white background and black text.","completion":"body { background-color: white; color: black; }"},{"prompt":"Write a Python program to count the number of upper and lower case letters in a given string. s = “Hello World”","completion":"def count_letters(s): upper_count = 0 lower_count = 0 for c in s: if c.isupper(): upper_count += 1 elif c.islower(): lower_count += 1 return upper_count, lower_count"},{"prompt":"Write an algorithm to check if two given strings are an anagram. s1 = \\"listen\\"; s2 = \\"sile","completion":"Algorithm: Set s1Letters to an empty array Set s2Letters to an empty array Break s1 and s2 into letters and add them to respective arrays. Sort the arrays Compare the sorted arrays, if both are equal then strings are anagram else not."},{"prompt":"Create a method in Java to print square of a given number.","completion":"public static void printSquare(int number) { int result = number * number; System.out.println(\\"Square of \\" + number + \\" is: \\" + result); }"},{"prompt":"Calculate the number of Sundays in a given year that falls on the first of a month. Year: 2021","completion":"There are 5 Sundays in 2021 that fall on the first of a month."},{"prompt":"Create a 16-bit hash for this data. Data: 0x0010","completion":"The 16-bit hash for the given data is 0xB8C2."},{"prompt":"Perform 3 xor operations for the following data. Data1: 0x8B Data2: 0x7D","completion":"The result of Data1 XOR Data2 is 0xF6. The result of Data2 XOR Data1 is also 0xF6. The result of Data1 XOR Data1 is 0x00."},{"prompt":"Name the class for this object-oriented design. [Image]","completion":"The class name for this object-oriented design should be Foo."},{"prompt":"What data type is suitable for this data? Data: \\"apple","completion":"The suitable data type for this data is a string."},{"prompt":"Write Javascript code to create a timeout to set a message after 5 seconds.","completion":"setTimeout(() => { console.log('This is the message after 5 seconds'); }, 5000);"},{"prompt":"Calculate the area of this shape. [Image]","completion":"The area of this shape is 36 cm^2."},{"prompt":"Generate a Fibonacci sequence until the 100th number.","completion":"The generated Fibonacci sequence up to the 100th number is [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144]."},{"prompt":"Write a script to generate 10 random numbers between 1 and 100.","completion":"let randomNumbers = []; for (let i = 0; i < 10; i++) { let randNumber = Math.floor(Math.random() * 100 + 1); randomNumbers.push(randNumber); } console.log(randomNumbers);"},{"prompt":"Write a Python while loop that iterates through the list \`my_list\` and prints each item. my_list = [1, 2, 3, 4, 5]","completion":"i = 0 while i < len(my_list): print(my_list[i]) i += 1"},{"prompt":"Create a class called \`Employee\` that contains instances of a name, age, and salary.","completion":"class Employee: \\"\\"\\" This class contains instance variables of a name, age, and salary. \\"\\"\\" def __init__(self, name, age, salary): self.name = name self.age = age self.salary = salary"},{"prompt":"Print out the average of all elements within a given array. arr = [3, 7, 4, 8, 9]","completion":"arr = [3, 7, 4, 8, 9] sum = 0 for num in arr: sum += num average = sum / len(arr) print(average) # prints 6.4"},{"prompt":"What is the syntax for adding a new element to an array?","completion":"The syntax for adding a new element to an array is to use the append() method. For example, to add the element 'hello' to an array named my_array, you would use my_array.append('hello')."},{"prompt":"Using the comment as a guide, complete the code to reverse an array in-place. def reverse_arr(arr): \\"\\"\\"Reverses an array in-place. This means the existing array will be modified!\\"\\"\\" # TODO: write the code here","completion":"def reverse_arr(arr): \\"\\"\\"Reverses an array in-place. This means the existing array will be modified!\\"\\"\\" # reverse the array in-place for i in range(len(arr)//2): arr[i], arr[len(arr)-i-1] = arr[len(arr)-i-1], arr[i]"},{"prompt":"What is \\"type casting\\" in programming?","completion":"In programming, type casting is the process of converting a value from one data type to another. This is done either explicitly, by writing a cast operator, or implicitly, which is done by the programming language itself. Type casting is often used to convert values from one type to another to enable a program to work with values of multiple types."},{"prompt":"Update the code to add to a given list all even numbers between 0 and 10 (inclusive). my_list = []","completion":"my_list = [] for i in range(11): if i % 2 == 0: my_list.append(i) print(my_list) # prints [0, 2, 4, 6, 8, 10]"},{"prompt":"Submit a program to a computer that takes an array and reverses it. array = [1,2,3,4,5]","completion":"# Reverse an Array def reverse_array(arr): return [arr[i] for i in range(len(arr)-1, -1, -1)] # Driver program arr = [1, 2, 3, 4, 5] result = reverse_array(arr) print(result)"},{"prompt":"Print the longest substring of a string that does not have any repeated characters. string = \\"abcaabccbad","completion":"# Longest Substring with no repeated chars def longestSubstringWithoutDuplication(string): longest = \\"\\" start = 0 seen = {} for i, char in enumerate(string): # Stop current substring when repeating character is found if char in seen and start <= seen[char]: start = seen[char] + 1 # Add the character to the dictionary seen[char] = i # Update longest substring longest = max(longest, string[start:i + 1], key = len) return longest # Main Program string = \\"abcaabccbad\\" result = longestSubstringWithoutDuplication(string) print(result)"},{"prompt":"Submit an algorithm to find the first non-repeating character of the given string. string = \\"bacdedbage","completion":"# Find First Non-Repeating Character def first_non_repeat(string): seen = {} for char in string: if char not in seen: seen[char] = 0 seen[char] += 1 # Find the first character that appears once for i in range(len(string)): if seen[string[i]] == 1: return string[i] return '_' # Main Program string = \\"bacdedbage\\" result = first_non_repeat(string) print(result)"},{"prompt":"Generate a function that takes an array and computes the minimum element within the array. array = [2,3,5,1,4]","completion":"# Calculate Minimum Element def find_min(arr): # Set a variable to store the minimum element of the array minimum = arr[0] # Compare each element of the array with the current min element for i in range(1, len(arr)): if arr[i] < minimum: minimum = arr[i] return minimum # Main Program array = [2,3,5,1,4] result = find_min(array) print(result)"},{"prompt":"Edit the code so that it can handle the fractions. def calculate(x, y): if isinstance(x, int) and isinstance(y, int): return x + y else: return \\"Please use integers only.","completion":"def calculate(x, y): # Check if the numbers are integers or floats if isinstance(x, (int, float)) and isinstance(y, (int, float)): return x + y else: return \\"Please use numbers only.\\""},{"prompt":"Generate a program to delete a node with a given value from the Linked List. linked_list = [10, 5, 3, 4, 6, 5] value = 5","completion":"# Delete a Node from a Linked List # Node class class Node: def __init__(self, data): self.data = data self.next = None # LinkedList class class LinkedList: def __init__(self): self.head = None # Function to delete a node with a given value def delete_by_value(self, value): # Check if Linked List is empty if self.head is None: return # Keep a track of the current node current = self.head # Check to delete the head node if current.data == value: self.head = current.next current = None return # Iterate through the Linked List while current.next is not None: # Get the next node next_node = current.next # Check if the node contains the value if next_node.data == value: # Delete the node and break out of the loop current.next = None current.next = next_node.next break # Step to the next node current = current.next # Main Program linked_list = LinkedList() linked_list.head = Node(10) linked_list.head.next = Node(5) linked_list.head.next.next = Node(3) linked_list.head.next.next.next = Node(4) linked_list.head.next.next.next.next = Node(6) linked_list.head.next.next.next.next.next = Node(5) value = 5 linked_list.delete_by_value(value)"},{"prompt":"Create an array of strings, such that it contains strings of all possible combinations of n characters from a given string of characters. Given string: \\"ABC\\", n = 3","completion":"arr = [\\"AAA\\", \\"AAB\\", \\"AAC\\", \\"ABA\\", \\"ABB\\", \\"ABC\\", \\"ACA\\", \\"ACB\\", \\"ACC\\", \\"BAA\\", \\"BAB\\", \\"BAC\\", \\"BBA\\", \\"BBB\\", \\"BBC\\", \\"BCA\\", \\"BCB\\", \\"BCC\\", \\"CAA\\", \\"CAB\\", \\"CAC\\", \\"CBA\\", \\"CBB\\", \\"CBC\\", \\"CCA\\", \\"CCB\\", \\"CCC\\"]"},{"prompt":"let A be a n x n matrix, write a function to calculate the trace of A A = [[1,2,3],[4,5,6],[7,8,9]]","completion":"def trace(A): # initialize trace trace = 0 # loop through matrix A for i in range(len(A)): for j in range(len(A)): # when i equals j if i == j: trace += A[i][j] return trace"},{"prompt":"Write a function to calculate the hypotenuse of a right triangle when passed two sides (lenghts) of the triangle side1 = 4, side2 = 3","completion":"def calculate_hypotenuse(side1, side2): hypotenuse = (side1 ** 2 + side2 ** 2) ** 0.5 return hypotenuse"},{"prompt":"Write an algorithm to count the number of distinct values in an array arr = [1, 2, 3, 2, 4, 5, 3, 2]","completion":"def count_distinct_values(arr): # use a set to store the distinct values distinct_values = set() # loop through the array for i in arr: # add each value to the set distinct_values.add(i) # return the size of the set return len(distinct_values)"},{"prompt":"Create a function to convert a string of characters to lower case string = \\"HELLO WORLD","completion":"def to_lowercase(str): return str.lower()"},{"prompt":"Write a function which takes in two parameters and returns the largest of them num1 = 4, num2 = 3","completion":"def find_largest(num1, num2): if num1 > num2: return num1 else: return num2"},{"prompt":"Construct a class in Python that describes a car","completion":"class Car: def __init__(self, brand, color): self.brand = brand self.color = color def describe(self): return “This car is a {} and it is {}.”.format(self.brand, self.color)"},{"prompt":"Write a function to convert a timestamp from epoch time to human readable time epoch = 1597968470","completion":"import datetime def epoch_to_human_time(epoch): # convert timestamp to human readable time human_time = datetime.datetime.utcfromtimestamp(epoch).strftime('%Y-%m-%d %H:%M:%S') # return human readable time return human_time"},{"prompt":"Write a function that takes a string and returns the number of times the string occurs in the given array string = \\"hello\\", arr = [\\"hello\\", \\"hi\\", \\"hello\\", \\"salut\\"]","completion":"def count_string_occurrences(string, arr): # initialize count count = 0 # loop through array for i in arr: # if element equals string, increment count if i == string: count += 1 # return count return count"},{"prompt":"Create a 5x5 zero matrix using an array.","completion":"[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]"},{"prompt":"Suppose you have a string with a specific pattern, write a function that checks if the string follows the pattern. str = \\"WXYZWXYZ\\" pattern = 'XYYZ'","completion":"true"},{"prompt":"Write a class constructor for a Unicorn class with name, color, and age as parameters.","completion":"class Unicorn: def __init__(self, name, color, age): self.name = name self.color = color self.age = age"},{"prompt":"Change all the characters in a given string to uppercase. str = 'Hello World!'","completion":"'HELLO WORLD!'"},{"prompt":"Make a method that takes a given list and shuffles it. arr = [1, 2, 3, 4, 5, 6]","completion":"public List<Integer> shuffle(List<Integer> list) { Collections.shuffle(list); return list; }"},{"prompt":"Write a function that calculates the average of all the numbers in a given array. arr = [2, 6, 21, 14, 8]","completion":"public double calculateAverage(int[] arr) { double sum = 0; for (int i : arr) { sum += i; } return sum/arr.length; }"},{"prompt":"Create a function that prints out an ASCII art of a unicorn.","completion":"public void printUnicorn() { System.out.println(\\" ,/ \\"); System.out.println(\\" //~~~\\"); System.out.println(\\" (./ ~-_\\"); System.out.println(\\" _/ _/\\"); System.out.println(\\" /~ | _\\"); System.out.println(\\" (O O //// )\\"); System.out.println(\\" | O///// \\"); System.out.println(\\" | |//// \\"); System.out.println(\\" | |_/ \\"); System.out.println(\\" | _\\"); System.out.println(\\" \\"); System.out.println(\\" ____________| |\\"); System.out.println(\\" / |\\"); System.out.println(\\" __________/ _--'\\"); System.out.println(\\" ||| ||| |--'\\"); System.out.println(\\" _--'|||||||||||\`-\\"); System.out.println(\\" __ __________ \\"); System.out.println(\\" / ~~ ~~// /\\"); System.out.println(\\" / | | |\\"); System.out.println(\\" / | |_--'\\"); System.out.println(\\" |_________________/\\"); }"},{"prompt":"Write a code snippet to print all the items in a list using a for loop. List = [\\"apple\\",\\"banana\\",\\"orange\\"]","completion":"for item in list: print(item)"},{"prompt":"Create a function to generate a random string with the given length. Length = 8","completion":"import string import random def generate_random_string(length): char_list = \\"\\".join(random.sample(string.ascii_letters, length)) return char_list"},{"prompt":"Write a code to display the current directory path in the terminal.","completion":"import os currdir = os.getcwd() print(currdir)"},{"prompt":"Develop a script to create a new folder in the specified directory. Directory = \\"my_folder","completion":"import os def create_folder(folder_name): try: if not os.path.exists(folder_name): os.makedirs(folder_name) except OSError: print(\\"Error creating directory\\") create_folder(\\"my_folder\\")"},{"prompt":"Write a function that given a list of strings, filters out empty strings. string_list = [\\"Hello\\", \\"\\", \\"Bye\\", \\"\\", \\"See you!\\"]","completion":"def filter_empty_strings(string_list): return [string for string in string_list if string]"},{"prompt":"Write code to print the following data structure in an easily readable format. data = { \\"name\\": \\"John Smith\\", \\"age\\": 35, \\"languages\\": [\\"Python\\", \\"JavaScript\\", \\"SQL\\"] }","completion":"print('Name: {}'.format(data['name'])) print('Age: {}'.format(data['age'])) print('Languages: {}'.format(', '.join(data['languages'])))"},{"prompt":"Calculate the remainder when the following number is divided by 4: 50","completion":"remainder = 50 % 4 print('Remainder: {}'.format(remainder))"},{"prompt":"Create a dictionary called \\"contact\\" which contains three key-value pairs.","completion":"contact = { 'name': 'John', 'email': 'john@example.com', 'phone_number': '123-456-7890' }"},{"prompt":"What is the Pythonic way to combine two dictionaries key-value pairs and store it in a new dictionary?","completion":"combined_dict = {**dict_1, **dict_2}"},{"prompt":"Create a function that given a string of words, counts the frequency of each word. word_string = \\"I am learning a lot of new things!","completion":"def count_word_frequencies(word_string): # Split string into separate words words = word_string.split() # Initialize dictionary for word frequencies word_freqs = {} # Iterate through each word for word in words: if word in word_freqs: # Increment count if word already in dictionary word_freqs[word] += 1 else: # Add word if first time it appears word_freqs[word] = 1 return word_freqs word_frequencies = count_word_frequencies(\\"I am learning a lot of new things!\\") print(word_frequencies)"},{"prompt":"Given a list of numbers, construct a function that returns the highest and the lowest numbers. numbers = [3, 10, 2, 8, 5]","completion":"def get_min_max(numbers): # Set min and max to first number lowest = numbers[0] highest = numbers[0] # Iterate through each number for num in numbers: if num < lowest: lowest = num if num > highest: highest = num # Return min and max in a tuple return (lowest, highest) min_max_nums = get_min_max([3, 10, 2, 8, 5]) print(min_max_nums)"},{"prompt":"Create an object of the following data structure. data = { 'animal': { 'type': 'dog', 'name': 'Lucky', 'age': 5 } }","completion":"animal = { 'type': 'dog', 'name': 'Lucky', 'age': 5 }"},{"prompt":"Write a function that given a positive number, returns the sum of all positive numbers from 1 to the given number. number = 10","completion":"def sum_numbers(number): # Initialize sum total = 0 # Iterate through 1 to number for i in range(1, number + 1): total += i return total sum_result = sum_numbers(10) print('Total sum: {}'.format(sum_result))"},{"prompt":"Suggest a way to loop through the following data structure and print the value of the \\"name\\" property. data = [ { 'name': 'John', 'age': 30 }, { 'name': 'Jane', 'age': 24 } ]","completion":"for person in data: print(person['name'])"},{"prompt":"Append the following list to an existing list. listA = [1, 2, 3] listB = [4, 5, 6]","completion":"listA.extend(listB)"},{"prompt":"Find the index for the following string \\"Hello\\". string = \\"Hello World!","completion":"index = string.index('Hello') print('Index: {}'.format(index))"},{"prompt":"Given a string of words, what is the most efficient way to replace the word \\"a\\" with \\"the\\"? word_string = \\"I am learning a lot of new things!","completion":"# Using the replace method new_string = word_string.replace('a', 'the') print(new_string)"},{"prompt":"Add the two given integer variables using a Python script. a = 5 b = 10","completion":"sum = a + b print(sum)"},{"prompt":"What are the different ways to loop through a list in Python?","completion":"The different ways of looping through a list in Python are the for loop, the while loop, the list comprehension, and the map() function."},{"prompt":"Define a function to calculate the median of a given array of numbers.","completion":"def median(numbers): sorted_numbers = sorted(numbers) if len(numbers) % 2 == 1: return sorted_numbers[len(numbers)//2] else: middle1 = sorted_numbers[len(numbers)//2] middle2 = sorted_numbers[len(numbers)//2 - 1] return (middle1 + middle2) / 2"},{"prompt":"Change the second element of a tuple. my_tuple = (1,2,3)","completion":"my_tuple = (1, 2, 5)"},{"prompt":"What is the difference between a mutable and an immutable object?","completion":"A mutable object is an object which can be changed after it is created. Examples of mutable objects include lists, dictionaries, and sets. An immutable object is an object which cannot be changed after it is created. Examples of immutable objects include integers, floats, strings, and tuples."},{"prompt":"Describe the different data types available in Python.","completion":"The different data types available in Python include strings, integers, floats, tuples, lists, dictionaries, sets, booleans, and None."},{"prompt":"Define a callback in JavaScript to be used with the onclick event.","completion":"function callbackFunction() { // logic to be implemented when the button is clicked } // Set the callback function button.onclick = callbackFunction;"},{"prompt":"Output the command line argument received by a Python function.","completion":"import sys def get_command_line_arg(): print(sys.argv[1])"},{"prompt":"Create a class called Person with two variables, name and age, and two methods, getName() and setAge().","completion":"class Person: def __init__(self, name, age): self.name = name self.age = age def getName(self): return self.name def setAge(self, age): self.age = age"},{"prompt":"Write an HTML text input field with an ID of \\"name\\".","completion":"<input type=\\"text\\" id=\\"name\\" />"},{"prompt":"Create a type alias for a function pointer in C.","completion":"typedef int (*func_ptr)(int, int);"},{"prompt":"Using the list of numbers, create a filter in Python that removes all odd numbers from the list. numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]","completion":"filtered_list = list(filter(lambda x: x % 2 == 0, numbers))"},{"prompt":"Using JavaScript create an object named \\"person\\", and add a property named \\"name\\" with the string value of \\"John\\".","completion":"let person = { name: \\"John\\" };"},{"prompt":"Write a JavaScript function that converts a string to title case. string = \\"This is a sample sentence.","completion":"function titleCase(string) { return string .toLowerCase() .split(' ') .map(word => word.replace(word[0], word[0].toUpperCase())) .join(' '); }"},{"prompt":"Create a database table called \\"Users\\" with 4 columns \\"Name\\", \\"Age\\", \\"Address\\" and \\"PhoneNumber\\".","completion":"CREATE TABLE Users ( Name VARCHAR(80), Age INT, Address VARCHAR(120), PhoneNumber VARCHAR(20) );"},{"prompt":"Write a PHP program to get a string from the user and output the reverse of that string. string = \\"Hello World","completion":"<?php string = 'Hello World'; reverse = strrev(string); echo reverse; ?>"},{"prompt":"Design a simple user authentication system with a login page and logout page.","completion":"Create a separate directory containing HTML files for the login and logout pages. The login page should contain a form with fields for the user to enter their username and password. On successful validation, the user will be redirected to the home page. On the logout page, provide a link to destroy the user session and log the user out of the system."},{"prompt":"Create a function that calculates the area of a circle when provided with its radius. radius = 5","completion":"def calculate_area(radius): return 3.14 * radius * radius"},{"prompt":"Write a SQL query to sort a table in descending order by its \\"Date\\" column.","completion":"SELECT * FROM table_name ORDER BY Date DESC;"},{"prompt":"Create a function to calculate the value of \\"e\\" to the nth term. term = 5","completion":"def calculate_e(term): e = 0 for i in range(term + 1): e += 1 / math.factorial(i) return e"},{"prompt":"Given the following list of numbers, find the minimum value. numbers = [2, 4, 9, 3, 8]","completion":"min_number = min(numbers) print(f\\"Minimum value is {min_number}\\")"},{"prompt":"Replicate the functionality below in Java. def get_uppercase_chars(string): '''Returns a list of uppercase characters present in the input string.''' return [char for char in string if char.isupper()]","completion":"public List<Character> getUppercaseChars(String string){ List<Character> uppChars = new ArrayList<Character>(); for(char c : string.toCharArray()){ if(Character.isUpperCase(c)){ uppChars.add(c); } } return uppChars; }"},{"prompt":"Develop a formula in JavaScript to calculate the area of a circle. radius = 10","completion":"const pi = 3.14; const areaCircle = (radius) => { return pi * (radius * radius); } console.log(areaCircle(radius));"},{"prompt":"Which CSS style would you use to center align a <div> element?","completion":"div { margin: 0 auto; }"},{"prompt":"Compute the sum of an array using a JavaScript loop. array = [7, 2, 5, 9]","completion":"let sum = 0; for (let i = 0; i < array.length; i++) { sum += array[i]; } console.log(sum);"},{"prompt":"Create a Python script for removing all whitespace from a given string. string = \\" Hi There","completion":"no_whitespace = string.replace(\\" \\", \\"\\") print(no_whitespace)"},{"prompt":"w would you convert a given number in hexadecimal format to binary? number = 3E","completion":"hex_to_binary = bin(int(number, 16)).replace(\\"0b\\", \\"\\") print(hex_to_binary)"},{"prompt":"Create an SQL query to calculate the total sales per month.","completion":"SELECT MONTHNAME(date) as Month, SUM(sales) as Total_Sales FROM sales_records GROUP BY MONTH(date) ORDER BY MONTH(date);"},{"prompt":"Create a function in Python that prints out the numbers from 0 to the given parameter. 10","completion":"def printnumbers(n): for i in range(n+1): print(i) printnumbers(10)"},{"prompt":"What is a Heap in data structure?","completion":"A Heap is a specialized tree-based structure in data structures where the root node is compared with its children and arranged accordingly. Every node is either greater than or equal to or less than its children, according to a comparison key. Heaps are commonly used for Priority queues and efficient sorting algorithms."},{"prompt":"Using the below array, create an object with key for individual item and value for the count of the item. ['Apple', 'Apple', 'Orange', 'Banana']","completion":"items = ['Apple', 'Apple', 'Orange', 'Banana'] count = {} for item in items: if item in count: count[item] += 1 else: count[item] = 1 print(count)"},{"prompt":"What are lambda expressions in Python?","completion":"Lambda expressions in Python are anonymous functions that can take in arguments and return a value. They are commonly used for performing operations on collections of data, or for making code more concise."},{"prompt":"Write a C# code to convert a given number to words. 563","completion":"public static string NumberToWords(int number) { if (number == 0) return \\"Zero\\"; int[] num = new int[4]; int first = 0; int u, h, t; System.Text.StringBuilder sb = new System.Text.StringBuilder(); if (number < 0) { sb.Append(\\"Minus \\"); number = -number; } string[] words0 = { \\"\\", \\"One \\", \\"Two \\", \\"Three \\", \\"Four \\", \\"Five \\", \\"Six \\", \\"Seven \\", \\"Eight \\", \\"Nine \\" }; string[] words1 = { \\"Ten \\", \\"Eleven \\", \\"Twelve \\", \\"Thirteen \\", \\"Fourteen \\", \\"Fifteen \\", \\"Sixteen \\", \\"Seventeen \\", \\"Eighteen \\", \\"Nineteen \\" }; string[] words2 = { \\"Twenty \\", \\"Thirty \\", \\"Forty \\", \\"Fifty \\", \\"Sixty \\", \\"Seventy \\", \\"Eighty \\", \\"Ninety \\" }; string[] words3 = { \\"Thousand \\", \\"Lakh \\", \\"Crore \\" }; num[0] = number % 1000; // units num[1] = number / 1000; num[2] = number / 100000; num[1] = num[1] - 100 * num[2]; // thousands num[3] = number / 10000000; // crores num[2] = num[2] - 100 * num[3]; // lakhs for (int i = 3; i > 0; i--) { if (num[i] != 0) { first = i; break; } } for (int i = first; i >= 0; i--) { if (num[i] == 0) continue; u = num[i] % 10; // ones t = num[i] / 10; h = num[i] / 100; // hundreds t = t - 10 * h; // tens if (h > 0) sb.Append(words0[h] + \\"Hundred \\"); if (u > 0 || t > 0) { if (h > 0 || i < first) sb.Append(\\"and \\"); if (t == 0) sb.Append(words0[u]); else if (t == 1) sb.Append(words1[u]); else sb.Append(words2[t - 2] + words0[u]); } if (i != 0) sb.Append(words3[i - 1]); } return sb.ToString().TrimEnd(); } NumberToWords(563); // Output: Five Hundred Sixty Three"},{"prompt":"Sort a given list of objects(integers or strings) as fastest as you can. [1, 13, 45, 11, 6, 27]","completion":"[1, 6, 11, 13, 27, 45]"},{"prompt":"dentify which type of triangle the 3 sides of length a, b, and c form. a = 4, b = 4, c = 6","completion":"The triangle is an isosceles triangle as two of its side are of equal length."},{"prompt":"Write a JavaScript program to compute the sum of all the given values. values = [1, 2, 3, 4, 5]","completion":"function sumValues(values) { let sum = 0; for (let i = 0; i < values.length; i++) { sum += values[i] } return sum; } console.log(sumValues([1, 2, 3, 4, 5]));"},{"prompt":"Compute the centroid of given points using mathematical formulas. points = [(2, 3), (4, 7), (6, 9)]","completion":"def calculate_centroid(points): n = len(points) centroidX = sum(row[0] for row in points) / n centroidY = sum(row[1] for row in points) / n return [centroidX, centroidY] points = [(2, 3), (4, 7), (6, 9)] print(calculate_centroid(points))"},{"prompt":"List the constants and variables from the script. def add_two_numbers(a, b): result = a + b return resul","completion":"Constants: None Variables: a, b, result"},{"prompt":"Write an algorithm for adding two numbers.","completion":"Step 1: Declare two variables a and b of type int. Step 2: Read the two numbers and store them in a and b. Step 3: Compute the sum of the two numbers and store it in a variable sum. Step 4: Print sum."},{"prompt":"mplement the function with input parameters, described below. Parameters: a, b (both of type int)","completion":"def add(a, b): \\"\\"\\" Parameters: a, b (both of type int) Returns: the sum of two input parameters, a+b (int) \\"\\"\\" return a + b"},{"prompt":"Generate 10 random numbers between 5 to 10.","completion":"import random # Generate 10 random numbers between 5 and 10 random_numbers = [random.randint(5, 10) for _ in range(10)] print(\\"The 10 random numbers are: \\", random_numbers)"},{"prompt":"Convert the binary input to its decimal value. binary = \\"1101","completion":"def binary_to_decimal(binary): decimal = 0 for digit in binary: decimal = decimal * 2 + int(digit) return decimal print(binary_to_decimal(\\"1101\\")) # Output: 13"},{"prompt":"Create an HTML page which contains a heading with the text \\"Hello World\\".","completion":"<html> <head> <title>Hello World</title> </head> <body> <h1>Hello World</h1> </body> </html>"},{"prompt":"Explain what a constructor is in Java.","completion":"A constructor in Java is a special type of method that is used to initialize an object when it is created. A constructor is invoked automatically when an instance of an object is created and is usually used to set initial values for the object’s instance variables. Constructors can also be overloaded to accept different parameters."},{"prompt":"Construct a binary search tree from the given array of integers. [ 10, 5, 15, 1, 8, 12, 2 ]","completion":"class Node: def __init__(self, data): self.data = data self.left = None self.right = None def insert(root,data): if root is None: return Node(data) else: if root.data > data: root.left=insert(root.left,data) else: root.right=insert(root.right, data) return root root = None nodes = [10, 5, 15, 1, 8, 12, 2] for data in nodes: root = insert(root, data)"},{"prompt":"Create a function to parse the given HTML and return an array containing the text content of all the <p> tags. html: <html> <head> <title>Parsing HTML</title> </head> <body> <h1>Parsing HTML</h1> <p>This is the first paragraph.</p> <p>This is the second paragraph.</p> </body> </html>","completion":"def get_p_tags(html): soup = BeautifulSoup(html,\\"html.parser\\") p_tags = soup.find_all('p') content = [] for tag in p_tags: content.append(tag.get_text()) return content html = \\"\\"\\" <html> <head> <title>Parsing HTML</title> </head> <body> <h1>Parsing HTML</h1> <p>This is the first paragraph.</p> <p>This is the second paragraph.</p> </body> </html> \\"\\"\\" print(get_p_tags(html))"},{"prompt":"Create a program to filter out keywords from a given text. Text: This is a text containing some keywords Keywords: [\\"keywords\\", \\"text\\"]","completion":"def filter_keywords(text, keywords): words = text.split() filtered_words = [word for word in words if word not in keywords] return ' '.join(filtered_words) text = 'This is a text containing some keywords' keywords = ['keywords', 'text'] print(filter_keywords(text, keywords))"},{"prompt":"Create a program to find the most frequently used word in a given text. Text: Machine learning is a subset of artificial intelligence and is a powerful tool in data science.","completion":"import collections # function to get most frequently used word def most_frequent(string): # split the string into list of words split_it = string.split() # pass the split_it list to instance of Counter class. Counter = collections.Counter(split_it) # most_common() produces k frequently encountered # input values and their respective counts. most_occur = Counter.most_common(1) return most_occur[0][0] #Driver function text = \\"Machine learning is a subset of artificial intelligence and is a powerful tool in data science.\\" print(most_frequent(text))"},{"prompt":"Edit the code to print out the HTML code for a table with three columns.","completion":"<table> <tr> <th>Column 1</th> <th>Column 2</th> <th>Column 3</th> </tr> <tr> <td>Row 1 Column 1</td> <td>Row 1 Column 2</td> <td>Row 1 Column 3</td> </tr> </table>"},{"prompt":"Build a function that takes in an array of integers and returns an average. [5, 8, 6, 9]","completion":"7.5"},{"prompt":"Construct a regex expression that will check if a email is valid.","completion":"^[A-Za-z0-9.'+-_]+(@)[A-Za-z0-9.-]+([.][a-zA-Z]{2,4})+"},{"prompt":"Create a nested loop that increments a variable from 0 to 5.","completion":"for i in range(0, 5): for j in range(0, 5): var += 1"},{"prompt":"Construct another array containing the product of each corresponding elements from two given array. Array A = [2, 4, 3] Array B = [10, 5, 6]","completion":"Array C = [20, 20, 18]"},{"prompt":"Create a for loop that prints the multiples of 3 from 0 to 30.","completion":"for (var i = 0; i <= 30; i++) { if (i % 3 == 0) { console.log(i); } }"},{"prompt":"Construct a function which will take the name of a month as a parameter and return the number of days in that month.","completion":"function daysInMonth(month) { switch (month) { case \\"January\\": case \\"March\\": case \\"May\\": case \\"July\\": case \\"August\\": case \\"October\\": case \\"December\\": return 31; case \\"April\\": case \\"June\\": case \\"September\\": case \\"November\\": return 30; case \\"February\\": return 29; default: throw new Error('Invalid month'); } }"},{"prompt":"Write a function that checks if a given string contains a valid date.","completion":"function isValidDate(dateString) { var regEx = /^d{4}-d{2}-d{2}/; if(!dateString.match(regEx)) return false; // Invalid format var d = new Date(dateString); if(Number.isNaN(d.getTime())) return false; // Invalid date return d.toISOString().slice(0,10) === dateString; };"},{"prompt":"Build a function that takes an array parameter and returns the sum of the squares of its elements. [3, 4, 5]","completion":"54 (3^2 + 4^2 + 5^2 = 54)"},{"prompt":"Write a Python Class to store a telephone directory's details.","completion":"class TelephoneDirectory: def __init__(self): self.contacts = {} def add(self, name, number): self.contacts[name] = number def find(self, name): return self.contacts[name]"},{"prompt":"Create a function in SQL to return the average of all values in a column.","completion":"SELECT AVG(column_name) FROM table_name;"},{"prompt":"Write a JavaScript function to validate the syntax of an IP address.","completion":"function validateIP(ip) { const splitIP = ip.split('.'); if (splitIP.length !== 4) { return false; } for (let i = 0; i < 4; i++) { let num = Number(splitIP[i]); if(num < 0 || num > 255 || isNaN(num)) { return false; } } return true; }"},{"prompt":"Design a MySQL query to count the number of occurrences for each letter of the alphabet in a given string. \\"Hello world","completion":"SELECT COUNT(CASE WHEN x LIKE 'A%' THEN 1 END) as letterA, COUNT(CASE WHEN x LIKE 'B%' THEN 1 END) as letterB, ... COUNT(CASE WHEN x LIKE 'Y%' THEN 1 END) as letterY, COUNT(CASE WHEN x LIKE 'Z%' THEN 1 END) as letterZ FROM ( SELECT * FROM (SELECT * FROM STRING_SPLIT('Hello World','')) t1 ) t2"},{"prompt":"Design a function in Java to take two numbers and return the smallest one.","completion":"int min(int a, int b) { if (a < b) return a; else return b; }"},{"prompt":"Create an Angular controller that adds two numbers.","completion":"app.controller(\\"addNumbersController\\", function(scope) { scope.total = 0; scope.add = function() { scope.total = scope.number1 + scope.number2; } });"},{"prompt":"Design a Python script to extract the name, date of birth, and address from a given string. John Smith; 10/03/1994; 9 Hall Street, Anytow","completion":"import re pattern = re.compile(r'(?P<name>[w ]+); (?P<dob>[d/]+); (?P<addr>[w ]+[,][w ]+)') match = pattern.search('John Smith; 10/03/1994; 9 Hall Street, Anytown') name = match.group('name') dob = match.group('dob') addr = match.group('addr')"},{"prompt":"Explain what is a median in statistics.","completion":"The median is a statistical measure that is used to represent the middle value of a set of data points. It is calculated by arranging the given data points in ascending or descending order and taking the mean of the two middle values, if the set of data points contains an even number of values. If it contains an odd number of values, the median is simply the middle value. The median is not affected by outliers, making it a more robust measure of central tendency than the mean. It is a helpful measure when analyzing large datasets, as it can give a better representation of the data than a mean, which can be greatly influenced by outliers."},{"prompt":"Create a SQL query that will calculate the maximum value for a given column. Table T: Columns: [A, B, C] Rows: [1, 2, 3, 4]","completion":"SELECT MAX(A) FROM T;"},{"prompt":"Write a SQL query that will select all the records that match a given date. Table T: Columns: [x, y, z, date] Rows: [1, 2, 3, 4]","completion":"SELECT * from T WHERE date = 'YYYY-MM-DD';"},{"prompt":"Explain what is a neural network.","completion":"A neural network is an artificial intelligence system made up of connected units which process information. Each unit is analogous to a neuron in the human brain, and in a neural network, information travels from the input nodes, through the hidden layers, to the output nodes. The neurons in each layer are connected to each other, and the strength of their connection is determined by weights that are specified in advance. When input data enters the neural network, it is processed through the layers and is ultimately used to generate a numerical output corresponding to the classified input."},{"prompt":"Explain what is an algorithm.","completion":"An algorithm is a set of steps or procedures used to solve a problem or accomplish a task. Algorithms are designed to perform an operation on a given set of inputs in order to obtain the desired output. Algorithms can be implemented in various ways, such as in pseudocode or in a programming language. Algorithms are commonly used for complex tasks such as image processing, data sorting, text processing, and AI applications."},{"prompt":"Create a RegEx pattern to match a text string with a pattern string.","completion":"pattern = re.compile(r\\"patternstring\\")"},{"prompt":"Create a function that creates a random number in a given range.","completion":"def random_number(n): return random.randint(1, n)"},{"prompt":"Create a MySQL query to select records from a table, where the row ID is equal to 5.","completion":"SELECT * FROM table_name WHERE id = 5;"},{"prompt":"Create a program in PHP to print a multiplication table from 1-9.","completion":"<?php for (i = 1; i < 10; i++) { for (j = 1; j <= 10; j++) { echo i. \\" x \\". j. \\" = \\". (i*j). \\"<br/>\\"; } echo \\"<br/>\\"; } ?>"},{"prompt":"Write a C program to find the largest number from a set of 6 integer inputs. int a = 7, b = 10, c = 12, d = 4, e = 9, f = 6","completion":"#include <stdio.h> int max(int a, int b, int c, int d, int e, int f) { int max = a; if (b > max) max = b; if (c > max) max = c; if (d > max) max = d; if (e > max) max = e; if (f > max) max = f; return max; } // Driver code int main() { int a = 7, b = 10, c = 12, d = 4, e = 9, f = 6; printf(\\"Maximum element is %d\\", max(a, b, c, d, e, f)); return 0; }"},{"prompt":"Create a web page with a table of 4 columns and a submit button to submit the table data.","completion":"<html> <head></head> <body> <form> <table> <thead> <tr><th>Column 1</th><th>Column 2</th><th>Column 3</th><th>Column 4</th></tr> </thead> <tbody> <!-- your content here --> </tbody> </table> <input type=\\"submit\\" value=\\"Submit Table Data\\" /> </form> </body> </html>"},{"prompt":"Rewrite the given function without using the ternary expression. def func(x): return x if x > 0 else x + 10","completion":"def func(x): if x > 0: return x else: return x + 10"},{"prompt":"Write a code snippet to format a date in \\"DD/MM/YYYY\\" format. date = \\"06-02-2021","completion":"newDate = date.split(\\"-\\") formattedDate = newDate[2] + \\"/\\" + newDate[1] + \\"/\\" + newDate[0]"},{"prompt":"Rearrange the characters of given string in the order of their frequency. String = \\"tree","completion":"def rearrange(string): Frequency={} newstr='' for c in string: if c not in Frequency: Frequency[c] = 1 else: Frequency[c] = Frequency[c]+1 for key,value in sorted(Frequency.items(), key=lambda x: x[1], reverse=True): for i in range(value): newstr = newstr+key return newstr"},{"prompt":"Create a program to check if a number lies between two other numbers. Num1 = 25 Num2 = 70 Num3 = 40","completion":"def check_in_range(num1, num2, num3): if (num1 < num3 and num3 < num2): return True else: return False"},{"prompt":"Write an SQL query to retrieve names and email addresses from a table called \\"user_info\\".","completion":"SELECT name, email FROM user_info;"},{"prompt":"Write a Bash script for creating a directory in the current working directory.","completion":"#!/bin/bash # Create a directory mkdir myDir"},{"prompt":"Write a function in Python that takes two strings as input and returns a sorted version of the first string with all occurrences of the letters in the second string removed. firstString = 'hello world' secondString = 'lo'","completion":"def remove_occurrences(first_string, second_string): original_string_list = list(first_string) for char in second_string: if char in original_string_list: original_string_list.remove(char) return ''.join(sorted(original_string_list)) # Usage print(remove_occurrences('hello world', 'lo')) # Output: dehwr"},{"prompt":"Write an HTML code snippet to display a blue heart symbol.","completion":"<span style=\\"color: blue; font-size: 2em;\\">&#9829;</span>"},{"prompt":"Develop an AI model to classify emails with spam contents.","completion":"# import necessary libraries in Python import pandas as pd import numpy as np from sklearn.model_selection import train_test_split from sklearn.feature_extraction.text import TfidfVectorizer from sklearn.naive_bayes import MultinomialNB # read data df = pd.read_csv('emails.csv') X = df['text'] y = df['label'] # Vectorize emails using TF-IDF vectorizer = TfidfVectorizer() X_vec = vectorizer.fit_transform(X) # split dataset into training and test data X_train, X_test, y_train, y_test = train_test_split(X_vec, y, test_size=0.2, random_state=2) # train model using the training data clf = MultinomialNB() clf.fit(X_train, y_train) # evaluate performance on the test data score = clf.score(X_test, y_test) print(f'Model Accuracy: {score*100}%')"},{"prompt":"Write a script in Node.js to log a message to the console.","completion":"console.log('Hello World');"},{"prompt":"Write an Apache Spark code snippet to count the number of elements in an array of integers.","completion":"# This code is written in Scala val array = Array(1, 2, 3, 4, 5) val count = array.count(_ => true) println(s\\"The number of elements in the array is count\\")"},{"prompt":"Develop a natural language processing model to detect sarcasm in text.","completion":"# This code is written in Python import numpy as np import pandas as pd from sklearn.feature_extraction.text import CountVectorizer from sklearn.model_selection import train_test_split from sklearn.linear_model import LogisticRegression # Load dataset df = pd.read_csv('sarcasm_data.csv') # Vectorize text using CountVectorizer vectorizer = CountVectorizer() X = vectorizer.fit_transform(df['text']) y = df['label'] # Split into train and test dataset X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=2) # Train model using Logistic Regression model = LogisticRegression() model.fit(X_train, y_train) # Evaluate model performance score = model.score(X_test, y_test) print(f'Model Accuracy: {score*100}%')"},{"prompt":"Write an SQL query to calculate the sum of salaries from a table called 'employees'.","completion":"SELECT SUM(salary) FROM employees;"},{"prompt":"Transform the string from all lowercase characters to all uppercase characters. a string for example","completion":"string newString = originalString.toUpperCase();"},{"prompt":"Compute the union of two sets A and B using algorithms. <[2,4,5,6], [1,2,3,4]>","completion":"The union of sets A and B is [1,2,3,4,5,6]."},{"prompt":"Given a string, replace every letter with its corresponding ASCII character code. \\"hello world","completion":"String newString = \\"104 101 108 108 111 32 119 111 114 108 100\\";"},{"prompt":"Create a for loop to iterate through a given collection and print out an index for each element. [5, 10, 15, 20]","completion":"for i, element in enumerate(collection): print(i, element) // Output 0 5 1 10 2 15 3 20"},{"prompt":"Create a Python class with two methods; one to add two numbers, and another to subtract two numbers.","completion":"class Calculator: def add(self, x, y): return x + y def subtract(self, x, y): return x - y"},{"prompt":"Given a list of numbers, calculate the median value. [5,9,1,4,8,7]","completion":"The median value of the list is 6."},{"prompt":"Create a CSS style sheet to make the text on a page bold and the background yellow.","completion":"body { font-weight: bold; background-color: yellow; }"},{"prompt":"Create an HTML form to take user input with two fields.","completion":"<form action=\\"form-handler.php\\" method=\\"post\\"> <label>Name: <input type=\\"text\\" name=\\"name\\"></label> <label>Email: <input type=\\"email\\" name=\\"email\\"></label> <input type=\\"submit\\" value=\\"Submit\\"> </form>"},{"prompt":"Write a MySQL query to update a table cell. Update 'salary' value from 20000 to 21000 for employee to 'John' in 'employees' table.","completion":"UPDATE employees SET salary = 21000 WHERE name = 'John';"},{"prompt":"Use a switch statement to check if a number is between 1 and 10. 7","completion":"switch(number){ case 1: case 2: case 3: case 4: case 5: case 6: case 7: case 8: case 9: case 10: //number is between 1 and 10 break; default: //number is not between 1 and 10 break; }"},{"prompt":"Convert this Python statement into a list comprehension. for item1 in list1: for item2 in list2: if item1 == item2: result_list.append(item1)","completion":"result_list = [item1 for item1 in list1 for item2 in list2 if item1 == item2]"},{"prompt":"Write an SQL query to count the number of books of each genre. Table Name: books Attributes: id, title, author, genre","completion":"SELECT genre, COUNT(*) AS \\"Number Of Books\\" FROM books GROUP BY genre;"},{"prompt":"Write a Java program to create a calculator using Switch statement.","completion":"import java.util.Scanner; public class Calculator { public static void main(String[] args) { Scanner sc = new Scanner(System.in); System.out.println(\\"Please enter two numbers: \\"); int firstNumber = sc.nextInt(); int secondNumber = sc.nextInt(); System.out.println(\\"Please enter an operator (+, -, *, /): \\"); char operator = sc.next().charAt(0); switch (operator) { case '+': System.out.println(firstNumber + secondNumber); break; case '-': System.out.println(firstNumber - secondNumber); break; case '*': System.out.println(firstNumber * secondNumber); break; case '/': System.out.println(firstNumber / secondNumber); break; default: System.out.println(\\"Invalid operator!\\"); break; } sc.close(); } }"},{"prompt":"Write a SQL query to find all customers who have purchased a product with a price greater than 1000. Table Name: products Attributes: id, name, price Table Name: purchases Attributes: product_id, customer_id, date","completion":"SELECT p.customer_id FROM purchases AS p INNER JOIN products AS pr ON p.product_id = pr.id WHERE pr.price > 1000;"},{"prompt":"Write an HTML page to display a table of products at a retail store. Table Name: products Attributes: id, name, price, descriptio","completion":"<html> <head> <title>Retail Store Products</title> </head> <body> <h2>Retail Store Products</h2> <table> <tr> <th>ID</th> <th>Name</th> <th>Price</th> <th>Description</th> </tr> <tr> <td>1</td> <td>Product A</td> <td>23.99</td> <td>A great product for everyday use.</td> </tr> <tr> <td>2</td> <td>Product B</td> <td>29.99</td> <td>A must-have product.</td> </tr> <tr> <td>3</td> <td>Product C</td> <td>17.99</td> <td>A great product for a low price.</td> </tr> </table> </body> </html>"},{"prompt":"Given a SQL table named 'products', write a query to find all products with names starting with 'T'. Table Name: products Attributes: name","completion":"SELECT * FROM products WHERE name LIKE 'T%';"},{"prompt":"Write a Python program to remove an empty tuple from a list of tuples. list1 = [ (), ('a',), ('b', 'c'), ('d', 'e', 'f')]","completion":"list2 = [ t for t in list1 if t ] print(list2)"},{"prompt":"Write a function in Python to calculate the sum of all even integers in a list. [1, 2, 3, 4, 5]","completion":"def sum_even_ints(list_nums): total_sum = 0 for num in list_nums: if num % 2 == 0: total_sum += num return total_sum sum_even_ints([1, 2, 3, 4, 5])"},{"prompt":"w can we create a class in C++ to represent a point on a 2D plane?","completion":"class Point { int x; int y; public: Point(int _x, int _y) : x(_x), y(_y) {} };"},{"prompt":"Explain in your own words what is a pointer in C++.","completion":"A pointer is a variable in C++ that stores the address of a variable. A pointer is used to directly access the memory location of a variable, allowing the programmer to directly manipulate the value stored in the memory location. A pointer is declared with the asterisk (*) operator and the type of the variable being pointed to."},{"prompt":"We have a list of integers, write a function in Python to find the second smallest element in the list. [2, 4, 7, 10, 8]","completion":"def find_second_smallest(list_nums): sorted_list = sorted(list_nums) return sorted_list[1] find_second_smallest([2, 4, 7, 10, 8])"},{"prompt":"Make a for loop in JavaScript that prints \\"Hello\\" 5 times.","completion":"for (let i = 0; i < 5; i++) { console.log('Hello'); }"},{"prompt":"Create a class in Python to represent a book and include a method for getting the name of the book.","completion":"class Book: def __init__(self, name): self.name = name def get_name(self): return self.name"},{"prompt":"Create a switch statement in JavaScript to print different messages based on a given condition. condition = \\"Monday","completion":"switch (condition) { case \\"Monday\\": console.log(\\"It's Monday, be ready for the work week!\\"); break; case \\"Thursday\\": console.log(\\"It's Thursday, only a few days left!\\"); break; case \\"Friday\\": console.log(\\"It's Friday, the weekend is here!\\"); break; default: console.log(\\"Enjoy your day!\\"); break; }"},{"prompt":"What is the difference between pointer and reference variables in C++?","completion":"In C++, a pointer is a variable which holds the memory address of another variable. This memory address can point to a local variable within the same scope, or a global variable. On the other hand, a reference is an alias name for a previously defined variable. When a reference is initialized with a variable, it acts just like a pointer but unlike pointers, references cannot be reseated to point to a different object. A reference always refers to the same memory address for the lifetime of the reference."},{"prompt":"Write an R script to find all entries of a data frame where the 'Name column' equals 'John'.","completion":"df[dfName == \\"John\\", ]"},{"prompt":"Edit the following Python code to add a loop to generate a list of numbers from 1 to 10. numbers = []","completion":"numbers = [] for i in range(1, 11): numbers.append(i)"},{"prompt":"Write SQL code to remove duplicates from a database table. Table name: Items Columns: ID, Name","completion":"DELETE FROM Items WHERE ID NOT IN (SELECT MIN(Id) FROM Items GROUP BY Name)"},{"prompt":"Create a Bash script which prints out the environment variable HOME.","completion":"#!/bin/bash echo HOME"},{"prompt":"Add proper type annotations to the following Python function. def get_favorite_number(name): return name + 10","completion":"def get_favorite_number(name: str) -> int: return name + 10"},{"prompt":"Write a shell script to find the longest string from an array of strings.","completion":"#!/bin/bash arr=(\\"Hello\\" \\"This\\" \\"Is\\" \\"A\\" \\"Sample\\" \\"String\\") longest={arr[0]} for element in \\"{arr[@]}\\"; do if [[ {#longest} -lt {#element} ]]; then longest=\\"element\\" fi done echo longest"},{"prompt":"Rewrite the following program using OOP concepts. NUMBER_OF_ELEMENTS = 10 arr = [0] * NUMBER_OF_ELEMENTS def set_element(index, value): arr[index] = value","completion":"class Array(): def __init__(self, num_elements): self.arr = [0] * num_elements def set_element(self, index, value): self.arr[index] = value"},{"prompt":"Edit the program to print \\"Hello world!\\" in the output. def greet(): print(\\"Good morning!\\")","completion":"def greet(): print(\\"Hello world!\\")"},{"prompt":"Create a CSS style which will center-align the text.","completion":"text-align: center;"},{"prompt":"Write a Java method which will print the Fibonacci sequence based on a given number.","completion":"public void fibonacciSeries(int number) { int prev = 0; int current = 1; System.out.print(\\"Fibonacci Series of \\"+number+\\" numbers:\\"); for (int i = 1; i <= number; i++) { System.out.print(prev+\\" \\"); int sum = prev + current; prev = current; current = sum; } }"},{"prompt":"Modify the program to accept user input of two numbers, and show the result based on the operator provided. def calculate(num1, num2): result = num1 + num2 return resul","completion":"def calculate(num1, num2, operator): if (operator == '+'): result = num1 + num2 elif (operator == '-'): result = num1 - num2 elif (operator == '*'): result = num1 * num2 elif (operator == '/'): result = num1 / num2 else: print(\\"Invalid operator\\") return result"},{"prompt":"Create an object-oriented program that calculates the cost of a given item including sales tax. Item cost (without tax): 10 Input tax rate: 10%","completion":"//class definition class Item { constructor(cost, taxRate) { this.cost = cost; this.taxRate = taxRate; } //calculate the cost including sales tax getCostWithTax() { return this.cost * (1 + this.taxRate); } } //instantiate Item and calculate cost let item = new Item(10, 0.1); let costWithTax = item.getCostWithTax(); console.log(costWithTax); //11"},{"prompt":"Design a class in Java to represent a person's contact information like name, phone number and email address.","completion":"//class definition public class Contact { private String name; private String phoneNumber; private String email; public Contact(String name, String phoneNumber, String email) { this.name = name; this.phoneNumber = phoneNumber; this.email = email; } //getters and setters public String getName(){ return name; } public void setName(String name){ this.name = name; } public String getPhoneNumber(){ return phoneNumber; } public void setPhoneNumber(String phoneNumber){ this.phoneNumber = phoneNumber; } public String getEmail(){ return email; } public void setEmail(String email){ this.email = email; } }"},{"prompt":"Write a query in MongoDB to select an item with a price greater than 10.","completion":"db.items.find({\\"price\\": {gt: 10}});"},{"prompt":"Create a JavaScript program to find the minimum of two numbers.","completion":"function min(num1, num2) { if (num1 < num2) { return num1; } else { return num2; } }"},{"prompt":"Create a HTML page with a form containing two input boxes, one to enter a number and another to enter an operator (+, -, *, /).","completion":"<html> <head> <title>Calculator Form</title> </head> <body> <form action=\\"/calculate\\" method=\\"post\\"> <input type=\\"number\\" name=\\"num1\\" placeholder=\\"Enter a number\\" required> <input type=\\"text\\" name=\\"operator\\" placeholder=\\"Enter an operator (+, -, *, /)\\" required> <input type=\\"number\\" name=\\"num2\\" placeholder=\\"Enter a number\\" required> <input type=\\"submit\\" value=\\"Calculate\\"> </form> </body> </html>"},{"prompt":"Create an Apache Spark program written in Scala that takes in an RDD and returns the same RDD multiplied by 2.","completion":"val rdd = sc.parallelize(List(1,2,3,4,5)) val newRDD = rdd.map(x => x*2) print(newRDD.collect().mkString(\\",\\"))"},{"prompt":"You are given an array of integers and you need to find three numbers such that the sum of the three numbers is 0. nums = [-40, 40, -20, 60, 10, -80]","completion":"// Use a brute-force approach to find the three numbers for (let i = 0; i < nums.length; i++) { for (let j = i+1; j < nums.length; j++) { for (let k = j+1; k < nums.length; k++) { if (nums[i] + nums[j] + nums[k] === 0) { console.log(nums[i], nums[j], nums[k]) } } } } // Output -40, 40, -80"},{"prompt":"Write a regular expression to detect any email address.","completion":"S+@S+.S+"},{"prompt":"Read the given date string in the specified format and print out the day of the week. Date String: 03/02/2020 Format: mm/dd/yyyy","completion":"Thursday"},{"prompt":"Write a for loop to iterate over an array of numbers and calculate their sum. array=[1, 2, 3]","completion":"sum=0 for item in array: sum+=item print(sum)"},{"prompt":"dentify the HTML tag for the bold text. Text: This text should be bold","completion":"<b>This text should be bold</b>"},{"prompt":"Create a Python script to find the greatest common divisor (GCD) of a pair of integers. Number 1: 10 Number 2: 12","completion":"def findGCD(x, y): # This function implements the Euclidian algorithm # to find GCD of two numbers while(y): x, y = y, x % y return x # Driver program gcd = findGCD(10, 12) print(gcd)"},{"prompt":"Write a Java code snippet to take input from the user and print the result.","completion":"Scanner input = new Scanner(System.in); int number = input.nextInt(); System.out.println(number);"},{"prompt":"Write the code to create a class in Python named \\"Person\\".","completion":"class Person: def __init__(self, name, age=None): self.name = name self.age = age"},{"prompt":"Describe a complete algorithm for sorting n integers.","completion":"The algorithm for sorting n integers is a divide-and-conquer algorithm. The algorithm works as follows: 1. Select a pivot element from the array. 2. Split the array into two sub-arrays based on the pivot element. 3. For each of the sub-arrays, use the same sorting algorithm to sort their contents. 4. Once both sub-arrays are sorted, merge the two sub-arrays into one sorted array."},{"prompt":"Transform the following C code into Java code. int array[100]; int i, sum = 0; for (i = 0; i < 100; i++) sum += array[i];","completion":"int[] array = new int[100]; int sum = 0; for(int i = 0; i < array.length; i++){ sum += array[i]; }"},{"prompt":"Execute the following SQL query. SELECT count(*) FROM employee WHERE name LIKE '%John%';","completion":"SELECT COUNT(*) FROM employee WHERE name LIKE '%John%';"},{"prompt":"Python, write a program to remove all duplicates from a given list of integers.","completion":"def remove_duplicates(arr): result = [] seen = set() for item in arr: if item not in seen: result.append(item) seen.add(item) return result"},{"prompt":"Edit the following HTML code so the paragraph text's color is red. <p>This is a paragraph</p>","completion":"<p style=\\"color:red;\\">This is a paragraph</p>"},{"prompt":"Produce an R command that fits a linear regression model of the following form: y ~ x1 + x2 + x3.","completion":"fit <- lm(y ~ x1 + x2 + x3)"},{"prompt":"Adapt the following Java program to print the smallest number from an array of numbers.","completion":"public class Smallest_Number { public static void main(String[] args) { int arr[] = {10, 15, 5, 20}; int smallest = arr[0]; for (int i = 0; i < arr.length; i++) { if (arr[i] < smallest) { smallest = arr[i]; } } System.out.println(smallest); } }"},{"prompt":"Update the following code to be Python 3 compatible. print \\"Welcome to the Program.","completion":"print(\\"Welcome to the Program.\\")"},{"prompt":"Create a data structure suitable for storing a list of scores for a game.","completion":"scores = [] # Function to add a new score to the scores list def add_score(score): scores.append(score) # Function to display all the scores in the scores list def display_scores(): for score in scores: print(score)"},{"prompt":"Create an algorithm that takes in an array of integers and returns true if two of the integers add up to a target number. example_array = [10, 7, 8, 3, 5] target_num = 13","completion":"def two_sum_algorithm(arr, target): for i in range(len(arr)): for j in range(i + 1, len(arr)): if arr[i] + arr[j] == target: return True return False two_sum_algorithm(example_array, target_num)"},{"prompt":"Append the item \\"Banana\\" to the list below: fruits = [\\"Apple\\", \\"Strawberry\\", \\"Pear\\"]","completion":"fruits = [\\"Apple\\", \\"Strawberry\\", \\"Pear\\", \\"Banana\\"]"},{"prompt":"Sort the following list using Python's built-in sorting functions. unsorted_list = [5, 1, 6, 8, 2, 4]","completion":"unsorted_list.sort() # unsorted_list is now [1, 2, 4, 5, 6, 8]"},{"prompt":"Make a JavaScript fibonacci sequence generator that takes a given number from the user and prints out the first n elements of the fibonacci sequence.","completion":"function fibonacci(n){ let arr = [0, 1]; for (let i = 2; i < n + 1; i++){ arr.push(arr[i - 2] + arr[i -1]) } return arr.slice(0, n); }"},{"prompt":"mplement a SQL query to count the number of students who are from North America (NA)","completion":"SELECT COUNT(*) AS NumberOfStudents FROM Students WHERE Region='NA'"},{"prompt":"Write some HTML+CSS to create a navigation bar for a website. Example website navigation structure: Home, About, Contact, Products, Service","completion":"<nav> <ul> <li><a href=\\"index.html\\">Home</a></li> <li><a href=\\"about.html\\">About</a></li> <li><a href=\\"contact.html\\">Contact</a></li> <li><a href=\\"products.html\\">Products</a></li> <li><a href=\\"services.html\\">Services</a></li> </ul> </nav> <style> nav ul{ list-style-type: none; margin: 0; padding: 0; } nav ul li{ float: left; } nav ul li a { display: block; padding: 8px; text-decoration: none; } </style>"},{"prompt":"Create a Python function which takes a given string and replaces all its characters with the next consecutive character.","completion":"def shift_string(string): result = \\"\\" for ch in string: result += chr(ord(ch) + 1) return result"},{"prompt":"Create a function in JavaScript which prints all prime numbers up to a given number.","completion":"function isPrime(num) { for (let i = 2; i < num; i++) { if (num % i === 0) { return false; } } return true; } function printPrimes(num) { console.log(\\"The prime numbers are:\\"); for (let i = 2; i <= num; i++) { if (isPrime(i)) { console.log(i); } } }"},{"prompt":"mplement an algorithm in Python to find the GCD (Greatest Common Divisor) of two numbers","completion":"def gcd(a, b): if (a == 0): return b if (b == 0): return a if (a == b): return a if (a > b): return gcd(a-b, b) return gcd(a, b-a)"},{"prompt":"Write a script in Python to sort a list of words alphabetically.","completion":"words = ['Apple','Banana','Cherry','Orange'] words.sort() print(words)"},{"prompt":"Create a JavaScript function that takes a string as an argument and reverses it.","completion":"function reverseString(str) { return str.split('').reverse().join(''); }"},{"prompt":"Write a Java program for removing all white spaces from a given string.","completion":"public class RemoveSpace { public static String removeSpace(String str) { return str.replaceAll(\\"s\\",\\"\\"); } public static void main (String[] args) { String str = \\"Hello World!\\"; str = removeSpace(str); System.out.println(str); } }"},{"prompt":"Create a Python function which takes a dictionary and prints the contents of the dictionary in a human readable format.","completion":"def printDictionary(dictionary): for key in dictionary.keys(): print(key, \\":\\", dictionary[key])"},{"prompt":"Write a function that takes in a string of text and counts the number of times each letter appears in the string text = \\"The quick brown fox jumps over the lazy dog","completion":"def count_letters(text): letter_count = {} for character in text: if character not in letter_count: letter_count[character] = 1 else: letter_count[character] += 1 return letter_count print(count_letters(text))"},{"prompt":"Write a function in Python that will take two integers as inputs and compute their average. int1 = 10 int2 = 15","completion":"def calculate_average(int1, int2): return (int1 + int2) / 2 print(calculate_average(int1, int2))"},{"prompt":"Create a function in Python that takes a string as an input and returns a new string that is the reverse of the input string. string = \\"Reverse Me","completion":"def reverse_string(string): return string[::-1] print(reverse_string(string))"},{"prompt":"Create a SQL query to add a new column to a table called \\"students\\" which contains student id numbers and names.","completion":"ALTER TABLE students ADD COLUMN student_id INT;"},{"prompt":"Create a function in Python to remove all characters other than letters and numbers from a string. string = \\"This#%&string c&o#th=esa#@ll cha*%racter","completion":"import re def remove_characters(string): return re.sub('[^A-Za-z0-9]+', '', string) print(remove_characters(string))"},{"prompt":"Write a shell command to print out the environment variable PATH.","completion":"echo {PATH}"},{"prompt":"Create a function in Python to split a given string into a list of strings using a space as a delimiter. string = \\"This is a string to spl","completion":"def split_string(string): return string.split(\\" \\") print(split_string(string))"},{"prompt":"Write a SQL query to update the \\"job\\" column of the \\"employees\\" table to \\"engineer\\" for all rows with the \\"department\\" column value \\"IT\\".","completion":"UPDATE employees SET job = 'engineer' WHERE department = 'IT';"},{"prompt":"Write a function in Python to take a string as input and return a dictionary with the count of each letter in the string. string = \\"This is a string of character","completion":"def count_letters(string): letter_count = {} for char in string: if char not in letter_count: letter_count[char] = 1 else: letter_count[char] += 1; return letter_count print(count_letters(string))"},{"prompt":"Create a class for customer data.","completion":"class Customer: def __init__(self, name, age, email): self.name = name self.age = age self.email = email def get_name(self): return self.name def get_age(self): return self.age def get_email(self): return self.email"},{"prompt":"What is the principal difference between a linked list and an array?","completion":"The principal difference between a linked list and an array is that a linked list is a collection of points that each point to their respective memory locations, while an array is a contiguous block of memory locations. A linked list has the advantage of being able to insert and delete nodes at any time, while the elements of an array must be shifted to make room for new elements. Similarly, linked lists do not require a pre-allocated block of memory, so it is more memory efficient than an array."},{"prompt":"Add a method to the Customer class to print out customer's name, age and email","completion":"class Customer: def __init__(self, name, age, email): self.name = name self.age = age self.email = email def get_name(self): return self.name def get_age(self): return self.age def get_email(self): return self.email def print_customer_data(self): print('Name: ' + self.name + ', Age: ' + str(self.age) + ', Email: ' + self.email)"},{"prompt":"Write a function to calculate the sum of the elements of an array with float values.","completion":"def sum_float_array(float_array): total = 0 for i in float_array: total += i return total"},{"prompt":"What is the difference between while and do while loops in programming?","completion":"The main difference between while and do while loops is that a while loop will only execute the loop body if the condition evaluates to true, while a do while loop will always execute the loop body at least once, and then continue to execute the loop body until the condition evaluates to false. This means that a do while loop is guaranteed to run at least once, whereas a while loop may not run at all."},{"prompt":"Write a function to identify all palindromes in the given string.","completion":"def find_palindromes(string): result = [] for i in range(len(string)): for j in range(i+2,len(string)+1): if string[i:j] == string[j-1:i-1:-1]: result.append(string[i:j]) return result"},{"prompt":"Edit this HTML code to create an expandable navigation bar. <ul> <li><a href=\\"/home\\">Home</a></li> <li><a href=\\"/about\\">About</a></li> <li><a href=\\"/contact\\">Contact</a></li> </ul>","completion":"<ul> <li><a href=\\"/home\\">Home</a> <ul> <li><a href=\\"/about\\">About</a></li> <li><a href=\\"/contact\\">Contact</a></li> </ul> </li> </ul>"},{"prompt":"Determine the syntax for a function call in Python.","completion":"Function calls in Python must include the name of the function followed by parentheses and the arguments inside the parentheses. If you do not include any arguments, the parentheses should still be included. An example would be: my_function()"},{"prompt":"Provide a solution to print the following string in reverse order. String = \\"Hello, world!","completion":"print(\\"!\\".join(reversed(\\"Hello, world!\\"))) # Output: !dlrow ,olleH"},{"prompt":"Create a function in Java to detect if an input string is a palindrome.","completion":"public static boolean isPalindrome(String str){ int i=0,j=str.length()-1; while(i<j){ if(str.charAt(i)!=str.charAt(j)) return false; i++; j--; } return true; }"},{"prompt":"Build a program in Python to check if a number is Odd or Even.","completion":"def odd_even(n): if (n % 2 == 0): print(\\"Even\\") else: print(\\"Odd\\")"},{"prompt":"Create a program in Java that finds the maximum element in an array.","completion":"public static int getMaxElement(int[] arr) { int max = Integer.MIN_VALUE; for (int el : arr) { if (el > max) max = el; } return max; }"},{"prompt":"Write a JavaScript code snippet to set a value for a cookie.","completion":"document.cookie=\\"mycookie=myvalue\\";"},{"prompt":"Suggest a solution to print the third character from a string in Python. String = \\"Hello, world!","completion":"print(string[2]) # Output: l"},{"prompt":"Write a function to calculate the string length in a given string. String: \\"Hello, World!","completion":"def string_length(string): return len(string)"},{"prompt":"Use regex to find the number of digits in a given string. String: \\"743ABC123_*","completion":"import re def get_digits_count(string): return len(re.findall('d', string))"},{"prompt":"Create a class in C++ called Point that represents a point in the two-dimensional space.","completion":"class Point { double x; double y; public: Point(): x(0), y(0) { } Point(double _x, double _y): x(_x), y(_y) { } double getX() { return x; } double getY() { return y; } };"},{"prompt":"Write a Python program to find the closest number in a given array to a given number. Array: [3, 6, 9, 12, 15], Number: 10","completion":"def closest_number(nums, number): min_diff = abs(nums[0] - number) min_num = nums[0] for num in nums: min_diff_temp = abs(num - number) if min_diff_temp < min_diff: min_diff = min_diff_temp min_num = num return min_num"},{"prompt":"Remove all non-alphabetical characters from the given string. String: \\"Hello,123_[World!]%","completion":"import re def remove_non_alphabetic(string): return re.sub(\\"[^a-zA-Z ]\\", \\"\\", string)"},{"prompt":"Create a web page using HTML and CSS that contains a heading and a button.","completion":"<!DOCTYPE html> <html> <head> <title>My Web Page</title> </head> <body> <h1>My Web Page</h1> <button type=\\"button\\">Click Me!</button> </body> </html>"},{"prompt":"Create a for loop structure in JavaScript to iterate through the numbers from 0 to 10 and display them on the console.","completion":"for (var i=0; i<=10; i++){ console.log(i); }"},{"prompt":"Create an array in Python containing five strings.","completion":"my_words = [\\"Hello\\", \\"World\\", \\"Python\\", \\"Programming\\", \\"Code\\"]"},{"prompt":"Create a class in Python called Cat with constructor that takes three arguments i.e. name, color and age. The class should have three methods called meow, purr and display_info.","completion":"class Cat: def __init__(self, name, color, age): self.name = name self.color = color self.age = age def meow(self): print('%s the %s cat meows!' % (self.name, self.color)) def purr(self): print('%s the %s cat purrs contentedly.' % (self.name, self.color)) def display_info(self): print('%s is a %s cat and is %d years old.' % (self.name, self.color, self.age))"},{"prompt":"Sort the following array of numbers [7,2,4,1,9] in descending order using JavaScript. [7,2,4,1,9]","completion":"[9,7,4,2,1].sort(function(a,b){return b-a;});"},{"prompt":"Create an API in Node.js that returns \\"hello world\\" when it is invoked.","completion":"const express = require('express'); const app = express(); app.get('/', (req, res) => { res.status(200).send('Hello world!'); }); module.exports = app;"},{"prompt":"Show an example of a while loop in Python.","completion":"i = 0 while i < 10: print(i) i += 1"},{"prompt":"Write a code to print \\"hello world\\" on a web page using HTML.","completion":"<!DOCTYPE html> <html> <head> <title>Hello World</title> </head> <body> <h1>Hello World!</h1> </body> </html>"},{"prompt":"Given an array of integers, write an algorithm to reorder the array so that all the negative integers appear before all the positive integers. arr = [4, -7, -3, 9, 1, -4]","completion":"def reorder_arr(arr): negatives = [] positives = [] for item in arr: if item < 0: negatives.append(item) elif item >= 0: positives.append(item) return negatives + positives"},{"prompt":"w to delete a specific item from a Python dictionary?","completion":"dictionary_name.pop(\\"item_name\\", None)"},{"prompt":"Write a method to find the maximum number of elements in an array such that all subarrays add up to a specified number. arr = [1, 2, 3, 4, 5, 6, 7]","completion":"def find_max(arr, target): dp = [[False for i in range(target + 1)] for j in range(len(arr))] for i in range(len(arr)): dp[i][0] = True for i in range(1, len(arr)): for j in range(1, target + 1): if dp[i - 1][j]: dp[i][j] = dp[i - 1][j] elif j >= arr[i]: dp[i][j] = dp[i - 1][j - arr[i]] max_val = 0 for i in range(1, target + 1): if dp[len(arr) - 1][i]: max_val = max(max_val, i) return max_val"},{"prompt":"w do you check if a character is a digit in Python?","completion":"if c.isdigit(): # character is a digit"},{"prompt":"Write a method to remove the trailing spaces from a string in Python.","completion":"def remove_trailing_spaces(s): return s.rstrip()"},{"prompt":"w to generate a random number between two given numbers in Python?","completion":"import random def random_number(minimum, maximum): return random.randint(minimum, maximum)"},{"prompt":"w do you format a number to two decimal points in JavaScript?","completion":"number.toFixed(2)"},{"prompt":"w do you sort a dictionary by values in Python?","completion":"sorted_dict = dict(sorted(mydict.items(), key=lambda x: x[1]))"},{"prompt":"w to calculate the length of a string in JavaScript?","completion":"str.length"},{"prompt":"Code a for loop that iterates over a list of numbers and stores the doubled value of each number in another list. num_list = [1, 2, 3, 4]","completion":"doubled_list = [] for num in num_list: doubled_list.append(num * 2)"},{"prompt":"w can you remove all the empty strings from a list?","completion":"filtered_list = [x for x in list if x!= '']"},{"prompt":"Code a for loop that iterates over a list of strings and capitalizes the first letter of each string. my_list = ['eggs', 'bacon', 'cheese']","completion":"capitalized_list = [] for string in my_list: capitalized_list.append(string.capitalize())"},{"prompt":"Write a function to join a list of strings using a given character.","completion":"def join_list(list, char): return char.join(list)"},{"prompt":"w can you flatten a list of lists?","completion":"from itertools import chain flattened_list = list(chain.from_iterable(list_of_lists))"},{"prompt":"Edit the following function to remove duplicate elements from a list. def remove_duplicates(list): new_list = [] for element in list: new_list.append(element) return new_l","completion":"def remove_duplicates(list): new_list = [] for element in list: if element not in new_list: new_list.append(element) return new_list"},{"prompt":"Find the smallest positive number that is not present in a given list. my_list = [1, 3, 6, 9, 11]","completion":"def find_missing_number(my_list): sorted_list = sorted(my_list) for i, num in enumerate(sorted_list): if i != num: return i return max(sorted_list) + 1"},{"prompt":"Convert a given string from lowercase to uppercase characters. \\"this is a string","completion":"def convert_to_uppercase(string): return string.upper() if __name__ == '__main__': print(convert_to_uppercase(\\"this is a string\\"))"},{"prompt":"Print a random permutation of an array of integers. [1,2,3,4,5]","completion":"import random def random_permutation(arr): new_arr = arr.copy() random.shuffle(new_arr) return new_arr if __name__ == '__main__': print(random_permutation([1,2,3,4,5]))"},{"prompt":"Compose a program to create a dictionary of characteristics from a given list . itemList = [\\"Apple\\", \\"Orange\\", \\"Grapes\\", \\"Bananas\\", \\"Watermelons\\"]","completion":"def create_characterstic_dictionary(itemList): out = {} for item in itemList: out[item] = len(item) return out if __name__ == '__main__': itemList = [\\"Apple\\", \\"Orange\\", \\"Grapes\\", \\"Bananas\\", \\"Watermelons\\"] print(create_characterstic_dictionary(itemList))"},{"prompt":"Generate the nth Fibonacci number using a loop.","completion":"def fibonacci_loop(n): prev, curr = 0, 1 for _ in range(1, n): prev, curr = curr, prev + curr return curr if __name__ == '__main__': print(fibonacci_loop(10))"},{"prompt":"Create a function in Java that takes two strings and returns an integer that describes the number of characters they share in common. string1 = \\"Hello\\" string2 = \\"World","completion":"public static int countCommonChars(String s1, String s2){ int count = 0; int maxLen = Math.min(s1.length(), s2.length()); for(int i=0; i<maxLen; i++){ if(s1.charAt(i) == s2.charAt(i)) count++; } return count; }"},{"prompt":"Create a program in Java that calculates the average of two test scores. test1 = 85 test2 = 90","completion":"public static double average(int test1, int test2){ double avg = (test1+test2)/2; return avg; }"},{"prompt":"Given a list of strings, create a Python function that sorts them in alphabetical order. example_list = [\\"Apple\\", \\"Banana\\", \\"Cherry\\"]","completion":"def sort_list(l): l.sort() return l"},{"prompt":"Create a function in Python that takes a sentence as input and returns a dictionary of each word and its frequency in the sentence. example_sentence = \\"The quick brown fox jumps over the lazy dog.","completion":"def word_frequency(sentence): words = sentence.split() freq_dict = {} for word in words: if word in freq_dict: freq_dict[word] += 1 else: freq_dict[word] = 1 return freq_dict"},{"prompt":"Given a list of strings, create a Python3 program that counts the number of strings that start with the letter 'a'. example_list = [\\"Apple\\", \\"Cat\\", \\"Ant\\", \\"Table\\"]","completion":"def count_str_starts_a(l): count = 0 for word in l: if word[0].lower() == 'a': count += 1 return count"},{"prompt":"Write code in C++ to reverse an array of elements. example_array = [1,2,3,4,5]","completion":"void reverse_array(int arr[], int size){ int start = 0, end = size - 1; while(start < end){ int temp = arr[start]; arr[start] = arr[end]; arr[end] = temp; start++; end--; } }"},{"prompt":"Write a function to convert an anagram of a string to a dictionary word = \\"geeksforgeek","completion":"def convert_anagram(word): result = {} for c in word: result.setdefault(c, 0) result[c] += 1 return result"},{"prompt":"Calculate the Euclidean distance between two arrays array1 = [1, 2, 3] array2 = [4, 5, 6]","completion":"def euclidean_distance(array1, array2): return np.sqrt(np.sum((array1 - array2)**2))"},{"prompt":"Generate a target field from an input field by adding a new column Input Dataframe: name age height John 24 180 Mary 22 160","completion":"def generate_column(dataframe): dataframe['target'] = dataframe.apply( lambda row: row.age * row.height, axis = 1 ) return dataframe"},{"prompt":"mplement a neural network for regression","completion":"import tensorflow as tf # create input layer inputs = tf.keras.Input(shape=(2,)) # create the first layer of the network with 16 neurons fc1 = tf.keras.layers.Dense(16, activation=\\"relu\\")(inputs) # create the second layer of the network with 8 neurons fc2 = tf.keras.layers.Dense(8, activation=\\"relu\\")(fc1) # create the output layer of the network with 1 neuron (for regression) outputs = tf.keras.layers.Dense(1, activation=\\"sigmoid\\")(fc2) # create the model and compile it. model = tf.keras.Model(inputs=inputs, outputs=outputs) model.compile(optimizer='Adam', loss='mse')"},{"prompt":"mplement Naive Bayes for classification.","completion":"import numpy as np # Create a data set X = np.array([[0, 0, 0], [0, 1, 0], [1, 0, 0], [1, 1, 0], [0, 0, 1], [0, 1, 1], [1, 0, 1], [1, 1, 1]]) y = np.array([0, 0, 0, 0, 1, 1, 1, 1]) # Build a Naive Bayes classifier naive_bayes = GaussianNB() # Train the classifier using the training data naive_bayes.fit(X, y)"},{"prompt":"Find the frequency of a given phrase in the text text = \\"This is a phrase that I want to find the frequency of\\" phrase = \\"phrase","completion":"def find_frequency(text, phrase): fdist = nltk.FreqDist(text.lower().split()) return fdist[phrase]"},{"prompt":"Find the values of the keys 'category' and 'difficulty' in the given json data. { \\"status\\": \\"SUCCESS\\", \\"message\\": \\"\\", \\"data\\": { \\"category\\": \\"Mathematics\\", \\"difficult\\": \\"Easy\\" } }","completion":"category: Mathematics difficult: Easy"},{"prompt":"Extract the value of the given key from the given XML structure. <score> <name>Alice</name> <points>15</points> </score> Key: po","completion":"15"},{"prompt":"Read the given code and provide an example output. def add_two_numbers(a, b): return a + b","completion":"Example output: add_two_numbers(3, 4) Output: 7"},{"prompt":"Read the following code and identify the type of loop it is. for a in range(0, 10): print(a)","completion":"for loop."},{"prompt":"Write a function that prints the same string three times consecutively. string = \\"Hello World!","completion":"def print_three_times(string): for _ in range(3): print(string) print_three_times(\\"Hello World!\\")"},{"prompt":"Output true if a number is odd or false if it is even. number = 8","completion":"false"},{"prompt":"Trace the given solution to find the output for the given input. def find_max_number(arr): max_num = arr[0] for num in arr: if num > max_num: max_num = num return max_num Input: find_max_number([2, 3, 4, 6, 5])","completion":"max_num = 2 Loop 1: num = 3, max_num = 3 Loop 2: num = 4, max_num = 4 Loop 3: num = 6, max_num = 6 Loop 4: num = 5, max_num = 6 Output: 6"},{"prompt":"Get the length of the given string. string = \\"Summer is here!","completion":"len(string) Output: 14"},{"prompt":"Write code in Java to calculate the minimum number of coins needed to make change for a given amount. Coin denominations: [1, 5, 10, 25] Amount: 27","completion":"public int calculateCoins(int amount, int[] array){ int coinsNeeded = 0; for (int i = array.length - 1; i >= 0; i--){ // Find the largest denomination // which is smaller than amount while (amount >= array[i]){ amount = amount - array[i]; coinsNeeded++; } } return coinsNeeded; }"},{"prompt":"Construct a regular expression that extracts substrings that match the pattern \\"AAA_BBB_CCC\\".","completion":"Regex: ^([A-Za-z]{3})_([A-Za-z]{3})_([A-Za-z]{3})"},{"prompt":"Create a class in C++ that defines a number as a double value.","completion":"// C++ Class class Number { private: double num; public: // Constructor Number(double val) : num(val) { } // Function to get the double value double getValue() { return num; } };"},{"prompt":"Generate an SQL statement to select the maximum salary of an employee from the given table. Table Name: EMPLOYEE Table Rows: ID (int); NAME (string); SALARY (int)","completion":"SELECT MAX(SALARY) FROM EMPLOYEE;"},{"prompt":"Produce a regular expression that checks if a string contains between 5 and 20 characters.","completion":"^.{5,20}"},{"prompt":"Construct a function in Python that takes a list and returns the mean of the elements in the list. [30, 10, 40, 20]","completion":"def mean(list): # Finding total of the list elements total = 0 for num in list: total += num # Calculate mean of the list mean = total / len(list) # Return the mean return mean"},{"prompt":"Write a function to delete a node from the given linked list. Linked list: 10 --> 20 --> 30 Node to delete: 10","completion":"def deleteNode(head, node): if head == None: return # If node to be deleted is head node if head.val == node: head = None return head # Find prev node prev = None curr = head while curr and curr.val != node: prev = curr curr = curr.next # Unlink node from linked list prev.next = curr.next curr = None return head"},{"prompt":"Create a SQL query to get the count of students with their assigned marks greater than or equal to 80. Table Name: STUDENTS Table Rows: NAME (string); MARKS (int)","completion":"SELECT COUNT(*) FROM STUDENTS WHERE MARKS >= 80;"},{"prompt":"Edit the following code to make it an infinite loop. # Python 3 # Print numbers from 0 to 10 i = 0 while i <= 10: print(i) i += 1","completion":"# Python 3 # Print numbers from 0 to 10 while True: print(i) i += 1"},{"prompt":"Write a function in JavaScript to set the background color of a web page to a randomly generated color.","completion":"const random_bg_color = () => { // Generate three random numbers for RGB to create random color let r = Math.floor(Math.random() * 256); let g = Math.floor(Math.random() * 256); let b = Math.floor(Math.random() * 256); // Set the random color for the page's background document.body.style.backgroundColor = \\"rgb(\\" + r + \\",\\" + g + \\",\\" + b + \\")\\"; }"},{"prompt":"Create a list of entries that should be included in a \`Person\` class.","completion":"A \`Person\` class should include the following entries: - name: string - age: integer - gender: string - address: string - phone_number: string - email: string - occupation: string - school: string - current_city: string - birth_city: string - nationality: string"},{"prompt":"Generate a function in Java to calculate the sum of digits for any given integer.","completion":"public static int sumDigits(int number) { int sum = 0; while (number != 0) { sum += number%10; number /= 10; } return sum; }"},{"prompt":"Compose a piece of HTML code that uses a form to let the user input an email address.","completion":"<form> <label for=\\"email\\">Email:</label> <input type=\\"text\\" name=\\"email\\" id=\\"email\\" required> <input type=\\"submit\\" value=\\"Submit\\"> </form>"},{"prompt":"Generate a sorting algorithm written in Java that sorts integers in ascending order.","completion":"public static int[] sortIntsAscending(int[] arr) { int n = arr.length; for (int i = 0; i < n-1; i++) { int minIndex = i; for (int j = i+1; j < n; j++) { if (arr[j] < arr[minIndex]) { minIndex = j; } } int temp = arr[minIndex]; arr[minIndex] = arr[i]; arr[i] = temp; } return arr; }"},{"prompt":"Demonstrate how to use an if-else block to control the execution sequence of a program.","completion":"Using an if-else block to control execution sequence involves using if-else statements to check a given condition. If the condition is true, the code inside the if statement is executed, otherwise, the code inside the else statement is executed. For example, if a variable called \\"x\\" is declared with a value of 3, the following if-else block will print \\"X is 3\\": if(x == 3) { System.out.println(\\"X is 3\\"); } else { System.out.println(\\"X is not 3\\"); }"},{"prompt":"Create a JavaScript object for a student and include properties such as first name, last name, and grades for all courses taken.","completion":"let student = { firstName: \\"John\\", lastName: \\"Doe\\", grades: { math: 89, science: 80, english: 92, history: 94 } }"},{"prompt":"w can you use the modulo operator to print even numbers in a loop?","completion":"The modulo operator can be used to print even numbers in a loop by using an IF statement to check if the remainder of a number divided by two is zero. If the condition is true, the even number is printed. For example, the following code will print all even numbers from 1 to 10: for (int i = 1; i <= 10; i++){ if (i % 2 == 0) System.out.println(i); }"},{"prompt":"Generate a random valid email address.","completion":"import random def generate_email(): characters = 'abcdefghijklmnopqrstuvwxyz0123456789' email_address = ''.join(random.choice(characters) for i in range(10)) return email_address + '@example.com'"},{"prompt":"Given an input string and a pattern, find the first index of the pattern in the string. string: “The quick brown fox jumps over the lazy dog” pattern: “dog”","completion":"def find_pattern_index(string, pattern): for i in range(len(string) - len(pattern) + 1): if string[i:i+len(pattern)] == pattern: return i return -1 print(find_pattern_index(\\"The quick brown fox jumps over the lazy dog\\", \\"dog\\")) # Output: 40"},{"prompt":"Given an array of integers, calculate the sum of all even numbers in the array. [ 5, 10, 15, 11, 22, 33, 28, 9]","completion":"def sum_even_numbers(arr): sum = 0 for i in arr: if i % 2 == 0: sum += i return sum print(sum_even_numbers([5, 10, 15, 11, 22, 33, 28, 9])) # Output: 70"},{"prompt":"Decompose a given number into its prime factors. 25","completion":"def prime_factorize(n): prime_factors = [] i = 2 while i * i <= n: if n % i: i += 1 else: n //= i prime_factors.append(i) if n > 1: prime_factors.append(n) return prime_factors print(prime_factorize(25)) # Output: [5, 5]"},{"prompt":"Given an array, separate the odd and even numbers, and return a list of two different arrays, one for even and one for odd numbers. [3, 6, 9, 12, 21]","completion":"def separate_even_odd(arr): even = [] odd = [] for i in arr: if i % 2 == 0: even.append(i) else: odd.append(i) return even, odd print(separate_even_odd([3, 6, 9, 12, 21])) # Output: ([6, 12], [3, 9, 21])"},{"prompt":"Write a JavaScript program to find all the words in a string which start with a specific letter. string: “The quick brown fox jumps over the lazy dog” letter: ‘j’","completion":"function findWords(string, letter){ let words = string.split(\\" \\"); let result = []; for(let word of words){ if(word.charAt(0) == letter){ result.push(word); } } return result; } console.log(findWords(\\"The quick brown fox jumps over the lazy dog\\", \\"j\\")); # Output: [\\"jumps\\"]"},{"prompt":"Write a JavaScript program to make a shallow clone of an object.","completion":"function clone(obj) { let cloneObj = {}; for (let i in obj) { if (obj.hasOwnProperty(i)) { cloneObj[i] = obj[i]; } } return cloneObj; } let obj = {name: 'John', age: 30}; let cloneObj = clone(obj); console.log(cloneObj); # Output: {name: \\"John\\", age: 30}"},{"prompt":"Create a computer program that takes a string as an input and builds a dictionary of words and their respective frequencies. \\"the quick brown fox jumps over the lazy dog","completion":"def get_frequency(input): # Split the input into words words = input.split() # Create a dictionary to store the words and the frequency frequency = dict() # Iterate over the words and store the frequency for word in words: if word in frequency: frequency[word] += 1 else: frequency[word] = 1 return frequency if __name__ == \\"__main__\\": # Input string input = \\"the quick brown fox jumps over the lazy dog\\" # Get the frequency of words frequency = get_frequency(input) # Print the frequency print(frequency)"},{"prompt":"Design a class that stores and prints a complex number.","completion":"class ComplexNumber: def __init__(self, real, imag): self.real = real self.imag = imag def __str__(self): return '{} + {}i'.format(self.real, self.imag) if __name__ == '__main__': c = ComplexNumber(2, 8) print(c)"},{"prompt":"Output the number of words in a given sentence stored as a string. \\"Welcome to the world of coding!","completion":"def count_words(sentence): return len(sentence.split()) if __name__ == '__main__': sentence = \\"Welcome to the world of coding!\\" print(count_words(sentence))"},{"prompt":"Write a function that takes two strings as parameters and return a new string that has the characters of the second string appended to the first string. \\"hello\\",\\"world","completion":"def append_string(string1, string2): return string1 + string2 if __name__ == '__main__': string1 = \\"hello\\" string2 = \\"world\\" result = append_string(string1, string2) print(result)"},{"prompt":"Create a function which determines if a given number is a palindrome. 7337","completion":"def palindrome(num): # convert the number to a string num_str = str(num) # Reverse the string using slicing rev_str = num_str[::-1] # check if the given number is equal to the reversed string if num_str == rev_str: return True else: return False if __name__ == \\"__main__\\": num = 7337 print(palindrome(num))"},{"prompt":"Reverse the words in a sentence stored as a list in Python. ['word', 'one', 'is', 'this']","completion":"def reverse_words(words): # Get the length of the words n = len(words) # Reverse the list words for i in range(n // 2): words[i], words[n - 1 - i] = words[n - 1 - i], words[i] return words if __name__ == \\"__main__\\": words = ['word', 'one', 'is', 'this'] print(reverse_words(words))"},{"prompt":"Extract the country code from a given phone number of the format +cc xxx-xxx-xxxx +91 983-741-3256","completion":"def extract_country_code(number): # Check if number is valid if len(number) == 13 and number[0] == '+': # Extract the country code cc = number[1:3] return cc if __name__ == \\"__main__\\": number = \\"+91 983-741-3256\\" print(extract_country_code(number))"},{"prompt":"Design an algorithm to compute the number of trailing zeroes in a factorial number.","completion":"def count_trailing_zeroes(factorial_number): # Initialize count count = 0 # Keep dividing n by powers of 5 and update count i = 5 while (factorial_number/i>=1): count += int(factorial_number/i) i *= 5 return int(count) if __name__ == \\"__main__\\": factorial_number = 12 print(count_trailing_zeroes(factorial_number))"},{"prompt":"Generate a sequence of prime numbers between a given range using the Sieve of Eratosthenes algorithm.","completion":"def sieve_of_eratosthenes(lower, upper): # Create a list of prime numbers prime_list = [True] * (upper + 1) prime_list[0] = False prime_list[1] = False # Iterate over the list until the square root of the upper limit for i in range(2, int(upper ** 0.5) + 1): # If i is true, then it is prime if prime_list[i]: # Set all multiples of i to false for j in range(i*i, upper + 1, i): prime_list[j] = False # Get the list of prime numbers between lower and upper prime_nums = [] for i in range(lower, upper + 1): if prime_list[i]: prime_nums.append(i) return prime_nums if __name__ == \\"__main__\\": lower = 0 upper = 50 print(sieve_of_eratosthenes(lower, upper))"},{"prompt":"Design an algorithm to calculate the intersection of two given lists. List1 = [2, 5, 9, 12, 17] List2 = [3, 5, 9, 10]","completion":"def intersection(list1, list2): # Initialize an empty list intersection_list = [] # Iterate over elements of the first list for num in list1: # Compare each element of first list with elements of second list if num in list2: # Add to the intersection list if matches intersection_list.append(num) return intersection_list if __name__ == \\"__main__\\": list1 = [2, 5, 9, 12, 17] list2 = [3, 5, 9, 10] print(intersection(list1, list2))"},{"prompt":"Retrieve the elements in an array [1, 2, 3, 4, 5, 6] where the index is greater than or equal to 3 [1, 2, 3, 4, 5, 6]","completion":"[4, 5, 6]"},{"prompt":"Convert the following string \\"10 10 20 20 30\\" into a list of integers. \\"10 10 20 20 30","completion":"list_of_ints = [10, 10, 20, 20, 30]"},{"prompt":"Sort the following list in ascending order [3, 5, 1, 2, 9]. [3, 5, 1, 2, 9]","completion":"sorted_list = [1, 2, 3, 5, 9]"},{"prompt":"Write a SELECT statement that retrieves the first name, last name, and salary of all employees, sorted in descending order of salary.","completion":"SELECT first_name, last_name, salary FROM employees ORDER BY salary DESC;"},{"prompt":"Design a Python class that allows a user to set and get the name of an object.","completion":"class User: def __init__(self, name): self.name = name def getName(self): return self.name def setName(self, name): self.name = name"},{"prompt":"w many lines would the following algorithm require? # Find all the prime numbers between two given numbers # Input: two numbers, n1 and n2 # Output: list of prime numbers between n1 and n2","completion":"It would require approximately 9 lines of code."},{"prompt":"Write a loop in Python to find the summation of the square of the first 10 natural numbers.","completion":"sum = 0 for i in range(1, 11): sum += i**2 print(\\"The sum of the square of the first 10 natural numbers is\\", sum)"},{"prompt":"Make a GUI app in Java to add two numbers together.","completion":"import java.awt.*; import javax.swing.*; public class AddTwoNumbersGUI { public static void main(String[] args) { JFrame frame = new JFrame(\\"Adding two numbers\\"); frame.setSize(400, 200); frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); frame.setVisible(true); Container contentPane = frame.getContentPane(); contentPane.setLayout(new FlowLayout()); JLabel num1Label = new JLabel(\\"Enter first number:\\"); JLabel num2Label = new JLabel(\\"Enter second number:\\"); JLabel resultLabel = new JLabel(\\"Result:\\"); JTextField num1TextField = new JTextField(); JTextField num2TextField = new JTextField(); JTextField resultTextField = new JTextField(); JButton addButton = new JButton(\\"Add\\"); addButton.addActionListener(e -> { int num1 = Integer.parseInt(num1TextField.getText()); int num2 = Integer.parseInt(num2TextField.getText()); int result = num1 + num2; resultTextField.setText(Integer.toString(result)); }); contentPane.add(num1Label); contentPane.add(num1TextField); contentPane.add(num2Label); contentPane.add(num2TextField); contentPane.add(addButton); contentPane.add(resultLabel); contentPane.add(resultTextField); } }"},{"prompt":"Write a search engine using an index in JavaScript.","completion":"// create an index let index = {}; // add a document to the index let addDocument = (document, content) => { let words = content.split(' '); words.forEach((word) => { if (index.hasOwnProperty(word)) { //if the word is already in the index, add the document to its list index[word].push(document); } else { //add the word to the index index[word] = [document]; } }); }; // perform a search let search = (query) => { //array to hold the found documents let found = []; query.split(' ').forEach((word) => { //check if word is in index if (index.hasOwnProperty(word)) { index[word].forEach((doc) => { //make sure document isn't already in the list if (found.indexOf(doc) == -1) { found.push(doc); } }); } }); //return the found documents return found; };"},{"prompt":"Create a method in JavaScript that will return the area of a triangle.","completion":"// Calculating area of triangle in JavaScript function areaOfTriangle(a, b, c) { // Calculate the semi-perimeter of the triangle var s = (a + b + c) / 2; // Calculate the area of triangle using Heron's Formula var area = Math.sqrt(s * (s - a) * (s - b) * (s - c)); // Return the area of triangle return area; }"},{"prompt":"Write a shell script to create a directory with a name \\"mydir\\" under the home directory.","completion":"#!/bin/sh # Create a directory with name \\"mydir\\" mkdir ~/mydir"},{"prompt":"Create a function in JavaScript to generate an array containing 5 random numbers between 0 and 9 (inclusive).","completion":"function generateRandomNumbers() { // Declaring array to hold 5 random numbers between 0 and 9 let randArray = []; // Generate 5 random numbers while(randArray.length < 5) { // Generate a random number between 0 and 9 let randNum = Math.floor(Math.random() * 10); // Add to array if not already present in the array if(randArray.indexOf(randNum) < 0){ randArray.push(randNum); } } // Return array return randArray; }"},{"prompt":"Create a for loop in Python that will iterate through a given list and add the square of each element to a new list. nums = [2, 3, 4]","completion":"# Create an empty list squared_nums = [] # Iterate through the given list for num in nums: # Calculate the square of the element squared_num = num * num # Append it to the new list squared_nums.append(squared_num) # Print the new list print(squared_nums) # Output: [4, 9, 16]"},{"prompt":"Construct a regex to match any 5-digit US zip code.","completion":"d{5}"},{"prompt":"Given a list of strings, construct a regex to match any string that starts with \\"ab\\".","completion":"^ab.*"},{"prompt":"Given an array of integers, write a program to find the longest consecutive sequence. [1, 9, 3, 10, 4, 20, 2]","completion":"def longest_consecutive(numbers): longest_sequence = 0 numbers_set = set(numbers) for num in numbers: if num - 1 not in numbers_set: current_number = num current_sequence = 1 while current_number + 1 in numbers_set: current_sequence += 1 current_number += 1 longest_sequence = max(longest_sequence, current_sequence) return longest_sequence"},{"prompt":"Write a SQL query to find customers who have purchased the most items in the last month.","completion":"SELECT customer_name, COUNT(order_id) AS num_items_purchased FROM orders WHERE date_created > DATE_SUB(CURRENT_DATE(), INTERVAL 1 MONTH) GROUP BY customer_name ORDER BY num_items_purchased DESC;"},{"prompt":"Create a class in Java to store student grades with functions for adding and calculating average grades.","completion":"class StudentGrades { private float[] grades; private int size; public StudentGrades() { grades = new float[10]; size = 0; } public void addGrade(float grade) { grades[size] = grade; size++; } public float averageGrades() { float sum = 0; for (int i=0; i<size; i++) { sum += grades[i]; } return sum/size; } }"},{"prompt":"Create a JavaScript object that contains a student's name, age, and courses.","completion":"let student = { name: \\"John Doe\\", age: 20, courses: [\\"Math\\", \\"Physics\\", \\"English\\"] };"},{"prompt":"Given a string, convert it to upper case. String: this string should be in upper case","completion":"THIS STRING SHOULD BE IN UPPER CASE"},{"prompt":"Convert the given HTML code into its equivalent JSON structure. <div> <h2>Hello World!</h2> <p>My name is John.</p> </div>","completion":"{ \\"div\\": { \\"h2\\": \\"Hello World!\\", \\"p\\": \\"My name is John.\\" } }"},{"prompt":"Find all character positions in the given string String: abracadabr","completion":"Character Positions: a: 0, 3, 5, 7, 10 b: 1, 8 c: 2 d: 4 r: 6, 9"},{"prompt":"Create a MySQL table with two columns id and name, where id should have primary key.","completion":"CREATE TABLE student ( id INT NOT NULL AUTO_INCREMENT, name VARCHAR(255) NOT NULL, PRIMARY KEY (id) );"},{"prompt":"Create an array of a length 10 filled with odd numbers starting from 3.","completion":"int[] arr = {3, 5, 7, 9, 11, 13, 15, 17, 19, 21};"},{"prompt":"Write a code for finding the maximum value within a range. List: [10, 20, 30, 5, 40] Range: [20, 40]","completion":"max = 0 for num in list: if num >= 20 and num <= 40: max = max(max, num) print(max) # 40"},{"prompt":"Compare the given hashes and return true if they have the same set of keys and values. Hash1: {\\"a\\": 1, \\"b\\": 2} Hash2: {\\"b\\": 2, \\"a\\": 1}","completion":"True"},{"prompt":"Execute the given SQL query and return the result. SQL Query: SELECT name, age FROM people WHERE age < 20","completion":"Query Result: Name | Age John | 19 Alice | 18"},{"prompt":"Explain the benefits of using the OOP approach in programming.","completion":"Using the Object-Oriented Programming (OOP) approach in programming offers a number of advantages such as increased code reusability, easier maintenance, data hiding, and better performance. OOP makes it easier to model real-world objects and their relationships, allowing developers to reduce complexity by breaking programs down into smaller parts. This makes it easier to identify, debug and modify code. Additionally, OOP promotes the development of extensible and reusable code, cutting down on the cost and time of development. Finally, OOP allows for better tracking of data and control over which elements outside the program can modify the data."},{"prompt":"What is the Python function for swapping two variables' values?","completion":"The Python function for swapping two variables' values is \\"*a, b = b, a*\\". This is a simple one-line expression that swaps the values of the two variables."},{"prompt":"Write a SQL query to find the employee names who are working in the company since Jan 2019.","completion":"SELECT employee_name FROM employees WHERE start_date >= '2019-01-01'"},{"prompt":"Come up with a C++ program that orders the elements of an unordered array from greatest to smallest.","completion":"#include <iostream> #include <algorithm> int main() { int arr[] = {5, 3, 7, 1, 2}; int n = sizeof(arr) / sizeof(arr[0]); std::sort(arr, arr+n, std::greater<int>()); for (int i = 0; i < n; ++i) std::cout << arr[i] << \\" \\"; std::cout << std::endl; return 0; }"},{"prompt":"Write an HTML web page from scratch that displays a list of 10 different CSS colors randomly.","completion":"<html> <head> <title>Random Colors</title> <style> .random-color { background-color: #9b024a; } </style> </head> <body> <h1>Random Colors</h1> <ul> <li class=\\"random-color\\">#9b024a</li> <li class=\\"random-color\\">#f06f56</li> <li class=\\"random-color\\">#ffb003</li> <li class=\\"random-color\\">#37478d</li> <li class=\\"random-color\\">#82e3d3</li> <li class=\\"random-color\\">#2e2fbb</li> <li class=\\"random-color\\">#b82da9</li> <li class=\\"random-color\\">#0093fa</li> <li class=\\"random-color\\">#4dadf4</li> <li class=\\"random-color\\">#ee2f88</li> </ul> </body> </html>"},{"prompt":"Generate a Java program that creates a class Student with attributes name and age, and a constructor to initialize the attributes.","completion":"public class Student { private String name; private int age; public Student(String name, int age) { this.name = name; this.age = age; } public String getName() { return name; } public int getAge() { return age; } }"},{"prompt":"Create an algorithm that will return all numbers in the given array that are greater than 10. [5, 8, 10, 12, 15, 17, 20]","completion":"def get_over_10(arr): output = [] for num in arr: if num > 10: output.append(num) return output"},{"prompt":"Create a React component that will render a list of student details for a particular class.","completion":"import React from 'react'; const StudentList = ({students}) => { return ( <div> {students.map((student, index) => { return ( <div key={index}> <p>Name: {student.name}</p> <p>Age: {student.age}</p> </div> ); })} </div> ); }; export default StudentList;"},{"prompt":"Write a Python program that takes two lists, adds their items and returns a new list. list_a = [1, 2, 3] list_b = [4, 5, 6]","completion":"def add_list_items(list_a, list_b): output = [] for item_a, item_b in zip(list_a, list_b): output.append(item_a + item_b) return output"},{"prompt":"Design an algorithm that can efficiently search for an element in a given sorted array","completion":"def binary_search(arr, x): start = 0 end = len(arr) - 1 while start <= end: mid = start + (end - start)//2 if arr[mid] == x: return mid elif arr[mid] < x: start = mid + 1 else: end = mid - 1 return -1"},{"prompt":"Come up with a Java program that checks if one string is a substring of another.","completion":"public static boolean isSubstring(String s, String x) { int i = 0, j = 0; while (i < s.length() && j < x.length()) { if (s.charAt(i) == x.charAt(j)) { i++; j++; } else { i = i - j + 1; j = 0; } } if (j == x.length()) { return true; } return false; }"},{"prompt":"Write a JavaScript function that generates the Fibonacci sequence up to a given number.","completion":"function fibonacci (num) { let result = []; let a = 1; let b = 0; let temp; while (num >= 0) { result.push(b); temp = a; a = a + b; b = temp; num--; } return result; }"},{"prompt":"Create an SQL query that pulls data from two tables and sorts the results in descending order by date.","completion":"SELECT * FROM tableA, tableB WHERE tableA.id = tableB.id ORDER BY tableB.date DESC"},{"prompt":"Create an algorithm that performs bubble sort.","completion":"def bubble_sort(arr): n = len(arr) for i in range(n-1, 0, -1): for j in range(i): if arr[j] > arr[j+1]: arr[j+1], arr[j] = arr[j], arr[j+1]"},{"prompt":"Which programming language syntax is used in the following code snippet? #define some_function() { // do something }","completion":"The programming language syntax used in the given code snippet is C."},{"prompt":"Write an algorithm to count the number of pairs whose difference is k. nums = [1, 5, 3, 4, 7, 8] k = 3","completion":"def count_pairs(nums, k): count = 0 # Create a set to store all the elements of the array num_set = set(nums) for num in nums: if num + k in num_set: count += 1 return count num_diff = 3 pair_count = count_pairs(nums, num_diff) print(\\"Number of pairs with difference\\", num_diff, \\" is :\\", pair_count)"},{"prompt":"Using ES6 syntax, insert the following into the code: let arr = [1, 2, 3];","completion":"let arr = [1, 2, 3]; const doubled = arr.map(num => num * 2); console.log(doubled); // [2, 4, 6];"},{"prompt":"Use the information provided to create a class in Python which represent a Rectangle. The Rectangle class should have: - Attributes of length and width - A method to compute the area of the rectangle","completion":"class Rectangle: def __init__(self, length, width): self.length = length self.width = width def get_area(self): return self.length * self.width"},{"prompt":"Create an object sorting function using bubble sort in JavaScript. const arr = [10, 4, 7, 8, 1, 6]","completion":"function bubbleSort(arr) { for (let i = arr.length-1; i > 0; i--) { for (let j = 0; j < i; j++) { if (arr[j] > arr[j + 1]) { let temp = arr[j]; arr[j] = arr[j + 1]; arr[j + 1] = temp; } } } return arr; }"},{"prompt":"Create an algorithm to merge two sorted linked lists. Linked List 1: 1 - 4 - 7 Linked List 2: 2 - 5 - 8","completion":"def merge_sorted_lists(list1, list2): if not list1: return list2 if not list2: return list1 if list1.val < list2.val: head = list1 list1 = list1.next else: head = list2 list2 = list2.next cur = head while list1 and list2: if list1.val < list2.val: cur.next = list1 list1 = list1.next else: cur.next = list2 list2 = list2.next cur = cur.next cur.next = list1 if list1 else list2 return head"},{"prompt":"Write a TensorFlow program for a linear regression model.","completion":"import tensorflow as tf # Create variables a = tf.Variable(0.5) b = tf.Variable(0.5) # > Create the input data, y and x x = tf.placeholder(tf.float32) y = tf.placeholder(tf.float32) # > Model: y = ax + b y_pred = a * x + b # > Loss: Mean Squared Error (MSE) loss = tf.reduce_mean(tf.square(y_pred - y)) # > Optimizer: Gradient Descent train_op = tf.train.GradientDescentOptimizer(0.01).minimize(loss) # > Initialize all variables init = tf.global_variables_initializer() # > Execute the graph with tf.Session() as sess: sess.run(init) for step in range(200): sess.run(train_op, {x: [1, 2, 3, 4], y: [2, 4, 6, 8]}) if (step + 1) % 20 == 0: loss_val = sess.run(loss, {x: [1, 2, 3, 4], y: [2, 4, 6, 8]}) print(\\"Step:\\", step + 1, \\" Loss:\\", loss_val)"},{"prompt":"Write a jQuery script which animates an element from left to right. <div id=\\"myElement\\">I need to be moved.</div>","completion":"(\\"#myElement\\").animate({ left: '+=600px' });"},{"prompt":"Write an SQL query that extracts the first name and last name from the Customers table. SELECT * FROM Customer","completion":"SELECT FirstName, LastName FROM Customers;"},{"prompt":"Create a HTML page that shows a profile page for a user.","completion":"<!DOCTYPE html> <html> <head> <title>Profile Page</title> </head> <body> <h1>Profile Page</h1> <div> <h2>User Details</h2> <p>Name: John Doe</p> <p>Email: John.Doe@example.com</p> <p>Date of Birth: 01/01/1900</p> </div> </body> </html>"},{"prompt":"Write an HTML code that creates a table with two columns and three rows.","completion":"<table> <tr> <th>Column 1</th> <th>Column 2</th> </tr> <tr> <td>Row 1, Cell 1</td> <td>Row 1, Cell 2</td> </tr> <tr> <td>Row 2, Cell 1</td> <td>Row 2, Cell 2</td> </tr> <tr> <td>Row 3, Cell 1</td> <td>Row 3, Cell 2</td> </tr> </table>"},{"prompt":"Write a JavaScript code to create a function that checks if a given number is divisible by 2.","completion":"function isDivisibleBy2(num) { return num % 2 === 0; }"},{"prompt":"Create an instance of the Date class that represents the current date and time.","completion":"DateTime now = DateTime.Now;"},{"prompt":"Write a SQL query to find the average price for all products in the Products table. SELECT * FROM Produc","completion":"SELECT AVG(Price) FROM Products;"},{"prompt":"Explain B-Tree data structure.","completion":"B-trees are a kind of self-balancing search tree data structure. They are frequently used in databases, file systems, and operating systems. A B-tree consists of a root node, internal nodes, and leaf nodes. The root may or may not have values associated with it. Internal nodes store values and pointers to subtrees to the left and right. Leaf nodes store the actual data. The keys in B-trees are usually sorted. As data is added or deleted, the tree self-balances to maintain order, making searching and inserting items efficient. B-trees are optimal for systems with slow or limited seek times (such as hard drives), while other data structures like binary search trees are better suited for systems with faster seek times."},{"prompt":"Describe the Divide-and-Conquer algorithm.","completion":"The Divide-and-Conquer algorithm is a generic algorithmic technique used to solve problems by breaking down the problem into smaller sub-problems, solving each sub-problem, and combining the results. This technique can be applied to a wide variety of problems (such as sorting and matrix multiplication). The basic steps of the Divide-and-Conquer algorithm involves dividing the problem into subproblems, typically in the form of a recursive approach. Then, each subproblem is solved using a similar approach until the subproblems become so small they can be easily solved directly. Then, the solutions to the subproblems are combined to give the solution to the original problem."},{"prompt":"Create a linked list of 5 integers.","completion":"class Node { int data; Node next; Node(int data) { this.data = data; next = null; } } class LinkedList { Node head; public void insertNode(int data) { Node new_node = new Node(data); if (head == null) { head = new_node; return; } Node last = head; while (last.next != null) { last = last.next; } last.next = new_node; } } LinkedList list = new LinkedList(); list.insertNode(2); list.insertNode(6); list.insertNode(7); list.insertNode(8); list.insertNode(10);"},{"prompt":"Edit the following code to make the function return the value of n mod m. int modulo(int n, int m) { return n / m; }","completion":"int modulo(int n, int m) { return n % m; }"},{"prompt":"Explain in simple terms what regular expressions are.","completion":"Regular expressions are a way of describing patterns of text. They provide a powerful language for matching strings and text within strings. Regular expressions are often used in search engines to find information that matches a certain pattern. They can also be used to validate user input and make sure it meets certain criteria. For example, a regular expression can be used to ensure that a user's password is between 6 and 10 characters long and contains at least one number."},{"prompt":"Write a CSS selector to select all elements of the class \\"title\\".","completion":".title { }"},{"prompt":"Describe the sorting algorithm Bubble Sort.","completion":"Bubble sort is an algorithm for sorting a collection of items. It iterates over the collection and compares adjacent items, swapping them if they are out of order. This step is repeated until all items are sorted. Bubble sort has a time complexity of O(n^2), making it a slow sorting algorithm. It is still often used as it is simple to implement and requires little memory."},{"prompt":"Explain what an API is.","completion":"An API (Application Programming Interface) is a set of functions and protocols that allow different components of a computer system to interact and communicate with each other. An API defines the types of calls or requests that can be made, how to make them, the data formats that should be used, the conventions to follow, etc. An API also defines how two or more systems can interact and exchange data through different programs. APIs are used in many web-based services, such as web-mappings, social networking, and online games."},{"prompt":"mplement a function which adds two numbers in Rust.","completion":"fn add(x: i32, y: i32) -> i32 { return x + y; }"},{"prompt":"Sort the following items in O(n log n) time complexity. [2, 5, 4, 3, 9]","completion":"[2, 3, 4, 5, 9]"},{"prompt":"Generate a random sequence of letters containing 5 characters without repeating a character.","completion":"XUBHJ"},{"prompt":"dentify all cities in the provided Geojson collection. { \\"type\\": \\"FeatureCollection\\", \\"features\\": [{ \\"type\\": \\"Feature\\", \\"geometry\\": { \\"type\\": \\"Point\\", \\"coordinates\\": [-107.3334701, 43.0545076] }, \\"properties\\": { \\"name\\": \\"Cheyenne\\" } }, { \\"type\\": \\"Feature\\", \\"geometry\\": { \\"type\\": \\"Point\\", \\"coordinates\\": [-104.9902504, 39.7392357] }, \\"properties\\": { \\"name\\": \\"Denver\\" } }, { \\"type\\": \\"Feature\\", \\"geometry\\": { \\"type\\": \\"Point\\", \\"coordinates\\": [-111.831483, 43.0937303] }, \\"properties\\": { \\"name\\": \\"Boise\\" } }] }","completion":"Cheyenne, Denver, Boise."},{"prompt":"Scale up the following backend service using Kubernetes. service.yaml apiVersion: v1 kind: Service metadata: name: my-service spec: ports: - port: 8080","completion":"apiVersion: v1 kind: Service metadata: name: my-service labels: app: my-service spec: replicas: 3 ports: - port: 8080 selector: app: my-service type: NodePort --- apiVersion: apps/v1 kind: Deployment metadata: name: my-service spec: selector: matchLabels: app: my-service replicas: 3 template: metadata: labels: app: my-service spec: containers: - name: my-service image: my-service:v1 resources: requests: cpu: 500m memory: 1Gi env: - name: NODE_ENV value: production ports: - containerPort: 8080 --- apiVersion: v1 kind: Service metadata: name: my-service-lb labels: app: my-service spec: type: NodePort ports: - port: 8080 nodePort: 30008 selector: app: my-service"},{"prompt":"Add a feature to the following code that prints the current date and time. def hello_world(): print(\\"Hello world!\\")","completion":"import datetime def hello_world(): print(\\"Hello world!\\") now = datetime.datetime.now() print(now.strftime(\\"%Y-%m-%d %H:%M:%S\\"))"},{"prompt":"Create an API endpoint for the following model. class Comment(models.Model): user = models.ForeignKey(User, on_delete=models.CASCADE) content = models.TextField() created_at = models.DateTimeField(auto_now_add=True) updated_at = models.DateTimeField(auto_now=True)","completion":"from django.http import JsonResponse def comments_list(request): if request.method == 'GET': comments = Comment.objects.all() comments_list = [{ 'id': comment.id, 'user': comment.user.username, 'content': comment.content, 'created_at': comment.created_at, 'updated_at': comment.updated_at } for comment in comments] return JsonResponse(comments_list, safe=False)"},{"prompt":"Given a list of numbers, write a Python program to find the maximum and minimum number. [4, 7, -2, 11, 9]","completion":"Maximum Number = 11 Minimum Number = -2"},{"prompt":"Design a function to filter words based on give characters. characters = \\"aeiou\\" words = ['apple','elephant','mountain','river']","completion":"def filter_words(characters, words): result = [] for word in words: if set(characters).issubset(word): result.append(word) return result print(filter_words(\\"aeiou\\", ['apple','elephant','mountain','river'])) # Output: ['apple', 'elephant', 'river']"},{"prompt":"Create a dictionary containing the count of each word in the sentence. sentence = \\"the quick brown fox jumps over the lazy dog","completion":"def count_words(sentence): words = sentence.split() word_count = {} for word in words: if word in word_count.keys(): word_count[word] += 1 else: word_count[word] = 1 return word_count print(count_words(\\"the quick brown fox jumps over the lazy dog\\")) # Output: {'the': 2, 'quick': 1, 'brown': 1, 'fox': 1, 'jumps': 1, 'over': 1, 'lazy': 1, 'dog': 1}"},{"prompt":"Create a list containing the number of characters in each word of the sentence. sentence = \\"the quick brown fox jumps over the lazy dog","completion":"def count_characters_per_word(sentence): words = sentence.split(' ') char_count_per_word = [] for word in words: char_count_per_word.append(len(word)) return char_count_per_word print(count_characters_per_word(\\"the quick brown fox jumps over the lazy dog\\")) # Output: [3, 5, 5, 3, 5, 3, 4, 3]"},{"prompt":"Formulate a statement using Python that will return the value 'True' when the user's age is equal to 21. userage = 21","completion":"if userage == 21: print(True)"},{"prompt":"Compute the sum of two numbers, 5 and 7, using Scala","completion":"val sum = 5 + 7 println(sum)"},{"prompt":"Explain what Node.js is","completion":"Node.js is an open source, cross-platform JavaScript runtime environment used for developing server-side applications. It uses an event-driven, non-blocking I/O model and works on a single-threaded asynchronous model. It is designed to allow developers to build scalable network applications."},{"prompt":"Create a function that takes two strings, s1 and s2, and checks to see if s2 is a substring of s1 s1 = \\"Hello World\\" s2 = \\"Hello","completion":"def isSubstring(s1, s2): if s2 in s1: return True else: return False"},{"prompt":"Create a for loop in Python that traverse a list and prints out every second element lst = [1,2,3,4,5]","completion":"for i in range(0, len(lst), 2): print(lst[i])"},{"prompt":"Write an SQL query for finding all books with the title “The Great Gatsby”.","completion":"SELECT * FROM BOOKS WHERE Title = 'The Great Gatsby'"},{"prompt":"Write a query in MySQL to delete all rows with a given ID.","completion":"DELETE FROM table_name WHERE ID = 'given_id';"},{"prompt":"Write a procedure in PL/SQL to find the sum of numbers from 1 to 10.","completion":"create or replace procedure addNums(sum OUT NUMBER) begin sum := 0; for i in 1 .. 10 loop sum := sum + i; end loop; end addNums;"},{"prompt":"Create a SQL query to find the customer with the last name \\"Smith\\".","completion":"SELECT * FROM customers WHERE last_name = 'Smith';"},{"prompt":"Create an array of 10 numbers in Python with values from 0 to 9.","completion":"[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]"},{"prompt":"Create a class in Python with the attributes name and age.","completion":"class Person: def __init__(self, name, age): self.name = name self.age = age"},{"prompt":"Assign the value 2 to the variable x in Java.","completion":"int x = 2;"},{"prompt":"Write a CSS selector to select an element with the id \\"example\\".","completion":"#example { ... }"},{"prompt":"Create a package in R called \\"myPackage\\" and save it in your current directory.","completion":"devtools::create(\\"myPackage\\", path=getwd())"},{"prompt":"Launch an instance of an Amazon EC2 machine.","completion":"aws ec2 run-instances --image-id <AMI-id> --instance-type <instance-type> --key-name <keyname> --security-group-ids <security-group-ids>"},{"prompt":"Find the 2 smallest elements in a Python list of integers. [2, 3, 5, 8, 4, 9, 11]","completion":"min1, min2 = list[0], list[1] for num in list: if num < min1: min2 = min1 min1 = num elif num < min2: min2 = num"},{"prompt":"For a given list of numbers, write a palindrome checker. sample = [1, 2, 3, 4, 5, 4, 3, 2, 1]","completion":"def is_palindrome(sample): res = True i = 0 j = len(sample) - 1 while i < j: if sample[i] != sample[j]: res = False break else: i += 1 j -= 1 return res"},{"prompt":"Create a matrix of 5 x 4 and set the values to 0.","completion":"# create a matrix of 5 x 4 matrix = [[0 for x in range(4)] for y in range(5)]"},{"prompt":"Using a recursive algorithm, reverse the order of elements in a list. arr = [1, 2, 3, 4, 5]","completion":"# recursive approach def recursive_reverse(arr, length): if length == 0: return recursive_reverse(arr, length - 1) arr.append(arr[length - 1]) arr.pop(length - 1) # call function on the data recursive_reverse(arr, len(arr))"},{"prompt":"Write a for loop to multiply two numbers and print the result. a = 5 b = 6","completion":"# multiply two numbers and print the result for i in range(b): a *= b print(a)"},{"prompt":"Add an 'except' statement to the following python code to prevent a ValueError. a = 5 b = 0 try: c = a / b","completion":"a = 5 b = 0 try: c = a / b except ZeroDivisionError: print(\\"b cannot be zero\\")"},{"prompt":"Construct a for loop to check for prime numbers up to a given number. n = 20","completion":"# construct a for loop to check for prime numbers up to 20 for num in range(2, n+1): isPrime = True for i in range(2, num): if (num % i == 0): isPrime = False break if isPrime: print(num, \\" is a prime number\\")"},{"prompt":"Write a lambda expression that multiplies the argument by two.","completion":"# construct a lambda that multiplies the argument by two func = lambda x : x * 2"},{"prompt":"Create a dictionary to store 'name' and 'age' as the keys and print the dictionary.","completion":"# create a dictionary dict = {\\"name\\": \\"John\\", \\"age\\": 30} # print the dictionary print(dict)"},{"prompt":"Generate a unique ID for a given string. s = \\"Hello World","completion":"# generate a unqiue ID for the given string import uuid # string string = \\"Hello World\\" # printing the original string print(\\"The original string is : \\" + string) # generating the unique ID string_id = uuid.uuid4() # printing the unique ID print(\\"The unique id for given string is : \\", string_id)"},{"prompt":"Using a dictionary comprehension, select the keys that start with a specific letter. d = {'cat' : 1, 'dog' : 2, 'mouse' : 3}","completion":"# select the keys that start with 'c' dict = {k: v for k, v in d.items() if k.startswith('c')}"},{"prompt":"Print the output of the following loop. for i in range(6): print(i)","completion":"# print the output of the loop for i in range(6): print(i) # output of the loop 0 1 2 3 4 5"},{"prompt":"Use a built-in Python method to print the contents of a list in reverse order. arr = [1, 2, 3, 4]","completion":"# use a built-in python method to print the list in reverse order arr.reverse() # using the list reverse method print(arr)"},{"prompt":"Create an array using the given comma separated numbers, convert the array into a string, and then print the string. 6,4,8","completion":"arr = [6,4,8] str = ', '.join(map(str, arr)) print(str) # Output: 6, 4, 8"},{"prompt":"Create a structure for a student in C.","completion":"struct student { char name[100]; int age; char address[100]; };"},{"prompt":"Calculate the distance of two points located in the 3-dimensional space. Point 1: (3, 4, 5) Point 2: (2, 6, -1)","completion":"The distance between the two points is 6.244997998398398."},{"prompt":"Create a function that takes an array of string elements and sorts them in alphabetical order. [\\"apple\\", \\"banana\\", \\"papaya\\", \\"kiwi\\"]","completion":"def sortStringArray(stringArray): return sorted(stringArray)"},{"prompt":"Create an HTML page with two columns and a tabular structure showing the employee salaries.","completion":"<!DOCTYPE html> <html> <head> <title>Employee Salaries</title> </head> <body> <table> <tr> <th>Employee Name</th> <th>Salary</th> </tr> <tr> <td>John Smith</td> <td>22,000</td> </tr> <tr> <td>Jane Doe</td> <td>21,000</td> </tr> <tr> <td>Joseph Brown</td> <td>25,000</td> </tr> </table> </body> </html>"},{"prompt":"Write a PHP function to print out multiplication table between two numbers. x = 3 y = 5","completion":"<?php function print_multiplication_table(x, y) { for(i = 1; i <= x; i++) { echo \\"<br>\\"; for(j = 1; j <= y; j++) { echo i*j.\\" \\"; } } } echo print_multiplication_table(3, 5); ?>"},{"prompt":"Write a Python code to search for a given keyword in a dictionary. dictionary = { “Car”: “A vehicle with four wheels”, “Laptop”: “A computer for personal use”, “Game”: “An activity for entertainment” }","completion":"def search(dic, keyword): for key, value in dic.items(): if keyword in key: return value return \\"No matching keyword found!\\" search(dictionary, 'Laptop')"},{"prompt":"Create an array of 3 strings and print it.","completion":"myArray = [\\"Hello\\", \\"World\\", \\"!\\"] print (myArray)"},{"prompt":"Create a C program to check if two string are equal or not. string1 = \\"Hello\\"; string2 = \\"Hello\\";","completion":"#include <stdio.h> #include <stdbool.h> bool isEqual(char* str1, char* str2) { int i; for (i = 0; str1[i] != '0' && str2[i] != '0'; i++) if (str1[i] != str2[i]) return false; return (str1[i] == '0' && str2[i] == '0'); } int main() { char string1[] = \\"hello\\"; char string2[] = \\"hello\\"; if (isEqual(string1, string2) == true) printf(\\"Strings are equal\\"); else printf(\\"Strings are not equal\\"); return 0; }"},{"prompt":"Write a query to return all the names of the tables in a database.","completion":"SELECT table_name FROM information_schema.tables"},{"prompt":"Generate a query to get the first 10 rows from the given table. Table name: \\"user","completion":"SELECT * FROM users LIMIT 10;"},{"prompt":"Create an API to return the average age of the users in the given database. Database name: \\"users_database","completion":"@app.route('/users/avg_age', methods=['GET']) def get_avg_age(): connection = sqlite3.connect(\\"users_database.db\\") cursor = connection.cursor() query = \\"SELECT AVG(age) from users;\\" cursor.execute(query) result = cursor.fetchall() return json.dumps({\\"avg_age\\": result[0][0]})"},{"prompt":"Write Angular code to bind a variable to the HTML view.","completion":"<div> {{my_variable}} </div>"},{"prompt":"Create a React component that renders the current date.","completion":"import React from 'react'; class DateComponent extends React.Component { render() { const date = new Date(); return ( <div> {date.toString()} </div> ); } }"},{"prompt":"Write a regex pattern to match words that begin with \\"cat\\".","completion":"^catw*"},{"prompt":"Write a query to return the total number of records in the given database. Database name: \\"users_database","completion":"SELECT COUNT(*) FROM users_database;"},{"prompt":"Using the given NumPy array, print out all the elements that are greater than 5. import numpy as np arr = np.array([4, 6, 2, 8, 0, 7, 5])","completion":"import numpy as np arr = np.array([4, 6, 2, 8, 0, 7, 5]) print(\\"Elements greater than 5:\\") for element in arr: if element > 5: print(element)"},{"prompt":"Using the given JSON string, extract the title field, and assign it to a variable. var jsonStr = '{\\"title\\":\\"My book\\",\\"author\\":\\"John Smith\\"}';","completion":"var jsonStr = '{\\"title\\":\\"My book\\",\\"author\\":\\"John Smith\\"}'; var title; try { // parse the JSON string var jsonObj = JSON.parse(jsonStr); // get the title and assign to variable title = jsonObj.title; } catch (error) { console.log(error); } console.log(title); // Output: My book"},{"prompt":"Create a Java program that asks the user to input a string and prints out its upper-case version.","completion":"import java.util.Scanner; class UpperCaseString { public static void main(String[] args) { Scanner scanner = new Scanner(System.in); System.out.print(\\"Please enter a string: \\"); String input = scanner.nextLine(); System.out.println(\\"The upper-case version of this string is: \\" + input.toUpperCase()); } }"},{"prompt":"Create a SQL statement that generates the total profit made by each salesperson over the year. SELECT salesperson_name, SUM(profit) FROM sales GROUP BY salesperson_name","completion":"SELECT salesperson_name, SUM(profit) AS total_profit FROM sales GROUP BY salesperson_name;"},{"prompt":"Using the code provided, write a regular expression pieces of code that validates an email address.","completion":"let regex = /^(([^<>()[].,;:s@\\"]+(.[^<>()[].,;:s@\\"]+)*)|(\\".+\\"))@(([[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}])|(([a-zA-Z-0-9]+.)+[a-zA-Z]{2,}))/;"},{"prompt":"Using the code provided, write a JavaScript function to compare two numbers and return the larger one.","completion":"const compareNumbers = (num1, num2) => { if (num1 > num2) { return num1; } else { return num2; } }"},{"prompt":"Edit the given code to generate an Array of all the numbers between 1 and 15.","completion":"let myArray = []; for (let i = 1; i<= 15; i++) { myArray.push(i); }"},{"prompt":"Rewrite the code such that it uses thread-safe code and prevents race conditions. int x = 0; //This is the Thread Task void increment(){ x++; }","completion":"#include <atomic> std::atomic_int x = 0; // This is the Thread Task void increment() { x.fetch_add(1); }"},{"prompt":"Modify the code to remove the duplicate elements from the given array. [5, 4, 5, 3, 2, 3, 1]","completion":"let myArray = [5, 4, 5, 3, 2, 3, 1]; let uniqueArray = []; myArray.forEach((item) => { if (uniqueArray.indexOf(item) === -1) { uniqueArray.push(item); } });"},{"prompt":"Using the code provided, write a JavaScript function that checks if a given number is prime or not.","completion":"const isPrime = (number) => { if (number <= 1) { return false; } for (let i = 2; i <= (number / 2); i++){ if (number % i === 0) { return false; } } return true; }"},{"prompt":"Write a python to convert an IP address from dot-decimal notation to binary notation. 192.168.1.1","completion":"def convert_ip_address(ip_address): \\"\\"\\" Convert IP address from dot-decimal notation (e.g. 192.168.1.1) to binary. \\"\\"\\" # Split the IP address in octets octets = ip_address.split('.') # Convert each octet to binary binary_octets = [bin(int(numeric_octet))[2:].zfill(8) for numeric_octet in octets] # Join the binary octets and return the IP address in binary notation return ''.join(binary_octets) if __name__ == '__main__': ip_address = '192.168.1.1' print(convert_ip_address(ip_address))"},{"prompt":"Create an SQL query that sums all the numbers from the 'number' column in the table 'test_data'? Table Name: test_data Columns: number","completion":"SELECT SUM(number) FROM test_data;"},{"prompt":"Write a code to output the cosine similarity between two vectors. vector1 = [1, 2, 3] vector2 = [4, 5, 6]","completion":"import numpy as np def cosine_similarity(vector1, vector2): # normalize the vectors v1 = np.array(vector1)/np.linalg.norm(vector1) v2 = np.array(vector2)/np.linalg.norm(vector2) # calculate cosine similarity return np.dot(v1, v2) if __name__ == '__main__': vector1 = [1, 2, 3] vector2 = [4, 5, 6] print(cosine_similarity(vector1, vector2))"},{"prompt":"Replace the comment in the code with a line of code that prints the index of the maximum value in the list. list_a = [5, 8, 3, 6, 9]","completion":"list_a = [5, 8, 3, 6, 9] # TODO: replace the comment with a line of code that prints the index of the maximum value in the list print(list_a.index(max(list_a)))"},{"prompt":"Write a code to generate a list with the first 20 Fibonacci numbers.","completion":"def fibonacci(n): \\"\\"\\" Generate a list with the first n Fibonacci numbers. \\"\\"\\" fib_list = [0, 1] # Generate the list and stop when n is reached while len(fib_list) < n: fib_list.append(fib_list[-1] + fib_list[-2]) return fib_list if __name__ == '__main__': print(fibonacci(20))"},{"prompt":"Using numpy, write a code to multiply matrix A and B together matrix A: [[1, 2], [3, 4]] matrix B: [[5, 6], [7, 8]]","completion":"import numpy as np def matrix_multiply(A, B): \\"\\"\\" Multiply matrix A and B using numpy \\"\\"\\" # Convert the matrices to numpy arrays A = np.array(A) B = np.array(B) # Multiply the matrices C = np.dot(A, B) return C if __name__ == '__main__': # example matrices A = [[1, 2], [3, 4]] B = [[5, 6], [7, 8]] print(matrix_multiply(A, B))"},{"prompt":"Using regular expression, write a code to extract words that start with a specific letter from a given string. string = \\"This is a test sentence\\" letter = \\"","completion":"import re def extract_words(string, letter): \\"\\"\\" Extract words that start with a specific letter from a given string \\"\\"\\" # Use a regular expression to match words that start with the letter pattern = r\\"b\\" + letter + r\\"w*b\\" words = re.findall(pattern, string) return words if __name__ == '__main__': string = \\"This is a test sentence\\" letter = \\"t\\" print(extract_words(string, letter))"},{"prompt":"Add an else clause to the following if statement. if cond: print(\\"true\\")","completion":"if cond: print(\\"true\\") else: print(\\"false\\")"},{"prompt":"Take in a string and return true if it is a valid IPv4 address. 127.0.0.1","completion":"true"},{"prompt":"put a string with parameters and return an updated string that replaces each parameter with its corresponding value. \\"The number is {x}","completion":"\\"The number is 4\\""},{"prompt":"Take in an array of integers and return the sum of all odd numbers. [1,2,3,4,5]","completion":"9"},{"prompt":"Parse a given input of timestamp and convert it to a datetime object in python. 1552520802","completion":"datetime.datetime(2019, 3, 12, 17, 33, 22)"},{"prompt":"Take in a string and return an output where every second character of the input string is capitalized. 'apple'","completion":"'ApPlE'"},{"prompt":"Write a set of if-else statements to convert numerical grade 1-100 to their letter grade equivalent.","completion":"if grade >= 90: letter_grade = 'A' elif grade >= 80: letter_grade = 'B' elif grade >= 70: letter_grade = 'C' elif grade >= 60: letter_grade = 'D' else: letter_grade = 'F'"},{"prompt":"Take in a JSON string and convert it into a valid Python 3 dictionary. '{\\"name\\": \\"john\\", \\"age\\": 32}'","completion":"{'name': 'john', 'age': 32}"},{"prompt":"Take in a list of integers and return true if any of the numbers in the list are prime numbers. [2, 3, 5, 7]","completion":"true"},{"prompt":"Create a function to return all possible sums of two numbers.","completion":"def two_num_sums(nums): \\"\\"\\"Returns a list of all possible sums of two numbers from nums.\\"\\"\\" combinations = [] for i in range(len(nums)-1): for j in range(i+1, len(nums)): combination = nums[i]+nums[j] combinations.append(combination) return combinations"},{"prompt":"Rewrite the code to be efficient and use less lines of code. def count_letters(string_name): letter_count = 0 for x in string_name: letter_count = letter_count + 1 return letter_cou","completion":"def count_letters(string_name): return len(string_name)"},{"prompt":"Write a shell script that checks if a directory exists and creates it if it doesn’t.","completion":"#!/bin/bash FILE=\\"/my/path/directory\\" if [ ! -d FILE ]; then mkdir -p FILE fi"},{"prompt":"Design a C# program to print the sum of the series: 1 + 1/2 + 1/3 + ….","completion":"using System; public class SumOfSeries { public static double SumSeries(int terms) { double total = 0; for (int i = 1; i <= terms; i++) { total += ((double)1/i); } return total; } }"},{"prompt":"mplement quicksort algorithm in Python for a list of integers. [4, 2, 5, 3, 1]","completion":"def quicksort(arr): if len(arr) <= 1: return arr pivot = arr[len(arr) // 2] left = [x for x in arr if x < pivot] middle = [x for x in arr if x == pivot] right = [x for x in arr if x > pivot] return quicksort(left) + middle + quicksort(right)"},{"prompt":"Create a form element in HTML and also include a submit button.","completion":"<form> <input type=\\"text\\" name=\\"name\\"> <button type=\\"submit\\">Submit</button> </form>"},{"prompt":"Using a switch-case statement, calculate the grade for the student using the percentage in the input. Student percentage: 80","completion":"switch(percentage) { case (percentage >= 90): grade = 'A'; break; case (percentage >= 80): grade = 'B'; break; case (percentage >= 70): grade = 'C'; break; case (percentage >= 60): grade = 'D'; break; case (percentage < 60): grade = 'F'; break; default: grade = 'Invalid'; break; }"},{"prompt":"Write a function in Java which takes integer array and a number as input and prints all the pairs which sum up to given number. Integer Array: [2, 7, 5, 3, 8] Number: 10","completion":"public void findPairs(int[] arr,int num) { for (int i = 0; i < arr.length; i++) { for (int j = i+1; j < arr.length; j++) { if (arr[i] + arr[j] == num) System.out.println(arr[i] + \\" + \\" + arr[j] +\\" = \\"+num); } } }"},{"prompt":"Create an array in C++ and initialize it with 5 integer values.","completion":"int array[5] = {1, 2, 3, 4, 5};"},{"prompt":"Classify the following string using Regular Expressions. Hello World","completion":"w+ w+"},{"prompt":"w can you print “Hello World” to your console using JavaScript?","completion":"console.log(\\"Hello World\\");"},{"prompt":"Write a Java program to iterate through a HashMap.","completion":"import java.util.HashMap; import java.util.Map; public class Main { public static void main (String[] args) { // Creating a HashMap Map<String, Integer> hash_map = new HashMap<String, Integer>(); // Mapping int values to string keys hash_map.put(\\"Geeks\\", 10); hash_map.put(\\"4\\", 15); hash_map.put(\\"Geeks\\", 20); hash_map.put(\\"Welcomes\\", 25); hash_map.put(\\"You\\", 30); // Displaying the HashMap for (Map.Entry mapElement : hash_map.entrySet()) { String key = (String)mapElement.getKey(); int value = (int)mapElement.getValue(); System.out.println(\\"Key: \\" + key + \\"t Value: \\" + value); } } }"},{"prompt":"Edit the following array in JavaScript so that all the strings are in uppercase. let array = ['cat', 'dog', 'fish'];","completion":"let array = ['CAT', 'DOG', 'FISH'];"},{"prompt":"Write a SQL query to select an employee with a specific Id.","completion":"SELECT * FROM Employees WHERE Id = '123456';"},{"prompt":"Write a JavaScript function that takes two parameters and compares them.","completion":"function compareValues (parameter1, parameter2) { if (parameter1 > parameter2) { return 1; } else if (parameter1 < parameter2) { return -1; } else { return 0; } }"},{"prompt":"Generate the Fibonacci sequence using a for loop in Python.","completion":"def generateFibonacciSequence(n): fib_sequence = [0,1] for i in range(2,n): fib_sequence.append(fib_sequence[i-1] + fib_sequence[i-2]) return fib_sequence"},{"prompt":"Using PHP, how can you print the JavaScript code that displays an alert message with the text “Hello World”?","completion":"echo \\"<script>alert('Hello World');<\/script>\\";"},{"prompt":"Create a JavaScript function to generate a random number between a user-entered minimum and maximum values.","completion":"function getRandomNumber(min, max) { return Math.random() * (max - min) + min; }"},{"prompt":"Reverse a string of characters and words. Hello World","completion":"dlroW olleH"},{"prompt":"Construct a SQL query to select all the records from a table where the last_name column begins with 'A'.","completion":"SELECT * FROM table_name WHERE last_name LIKE 'A%';"},{"prompt":"Write a python program that takes in two input strings and checks if the second string is an anagram of the first one. silent, liste","completion":"def anagram_check (str1, str2): if(sorted(str1)== sorted(str2)): print(\\"The strings are anagrams.\\") else: print(\\"The strings aren't anagrams.\\") # Driver code str1 = \\"silent\\" str2 = \\"listen\\" anagram_check(str1, str2)"},{"prompt":"Write a JavaScript program to simulate a rock, paper, scissors between 2 players.","completion":"let player1 = Math.floor(Math.random() * 3) + 1; let player2 = Math.floor(Math.random() * 3) + 1; if (player1 === player2) { console.log('Draw!'); } else if (player1 === 1 && player2 === 3) { console.log('Player 1 wins!'); } else if (player1 === 2 && player2 === 1) { console.log('Player 1 wins!'); } else if (player1 === 3 && player2 === 2) { console.log('Player 1 wins!'); } else { console.log('Player 2 wins!'); }"},{"prompt":"Edit the following code to ensure that the conditions in the if-else statement are met. if (x == 2 && y == 2) { console.log(\\"x equals y\\"); }","completion":"if (x == 2 && y == 2) { console.log(\\"x equals y\\"); } else if (x != 2 && y != 2) { console.log(\\"x does not equal y\\"); }"},{"prompt":"Write a SQL query to find the average rating of a movie having the title \\"The Godfather\\".","completion":"SELECT AVG(rating) FROM movie WHERE title = 'The Godfather';"},{"prompt":"Create a regular expression to match strings containing two consecutive symbols \\"#\\" followed by four alphabetic characters.","completion":"/#[a-zA-Z]{4}/"},{"prompt":"Using the comments as a guide, fill in the blanks with code where applicable to make the function jumbledLetters() work. def jumbledLetters(word): \\"\\"\\"Returns a randomly jumbled version of the given word.\\"\\"\\" new_word = \\"\\" for letter in word: #__TODO__ use the random module to generate a number between 0 and the length of the word num = ____ #__TODO__ add the letter to the string \`new_word\` using the \`num\` generated in the previous step ____ return new_word","completion":"def jumbledLetters(word): \\"\\"\\"Returns a randomly jumbled version of the given word.\\"\\"\\" new_word = \\"\\" for letter in word: #__TODO__ use the random module to generate a number between 0 and the length of the word num = random.randint(0, len(word)-1) #__TODO__ add the letter to the string \`new_word\` using the \`num\` generated in the previous step new_word += word[num] return new_word"},{"prompt":"Suppose you have an array of numbers like [2,5,3,7] and you have to find the sum of the elements of the array. Write a JavaScript program for this.","completion":"function sumArray(arr) { let sum = 0; arr.forEach(element => { sum += element; }); return sum; }"},{"prompt":"Make an executable Bash shell script to print the factorial of a given number.","completion":"#!/bin/bash # Print factorial of a given number echo \\"Please enter a number:\\" read num factorial=1 for (( i=1; i<=num; i++ )) do factorial=[ factorial * i ] done echo \\"num!=factorial\\""},{"prompt":"Write a CSS class to set the background of a div to blue and the font size to 12px.","completion":".blueDiv { background-color: blue; font-size: 12px; }"},{"prompt":"Write a Ruby script that given two numbers, finds the greatest common factor (GCF) of them.","completion":"def gcf(num1, num2) gcf = 1 x = [num1, num2].min (1..x).each do |i| if num1 % i == 0 && num2 % i == 0 gcf = i end end return gcf end"},{"prompt":"Write a Bash script that takes a filename as input and prints its details such as ownership, permissions, group, filesize, etc.","completion":"#!/bin/bash # Check a file's details such as ownership, permissions, # group, filesize, etc. echo \\"Enter filename: \\" read filename echo \\"Filename: filename\\" echo \\"Owner: (ls -l filename | awk '{ print 3 }')\\" echo \\"Group: (ls -l filename | awk '{ print 4 }')\\" echo \\"Permissions: (ls -l filename | awk '{ print 1 }')\\" echo \\"Filesize: (ls -l filename | awk '{ print 5 }')\\""},{"prompt":"Create a table with two columns that stores a username and a password.","completion":"CREATE TABLE users ( username VARCHAR(50) NOT NULL PRIMARY KEY, password VARCHAR(50) NOT NULL );"},{"prompt":"Develop a custom API endpoint for an online store using Node.js.","completion":"const express = require(\\"express\\"); const router = express.Router(); router.get(\\"/store/:productId\\", (req, res, next) => { const productId = req.params.productId; // Fetch product data from the database. // Return the product data res.status(200).json(data); }); module.exports = router;"},{"prompt":"Create a visualization in Matplotlib to display sales figures over the last 6 months.","completion":"import matplotlib.pyplot as plt import numpy as np months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'] sales = [40000, 42000, 46000, 50000, 60000, 63000] fig, ax = plt.subplots() ax.plot(months, sales, marker='o') ax.set_title('Monthly Sales') ax.set_xlabel('Month') ax.set_ylabel('Sales ()') ax.set_ylim(0, max(sales) + 5000) plt.show()"},{"prompt":"Develop a class in Ruby that calculates the area of a circle.","completion":"class Circle def initialize(r) @r = r end def area @r*@r*Math::PI end end"},{"prompt":"Construct a MongoDB query to retrieve all documents where the field 'name' contains the letter 'y'.","completion":"db.collection.find({ \\"name\\": { \\"regex\\": /.*y.*/i } })"},{"prompt":"Write a SQL query to list the names and ages of all students aged 18 or under.","completion":"SELECT name, age FROM students WHERE age <= 18"},{"prompt":"Write a SQL query to get the top 5 employees with the highest salary in the company.","completion":"SELECT * FROM Employees ORDER BY Salary DESC LIMIT 5;"},{"prompt":"Generate a unique ID of 8 characters in C#.","completion":"public static string GenerateUniqueID() { StringBuilder sb = new StringBuilder(); //generate 8 characters for (int i = 1; i <= 8; i++) { // append a character between a and z sb.Append((char)('a' + (char)(new Random().Next(0, 26)))); } return sb.ToString(); }"},{"prompt":"Parse the following JSON string in Python. {\\"name\\":\\"John\\",\\"age\\":30,\\"city\\":\\"New York\\"}","completion":"import json data = '{\\"name\\":\\"John\\", \\"age\\":30, \\"city\\":\\"New York\\"}' # parse the JSON string parsed_string = json.loads(data) # print the individual elements name = parsed_string[\\"name\\"] age = parsed_string[\\"age\\"] city = parsed_string[\\"city\\"] print(name) print(age) print(city)"},{"prompt":"Change the HTML structure above to set the title and content language to Italian.","completion":"<!DOCTYPE html> <html lang=\\"it\\"> <head> <meta charset=\\"UTF-8\\"> <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1.0\\"> <title>La mia prima pagina web</title> </head> <body> </body> </html>"},{"prompt":"ject a variable in a Python script, named \\"greeting_message\\" with the value \\"hello world","completion":"greeting_message = \\"hello world\\""},{"prompt":"Create a program in JavaScript that calendarizes the upcoming week based on the current date.","completion":"const days = [\\"Sunday\\", \\"Monday\\", \\"Tuesday\\", \\"Wednesday\\", \\"Thursday\\", \\"Friday\\", \\"Saturday\\"]; const months = [\\"January\\", \\"February\\", \\"March\\", \\"April\\", \\"May\\", \\"June\\", \\"July\\", \\"August\\", \\"September\\", \\"October\\", \\"November\\", \\"December\\"]; let currentDate = new Date(); // Get the day of the week and month corresponding to current date let dayOfWeek = days[currentDate.getDay()]; let month = months[currentDate.getMonth()]; let dayOfMonth = currentDate.getDate(); let calendar = [dayOfWeek + \\" - \\" + month + \\" \\" + dayOfMonth] // Generate the dates for the upcoming 6 days for (let dayOffset = 0; dayOffset < 6; dayOffset++) { let nextDate = new Date(currentDate.getTime() + 86400000 * (dayOffset + 1)); let nextDayOfWeek = days[nextDate.getDay()]; let nextMonth = months[nextDate.getMonth()]; let nextDayOfMonth = nextDate.getDate(); calendar.push(nextDayOfWeek + \\" - \\" + nextMonth + \\" \\" + nextDayOfMonth); } console.log(calendar);"},{"prompt":"Write a regular expression to validate a password containing at least 8 characters, one uppercase letter, one lowercase letter and a special character.","completion":"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#%^&*])[a-zA-Z0-9!@#%^&*]{8,}"},{"prompt":"Construct an array of integers from 1 to 10 in Javascript","completion":"let myArray = [1,2,3,4,5,6,7,8,9,10];"},{"prompt":"Create a program in HTML to display a basic table with 3 columns and 2 rows.","completion":"<html> <body> <table style=\\"width:100%\\"> <tr> <th>Firstname</th> <th>Lastname</th> <th>Age</th> </tr> <tr> <td>John</td> <td>Doe</td> <td>40</td> </tr> <tr> <td>Kathy</td> <td>Williams</td> <td>43</td> </tr> </table> </body> </html>"},{"prompt":"Create a Python script to generate a random password of 8 characters that contains an uppercase letter, a special symbol and a number.","completion":"import random import string def generate_random_password(): password = \\"\\" character_types = string.ascii_letters + string.digits + string.punctuation length = 8 for _ in range(length): password += random.choice(character_types) return password print(generate_random_password())"},{"prompt":"Write recursive function in JavaScript which reverses a given string. My name is Joh","completion":"function reverseString(str) { if (str.length === 0) { return \\"\\"; } return reverseString(str.slice(1)) + str[0]; } console.log(reverseString(\\"My name is John\\"));"},{"prompt":"Construct an SQL query which finds the element in a table. Table name: Users Element: id Value to be found: 3","completion":"SELECT * FROM Users WHERE id = 3;"},{"prompt":"Write a HTML fragment that creates a list of hyperlinks of four book titles. The Cat in the Hat, Harry Potter and the Philosopher's Stone, To Kill a Mockingbird, The Great Gatsby","completion":"<ul> <li><a href=\\"#\\">The Cat in the Hat</a></li> <li><a href=\\"#\\">Harry Potter and the Philosopher's Stone</a></li> <li><a href=\\"#\\">To Kill a Mockingbird</a></li> <li><a href=\\"#\\">The Great Gatsby</a></li> </ul>"},{"prompt":"Create a processing sketch that can randomly generate 500 circles.","completion":"// Setup a canvas of 500x500 void setup() { size(500, 500); } // Randomly draw 500 circles in the canvas void draw() { for (int i=0; i<500; i++) { float x = random(0, 500); float y = random(0,500); float rand = random(0, 100); fill(rand, rand, rand); ellipse(x, y, 20, 20); } }"},{"prompt":"Compile and run a C++ program that outputs an integer m multiplied by its square. m = 3","completion":"#include <iostream> int main() { int m = 3; std::cout << m * m << std::endl; return 0; } // Compile and run with this command g++ program.cpp -o program ./program"},{"prompt":"Generate a Rust program that prints \\"Hello, World!\\" to the console.","completion":"fn main() { println!(\\"Hello, World!\\"); }"},{"prompt":"mplement a Java program that reads five integers and prints their sum. 5, 8, 12, 1, 4","completion":"import java.util.*; public class Main { public static void main(String[] args) { Scanner sc = new Scanner(System.in); int sum = 0; // Read the integers for (int i = 0; i < 5; i++) { int x = sc.nextInt(); sum += x; } System.out.println(\\"The sum is \\" + sum); } }"},{"prompt":"Create an array in C++ with 4 elements.","completion":"int arr[4] = {1, 2, 3, 4};"},{"prompt":"mplement a class in C++ that creates a stack.","completion":"#include<iostream> #include<vector> using namespace std; // Class to represent a Stack class Stack { // container to store elements vector<int> v; public: void push(int data); bool empty(); void pop(); int top(); }; void Stack::push(int data) { // inserting an element // on the top of the stack v.push_back(data); } bool Stack::empty() { // checking if the stack is empty return v.size() == 0; } void Stack::pop() { // removing element // from the top of the stack if (!empty()) { v.pop_back(); } } int Stack::top() { // returns the top element // of the stack return v.back(); }"},{"prompt":"dentify the DOM elements inside an HTML structure given below and log it to the console. <div class=\\"container\\"> <ul> <li>Item 1</li> <li>Item 2</li> </ul> </div>","completion":"// Print the elements to the console let domElements = document.querySelectorAll('.container'); domElements.forEach(el => { console.log(el); console.log(el.firstChild); console.log(el.firstChild.firstChild); console.log(el.firstChild.lastChild); });"},{"prompt":"Write an algorithm to identify below number is prime or not. 7","completion":"# Function to check for prime number def isPrime(n): # Corner cases if n <= 1: return False # Check from 2 to n-1 for i in range(2, n): if n % i == 0: return False return True # Driver Program if isPrime(7): print(\\"YES! It is a prime number\\") else: print(\\"No! It is not a prime number\\")"},{"prompt":"Write a CSS selector that highlights all the <div> elements with a class name of \\"container\\".","completion":"div.container { background-color: yellow; }"},{"prompt":"Write a regular expression that validates email addresses.","completion":"^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+.[A-Za-z]{2,4}"},{"prompt":"Create a MySQL table called \\"orders\\" with the following columns: \\"Order_ID\\", \\"Costumer_Name\\", \\"Product_Name\\", \\"Quantity\\".","completion":"CREATE TABLE orders ( Order_ID int PRIMARY KEY, Costumer_Name varchar(255), Product_Name varchar(255), Quantity int );"},{"prompt":"Write a function in Go language that splits a string into three parts based on a specified separator. String to Split: Learn, GPT models Separator: ,","completion":"func SplitString(input, separator string) (string, string, string) { strings := strings.Split(input, separator) return strings[0], strings[1], strings[2] }"},{"prompt":"Write a SQL query to get the names of all customers who have placed orders from a given store in the last week. Given store name: \\"ABC Store","completion":"SELECT DISTINCT c.name FROM customer c INNER JOIN order o ON c.customer_id = o.customer_id WHERE o.store_name = \\"ABC Store\\" AND o.date_ordered >= DATE_SUB(CURDATE(), INTERVAL 7 DAY);"},{"prompt":"Write a function to reverse a given sentence in Python. Given sentence: \\"The quick brown fox jumps over the lazy dog.","completion":"def reverse_sentence(sentence): words = sentence.split() reversed_words = words[::-1] reversed_sentence = ' '.join(reversed_words) return reversed_sentence if __name__ == '__main__': sentence = \\"The quick brown fox jumps over the lazy dog.\\" print(reverse_sentence(sentence))"},{"prompt":"w do you connect to a MySQL database in Python?","completion":"You can connect to a MySQL database in Python using the mysql.connect() method. The syntax of this method is as follows: mysql.connect(host=\\"localhost\\", user=\\"username\\", password=\\"password\\", database=\\"database_name\\") Once you have successfully connected to the MySQL database, you can run SQL queries or perform other operations."},{"prompt":"Write a SQL query to get the names and salaries of all employees who earn more than 7000.","completion":"SELECT e.name, e.salary FROM employee e WHERE e.salary > 7000;"},{"prompt":"w would you access the last element of an array in JavaScript?","completion":"You can access the last element of an array in JavaScript by using the array's length property as follows: arr[arr.length - 1]"},{"prompt":"What is the difference between post() and get() in AJAX?","completion":"The main difference between post() and get() in AJAX is that post() sends the data in the body of the request and get() sends it in the URL. Post() is generally used to send form data, and can be used for creating or updating data on the server. Get() is usually used for requesting data from the server, and can be used for reading data from the server."},{"prompt":"Create a class in Java that prints \\"Hello World!","completion":"class HelloWorld { public static void main(String[] args) { System.out.println(\\"Hello World!\\"); } }"},{"prompt":"Given a string, write code to reverse it in JavaScript. String: programming","completion":"function reverseString(str) { let revStr = ''; for (let i = str.length - 1; i >= 0; i--) { revStr += str[i]; } return revStr; } console.log(reverseString('programming'));"},{"prompt":"Write a query in SQL to get the top 10 students with the highest scores. Table name: student Columns: name, score","completion":"SELECT TOP 10 name, score FROM student ORDER BY score DESC;"},{"prompt":"Given a number as an input, write a code in Java to check if it is an Armstrong number. Number: 153","completion":"public class ArmstrongNumber { public static boolean armstrongNumber(int number) { int result = 0, originalNumber, remainder; originalNumber = number; // Check if the number is Armstrong number while (originalNumber != 0) { remainder = originalNumber % 10; result += Math.pow(remainder, 3); originalNumber /= 10; } if (result == number) return true; else return false; } public static void main(String[] args) { int number = 153; boolean isArmstrong = armstrongNumber(number); if (isArmstrong) System.out.println(number + \\" is an Armstrong number.\\"); else System.out.println(number + \\" is not an Armstrong number.\\"); } }"},{"prompt":"Design a class in Python to model a hospital.","completion":"class Hospital: def __init__(self, location, name, rooms, staff): self.location = location self.name = name self.rooms = rooms self.staff = staff def get_location(self): return self.location def get_name(self): return self.name def get_rooms(self): return self.rooms def get_staff(self): return self.staff def set_location(self, location): self.location = location def set_name(self, name): self.name = name def set_rooms(self, rooms): self.rooms = rooms def set_staff(self, staff): self.staff = staff"},{"prompt":"Compile this code in C++. #include <iostream> int main() { std::cout << \\"Hello World!\\"; return 0; }","completion":"g++ -o hello_world hello_world.cpp"},{"prompt":"Convert this temperature from Kelvin to Celsius in JavaScript. Temperature (K): 298","completion":"let tempKelvin = 298; let convertedTemp = tempKelvin - 273.15; console.log(convertedTemp + ' degrees Celsius');"},{"prompt":"Write a query in MySQL that returns all unique values of a given column. Table name: student Column: gender","completion":"SELECT DISTINCT gender FROM student;"},{"prompt":"Find the maximum number of left and right parentheses that can be balanced for a given expression. Expression: (()()","completion":"The maximum number of left parentheses that can be balanced in the given expression is 3 and the maximum number of right parentheses that can be balanced is 3."},{"prompt":"Write code to iterate through a nested dictionary and return the sum of all values. dictionary = { 'level1': { 'level2a': { 'level3a': 1, 'level3b': 3 }, 'level2b': { 'level3a': 4, 'level3b': 5 } } }","completion":"dictionary = { 'level1': { 'level2a': { 'level3a': 1, 'level3b': 3 }, 'level2b': { 'level3a': 4, 'level3b': 5 } } } def iterate_dict(d): result = 0 for value in d.values(): if type(value) is dict: result += iterate_dict(value) else: result += value return result print(iterate_dict(dictionary)) # 13"},{"prompt":"Make a single change in the following code to throw an error when the argument to the function is negative. def calculate_square_root(n): return n**(1/2)","completion":"def calculate_square_root(n): if n < 0: raise ValueError(\\"n must be a positive number\\") return n**(1/2)"},{"prompt":"Create a function that takes a list of numbers and identifies the sublists of numbers that add up to a given sum.","completion":"def sublist_sum(nums, target): result = [] current_sum = 0 start = 0 for end in range(len(nums)): current_sum += nums[end] while current_sum > target and start < end: current_sum -= nums[start] start += 1 if current_sum == target: result.append(nums[start:end+1]) return result"},{"prompt":"Create a class to represent a calculator with the following methods: add, subtract, multiply, and divide","completion":"class Calculator: def add(self, num1, num2): return num1 + num2 def subtract(self, num1, num2): return num1 - num2 def multiply(self, num1, num2): return num1 * num2 def divide(self, num1, num2): return num1 / num2"},{"prompt":"Replace the \\"TODO\\" in the following code with the code to print the sum of the first n natural numbers. def print_sum(n): # TODO print_sum(5)","completion":"def print_sum(n): sum_n = n * (n + 1) // 2 print(sum_n) print_sum(5)"},{"prompt":"Create a function to parse a string that has lines of key/value pairs and return a dictionary of the values paired with the keys.","completion":"def parse_key_value_pairs(string): result = {} lines = string.split(\\"n\\") for line in lines: if line: key, value = line.split(\\":\\") result[key] = value return result"},{"prompt":"Write code to find the maximum sum for a contiguous subarray of a given array.","completion":"def max_sum_subarray(nums): current_sum = 0 max_sum = -float('inf') for num in nums: current_sum += num max_sum = max(max_sum, current_sum) current_sum = max(current_sum, 0) return max_sum"},{"prompt":"Create a function to format a given list of numbers with commas as thousands separators.","completion":"def format_numbers(nums): formatted_nums = [] for num in nums: formatted_nums.append(\\"{:,}\\".format(num)) return formatted_nums"},{"prompt":"Write a SQL query that finds the total number of courses.","completion":"SELECT COUNT(*) FROM courses;"},{"prompt":"Write a JavaScript function that returns the name of the user. let user = { name: \\"Tom\\", age: 28 };","completion":"function getUserName(user){ return user.name; }"},{"prompt":"Write an algorithm in Java that finds the maximum value in an array. int[] arr = { 4, 9, 3, 6, 1 };","completion":"int maxVal(int[] arr) { int maxVal = arr[0]; for (int i=1; i<arr.length; i++) { if (arr[i] > maxVal) { maxVal = arr[i]; } } return maxVal; }"},{"prompt":"Create a program in C that takes in two integers and adds them together. int x = 2; int y = 3;","completion":"#include <stdio.h> int main() { int x = 2; int y = 3; int result = x + y; printf(\\"The result is %dn\\", result); return 0; }"},{"prompt":"Create a program in Java that finds the average of a given array. int[] arr = {3, 4, 5, 6};","completion":"public static double findAvg(int[] arr) { int sum = 0; for (int i = 0; i < arr.length; i++) { sum += arr[i]; } double avg = (double)sum / (double)arr.length; return avg; }"},{"prompt":"Create a Java program to find the sum of the following array [1,2,3,4,5].","completion":"public class Sum { public static void main(String[] args) { int[] arr = {1, 2, 3, 4, 5}; int sum = 0; // Compute sum of array elements for (int i = 0; i < arr.length; i++) { sum += arr[i]; } // Print sum System.out.println(\\"Sum of given array elements is: \\" + sum); } }"},{"prompt":"Write a regex (in Python) to match the following pattern: \\"an apple a day keeps the doctor away","completion":"import re regex = r\\"bansapplesbasdayskeepssthesdoctorsawayb\\""},{"prompt":"Extract the title and description from this XML data. <data> <info> <title>Page Title</title> <description>This is a description of a web page.</description> </info> </data>","completion":"let title = xml.querySelector('title').innerHTML; let description = xml.querySelector('description').innerHTML;"},{"prompt":"Find the average value of the following array in Python. arr = [1,2,3,4,5]","completion":"import numpy as np arr = [1,2,3,4,5] average = np.mean(arr) print(f\\"The average of the array is: {average}\\")"},{"prompt":"Create a MySQL query to group clubs by the number of players.","completion":"SELECT COUNT(player_id) AS number_of_players, club FROM club_players GROUP BY club;"},{"prompt":"Create a SQLite query to find the sum of the column \\"price\\" in a table called \\"orders\\".","completion":"SELECT SUM(price) AS total_sum FROM orders;"},{"prompt":"Create an algorithm that returns an array of the unique items in a given list. [1, 2, 4, 2, 5, 6, 7, 1, 4]","completion":"def unique(arr): unique_list = [] for el in arr: if el not in unique_list: unique_list.append(el) return unique_list"},{"prompt":"Create an algorithm to determine if two strings are rotations of each other. \\"abcde\\", \\"eabcd","completion":"def is_rotation(str1, str2): return len(str1) == len(str2) and str2 in str1+str1"},{"prompt":"Generate a code to sort a list of floats. [4.5, 7.5, 1.5, -2.5]","completion":"def sort_floats(arr): arr.sort(key=float) return arr"},{"prompt":"Create a CSS class called \\"black-background\\" that sets the background color for a div element to black.","completion":".black-background { background-color: #000000; }"},{"prompt":"Given the following text, create a Python function that finds the number of unique words in the text. This is a sample text to find the number of unique words.","completion":"def find_unique_words(text): words = set(text.split(\\" \\")) return len(words) unique_words = find_unique_words(\\"This is a sample text to find the number of unique words.\\") print(unique_words)"},{"prompt":"Replace the values in the following array with its cumulative sum. arr = [1, 2, 3, 4, 5]","completion":"def cumulative_sum(arr): cum_sum = [] temp_sum = 0 for num in arr: temp_sum += num cum_sum.append(temp_sum) return cum_sum arr = [1, 2, 3, 4, 5] cum_sum = cumulative_sum(arr) print(cum_sum) # Output: [1, 3, 6, 10, 15]"},{"prompt":"Create a ReactJS component called \\"MyComponent\\" that renders a simple HTML element.","completion":"import React from 'react'; class MyComponent extends React.Component { render () { return <div>Hello world!</div> } } export default MyComponent;"},{"prompt":"Create a C# function called \\"InsertCharacter\\" that takes a string input and inserts a character at a given index. string = \\"Hello World!\\", index = 5","completion":"public static string InsertCharacter(string str, int index, char ch) { return str.Substring(0, index) + ch + str.Substring(index); } string newString = InsertCharacter(\\"Hello World!\\", 5, 'x'); Console.WriteLine(newString); # Output: Hellxo World!"},{"prompt":"Given the following array and a number k, determine if two elements from the array add up to k. arr = [10, 15, 3, 7], k = 17","completion":"def findSum(arr, k): s = set() for num in arr: diff = k - num if diff in s: return True s.add(num) return False arr = [10, 15, 3, 7] k = 17 print(findSum(arr, k)) # Output: True"},{"prompt":"Programmatically generate a random password of length 8 that contains at least one lowercase letter, one uppercase letter, one number, and one special character.","completion":"import string import random def generate_password(): letters = string.ascii_letters numbers = string.digits symbols = string.punctuation chars = letters + numbers + symbols length = 8 password = \\"\\".join(random.sample(chars, length)) if any(char.islower() for char in password) and any(char.isupper() for char in password) and any(char.isdigit() for char in password) and any(char in symbols for char in password): return password random_password = generate_password() print(random_password) # Output: eQ@0?St"},{"prompt":"Sort the following list of numbers in increasing order without using any built-in sorting method. arr = [2, 5, 3, 8, 7]","completion":"def sort_increasing(arr): for i in range(len(arr)): min_index = i for j in range(i, len(arr)): if arr[min_index] > arr[j]: min_index = j arr[i], arr[min_index] = arr[min_index], arr[i] return arr arr = [2, 5, 3, 8, 7] sorted_arr = sort_increasing(arr) print(*sorted_arr) # Output: 2 3 5 7 8"},{"prompt":"Given an array of integers, replace each element of the array with its square. arr = [1, 2, 3, 4, 5]","completion":"def get_squares(arr): squares = [] for num in arr: squares.append(num ** 2) return squares arr = [1, 2, 3, 4, 5] squares = get_squares(arr) print(*squares) # Output: 1 4 9 16 25"},{"prompt":"Using the array below, count the occurrence of the number 3. arr = [1, 1, 2, 3, 3, 3, 4, 5]","completion":"arr = [1, 1, 2, 3, 3, 3, 4, 5] def count_number(arr, num): count = 0 for val in arr: if val == num: count += 1 return count count = count_number(arr, 3) print(count) # Output: 3"},{"prompt":"Create a program that finds the average of two numbers. 7 and 9","completion":"def find_average(num1, num2): return (num1 + num2) / 2 if __name__ == '__main__': print(find_average(7, 9))"},{"prompt":"w would you generate a Fibonacci sequence up to n in a list?","completion":"def generate_fibonacci_sequence(n): result = [1] current_number = 1 next_number = 1 while current_number <= n: result.append(current_number) current_number, next_number = next_number, current_number + next_number return result if __name__ == '__main__': print(generate_fibonacci_sequence(10))"},{"prompt":"Create a function to get the root of a quadratic equation 1, 4, 4","completion":"def get_roots_of_quad_eqn(a, b, c): # compute discriminant d = (b**2) - (4 * a * c) # compute roots root1 = (-b + math.sqrt(d)) / (2 * a) root2 = (-b - math.sqrt(d)) / (2 * a) # return the roots return root1, root2 if __name__ == '__main__': a, b, c = 1, 4, 4 print(get_roots_of_quad_eqn(a, b, c))"},{"prompt":"Write a Python program to print the numbers of a specified list after removing even numbers from it.","completion":"def print_odd(numbers): odd_numbers = [] for num in numbers: if num % 2 != 0: odd_numbers.append(num) return odd_numbers if __name__ == '__main__': numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] print(print_odd(numbers))"},{"prompt":"Edit the following code to print the position of an element x in a list y. list y = [2, 3, 4, 1, 5] x = 1","completion":"list y = [2, 3, 4, 1, 5] x = 1 def find_position(y, x): for index, value in enumerate(y): if value == x: return index return f\\"{x} is not in the list\\" if __name__ == '__main__': print(find_position(y, x))"},{"prompt":"w would you calculate the distance between two points in a three-dimensional space?","completion":"def distance_3d(x1, y1, z1, x2, y2, z2): return math.sqrt((x2 - x1)**2 + (y2 - y1)**2 + (z2 - z1)**2) if __name__ == '__main__': x1, y1, z1 = 1, 2, 3 x2, y2, z2 = 5, 6, 7 print(distance_3d(x1, y1, z1, x2, y2, z2))"},{"prompt":"Write a code to get the second smallest number from a list of integers.","completion":"def second_smallest(numbers): sorted_numbers = sorted(numbers) return sorted_numbers[1] if __name__ == '__main__': numbers = [1, 5, 2, 9, 3, 6] print(second_smallest(numbers))"},{"prompt":"w would you form a list from two lists by taking elements at same index from both the lists?","completion":"def form_list_from_list(list1, list2): return [list1[i] + list2[i] for i in range(len(list1))] if __name__ == '__main__': list1 = [1, 2, 3] list2 = [4, 5, 6] print(form_list_from_list(list1, list2))"},{"prompt":"Create a Java programme that accepts two strings and returns the length of the longest string. String string1 = \\"Hello\\"; String string2 = \\"World!\\";","completion":"int longest = Math.max(string1.length(), string2.length()); System.out.println(\\"Longest string length is \\"+ longest);"},{"prompt":"vestigate the syntax error in this R script and fix it. x <- c(1, 2, 3","completion":"x <- c(1, 2, 3)"},{"prompt":"Translate the following expression into a SQL query.","completion":"SELECT * FROM table WHERE conditions LIKE '%expression%';"},{"prompt":"Create a function in Java to find the number of values greater than a given number in a given array. int[] arr = {1, 2, 3, 4}; int threshold = 2;","completion":"public static int greaterThan(int[] arr, int threshold) { int count = 0; for (int i=0; i < arr.length; i++) { if (arr[i] > threshold) { count++; } } return count; }"},{"prompt":"Edit the given code snippet to reverse the elements of a list in Python.","completion":"def reverseList(list): list.reverse() return list"},{"prompt":"Output the remaining items in the following array after removing duplicates: let arr = [1, 2, 1, 4, 5, 2, 6]","completion":"[4, 5, 6]"},{"prompt":"Convert the following JavaScript code to a for loop: let num = 0; while (num < 5) { console.log(num); num++; }","completion":"for (let num = 0; num < 5; num++) { console.log(num); }"},{"prompt":"w does the following CSS style the first letter of a paragraph? p::first-letter { font-weight: bold; }","completion":"The first letter of a paragraph will be rendered with a bold font style."},{"prompt":"w does the following HTML code create a clickable link? <a href=\\"www.example.com\\" >Click here</a>","completion":"This HTML code will create a clickable link that will lead to the URL \\"www.example.com\\" when clicked."},{"prompt":"Use the given array and print the second element using its index. Array: [2, 3, 4, 5, 6]","completion":"console.log(arr[1]); // prints 3"},{"prompt":"Write a Bash script which will print the value of Shell variable 'USER' followed by User's current working directory.","completion":"#!/bin/bash echo \\"USER is currently in: \\" pwd"},{"prompt":"Define a Bash function with name 'times2' which takes one parameter and prints the value doubled.","completion":"times2 () { value=1 echo \\"value*2 = ((value*2))\\" }"},{"prompt":"Use dictionaries in Python to merge the data from two given dictionaries. dictA = { 'keyA': 1, 'keyB': 2 } dictB = { 'keyC': 3, 'keyD': 4 }","completion":"dictC = {**dictA, **dictB}"},{"prompt":"Develop a regex expression to validate if a given string contains 5 numbers consecutively.","completion":"^d{5}"},{"prompt":"Write a query in MongoDB to fetch all documents where the field 'status' is 'active'.","completion":"db.collection.find({\\"status\\": \\"active\\"})"},{"prompt":"Use TensorFlow to build a machine learning model for predicting continuous values given a data set of temperature vs electricity consumption.","completion":"import tensorflow as tf import matplotlib.pyplot as plt #Import the dataset x = tf.placeholder(tf.float32) y = tf.placeholder(tf.float32) # Create our model model = tf.keras.Sequential([tf.keras.layers.Dense(1, input_shape=[1])]) # Compile the model model.compile(loss='mean_squared_error', optimizer='sgd') # Fit the model model.fit(x, y, epochs=10) # Plot the result plt.plot(x, y, 'ro', label='original data') plt.plot(x, model.predict(x), label='predicted') plt.xlabel('Temperature') plt.ylabel('Electricity Consumption') plt.legend() plt.show()"},{"prompt":"Design a class in Java called 'Student' which contains student's information such as name, age, etc.","completion":"public class Student { private String name; private int age; private boolean status; public Student(String name, int age, boolean status) { this.name = name; this.age = age; this.status = status; } public String getName() { return name; } public void setName(String name) { this.name = name; } public int getAge() { return age; } public void setAge(int age) { this.age = age; } public boolean getStatus() { return status; } public void setStatus(boolean status) { this.status = status; } }"},{"prompt":"Write a method in Java which displays a printing pattern like shown below. x xx xxx xxxx","completion":"public static void printPattern(int n) { for (int i = 1; i <= n; i++) { for (int j = 1; j <= i; j++) { System.out.print(\\"x\\"); } System.out.println(); } }"},{"prompt":"g the given input text, identify the parts of speech for each word. The cat is black and white","completion":"The: article cat: noun is: verb black: adjective and: conjunction white: adjective"},{"prompt":"mplement quicksort in Python","completion":"def quicksort(array): if len(array) < 2: return array else: pivot = array[0] less = [i for i in array[1:] if i <= pivot] greater = [i for i in array[1:] if i > pivot] return quicksort(less) + [pivot] + quicksort(greater)"},{"prompt":"Generate a valid JSON string as output with given input data. name: 'John Doe', age: 25, address: '123 Main St.'","completion":"def generate_json(data): return json.dumps(data) # Usage data = {\\"name\\": \\"John Doe\\", \\"age\\": 25, \\"address\\": \\"123 Main St.\\"} json_str = generate_json(data) print(json_str)"},{"prompt":"Count the number of vowels present in the input text. Good morning!","completion":"def vowel_count(text): vowels = ['a', 'e', 'i', 'o', 'u'] count = 0 for c in text: if c.lower() in vowels: count += 1 return count"},{"prompt":"Create an algorithm to determine whether the given array contains an odd number of elements. [1, 2, 3, 4, 5]","completion":"def is_odd(arr): return len(arr) % 2 != 0"},{"prompt":"Compute the sum of elements in the following input array. [4, 7, 2, 9, 10, 15]","completion":"def sum_array(arr): total = 0 for num in arr: total += num return total"},{"prompt":"erchange the values of two given variables. x = 10 y = 5","completion":"# Swap x and y def swap_values(x, y): x, y = y, x return x, y"},{"prompt":"Describe the timeline of a given project. Create a social media app","completion":"# Describe the timeline of a given project def create_timeline(project): timeline = ['identify goals', 'analyze market', 'develop strategy', 'plan development', 'design UI', 'write code', 'test and refine', 'launch'] return timeline"},{"prompt":"Calclate the area of a triangle in accordance with the given values. Base = 4 Height = 3","completion":"def calculate_area(base, height): return 0.5 * base * height"},{"prompt":"Generate a list of integers between a given start and end value. Start = 3 End = 10","completion":"def generate_list(start, end): return list(range(start, end+1))"},{"prompt":"Compose an algorithm to determine whether a given string contains all unique characters.","completion":"def is_unique(string): char_set = set() for char in string: if char in char_set: return False else: char_set.add(char) return True"},{"prompt":"Update the following code to loop through the numbers 0 to 5. for i in range(): print(i)","completion":"for i in range(6): print(i)"},{"prompt":"Complete the missing parts of the code to sort an array in ascending order. int[] arr = {3, 5, 2, 7, 1}; int temp; for (int i = 0; i < arr.length; i++){ // TODO: complete the code }","completion":"int[] arr = {3, 5, 2, 7, 1}; int temp; for (int i = 0; i < arr.length; i++){ for (int j = i+1; j < arr.length; j++){ if (arr[i] > arr[j]) { temp = arr[i]; arr[i] = arr[j]; arr[j] = temp; } } }"},{"prompt":"Write a SQL query to sort the records in table \\"Employees\\" by employment date in ascending order.","completion":"SELECT * FROM Employees ORDER BY Employment_Date ASC;"},{"prompt":"Using Tensorflow, set up a model to predict the classification of a handwritten digit.","completion":"import tensorflow as tf #load the MNIST data mnist = tf.keras.datasets.mnist #split the data into train and test (x_train, y_train), (x_test, y_test) = mnist.load_data() #normalize the data between 0 and 1 x_train = tf.keras.utils.normalize(x_train, axis=1) x_test = tf.keras.utils.normalize(x_test, axis=1) #build the model model = tf.keras.models.Sequential() # add the input layer of the model model.add(tf.keras.layers.Flatten()) # add the hidden layers model.add(tf.keras.layers.Dense(128, activation=tf.nn.relu)) model.add(tf.keras.layers.Dense(128, activation=tf.nn.relu)) #add the output layer #NOTE: We are using output dimension as 10 because we are trying to predict 10 classifications (i.e. 0 to 9) model.add(tf.keras.layers.Dense(10, activation=tf.nn.softmax)) #compile the model model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy']) #train the model model.fit(x_train, y_train, epochs=3) #evaluate the model val_loss, val_acc = model.evaluate(x_test, y_test) print(val_loss, val_acc)"},{"prompt":"Create a Go program to convert a given temperature from Kelvin to Celsius.","completion":"package main import \\"fmt\\" func KelvinToCelsius(k float64) float64 { c := k - 273.15 return c } func main() { k := 300.15 c := KelvinToCelsius(k) fmt.Printf(\\"%.2f kelvin is equal to %.2f celsius.n\\", k, c) }"},{"prompt":"Debug the following code to print all the elements of an array. int[] arr = {1,2,3,4,5}; for (int i = 0; i < arr.len; i++){ System.out.println(arr[i]); }","completion":"int[] arr = {1,2,3,4,5}; for (int i = 0; i < arr.length; i++){ System.out.println(arr[i]); }"},{"prompt":"Create an Angular2 component to display a \\"Hello, world!\\" message.","completion":"import { Component } from '@angular/core'; @Component({ selector: 'app-hello-world', template: \`<div>Hello, World!</div>\`, }) export class HelloWorldComponent { }"},{"prompt":"Use Ruby on Rails to generate a migration to add a column \\"name\\" to the table \\"users\\".","completion":"class AddNameToUsers < ActiveRecord::Migration[6.0] def change add_column :users, :name, :string end end"},{"prompt":"Create a React component to render a table with three columns: \\"ID\\", \\"Name\\", and \\"Occupation\\".","completion":"import React from 'react'; import { Table } from 'react-bootstrap'; class MyTable extends React.Component { render() { return ( <Table striped bordered hover> <thead> <tr> <th>ID</th> <th>Name</th> <th>Occupation</th> </tr> </thead> <tbody> {this.props.data.map( (row, index) => { return ( <tr key={index}> <td>{row.id}</td> <td>{row.name}</td> <td>{row.occupation}</td> </tr> ); })} </tbody> </Table> ); } }"},{"prompt":"Rewrite a PHP program to produce the same result. <?php arr = array(1,2,3,4,5); sum = 0; for (i = 0; i < count(arr); i++){ sum = sum + arr[i]; } echo sum; ?>","completion":"<?php arr = array(1,2,3,4,5); sum = 0; foreach (arr as val) { sum += val; } echo sum; ?>"},{"prompt":"Add a feature to the given code to print the name of the largest number in an array. int[] arr = {5,3,7,2,4}; int largest = arr[0]; for (int i = 1; i < arr.length; i++){ if(arr[i] > largest){ largest = arr[i]; } }","completion":"int[] arr = {5,3,7,2,4}; int largest = arr[0]; String name; for (int i = 1; i < arr.length; i++){ if(arr[i] > largest){ largest = arr[i]; name = Integer.toString(arr[i]); } } System.out.println(\\"The largest number is \\" + name);"},{"prompt":"Design a function that will print out the leap years in a given interval From 2015 to 2050","completion":"def print_leap_years(start_year, end_year): for year in range(start_year, end_year + 1): if (year % 4 == 0 and year % 100 != 0) or year % 400 == 0: print(year) print_leap_years(2015, 2050)"},{"prompt":"Output the square of the following number 5","completion":"25"},{"prompt":"Explain why it is important to have exception handling","completion":"Exception handling is important for a program as it allows the program to gracefully handle any unexpected or erroneous conditions. This helps keep the program running by providing meaningful feedback and prompts to the user. It also helps reduce the risk of having some part of the program crashing due to an unforeseen and avoidable event. Exception handling also encourages developers to write more robust and structured code as they are aware that their code might be faced with unpredictable conditions, and they will expect their code to be able to handle them gracefully."},{"prompt":"Create a program to identify a given string as a valid ISBN 10 code","completion":"def is_valid_isbn_10(code): # check for the length if len(code) != 10: return False # check for leading \\"X\\" characters if code.startswith(\\"X\\"): return False # check for digits if not code.isdigit(): return False # calculate the check digit sum = 0 for i in range(9): sum += int(code[i]) * (10 - i) checksum = sum % 11 # check for valid check digit if not (checksum==int(code[9]) or (checksum == 10 and code[9] == 'X')): return False # No errors found return True if __name__ == '__main__': code = input('Enter the ISBN-10 code: ') print(is_valid_isbn_10(code))"},{"prompt":"Design a function that takes two parameters a and two and returns the result of a multiplied by two","completion":"def mul_two(a, b): return a * b if __name__ == '__main__': x = int(input('Enter first number: ')) y = int(input('Enter second number: ')) print(mul_two(x, y))"},{"prompt":"Write a C++ method to calculate the Fibonacci series.","completion":"// C++ program to calculate Fibonacci series #include <iostream> // Fibonacci function int Fibonacci(int n) { if (n <= 1) return n; return Fibonacci(n-1) + Fibonacci(n-2); } int main() { int n; std::cout << \\"Enter the number of terms: \\"; std::cin >> n; // This loop will print Fibonacci series till n for (int i = 0; i < n; i++) std::cout << Fibonacci(i) << \\", \\"; std::cout << \\"...\\" << std::endl; return 0; }"},{"prompt":"Verify if a given password string matches the regular expression. password = \\"Ab12#","completion":"import re # regex pattern to match given password pattern = re.compile(r\\"^[A-Za-z]w{7,15}\\") # check if the password string matches the pattern if pattern.match(password): print(\\"Password is valid\\") else: print(\\"Password is invalid\\")"},{"prompt":"Create a react component to render the following table.","completion":"import React from \\"react\\" // React component to render a table class Table extends React.Component { render() { return ( <table> <tr> <th>Name</th> <th>Age</th> <th>Address</th> </tr> <tr> <td>James</td> <td>25</td> <td>San Francisco</td> </tr> <tr> <td>John</td> <td>30</td> <td>New York</td> </tr> <tr> <td>Olivia</td> <td>20</td> <td>London</td> </tr> </table> ) } } export default Table;"},{"prompt":"Run a sentiment analysis on a given text. Text: \\"The movie was amazing!","completion":"import nltk from nltk.sentiment.vader import SentimentIntensityAnalyzer analyzer = SentimentIntensityAnalyzer() # run sentiment analysis sentiment = analyzer.polarity_scores(text) for key in sentiment: print('{0}: {1}'.format(key, sentiment[key])) # output compound: 0.6249 neg: 0.0 neu: 0.406 pos: 0.594"},{"prompt":"Train a machine learning model for a classification problem. X = [[0, 1], [1, 1], [0, 0], [1, 0]] y = [1, 0, 1, 0]","completion":"# importing the necessary libraries import numpy as np from sklearn.svm import SVC # creating a svm classifier clf = SVC(kernel = 'linear') # fitting the model clf.fit(X, y)"},{"prompt":"Create a web page with styles.","completion":"<html> <head> <title>Styled Web Page</title> <style> body { background-color: lightblue; } h1 { color: white; text-align: center; } p { font-family: verdana; font-size: 15px; } </style> </head> <body> <h1>Welcome to My Web Page</h1> <p>This is my styled web page.</p> </body> </html>"},{"prompt":"Connect to a MySQL database and display the table data. host = \\"localhost\\" user = \\"root\\" password = \\"password\\" database = \\"mydb","completion":"import mysql.connector mydb = mysql.connector.connect( host=host, user=user, passwd=password, database=database ) cursor = mydb.cursor() # execute SQL query to display all data in table cursor.execute(\\"SELECT * FROM myTable\\") # print all of the table data myresult = cursor.fetchall() for row in myresult: print(row)"},{"prompt":"Create a JavaScript object for a square with sides 8, 10 and 12.","completion":"let objSquare = { side1: 8, side2: 10, side3: 12 }"},{"prompt":"Optimize MySQL query to select the latest record in each group SELECT * FROM myTable GROUP BY type","completion":"SELECT * FROM myTable WHERE id = (SELECT MAX(id) FROM myTable AS T2 WHERE T2.type = MyTable.type) GROUP BY type"},{"prompt":"Generate C code to swap two integers without using a third variable.","completion":"void swap_int(int * x, int * y) { *x = *x ^ *y; *y = *x ^ *y; *x = *x ^ *y; }"},{"prompt":"Create a basic query using two variables. sky, blue","completion":"SELECT * FROM table WHERE sky = 'blue';"},{"prompt":"w would you form an argument in Java?","completion":"A Java argument is specified either at the command line while running a program, or within the code of a method. When running a program, the argument is specified after typing the program name followed by a space. The argument can be of any data type, such as a string, an integer, a double, and so on. Within a method, the argument is being passed in when the method is being called. For example, consider a method called calculateArea that requires one argument—the radius of a circle—in order to calculate the area of a circle. The argument is included within the parentheses when the method is called."},{"prompt":"w to define an array in PHP?","completion":"An array in PHP is defined using the array() function. The syntax is as follows: array = array(element1, element2, ...); The elements can be of any type, such as strings, numbers, Booleans, objects, or even other arrays."},{"prompt":"Create a regular expression to identify email addresses in a given string.","completion":"The regular expression to identify email addresses in a given string is: b[A-Z0-9._%+-]+@[A-Z0-9.-]+.[A-Z]{2,}b"},{"prompt":"Generate SQL code to query a database table containing student names and ages. SELECT all students who are between 18 and 25 years of age.","completion":"SELECT * FROM Students WHERE Age BETWEEN 18 and 25;"},{"prompt":"w can we obfuscate a JavaScript code to make it harder for hackers to reverse engineer it?","completion":"There are several tools and techniques that can be used to obfuscate JavaScript code. These include minifying the code so that it is difficult for humans to read, encrypting the code, scrambling variables, encrypting strings, and using code evaluation techniques to avoid running malicious code."},{"prompt":"Apply K-means clustering to a 3-dimensional dataset given a certain number of clusters. Number of Clusters = 4","completion":"from sklearn.cluster import KMeans # prepare the data X = [... the 3-dimensional dataset ...] # define the clustering model kmeans_model = KMeans(n_clusters=4) # fit the model kmeans_model.fit(X) # get the cluster centers cluster_centers = kmeans_model.cluster_centers_ # get the labels for each point labels = kmeans_model.labels_"},{"prompt":"Write a Micropython program to turn on an LED.","completion":"from machine import Pin led = Pin(0, Pin.OUT) led.on()"},{"prompt":"Update the C++ code below to generate a Fibonacci sequence of up to the 6th number. #include <iostream> int main () { int x = 0, y = 1; std::cout << x << \\" \\" << y; return 0; }","completion":"#include <iostream> int main () { int x = 0, y = 1, z = 0; std::cout << x << \\" \\" << y; for (int i = 0; i < 6; i++) { z = x + y; x = y; y = z; std::cout << \\" \\" << z; } return 0; }"},{"prompt":"Create a HTML web page containing two boxes on a single line.","completion":"<!DOCTYPE html> <html> <head> </head> <body> <div style=\\"display: inline-block; width: 300px; height: 100px; border: 1px solid #000;\\"></div> <div style=\\"display: inline-block; width: 300px; height: 100px; border: 1px solid #000;\\"></div> </body> </html>"},{"prompt":"Create a SQL query to insert sample data into an 'employees' table.","completion":"INSERT INTO employees (id, first_name, last_name, age, email) VALUES (1, 'John', 'Doe', 25, 'john.doe@example.com'), (2, 'Jane', 'Doe', 30, 'jane.doe@example.com'), (3, 'Jim', 'Smith', 32, 'jim.smith@example.com');"},{"prompt":"Update the C# code below so that it prints the reversed form of a given string. using System; namespace ReverseString { class Program { public static void Main() { string message = \\"Hello World\\"; } } }","completion":"using System; namespace ReverseString { class Program { public static void Main() { string message = \\"Hello World\\"; Console.WriteLine(string.Join(\\"\\", message.Reverse())); } } }"},{"prompt":"Correct the mistake in this code. x = \\"Hello word","completion":"x = \\"Hello world\\""},{"prompt":"Write a JavaScript program to find the sum of all numbers the user has entered in to the input box.","completion":"function calculateSum() { let sum = 0; // Iterate over all the input boxes document.querySelectorAll(\\"input[type=number]\\").forEach((element) => { // current value of the element let elementValue = Number(element.value); // Sum of all elements sum = sum + elementValue; }); console.log(\\"The Sum of All the Numbers is: \\"+ sum); }"},{"prompt":"Compare two strings and print true if they are equal, otherwise print false. String 1: Hello World String 2: Hello World","completion":"true"},{"prompt":"Create a loop through a given list of numbers and check if the number is divisible by 3. nums = [3, 5, 7, 8, 10, 11]","completion":"for num in nums: if num % 3 == 0: print (f\\"{num} is divisible by 3.\\")"},{"prompt":"Develop a function to fetch the maximum element from a given dictionary. d = {'Name': 'John', 'Age': 28, 'Score': 98}","completion":"def getMaxElement(d): maxElement = max(d.values()) for key, value in d.items(): if (value == maxElement): return key, value"},{"prompt":"Create a new dictionary in Python with the given keys and values. Keys: A, B Values: 1, 2","completion":"d = {'A': 1, 'B': 2}"},{"prompt":"dentify the type of variable (integer, float, string) for the given value. Value: 1968","completion":"integer"},{"prompt":"mplement a class in Python which implements the given method. class Test: def print_name(name): print(name)","completion":"class Test: def print_name(self, name): print(name)"},{"prompt":"Write a bash script for displaying \\"Hello World\\"!","completion":"#!/bin/bash echo \\"Hello World!\\""},{"prompt":"Create a C++ class Student which contains name, age, and gender as members.","completion":"class Student { private: string name; int age; string gender; public: Student(string name, int age, string gender) : name(name), age(age), gender(gender) { } string getName() { return name; } int getAge() { return age; } string getGender() { return gender; } };"},{"prompt":"Compile \\"Hello world!\\" in C++.","completion":"g++ -o hello hello.cpp // hello.cpp #include <iostream> using namespace std; int main() { cout << \\"Hello world!\\" << endl; return 0; }"},{"prompt":"Write a JavaScript function to get the current date and time in DD/MM/YYYY hh:mm:ss format.","completion":"function getCurrentDateTime() { var date = new Date(); var dd = date.getDate(); var mm = date.getMonth() + 1; var yyyy = date.getFullYear(); var hh = date.getHours(); var min = date.getMinutes(); var sec = date.getSeconds(); if (dd < 10) { dd = '0' + dd; } if (mm < 10) { mm = '0' + mm; } if (min < 10) { min = '0' + min; } if (sec < 10) { sec = '0' + sec; } return dd + '/' + mm + '/' + yyyy + ' ' + hh + ':' + min + ':' + sec; } document.write(\\"Current Date and Time: \\" + getCurrentDateTime());"},{"prompt":"Explain how you would use the givew array to create a valid JSON output. array = [ \\"firstname\\" => \\"Nikola\\", \\"lastname\\" => \\"Tesla\\", \\"birthdate\\" => \\"10-07-1856\\" ]","completion":"We can use the given array to create a valid JSON output by first converting it into an object by wrapping it in curly brackets and then assign keys for each value. For example, { \\"firstname\\": \\"Nikola\\", \\"lastname\\": \\"Tesla\\", \\"birthdate\\": \\"10-07-1856\\" } Once the object is created, it need to be converted to a JSON string using a JSON library such as JSON.stringify() method in JavaScript. The resulting string looks like this: \\"{\\"firstname\\":\\"Nikola\\",\\"lastname\\":\\"Tesla\\",\\"birthdate\\":\\"10-07-1856\\"}\\""},{"prompt":"Write an SQL query to find the ten most popular books among the library readers. Table: library Columns: book_name, reader_name Table: readers Columns: reader_name, book_name","completion":"SELECT book_name, COUNT(*) FROM library INNER JOIN readers ON library.reader_name = readers.reader_name GROUP BY book_name ORDER BY COUNT(*) DESC LIMIT 10;"},{"prompt":"Design a public Java API to generate a cookie.","completion":"public interface CookieGenerator { public String generateCookie(); }"},{"prompt":"Construct a regular expression to detect a valid IP address in a user input.","completion":"^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)"},{"prompt":"Design a CRUD API using Node.js.","completion":"const express = require('express'); const router = express.Router(); // Create router.post('/', (req, res) => { // Code for creating an item }); // Read router.get('/', (req, res) => { // Code for retrieving an item }); // Update router.put('/:id', (req, res) => { // Code for updating an item }); // Delete router.delete('/:id', (req, res) => { // Code for deleting an item }); module.exports = router;"},{"prompt":"mplement a method in C# that reverses the digits of an integer.","completion":"public static int ReverseDigits (int num) { int result = 0; while (num > 0) { int temp = num % 10; result = (result * 10) + temp; num = num / 10; } return result; }"},{"prompt":"Convert the given string \\"I am a programmer\\" into upper case letters.","completion":"\\"I AM A PROGRAMMER\\""},{"prompt":"Rewrite the following C++ function to Pascal. Function Definition: int add(int x, int y) { return x + y; }","completion":"function add(x, y: integer): integer; begin add := x + y; end;"},{"prompt":"Design a method in JavaScript to validate a password according to certain criteria.","completion":"function validatePassword(password) { const regx = /^(?=.*[0-9])(?=.*[!@#%^&*])[a-zA-Z0-9!@#%^&*]{6,20}/; if (password.match(regx)) { return true; } else { return false; }; }"},{"prompt":"Suggest a design pattern to solve the following problem A system needs to access different types of data from multiple data sources.","completion":"A good design pattern for solving this problem is the Adapter Pattern. This pattern allows the adapter to abstract away the different types of data sources and provide an interface for accessing the data from a single source. With this pattern, the system can easily access different types of data from multiple sources without having to handle the different data sources directly."},{"prompt":"Suggest a data structure to efficiently store a set of phone numbers","completion":"A good data structure for efficiently storing a set of phone numbers is a Hash Table. This data structure uses a hash function to map each phone number to the value(s) associated with it and stores the values in a linked list. This data structure provides constant time lookup, insert and delete operations, making it ideal for storing a large set of phone numbers."},{"prompt":"Generate a for loop to iterate over all div elements on a website and print their content.","completion":"var divs = document.getElementsByTagName('div'); for (var i = 0; i < divs.length; i++) { console.log(divs[i].innerHTML); }"},{"prompt":"What is the basic syntax to define a function in Python 3?","completion":"def function_name(parameters): \\"\\"\\" function docstring \\"\\"\\" statement(s)"},{"prompt":"Given an array of integers, write a function to find the maximum difference between a lower element and an upper element. Array: [3, 10, 2, 6, 4, 8, 1]","completion":"def findMaxDifference(arr): min_element = arr[0] max_difference = arr[1] - arr[0] for num in arr: if num - min_element > max_difference: max_difference = num - min_element if num < min_element: min_element = num return max_difference"},{"prompt":"Write a JavaScript code snippet to create and display a dynamic table of products and their prices. var products = [ {name: 'Apple', price: 1.50}, {name: 'Orange', price: 2.00}, {name: 'Banana', price: 1.80}, ];","completion":"let table = document.createElement(\\"table\\"); document.body.appendChild(table); products.forEach(product => { let row = table.insertRow(); let nameCell = row.insertCell(); let priceCell = row.insertCell(); nameCell.innerHTML = product.name; priceCell.innerHTML = product.price; });"},{"prompt":"Write a Java program to find all combinations of two numbers in an array that add up to a given sum. Array: [2, 7, 3, 5] Sum: 10","completion":"public static List<List<Integer>> findSumPairs(int arr[], int sum) { List<List<Integer>> result = new ArrayList<>(); Map<Integer, Integer> map = new HashMap<>(); for (int i = 0; i < arr.length; i++) { int target = sum - arr[i]; if (map.containsKey(target)) { result.add(Arrays.asList(map.get(target), i)); } map.put(arr[i], i); } return result; }"},{"prompt":"Create a function in Java that takes a 2D array as input and prints out all diagonals. array = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]","completion":"static void printDiagonals(int arr[][]) { int n = arr.length; // Print anti-diagonals for (int k = 0; k < n; k++) { for (int i = 0, j = k; j >= 0; j--, i++) { System.out.print(arr[i][j] + \\" \\"); } System.out.println(); } // Print main diagonals for (int k = 1; k < n; k++) { for (int i = k, j = n - 1; i < n; i++, j--) { System.out.print(arr[i][j] + \\" \\"); } System.out.println(); } }"},{"prompt":"w can you access the fourth element of a linked list in Java?","completion":"The fourth element of a linked list in Java can be accessed by traversing the list from the start node three times, where each traverse proceeds one node at a time. The fourth node can be accessed by calling getData() on the traversed node."},{"prompt":"Design an SQL query to get all the employees from a database who are over 40 years old. Table Name: employee Attributes: id, firstname, lastname, age","completion":"SELECT * FROM employee WHERE age > 40;"},{"prompt":"Create a CSS rule to make all the links in a document to be underlined.","completion":"a { text-decoration: underline; }"},{"prompt":"Find the maximum number from an array of numbers using JavaScript. let array = [7, 9, 4, 1, 8]","completion":"const getMax = arr => Math.max(...arr); console.log(getMax(array)); // 9"},{"prompt":"Write a C++ method to convert a string into lowercase.","completion":"string toLowerCase(string s) { transform(s.begin(), s.end(), s.begin(), ::tolower); return s; }"},{"prompt":"Generate a CSS rule to make all headings red.","completion":"h1, h2, h3, h4 { color: red; }"},{"prompt":"Design a Swift class for a 3-dimensional point.","completion":"class Point3D { var x: Double var y: Double var z: Double init(x: Double, y: Double, z: Double) { self.x = x self.y = y self.z = z } }"},{"prompt":"Create a HTML form with three input fields for taking a user's name, email, and address.","completion":"<form action=\\"\\" method=\\"post\\"> <label for=\\"name\\">Name: </label><br> <input type=\\"text\\" name=\\"name\\" id=\\"name\\"><br><br> <label for=\\"email\\">Email: </label><br> <input type=\\"email\\" name=\\"email\\" id=\\"email\\"><br><br> <label for=\\"address\\">Address: </label><br> <input type=\\"text\\" name=\\"address\\" id=\\"address\\"><br><br> <input type=\\"submit\\" name=\\"submit\\" value=\\"Submit\\"> </form>"},{"prompt":"Using Java, write a program that calculates the average of 5 numbers entered by the user. 2, 4, 6, 8, 10","completion":"import java.util.Scanner; public class Main { public static void main(String[] args) { Scanner sc = new Scanner(System.in); int[] numList = new int[5]; int sum = 0; for(int i=0;i<numList.length;i++){ System.out.println(\\"Enter number \\"+(i+1)); numList[i] = sc.nextInt(); sum += numList[i]; } double avg = (double)sum/numList.length; System.out.println(\\"Average = \\"+avg); } }"},{"prompt":"Using JavaScript, print the name of sites visited today on the web console.","completion":"var visitedSites = [\\"www.facebook.com\\", \\"www.google.com\\", \\"www.yahoo.com\\"]; console.log(\\"Visited sites today: \\" +visitedSites);"},{"prompt":"Write a shell script that displays the folder structure of the current working directory.","completion":"#!/bin/bash echo \`tree -L 1 | awk '{1=1};1'\`"},{"prompt":"Write an SQL query to display the average age of employees in each department.","completion":"SELECT department, AVG(age) AS avg_age FROM employees GROUP BY department;"},{"prompt":"Calculate the number of days taken to finish a task given its start and end dates. Start Date: 01 June 2020 End Date: 15 June 2020","completion":"14 days."},{"prompt":"Write a Cypher query to select all nodes with the label 'address'.","completion":"MATCH (a: Address) RETURN a;"},{"prompt":"Generate a dynamic timestamp for a given date. Date: June 13, 2020, 5:30pm","completion":"1592175000"},{"prompt":"Write a style rule to apply a border on the first and last elements of the document.","completion":"*:first-child, *:last-child { border: 1px solid black; }"},{"prompt":"Convert 1024 bytes into kilobytes.","completion":"1 kilobyte = 1024 bytes 1024 bytes = 1 kilobyte."},{"prompt":"Develop a regex pattern to match email addresses.","completion":"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+"},{"prompt":"Given a value, x, write a line of code that converts it from a float to an integer. x = 25.32","completion":"int(x) # result: 25"},{"prompt":"What is the purpose of a Structured Query Language (SQL)?","completion":"The purpose of SQL is to manage data stored in relational databases and to manipulate data in the database by performing operations such as creating, updating, and deleting records. It is also used to define and manipulate data in the database. By using SQL, users can combine and analyze data from multiple sources."},{"prompt":"alize a list with 5 items containing numbers from 1 to 5.","completion":"my_list = [1, 2, 3, 4, 5]"},{"prompt":"Write a loop that prints the square of each element in a given array. arr = [1, 2, 3, 4]","completion":"arr = [1, 2, 3, 4] for i in arr: print(i*i)"},{"prompt":"Extend the following dictionary with three more key-value pairs. my_dict = { \\"name\\": \\"John\\", \\"age\\": 17 }","completion":"my_dict = { \\"name\\": \\"John\\", \\"age\\": 17, \\"gender\\": \\"male\\", \\"height\\": 180, \\"hobbies\\": [\\"basketball\\", \\"reading\\", \\"traveling\\"] }"},{"prompt":"Create an anonymous function that takes two numbers, x and y and returns their product.","completion":"product = lambda x, y: x * y"},{"prompt":"What type of data structure is best suited for a database table?","completion":"The best data structure for a database table is a relational database. Relational databases allow for fast retrieval of stored information and utilize Structured Query Language (SQL) to create relationships between database tables."},{"prompt":"Edit the following JavaScript code to make it able to log even numbers. const myArray = [1, 2, 3, 4, 5] for (let i = 0; i < myArray.length; i++) { console.log(myArray[i]) }","completion":"const myArray = [1, 2, 3, 4, 5] for (let i = 0; i < myArray.length; i++) { if (myArray[i] % 2 == 0) { console.log(myArray[i]) } }"},{"prompt":"Create an HTML page with a basic structure and text.","completion":"<!DOCTYPE html> <html> <head> <title>Basic HTML Page Structure</title> </head> <body> <h1>Hello, World!</h1> <p>This is a basic HTML page structure.</p> </body> </html>"},{"prompt":"Create a JavaScript class called Point with an X and a Y coordinate.","completion":"class Point { constructor(x, y) { this.x = x; this.y = y; } }"},{"prompt":"Design a CSS class to set the color of text.","completion":".text-color { color: #000000; }"},{"prompt":"Edit the following HTML document and change the font color of the level 2 heading tag to red <html><head><title>My Title</title></head><body><h1>Heading 1</h1><h2>Heading 2</h2></body></html>","completion":"<html><head><title>My Title</title></head><body><h1>Heading 1</h1><h2 style=\\"color:red;\\">Heading 2</h2></body></html>"},{"prompt":"Write a JavaScript function to find the maximum value from an array of numbers [10,20,30,40,50]","completion":"function maxValue(arr){ let max = arr[0]; for(let i = 0; i < arr.length; i++){ if(arr[i] > max){ max = arr[i]; } } return max; }"},{"prompt":"Create a new SQL table using the following schema employees (name VARCHAR(25), age INT, gender VARCHAR(6), salary INT)","completion":"CREATE TABLE employees ( name VARCHAR(25) NOT NULL, age INT NOT NULL, gender VARCHAR(6) NOT NULL, salary INT NOT NULL );"},{"prompt":"Write an HTML code to add a padding of 10px to the paragraph tag","completion":"<p style=\\"padding: 10px;\\"> </p>"},{"prompt":"Create a class called 'Address' with four string fields: address line 1, address line 2, city, and zipCode.","completion":"class Address { String addressL1; String addressL2; String city; String zipCode; public Address(String addressL1, String addressL2, String city, String zipCode) { this.addressL1 = addressL1; this.addressL2 = addressL2; this.city = city; this.zipCode = zipCode; } }"},{"prompt":"Create a function in Ruby that takes two parameters and prints out the values as well as their sum. num1 = 10 num2 = 20","completion":"def add(num1, num2) puts \\"The sum of #{num1} and #{num2} is #{num1 + num2}.\\" end"},{"prompt":"Build a Python function that normalizes a given array. array = [4, 8, 15, 23, 42]","completion":"def normalize(array): min_val = min(array) max_val = max(array) normalized = [ (x-min_val) / (max_val-min_val) for x in array] return normalized"},{"prompt":"Construct a CSS style sheet to set background color of all <h1> tags as blue.","completion":"h1 { background-color: blue; }"},{"prompt":"Design a one-to-many relationship between two tables in SQL.","completion":"CREATE TABLE parent ( id INTEGER PRIMARY KEY, name TEXT ); CREATE TABLE child ( id INTEGER, parent_id INTEGER, name TEXT, FOREIGN KEY (parent_id) REFERENCES parent (id) );"},{"prompt":"Construct a JavaScript algorithm to determine whether a number is even or odd. noinpu","completion":"function isOdd(number) { let mod = number % 2; // Check modulus (i.e. remainder) if (mod === 0) { return false; } else { return true; } }"},{"prompt":"Write a C# function to replace all occurrences of the letter \\"a\\" with \\"o\\". string input=\\"Timon and Pumb","completion":"public static string ReplaceAwithO(string input){ return input.Replace('a', 'o'); }"},{"prompt":"Build a Python dictionary that contains five elements.","completion":"myDictionary = { \\"key1\\": \\"value1\\", \\"key2\\": \\"value2\\", \\"key3\\": \\"value3\\", \\"key4\\": \\"value4\\", \\"key5\\": \\"value5\\" }"},{"prompt":"Construct a React component that renders \\"Hello World\\" when rendered.","completion":"const HelloWorld = () => { return ( <div>Hello World</div> ); };"},{"prompt":"Write a Java command line program to input a string and print out the reversed string.","completion":"import java.util.Scanner; public class ReverseString { public static void main(String[] args) { Scanner scanner = new Scanner(System.in); System.out.print(\\"Enter a string : \\"); String inputString = scanner.nextLine(); String reversedString = \\"\\"; for(int i=inputString.length()-1; i>=0; i--) { reversedString = reversedString + inputString.charAt(i); } System.out.println(\\"The reversed string is : \\" + reversedString); } }"},{"prompt":"Design an object-oriented class in Python that stores a book's title, author, and publisher.","completion":"class Book: def __init__(self, title, author, publisher): self._title = title self._author = author self._publisher = publisher def get_title(self): return self._title def set_title(self, title): self._title = title def get_author(self): return self._author def set_author(self, author): self._author = author def get_publisher(self): return self._publisher def set_publisher(self, publisher): self._publisher = publisher"},{"prompt":"Write a C++ class called \\"Point\\" to represent a point in 2-dimensional space.","completion":"class Point { public: Point() : x_(0), y_(0) {} Point(double x, double y) : x_(x), y_(y) {} double x() const { return x_; } double y() const { return y_; } void setX(double x) { x_ = x; } void setY(double y) { y_ = y; } private: double x_; double y_; };"},{"prompt":"Write an assembly language program to calculate 2 to the power of 8.","completion":".data x: .word 8 .text li v0, 2 # load 2 to v0 li t0, 1 # load 1 to t0 lw a0, x # load 8 to a0 jal pow j exit pow: mul t1, v1, v0 # r3 = v0 * r2 mflo v1 # r2 = lo(r3) addi a0, a0, -1 # r1 = r1-1 bne a0, 0, pow # if r1 != 0 go to loop start mfhi v0 # r0 = hi(r3) jr ra exit: nop"},{"prompt":"Create a web page that displays \\"Hello, World!","completion":"<html> <head> <title>Hello World</title> </head> <body> <h1>Hello, World!</h1> </body> </html>"},{"prompt":"Write an Arduino program to blink an LED once every two seconds.","completion":"void setup() { pinMode(LED_BUILTIN, OUTPUT); } void loop() { digitalWrite(LED_BUILTIN, HIGH); delay(2000); digitalWrite(LED_BUILTIN, LOW); delay(2000); }"},{"prompt":"Suppose we have a list of numbers, write a Python code to compute the average of the list. list = [1, 5, 8, 9, 10]","completion":"def find_average(list): sum = 0 for num in list: sum += num return sum/len(list)"},{"prompt":"Write a SQL query to select the records from the table which have the maximum value in a given column. Table Name: Student Column: Age","completion":"SELECT * FROM Student WHERE Age = (SELECT MAX(Age) FROM Student)"},{"prompt":"Given the following 2D array. Create a function to find the sum of each row. Array = [[2, 5, 6], [4, 1, 3], [5, 9, 0]]","completion":"def sum_row(arr): total = [] for row in arr: total.append(sum(row)) return total"},{"prompt":"Explain how to measure the complexity of an algorithm.","completion":"Algorithm complexity can be measured in two ways: time complexity and space complexity. Time complexity measures the amount of time an algorithm takes to run and solves a problem. Space complexity measures the amount of memory an algorithm requires to run and solves a problem. The most common metrics used to measure the complexity of an algorithm are Big O notation and worst case analysis."},{"prompt":"Explain the concept of merging two sorted lists.","completion":"Merging two sorted lists involves examining elements of each list and inserting them in order into a third list. This process continues until all elements from the two lists have been inserted into the third resulting list. The algorithm requires that the two starting lists be in sorted order, although the elements can be in any order (ascending, descending, or random) as long as each list is sorted."},{"prompt":"Explain the concept of Strassen's Matrix multiplicatiom algorithm.","completion":"Strassen's Matrix multiplication algorithm is an improvement over the traditional matrix multiplication algorithm. This algorithm divides the two matrices into four sub-matrices of size n/2 × n/2 and then performs 7 multiplications and adds the resulting values to calculate the final result. It reduces the number of multiplications required, resulting in a faster algorithm."},{"prompt":"w would you check an integer is divisible by 7 or not in Python?","completion":"We can use the modulo operator (%) to check if an integer is divisible by another number in Python. The modulo operator (%) returns the remainder of the division. If the remainder is zero then the two numbers are divisible. For example, to check if an integer is divisible by 7, we can use: if (x % 7) == 0: # x is divisible by 7 else: # x is not divisible by 7"},{"prompt":"Split a sentence into an array of words using C++. Sentence: Today is a sunny day.","completion":"#include<string> #include<vector> #include<sstream> std::string sentence = \\"Today is a sunny day.\\"; std::istringstream iss(sentence); std::vector<std::string> words; for(std::string word; iss >> word; ) words.push_back(word); //words[] now contains the sentence split into words"},{"prompt":"Remove the extra spaces from a string so that the output does not contain any extra spaces in C++. String: Coding is Fu","completion":"#include<iostream> #include<string> std::string remove_extra_spaces(const std::string& str) { std::string result; int n = str.length(); bool isPreviousCharSpace = false; for (int i = 0; i < n; i++) { char ch = str[i]; if (ch == ' ' && !isPreviousCharSpace) { result += ch; isPreviousCharSpace = true; } else if (ch != ' ') { result += ch; isPreviousCharSpace = false; } } return result; } int main() { std::string str = \\" Coding is Fun \\"; std::cout << remove_extra_spaces(str) << std::endl; return 0; } // Output: Coding is Fun"},{"prompt":"Find the average of all the elements in an array using JavaScript. [1,2, 3, 4]","completion":"let average = array.reduce((acc, curr) => acc + curr, 0) / array.length; console.log(average); // Output: 2.5"},{"prompt":"Format a given date as mm/dd/yyyy using C++. Date: April 14, 2021","completion":"#include <iostream> #include <ctime> int main() { time_t now = time(0); tm *ltm = localtime(&now); ltm->tm_mon = 3; // set month to April ltm->tm_mday = 14; // set date to 14 std::cout << std::put_time(ltm, \\"%m/%d/%Y\\") << 'n'; return 0; } // Output: 04/14/2021"},{"prompt":"lter this code so that it can run on python3, def say_message(message, times=1): print message * times say_message(\\"Hello world!\\")","completion":"\\"\\"\\" Alter this code so that it can run on Python 3 \\"\\"\\" def say_message(message, times=1): print(message * times) say_message(\\"Hello world!\\")"},{"prompt":"generate a function minL that takes two lists and returns the smallest element from both lists. list1 = [9, 11, 8, 10, 20] list2 = [3, 10, 12]","completion":"\\"\\"\\" Generate a function minL that takes two lists and returns the smallest element from both lists. \\"\\"\\" def minL(list1, list2): min_list = sorted(list1 + list2) print('The minimum of list1 and list2 is: ', min_list[0]) if __name__ == '__main__': list1 = [9, 11, 8, 10, 20] list2 = [3, 10, 12] minL(list1, list2)"},{"prompt":"eate a function that calculates the total cost of a meal including taxes and tips. meal_price = 35 sales_tax = 0.09 tip_percentage = 0.18","completion":"\\"\\"\\" Create a function that calculates the total cost of a meal including taxes and tips \\"\\"\\" def calculate_total_meal_cost(meal_price, sales_tax, tip_percentage): # Calculate subtotal subtotal = meal_price + meal_price * tip_percentage # Calculate tax tax = subtotal * sales_tax # Calculate total total = subtotal + tax return total if __name__ == '__main__': meal_price = 35 sales_tax = 0.09 tip_percentage = 0.18 print(\\"Total cost of meal is: \\" + str(calculate_total_meal_cost(meal_price, sales_tax, tip_percentage)))"},{"prompt":"edit the existing function to calculate the compound interest. # Calculate Simple Interest def calcSimpleInterest(p, r, t): return (p * r * t) / 100","completion":"\\"\\"\\" Edit the existing function to calculate the compound interest \\"\\"\\" # Calculate Compound Interest def calcCompoundInterest(p, r, t): # Calculate Simple Interest interest= p * (pow((1 + r / 100), t)) return interest if __name__ == '__main__': principal_amount = 1000 rate_of_interest = 5 time_period = 5 print(\\"Compound interest is\\", calcCompoundInterest(principal_amount, rate_of_interest, time_period))"},{"prompt":"Generate a function to calculate the probability of an event. num_outcomes = 36 num_favourable_outcomes = 9","completion":"\\"\\"\\" Generate a function to calculate the probability of an event \\"\\"\\" def calculate_probability(num_outcomes, num_favourable_outcomes): # calculate probability probability = float(num_favourable_outcomes) / float(num_outcomes) return probability if __name__ == '__main__': num_outcomes = 36 num_favourable_outcomes = 9 print(\\"Probability of an event is: \\" + str(calculate_probability(num_outcomes, num_favourable_outcomes)))"}]`),R={name:"App",components:{PoemCard:A},data(){return{searchQuery:"",visibleCount:4,poemsData:W,isLoading:!1}},computed:{filteredPoems(){const i=this.searchQuery.trim().toLowerCase();return i?this.poemsData.filter(e=>e.prompt&&e.prompt.toLowerCase().includes(i)||e.completion&&e.completion.toLowerCase().includes(i)):this.poemsData},displayedPoems(){return this.searchQuery.trim()?this.filteredPoems:this.filteredPoems.slice(0,this.visibleCount)},hasMorePoems(){return!this.searchQuery.trim()&&this.visibleCount<this.poemsData.length}},methods:{async loadMore(){this.isLoading=!0,await new Promise(i=>setTimeout(i,1e3)),this.visibleCount+=4,this.isLoading=!1}}},P={class:"search-container"},M={class:"card-container"},N={key:0,class:"empty-state"},O=["disabled"],q={key:0},j={key:1};function D(i,e,l,d,a,o){const h=g("PoemCard");return r(),n("section",null,[e[4]||(e[4]=t("div",{class:"top-banner"},[t("div",{class:"top-banner-title"},[t("div",{class:"top-banner-title-text"},"🤔prompts chat🧠")])],-1)),t("div",P,[e[3]||(e[3]=t("span",{class:"search-icon"},"🔍",-1)),b(t("input",{type:"text",class:"search-input","onUpdate:modelValue":e[0]||(e[0]=s=>a.searchQuery=s),placeholder:"Search..."},null,512),[[y,a.searchQuery]]),a.searchQuery?(r(),n("button",{key:0,class:"clear-search",onClick:e[1]||(e[1]=s=>a.searchQuery="")}," ✕ ")):m("",!0)]),t("div",M,[(r(!0),n(v,null,w(o.displayedPoems,(s,f)=>(r(),_(h,{key:f,poem:s},null,8,["poem"]))),128)),o.displayedPoems.length===0?(r(),n("div",N,' No results found for "'+p(a.searchQuery)+'". ',1)):m("",!0)]),o.hasMorePoems?(r(),n("button",{key:0,class:"load-more-button",disabled:a.isLoading,onClick:e[2]||(e[2]=(...s)=>o.loadMore&&o.loadMore(...s))},[a.isLoading?(r(),n("span",j,"Loading...")):(r(),n("span",q,"See more"))],8,O)):m("",!0)])}const F=u(R,[["render",D],["__scopeId","data-v-dac60b44"]]),J=JSON.parse('{"title":"","description":"","frontmatter":{"page":true},"headers":[],"relativePath":"grok/9.md","filePath":"grok/9.md"}'),I={name:"grok/9.md"},z=Object.assign(I,{setup(i){return(e,l)=>(r(),n("div",null,[x(F)]))}});export{J as __pageData,z as default};
